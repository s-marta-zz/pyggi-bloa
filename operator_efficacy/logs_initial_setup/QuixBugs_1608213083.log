2020-12-17 14:51:23,257	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1608213083
2020-12-17 14:51:23,257	[INFO]	========== EXPERIMENT FOR ['java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml']  ==========
2020-12-17 14:51:23,258	[INFO]	modification points:
 ['./if[1]', './if[1]/return[1]', './if[2]', './if[2]/operator_comp[1]', './if[2]/return[1]', './decl_stmt[1]', './decl_stmt[2]', './return[1]', './return[1]/operator_comp[1]']
2020-12-17 14:51:23,258	[INFO]	number of statements and comparisons: 7, 2
2020-12-17 14:51:23,258	[INFO]	========== EPOCH 1 ==========
2020-12-17 14:51:23,258	[INFO]	==== WARMUP ====
2020-12-17 14:51:28,199	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 14:51:28,200	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:51:34,250	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 14:51:34,250	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:51:38,981	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 14:51:38,981	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:51:43,878	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 14:51:43,878	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:51:43,878	[INFO]	==== START ====
2020-12-17 14:51:45,096	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:51:48,946	[INFO]	2	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:51:48,946	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:51:49,840	[INFO]	3	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:51:50,619	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:51:51,529	[INFO]	5	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:51:51,530	[INFO]	6	SUCCESS	+4.0	
2020-12-17 14:51:51,530	[DEBUG]	
2020-12-17 14:51:52,480	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:51:53,219	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:51:54,117	[INFO]	9	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:51:57,471	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:51:57,472	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 14:51:57,473	[INFO]	11	SUCCESS	+4.0	
2020-12-17 14:51:57,473	[DEBUG]	
2020-12-17 14:51:58,390	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:51:59,150	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:52:00,059	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:52:03,185	[INFO]	15	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:52:06,329	[INFO]	16	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:52:09,645	[INFO]	17	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:52:10,542	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:52:11,473	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:52:12,408	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:52:12,410	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:52:13,174	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:52:16,352	[INFO]	23	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:52:17,245	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:52:18,194	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:52:18,195	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:52:18,196	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:52:18,981	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:52:18,984	[INFO]	29	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:52:18,985	[DEBUG]	
2020-12-17 14:52:18,986	[INFO]	30	SUCCESS	+4.0	
2020-12-17 14:52:18,986	[DEBUG]	
2020-12-17 14:52:18,988	[INFO]	31	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:52:22,586	[INFO]	32	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:52:22,587	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:52:23,318	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:52:24,047	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:52:27,456	[INFO]	36	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:52:27,456	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 14:52:27,457	[INFO]	37	SUCCESS	+4.0	
2020-12-17 14:52:27,457	[DEBUG]	
2020-12-17 14:52:27,458	[INFO]	38	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:52:28,410	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:52:29,409	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:52:29,413	[INFO]	41	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:52:32,877	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:52:32,877	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 14:52:36,145	[INFO]	43	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:52:39,638	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:52:39,638	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:52:39,639	[INFO]	45	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:52:39,639	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:52:39,640	[INFO]	46	SUCCESS	+4.0	
2020-12-17 14:52:39,640	[DEBUG]	
2020-12-17 14:52:40,370	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:52:40,373	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:52:40,375	[INFO]	49	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:52:40,375	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:52:43,628	[INFO]	50	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:52:44,522	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:52:45,262	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:52:45,263	[INFO]	53	SUCCESS	+4.0	
2020-12-17 14:52:45,263	[DEBUG]	
2020-12-17 14:52:45,265	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:52:45,265	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 14:52:45,266	[INFO]	55	SUCCESS	+4.0	
2020-12-17 14:52:45,266	[DEBUG]	
2020-12-17 14:52:45,267	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:52:48,388	[INFO]	57	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:52:49,120	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:52:49,121	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:52:49,122	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:52:49,123	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:52:49,123	[INFO]	62	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:52:52,377	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:52:52,379	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 14:52:52,380	[INFO]	64	SUCCESS	+4.0	
2020-12-17 14:52:52,381	[DEBUG]	
2020-12-17 14:52:52,382	[INFO]	65	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:52:52,383	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:52:53,296	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:52:53,297	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:52:53,297	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:52:54,215	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:52:54,217	[INFO]	71	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:52:54,218	[DEBUG]	
2020-12-17 14:52:54,219	[INFO]	72	SUCCESS	+4.0	
2020-12-17 14:52:54,220	[DEBUG]	
2020-12-17 14:52:55,145	[INFO]	73	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:52:55,146	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:52:56,007	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:52:56,008	[INFO]	76	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:53:09,078	[INFO]	77	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:53:09,079	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:53:09,937	[INFO]	79	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:53:10,854	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:53:13,992	[INFO]	81	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:53:13,993	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:53:13,994	[INFO]	83	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:53:17,207	[INFO]	84	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:53:17,209	[INFO]	85	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:53:17,209	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:53:17,943	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:53:21,161	[INFO]	88	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:53:21,162	[INFO]	89	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:53:22,035	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:53:22,944	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:53:22,945	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:53:23,698	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:53:24,421	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:53:25,337	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 14:53:26,110	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:53:27,043	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:53:27,045	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:53:27,046	[INFO]	99	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:53:27,047	[DEBUG]	
2020-12-17 14:53:31,523	[INFO]	100	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:53:32,373	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:53:32,374	[INFO]	102	SUCCESS	+4.0	
2020-12-17 14:53:32,375	[DEBUG]	
2020-12-17 14:53:32,375	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:53:32,376	[INFO]	104	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:53:32,376	[DEBUG]	
2020-12-17 14:53:32,377	[INFO]	105	SUCCESS	+4.0	
2020-12-17 14:53:32,377	[DEBUG]	
2020-12-17 14:53:32,378	[INFO]	106	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:53:36,544	[INFO]	107	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:53:40,022	[INFO]	108	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:53:40,023	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 14:53:40,024	[INFO]	109	SUCCESS	+4.0	
2020-12-17 14:53:40,025	[DEBUG]	
2020-12-17 14:53:40,889	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:53:40,891	[INFO]	111	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:53:41,843	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:53:42,765	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:53:42,766	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:53:43,658	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:53:47,217	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:53:47,218	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:53:47,219	[INFO]	117	SUCCESS	+4.0	
2020-12-17 14:53:47,219	[DEBUG]	
2020-12-17 14:53:48,096	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:53:49,005	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:53:49,774	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:53:53,020	[INFO]	121	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:53:56,305	[INFO]	122	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:53:56,306	[INFO]	123	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:53:56,306	[DEBUG]	
2020-12-17 14:53:57,238	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:53:57,240	[INFO]	125	SUCCESS	+4.0	
2020-12-17 14:53:57,241	[DEBUG]	
2020-12-17 14:53:58,156	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:54:01,394	[INFO]	127	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:54:02,288	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:54:05,500	[INFO]	129	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:54:08,639	[INFO]	130	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:54:08,640	[INFO]	131	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:54:09,351	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:54:12,620	[INFO]	133	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:54:12,621	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:54:16,735	[INFO]	134	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:54:16,737	[INFO]	135	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:16,738	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:54:17,586	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:54:18,484	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:54:19,390	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:19,392	[INFO]	139	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:19,392	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:54:19,393	[INFO]	140	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:19,393	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:54:19,394	[INFO]	141	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:54:19,395	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:54:20,305	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:54:21,246	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:54:21,248	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:54:24,414	[INFO]	145	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:54:27,631	[INFO]	146	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:54:28,546	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:54:31,697	[INFO]	148	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:54:31,698	[INFO]	149	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:31,699	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:54:32,619	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 14:54:32,622	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:54:32,623	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:54:32,624	[INFO]	152	SUCCESS	+4.0	
2020-12-17 14:54:32,625	[DEBUG]	
2020-12-17 14:54:33,559	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:54:33,561	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:54:34,483	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 14:54:34,486	[INFO]	156	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:54:34,488	[INFO]	157	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:54:35,237	[INFO]	158	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:36,166	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:54:36,167	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:37,093	[INFO]	161	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:54:38,011	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:54:38,014	[INFO]	163	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:54:38,017	[INFO]	164	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:54:38,019	[INFO]	165	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:38,935	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:54:42,177	[INFO]	167	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:54:43,053	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:54:43,055	[INFO]	169	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:54:43,056	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:54:46,291	[INFO]	171	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:54:47,182	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:54:47,184	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:54:47,917	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:54:48,817	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:54:48,818	[INFO]	176	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:54:48,819	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:54:48,819	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:54:52,125	[INFO]	179	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:54:52,126	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 14:54:52,127	[INFO]	180	SUCCESS	+4.0	
2020-12-17 14:54:52,127	[DEBUG]	
2020-12-17 14:54:53,023	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:54:53,777	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:54:57,086	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:54:57,087	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 14:55:00,153	[INFO]	184	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:55:00,155	[INFO]	185	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:55:01,080	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:55:01,082	[INFO]	187	SUCCESS	+4.0	
2020-12-17 14:55:01,082	[DEBUG]	
2020-12-17 14:55:02,017	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:55:02,946	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 14:55:02,948	[INFO]	190	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:02,948	[DEBUG]	
2020-12-17 14:55:02,949	[INFO]	191	SUCCESS	+4.0	
2020-12-17 14:55:02,950	[DEBUG]	
2020-12-17 14:55:02,951	[INFO]	192	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:55:02,952	[INFO]	193	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:55:03,851	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:55:04,613	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:55:07,684	[INFO]	196	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:55:08,650	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:55:08,653	[INFO]	198	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:55:09,566	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:55:13,903	[INFO]	200	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:14,774	[INFO]	201	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:55:14,776	[INFO]	202	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:55:14,777	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:55:14,778	[INFO]	204	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:55:14,779	[INFO]	205	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 14:55:14,780	[DEBUG]	
2020-12-17 14:55:14,781	[INFO]	206	SUCCESS	+4.0	
2020-12-17 14:55:14,781	[DEBUG]	
2020-12-17 14:55:18,046	[INFO]	207	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:55:18,047	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:55:18,047	[INFO]	208	SUCCESS	+4.0	
2020-12-17 14:55:18,048	[DEBUG]	
2020-12-17 14:55:18,048	[INFO]	209	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:55:21,183	[INFO]	210	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:55:21,184	[INFO]	211	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:55:21,185	[DEBUG]	
2020-12-17 14:55:21,185	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:55:21,186	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:55:21,187	[INFO]	214	SUCCESS	+4.0	
2020-12-17 14:55:21,187	[DEBUG]	
2020-12-17 14:55:24,284	[INFO]	215	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:55:24,286	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:55:24,287	[INFO]	217	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:55:24,287	[DEBUG]	
2020-12-17 14:55:24,288	[INFO]	218	SUCCESS	+4.0	
2020-12-17 14:55:24,288	[DEBUG]	
2020-12-17 14:55:25,015	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:55:25,914	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:55:26,663	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:55:27,417	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:30,684	[INFO]	223	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:55:31,602	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:55:31,603	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:55:31,604	[INFO]	226	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:55:31,605	[INFO]	227	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:55:31,605	[DEBUG]	
2020-12-17 14:55:31,606	[INFO]	228	SUCCESS	+4.0	
2020-12-17 14:55:31,606	[DEBUG]	
2020-12-17 14:55:32,344	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 14:55:32,345	[INFO]	230	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:55:32,346	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:55:32,346	[INFO]	231	SUCCESS	+4.0	
2020-12-17 14:55:32,346	[DEBUG]	
2020-12-17 14:55:32,347	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:55:32,348	[INFO]	233	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:55:32,349	[INFO]	234	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:32,349	[INFO]	235	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:55:32,350	[DEBUG]	
2020-12-17 14:55:32,350	[INFO]	236	SUCCESS	+4.0	
2020-12-17 14:55:32,350	[DEBUG]	
2020-12-17 14:55:33,286	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:55:34,219	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:55:34,220	[INFO]	239	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:55:34,220	[DEBUG]	
2020-12-17 14:55:34,221	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:55:34,999	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:55:35,001	[INFO]	242	SUCCESS	+4.0	
2020-12-17 14:55:35,001	[DEBUG]	
2020-12-17 14:55:35,002	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:55:35,003	[INFO]	244	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:55:35,004	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:35,006	[INFO]	246	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:55:35,006	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 14:55:35,008	[INFO]	247	SUCCESS	+4.0	
2020-12-17 14:55:35,008	[DEBUG]	
2020-12-17 14:55:35,827	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:55:35,828	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:55:36,747	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:55:36,750	[INFO]	251	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:55:36,752	[INFO]	252	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:55:36,753	[INFO]	253	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:36,755	[INFO]	254	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:55:36,756	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 14:55:37,688	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:55:38,601	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:55:39,506	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:55:42,818	[INFO]	258	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:55:42,818	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!         if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:55:46,079	[INFO]	259	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:55:46,081	[INFO]	260	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:55:46,081	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 14:55:46,082	[INFO]	261	SUCCESS	+4.0	
2020-12-17 14:55:46,083	[DEBUG]	
2020-12-17 14:55:46,084	[INFO]	262	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:49,070	[INFO]	263	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:55:49,810	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:55:49,812	[INFO]	265	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:55:49,812	[INFO]	266	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:55:49,813	[DEBUG]	
2020-12-17 14:55:49,813	[INFO]	267	SUCCESS	+4.0	
2020-12-17 14:55:49,813	[DEBUG]	
2020-12-17 14:55:50,736	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:55:50,737	[INFO]	269	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:55:51,506	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:55:52,269	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:55:55,494	[INFO]	272	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:55:58,589	[INFO]	273	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:55:58,591	[INFO]	274	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:56:01,854	[INFO]	275	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:56:01,855	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:56:02,766	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:56:02,768	[INFO]	277	SUCCESS	+4.0	
2020-12-17 14:56:02,769	[DEBUG]	
2020-12-17 14:56:02,770	[INFO]	278	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:56:02,771	[DEBUG]	
2020-12-17 14:56:02,772	[INFO]	279	SUCCESS	+4.0	
2020-12-17 14:56:02,772	[DEBUG]	
2020-12-17 14:56:03,668	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:56:03,669	[INFO]	281	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:56:04,594	[INFO]	282	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:56:05,537	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:56:05,541	[INFO]	284	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:56:05,543	[INFO]	285	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:05,545	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:56:05,547	[INFO]	287	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:56:08,714	[INFO]	288	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:56:08,715	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:08,716	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:56:09,422	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:56:10,144	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:56:13,501	[INFO]	293	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:56:13,502	[INFO]	294	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:56:13,503	[DEBUG]	
2020-12-17 14:56:13,503	[INFO]	295	SUCCESS	+4.0	
2020-12-17 14:56:13,503	[DEBUG]	
2020-12-17 14:56:14,403	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:15,336	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:56:16,062	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:56:16,063	[INFO]	299	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:16,064	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:56:16,962	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:56:17,864	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:56:17,866	[INFO]	303	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:56:18,786	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:56:18,788	[INFO]	305	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:56:19,525	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:56:19,526	[INFO]	307	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 14:56:19,526	[DEBUG]	
2020-12-17 14:56:19,527	[INFO]	308	SUCCESS	+4.0	
2020-12-17 14:56:19,527	[DEBUG]	
2020-12-17 14:56:19,528	[INFO]	309	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:56:19,529	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:56:20,279	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:20,282	[INFO]	312	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:56:20,284	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:56:23,568	[INFO]	314	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:56:24,480	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:56:24,481	[INFO]	316	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:56:24,482	[INFO]	317	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:56:25,392	[INFO]	318	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:56:25,393	[INFO]	319	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:56:28,540	[INFO]	320	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:56:31,697	[INFO]	321	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:56:32,432	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:56:32,435	[INFO]	323	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:56:32,436	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 14:56:33,168	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:56:33,171	[INFO]	325	SUCCESS	+4.0	
2020-12-17 14:56:33,172	[DEBUG]	
2020-12-17 14:56:33,174	[INFO]	326	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:56:33,175	[DEBUG]	
2020-12-17 14:56:46,213	[INFO]	327	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:56:46,214	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:46,215	[INFO]	329	SUCCESS	+4.0	
2020-12-17 14:56:46,215	[DEBUG]	
2020-12-17 14:56:47,070	[INFO]	330	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:56:47,073	[INFO]	331	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:56:47,829	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:56:48,774	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:56:48,777	[INFO]	334	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:56:48,778	[INFO]	335	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:49,716	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:56:52,810	[INFO]	337	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:56:53,698	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:56:54,619	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:55,370	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:56:55,371	[INFO]	341	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 14:56:55,372	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:56:56,298	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:56:57,214	[INFO]	344	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:56:57,216	[INFO]	345	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:56:57,217	[DEBUG]	
2020-12-17 14:56:57,983	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:56:57,986	[INFO]	347	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:56:57,987	[DEBUG]	
2020-12-17 14:57:01,196	[INFO]	348	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:57:01,197	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:57:01,198	[INFO]	349	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:57:01,198	[DEBUG]	
2020-12-17 14:57:04,475	[INFO]	350	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:57:04,475	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:57:07,607	[INFO]	351	SUCCESS	 8.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:57:07,608	[INFO]	352	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:57:07,609	[DEBUG]	
2020-12-17 14:57:07,609	[INFO]	353	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:57:07,610	[DEBUG]	
2020-12-17 14:57:08,363	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:57:08,365	[INFO]	355	SUCCESS	+4.0	
2020-12-17 14:57:08,366	[DEBUG]	
2020-12-17 14:57:09,278	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:57:09,281	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:57:10,043	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:57:14,211	[INFO]	359	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:57:17,198	[INFO]	360	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:57:17,199	[INFO]	361	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:57:17,199	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:57:18,135	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:57:18,138	[INFO]	363	SUCCESS	+4.0	
2020-12-17 14:57:18,138	[DEBUG]	
2020-12-17 14:57:18,140	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:57:18,142	[INFO]	365	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:57:18,893	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:57:18,894	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:57:18,895	[INFO]	368	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:57:19,791	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:57:19,793	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:57:20,695	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:57:23,965	[INFO]	372	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:57:24,708	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:57:24,711	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:57:24,713	[INFO]	375	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 14:57:24,714	[DEBUG]	
2020-12-17 14:57:28,014	[INFO]	376	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:57:28,919	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:57:28,921	[INFO]	378	SUCCESS	+4.0	
2020-12-17 14:57:28,922	[DEBUG]	
2020-12-17 14:57:28,923	[INFO]	379	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:57:28,924	[DEBUG]	
2020-12-17 14:57:28,925	[INFO]	380	SUCCESS	+4.0	
2020-12-17 14:57:28,926	[DEBUG]	
2020-12-17 14:57:28,927	[INFO]	381	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:57:32,048	[INFO]	382	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:57:32,049	[INFO]	383	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:57:32,050	[INFO]	384	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:57:32,050	[DEBUG]	
2020-12-17 14:57:32,051	[INFO]	385	SUCCESS	+4.0	
2020-12-17 14:57:32,051	[DEBUG]	
2020-12-17 14:57:32,052	[INFO]	386	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:57:32,994	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:57:32,996	[INFO]	388	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:57:33,887	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:57:34,637	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:57:37,742	[INFO]	391	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:57:40,815	[INFO]	392	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:57:41,734	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 14:57:45,048	[INFO]	394	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:57:45,978	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:57:49,325	[INFO]	396	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:57:49,326	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:57:50,264	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:57:50,266	[INFO]	398	SUCCESS	+4.0	
2020-12-17 14:57:50,266	[DEBUG]	
2020-12-17 14:57:53,441	[INFO]	399	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:57:53,442	[INFO]	400	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:57:53,443	[DEBUG]	
2020-12-17 14:57:53,444	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:57:54,338	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:57:57,898	[INFO]	403	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:57:58,788	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:57:59,527	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:57:59,529	[INFO]	406	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:57:59,529	[INFO]	407	SUCCESS	+4.0	
2020-12-17 14:57:59,530	[DEBUG]	
2020-12-17 14:58:02,793	[INFO]	408	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:58:02,794	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 14:58:02,795	[INFO]	409	SUCCESS	+4.0	
2020-12-17 14:58:02,795	[DEBUG]	
2020-12-17 14:58:03,748	[INFO]	410	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:58:03,749	[INFO]	411	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:58:03,749	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:58:03,750	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:58:03,751	[INFO]	413	SUCCESS	+4.0	
2020-12-17 14:58:03,751	[DEBUG]	
2020-12-17 14:58:04,692	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:58:04,695	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:58:04,697	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:58:04,699	[INFO]	417	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 14:58:04,700	[DEBUG]	
2020-12-17 14:58:05,632	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:58:05,633	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:58:06,384	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:58:06,387	[INFO]	421	SUCCESS	+4.0	
2020-12-17 14:58:06,387	[DEBUG]	
2020-12-17 14:58:07,147	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:58:07,148	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:58:07,889	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:58:07,890	[INFO]	425	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:58:07,890	[DEBUG]	
2020-12-17 14:58:07,891	[INFO]	426	SUCCESS	+4.0	
2020-12-17 14:58:07,891	[DEBUG]	
2020-12-17 14:58:07,892	[INFO]	427	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:58:07,892	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:58:07,893	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 14:58:07,893	[INFO]	429	SUCCESS	+4.0	
2020-12-17 14:58:07,894	[DEBUG]	
2020-12-17 14:58:07,894	[INFO]	430	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:58:08,649	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:58:12,777	[INFO]	432	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:58:12,778	[INFO]	433	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:58:12,779	[INFO]	434	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:58:12,780	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:58:12,781	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:58:12,782	[INFO]	437	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:58:12,783	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 14:58:12,783	[INFO]	438	SUCCESS	+4.0	
2020-12-17 14:58:12,784	[DEBUG]	
2020-12-17 14:58:12,784	[INFO]	439	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:58:13,633	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:58:13,635	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:58:13,637	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 14:58:13,638	[INFO]	443	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:58:14,533	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:58:17,822	[INFO]	445	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:58:18,713	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:58:18,715	[INFO]	447	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 14:58:18,716	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 14:58:19,479	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:58:19,481	[INFO]	449	SUCCESS	+4.0	
2020-12-17 14:58:19,481	[DEBUG]	
2020-12-17 14:58:19,483	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:58:19,485	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:58:20,378	[INFO]	452	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:58:20,382	[INFO]	453	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:58:23,472	[INFO]	454	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:58:24,418	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:58:24,420	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:58:24,422	[INFO]	457	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:58:28,248	[INFO]	458	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:58:28,249	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:58:33,147	[INFO]	459	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 14:58:33,148	[INFO]	460	SUCCESS	+4.0	
2020-12-17 14:58:33,149	[DEBUG]	
2020-12-17 14:58:34,371	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:58:35,166	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:58:38,415	[INFO]	463	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 14:58:38,418	[INFO]	464	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:58:38,419	[INFO]	465	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:58:39,185	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:58:43,456	[INFO]	467	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:58:43,457	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:58:47,843	[INFO]	469	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:58:47,844	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:58:47,844	[INFO]	470	SUCCESS	+4.0	
2020-12-17 14:58:47,844	[DEBUG]	
2020-12-17 14:58:48,721	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 14:58:49,619	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:58:52,733	[INFO]	473	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:58:55,880	[INFO]	474	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:58:55,882	[INFO]	475	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:58:59,226	[INFO]	476	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:58:59,227	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 14:59:00,133	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:59:00,134	[INFO]	478	SUCCESS	+4.0	
2020-12-17 14:59:00,135	[DEBUG]	
2020-12-17 14:59:03,376	[INFO]	479	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:59:06,453	[INFO]	480	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 14:59:06,454	[INFO]	481	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:59:09,554	[INFO]	482	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:59:12,820	[INFO]	483	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 14:59:12,821	[INFO]	484	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 14:59:12,821	[DEBUG]	
2020-12-17 14:59:12,821	[INFO]	485	SUCCESS	+4.0	
2020-12-17 14:59:12,822	[DEBUG]	
2020-12-17 14:59:13,542	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:59:13,543	[INFO]	487	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 14:59:13,544	[INFO]	488	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:59:14,288	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:59:15,022	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:59:15,924	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:59:15,925	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 14:59:15,926	[INFO]	493	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:59:15,927	[INFO]	494	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:59:15,927	[DEBUG]	
2020-12-17 14:59:15,927	[INFO]	495	SUCCESS	+4.0	
2020-12-17 14:59:15,928	[DEBUG]	
2020-12-17 14:59:19,086	[INFO]	496	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:59:19,087	[INFO]	497	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:59:19,088	[INFO]	498	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 14:59:19,089	[DEBUG]	
2020-12-17 14:59:19,090	[INFO]	499	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:59:19,090	[INFO]	500	SUCCESS	+4.0	
2020-12-17 14:59:19,091	[DEBUG]	
2020-12-17 14:59:19,091	[INFO]	==== END ====
2020-12-17 14:59:19,091	[INFO]	Reason: step budget
2020-12-17 14:59:19,092	[INFO]	
2020-12-17 14:59:19,092	[INFO]	========== EPOCH 2 ==========
2020-12-17 14:59:19,092	[INFO]	==== WARMUP ====
2020-12-17 14:59:22,345	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 14:59:22,345	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:59:25,641	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 14:59:25,641	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:59:28,831	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 14:59:28,832	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:59:32,225	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 14:59:32,225	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 14:59:32,225	[INFO]	==== START ====
2020-12-17 14:59:35,486	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 14:59:35,487	[INFO]	2	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:59:35,487	[DEBUG]	
2020-12-17 14:59:36,391	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:59:36,392	[INFO]	4	SUCCESS	+4.0	
2020-12-17 14:59:36,393	[DEBUG]	
2020-12-17 14:59:37,168	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:59:37,933	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:59:38,851	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 14:59:39,774	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 14:59:40,685	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 14:59:41,458	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 14:59:42,385	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:59:45,629	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 14:59:46,542	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:59:47,285	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:59:48,208	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 14:59:48,209	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:59:49,128	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 14:59:49,875	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 14:59:53,129	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 14:59:53,130	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 14:59:54,021	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 14:59:54,023	[INFO]	21	SUCCESS	+4.0	
2020-12-17 14:59:54,023	[DEBUG]	
2020-12-17 14:59:54,931	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 14:59:58,159	[INFO]	23	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 14:59:59,016	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 14:59:59,929	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:00,698	[INFO]	26	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:00,700	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:01,618	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:00:01,619	[INFO]	29	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:00:01,620	[DEBUG]	
2020-12-17 15:00:02,534	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:00:02,536	[INFO]	31	SUCCESS	+4.0	
2020-12-17 15:00:02,537	[DEBUG]	
2020-12-17 15:00:02,539	[INFO]	32	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:00:05,632	[INFO]	33	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:00:05,634	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:00:08,922	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:00:12,232	[INFO]	36	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:00:12,233	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:00:12,935	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:00:12,937	[INFO]	38	SUCCESS	+4.0	
2020-12-17 15:00:12,938	[DEBUG]	
2020-12-17 15:00:12,940	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:17,088	[INFO]	40	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:00:17,791	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:00:18,660	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:18,662	[INFO]	43	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:00:18,662	[DEBUG]	
2020-12-17 15:00:19,576	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:00:19,577	[INFO]	45	SUCCESS	+4.0	
2020-12-17 15:00:19,578	[DEBUG]	
2020-12-17 15:00:22,751	[INFO]	46	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:00:22,754	[INFO]	47	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:22,755	[DEBUG]	
2020-12-17 15:00:22,756	[INFO]	48	SUCCESS	+4.0	
2020-12-17 15:00:22,757	[DEBUG]	
2020-12-17 15:00:22,759	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:22,760	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:00:22,762	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:00:22,764	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:22,767	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:00:22,769	[INFO]	54	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:00:22,772	[INFO]	55	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:00:22,775	[INFO]	56	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:00:22,778	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:00:22,781	[INFO]	58	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:00:23,536	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:00:24,281	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:00:24,282	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:00:24,283	[INFO]	62	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:00:24,284	[INFO]	63	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:00:25,162	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:00:29,339	[INFO]	65	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:30,203	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:00:30,205	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:30,206	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:30,208	[INFO]	69	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:30,208	[DEBUG]	
2020-12-17 15:00:30,210	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:00:30,210	[INFO]	71	SUCCESS	+4.0	
2020-12-17 15:00:30,211	[DEBUG]	
2020-12-17 15:00:33,781	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:00:33,782	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:00:33,783	[INFO]	73	SUCCESS	+4.0	
2020-12-17 15:00:33,783	[DEBUG]	
2020-12-17 15:00:37,449	[INFO]	74	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:00:37,450	[INFO]	75	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:00:37,451	[INFO]	76	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:00:37,452	[DEBUG]	
2020-12-17 15:00:37,452	[INFO]	77	SUCCESS	+4.0	
2020-12-17 15:00:37,452	[DEBUG]	
2020-12-17 15:00:37,453	[INFO]	78	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:00:38,380	[INFO]	79	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:00:42,675	[INFO]	80	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:00:43,880	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:00:44,970	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:00:44,971	[INFO]	83	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:44,972	[DEBUG]	
2020-12-17 15:00:44,973	[INFO]	84	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:00:44,973	[DEBUG]	
2020-12-17 15:00:48,842	[INFO]	85	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:00:48,844	[INFO]	86	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:48,844	[DEBUG]	
2020-12-17 15:00:49,792	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:00:52,890	[INFO]	88	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:00:52,891	[INFO]	89	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:00:52,892	[INFO]	90	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:00:52,892	[DEBUG]	
2020-12-17 15:00:52,893	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:53,806	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:00:53,808	[INFO]	93	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:00:53,808	[DEBUG]	
2020-12-17 15:00:54,696	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:00:54,697	[INFO]	95	SUCCESS	+4.0	
2020-12-17 15:00:54,697	[DEBUG]	
2020-12-17 15:00:54,698	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:00:55,608	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:00:55,609	[INFO]	98	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:00:55,610	[DEBUG]	
2020-12-17 15:00:55,610	[INFO]	99	SUCCESS	+4.0	
2020-12-17 15:00:55,610	[DEBUG]	
2020-12-17 15:00:56,543	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:00:57,494	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:00:58,269	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:00:59,045	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:00:59,048	[INFO]	104	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:00:59,049	[DEBUG]	
2020-12-17 15:00:59,924	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:00:59,927	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:00:59,929	[INFO]	107	SUCCESS	+4.0	
2020-12-17 15:00:59,929	[DEBUG]	
2020-12-17 15:01:00,699	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:01:00,701	[INFO]	109	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:01:01,610	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:01:01,612	[INFO]	111	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:01:01,614	[INFO]	112	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:01:04,730	[INFO]	113	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:01:07,986	[INFO]	114	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:01:08,742	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:01:08,745	[INFO]	116	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:01:12,033	[INFO]	117	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:01:12,035	[INFO]	118	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:01:12,036	[DEBUG]	
2020-12-17 15:01:12,037	[INFO]	119	SUCCESS	+4.0	
2020-12-17 15:01:12,038	[DEBUG]	
2020-12-17 15:01:12,039	[INFO]	120	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:01:12,041	[INFO]	121	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:01:12,042	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:01:12,949	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:01:12,950	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:01:13,887	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:01:13,889	[INFO]	126	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:01:14,768	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:01:14,769	[INFO]	128	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:01:14,770	[INFO]	129	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:01:15,547	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:01:15,549	[INFO]	131	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:01:15,550	[DEBUG]	
2020-12-17 15:01:16,471	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:01:16,474	[INFO]	133	SUCCESS	+4.0	
2020-12-17 15:01:16,474	[DEBUG]	
2020-12-17 15:01:19,521	[INFO]	134	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:01:19,522	[INFO]	135	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:01:19,523	[INFO]	136	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:01:19,524	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:01:19,525	[INFO]	138	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:01:19,525	[INFO]	139	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:01:19,526	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:01:19,527	[INFO]	141	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:01:19,527	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:01:19,528	[INFO]	143	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:01:19,528	[DEBUG]	
2020-12-17 15:01:20,424	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:01:23,719	[INFO]	145	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:01:23,719	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:01:23,720	[INFO]	146	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:01:23,721	[INFO]	147	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:01:23,721	[DEBUG]	
2020-12-17 15:01:23,722	[INFO]	148	SUCCESS	+4.0	
2020-12-17 15:01:23,722	[DEBUG]	
2020-12-17 15:01:24,469	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:01:24,472	[INFO]	150	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:01:24,473	[INFO]	151	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:01:24,474	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:01:27,737	[INFO]	152	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:01:27,738	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:01:27,739	[INFO]	153	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:01:27,740	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:01:27,740	[INFO]	154	SUCCESS	+4.0	
2020-12-17 15:01:27,741	[DEBUG]	
2020-12-17 15:01:28,502	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:01:28,504	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:01:29,233	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:01:30,116	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:01:33,300	[INFO]	159	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:01:34,235	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:01:37,540	[INFO]	161	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:01:37,542	[INFO]	162	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:01:37,542	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:01:38,427	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:01:38,428	[INFO]	164	SUCCESS	+4.0	
2020-12-17 15:01:38,428	[DEBUG]	
2020-12-17 15:01:39,175	[INFO]	165	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:01:42,610	[INFO]	166	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:01:43,561	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:01:44,488	[INFO]	168	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:01:44,489	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:01:45,414	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:01:46,305	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:01:46,306	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:01:47,259	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:01:48,173	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:01:49,091	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:01:49,092	[INFO]	176	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:01:49,093	[INFO]	177	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:01:50,013	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:01:50,015	[INFO]	179	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:01:50,919	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:01:51,833	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:01:52,733	[INFO]	182	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:01:52,735	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:01:53,478	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:01:54,229	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:01:54,232	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:01:58,376	[INFO]	187	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:01:59,222	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:01:59,223	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:02:00,130	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:02:00,133	[INFO]	191	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:02:01,027	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:02:04,258	[INFO]	193	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:02:04,259	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:02:04,260	[INFO]	194	SUCCESS	+4.0	
2020-12-17 15:02:04,260	[DEBUG]	
2020-12-17 15:02:07,493	[INFO]	195	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:02:07,494	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:02:07,494	[INFO]	196	SUCCESS	+4.0	
2020-12-17 15:02:07,495	[DEBUG]	
2020-12-17 15:02:07,495	[INFO]	197	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:02:07,496	[DEBUG]	
2020-12-17 15:02:07,496	[INFO]	198	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:02:07,497	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:02:10,562	[INFO]	199	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:02:10,563	[INFO]	200	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:02:10,564	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:02:10,565	[INFO]	201	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:10,565	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:02:10,566	[INFO]	202	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:02:10,567	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:02:10,567	[INFO]	203	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:10,568	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:02:11,429	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:11,431	[INFO]	205	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:02:11,431	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:02:11,432	[INFO]	206	SUCCESS	+4.0	
2020-12-17 15:02:11,432	[DEBUG]	
2020-12-17 15:02:14,677	[INFO]	207	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:02:14,678	[INFO]	208	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:02:15,584	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:02:15,585	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:02:16,322	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:02:16,323	[INFO]	212	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:02:16,323	[DEBUG]	
2020-12-17 15:02:16,324	[INFO]	213	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:02:17,058	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:17,059	[INFO]	215	SUCCESS	+4.0	
2020-12-17 15:02:17,060	[DEBUG]	
2020-12-17 15:02:17,942	[INFO]	216	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:02:18,856	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:02:22,099	[INFO]	218	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:02:22,100	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:02:22,101	[INFO]	219	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:02:22,102	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:02:22,846	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:22,848	[INFO]	221	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:02:22,849	[DEBUG]	
2020-12-17 15:02:22,851	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:02:22,853	[INFO]	223	SUCCESS	+4.0	
2020-12-17 15:02:22,853	[DEBUG]	
2020-12-17 15:02:26,152	[INFO]	224	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:02:26,865	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:02:39,958	[INFO]	226	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:02:40,798	[INFO]	227	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:40,799	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:43,904	[INFO]	229	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:02:43,906	[INFO]	230	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:02:43,907	[DEBUG]	
2020-12-17 15:02:44,814	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:02:44,817	[INFO]	232	SUCCESS	+4.0	
2020-12-17 15:02:44,818	[DEBUG]	
2020-12-17 15:02:45,760	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:02:45,763	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:46,726	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:02:46,729	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:02:50,022	[INFO]	237	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:02:50,022	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:02:50,024	[INFO]	238	SUCCESS	+4.0	
2020-12-17 15:02:50,025	[DEBUG]	
2020-12-17 15:02:50,896	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:02:51,669	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:02:51,670	[INFO]	241	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:02:52,402	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:02:53,383	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:02:53,384	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:02:56,577	[INFO]	245	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:02:57,304	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:03:00,393	[INFO]	247	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:03:00,395	[INFO]	248	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:03:00,395	[DEBUG]	
2020-12-17 15:03:00,395	[INFO]	249	SUCCESS	+4.0	
2020-12-17 15:03:00,396	[DEBUG]	
2020-12-17 15:03:00,396	[INFO]	250	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:03:00,397	[INFO]	251	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:03:01,322	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:03:04,542	[INFO]	253	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:03:04,543	[INFO]	254	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:03:04,544	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:03:05,436	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:03:06,189	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:03:10,581	[INFO]	257	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:03:10,582	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:03:10,584	[INFO]	258	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:03:10,584	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:03:11,461	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:03:15,853	[INFO]	260	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:03:15,854	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:03:16,553	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:03:17,459	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:03:22,349	[INFO]	263	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:03:26,849	[INFO]	264	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:03:26,850	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:03:31,891	[INFO]	265	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:03:32,789	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:03:37,249	[INFO]	267	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:03:37,250	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:03:40,694	[INFO]	268	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:03:40,696	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:03:44,141	[INFO]	269	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:03:47,415	[INFO]	270	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:03:48,324	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:03:51,456	[INFO]	272	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:03:51,457	[INFO]	273	SUCCESS	+4.0	
2020-12-17 15:03:51,457	[DEBUG]	
2020-12-17 15:03:55,643	[INFO]	274	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:03:56,486	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:03:57,203	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:03:57,943	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:04:01,140	[INFO]	278	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:04:01,142	[INFO]	279	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:04:01,142	[DEBUG]	
2020-12-17 15:04:04,239	[INFO]	280	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:04:04,240	[INFO]	281	SUCCESS	 8.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:04:04,963	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:04:05,710	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:04:08,828	[INFO]	284	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:04:09,711	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:04:09,712	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:04:09,713	[INFO]	287	SUCCESS	+4.0	
2020-12-17 15:04:09,713	[DEBUG]	
2020-12-17 15:04:09,714	[INFO]	288	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:04:09,714	[DEBUG]	
2020-12-17 15:04:09,715	[INFO]	289	SUCCESS	+4.0	
2020-12-17 15:04:09,715	[DEBUG]	
2020-12-17 15:04:12,875	[INFO]	290	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:04:13,871	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:04:13,872	[INFO]	292	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:04:13,873	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:04:13,873	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:04:13,874	[INFO]	295	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:04:13,875	[DEBUG]	
2020-12-17 15:04:14,990	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:04:16,580	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:04:18,305	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:04:18,307	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:04:18,308	[INFO]	300	SUCCESS	+4.0	
2020-12-17 15:04:18,309	[DEBUG]	
2020-12-17 15:04:19,986	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:04:19,988	[INFO]	302	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:04:21,467	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:04:23,342	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:04:23,344	[INFO]	305	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:04:23,346	[INFO]	306	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:04:23,347	[DEBUG]	
2020-12-17 15:04:23,348	[INFO]	307	SUCCESS	+4.0	
2020-12-17 15:04:23,349	[DEBUG]	
2020-12-17 15:04:24,872	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:04:25,960	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:04:30,411	[INFO]	310	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:04:30,412	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:04:31,536	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:04:36,093	[INFO]	312	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:04:37,123	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:04:43,389	[INFO]	314	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:04:43,391	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!             return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:04:44,559	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:04:52,297	[INFO]	316	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:04:52,298	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:04:53,405	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:04:53,407	[INFO]	318	SUCCESS	+4.0	
2020-12-17 15:04:53,407	[DEBUG]	
2020-12-17 15:04:54,501	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:04:58,268	[INFO]	320	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:04:59,333	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:05:00,343	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:05:01,341	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:05:06,141	[INFO]	324	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:05:07,022	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:05:10,332	[INFO]	326	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:05:11,141	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:05:11,925	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:11,927	[INFO]	329	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:05:13,195	[INFO]	330	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:05:14,770	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:05:15,953	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:17,214	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:05:17,216	[INFO]	334	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:17,217	[INFO]	335	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:05:17,218	[INFO]	336	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:20,724	[INFO]	337	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:05:20,725	[INFO]	338	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:05:20,726	[INFO]	339	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:05:20,727	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:05:20,728	[INFO]	341	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:20,728	[DEBUG]	
2020-12-17 15:05:20,729	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:05:20,730	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:21,527	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:05:22,525	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:22,528	[INFO]	346	SUCCESS	+4.0	
2020-12-17 15:05:22,529	[DEBUG]	
2020-12-17 15:05:23,520	[INFO]	347	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:05:23,522	[INFO]	348	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:05:23,524	[INFO]	349	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:24,480	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:05:27,807	[INFO]	351	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:05:27,808	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:05:27,808	[INFO]	352	SUCCESS	+4.0	
2020-12-17 15:05:27,809	[DEBUG]	
2020-12-17 15:05:28,749	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:05:28,752	[INFO]	354	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:29,703	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:05:30,472	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:05:30,476	[INFO]	357	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:05:31,234	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:31,236	[INFO]	359	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:31,237	[INFO]	360	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:05:32,168	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:05:32,955	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:05:33,891	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:05:33,894	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:34,823	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:05:38,306	[INFO]	366	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:05:38,307	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:38,309	[INFO]	368	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:05:41,609	[INFO]	369	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:05:41,610	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:41,611	[INFO]	370	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:41,611	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:41,612	[INFO]	371	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:05:41,613	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:41,614	[INFO]	372	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:05:41,614	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:41,615	[INFO]	373	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:05:41,615	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:42,525	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:05:42,528	[INFO]	375	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:42,529	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:43,452	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:05:44,387	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:05:44,390	[INFO]	378	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:05:44,390	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:44,392	[INFO]	379	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:44,393	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:47,567	[INFO]	380	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:05:47,569	[INFO]	381	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:05:47,569	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:05:50,729	[INFO]	382	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:05:50,731	[INFO]	383	SUCCESS	+4.0	
2020-12-17 15:05:50,732	[DEBUG]	
2020-12-17 15:05:51,512	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:05:51,514	[INFO]	385	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:05:51,515	[DEBUG]	
2020-12-17 15:05:52,425	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:05:53,348	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:05:53,349	[INFO]	388	SUCCESS	+4.0	
2020-12-17 15:05:53,349	[DEBUG]	
2020-12-17 15:05:53,350	[INFO]	389	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:05:56,692	[INFO]	390	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:05:56,693	[INFO]	391	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:05:56,694	[INFO]	392	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:05:59,946	[INFO]	393	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:06:00,889	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:06:00,890	[INFO]	395	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:06:00,891	[INFO]	396	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:06:00,892	[INFO]	397	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:06:00,892	[DEBUG]	
2020-12-17 15:06:00,893	[INFO]	398	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:06:00,894	[INFO]	399	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:06:01,692	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:06:01,693	[INFO]	401	SUCCESS	+4.0	
2020-12-17 15:06:01,694	[DEBUG]	
2020-12-17 15:06:02,647	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:06:02,649	[INFO]	403	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:06:02,649	[INFO]	404	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:06:02,650	[DEBUG]	
2020-12-17 15:06:03,949	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:06:03,951	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:06:03,952	[INFO]	407	SUCCESS	+4.0	
2020-12-17 15:06:03,952	[DEBUG]	
2020-12-17 15:06:05,214	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:06:06,154	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:06:06,979	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:06:07,756	[INFO]	411	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:06:07,757	[INFO]	412	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:06:07,758	[INFO]	413	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:06:08,522	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:06:11,743	[INFO]	415	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:06:12,721	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:06:12,724	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:06:12,726	[INFO]	418	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:06:13,693	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:06:13,694	[INFO]	420	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:06:13,695	[INFO]	421	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:06:13,695	[DEBUG]	
2020-12-17 15:06:13,696	[INFO]	422	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:06:13,697	[INFO]	423	SUCCESS	+4.0	
2020-12-17 15:06:13,697	[DEBUG]	
2020-12-17 15:06:17,109	[INFO]	424	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:06:17,110	[INFO]	425	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:06:17,111	[INFO]	426	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:06:17,111	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:06:17,112	[INFO]	428	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:06:17,112	[DEBUG]	
2020-12-17 15:06:17,113	[INFO]	429	SUCCESS	+4.0	
2020-12-17 15:06:17,113	[DEBUG]	
2020-12-17 15:06:18,050	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:06:19,005	[INFO]	431	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:06:19,006	[INFO]	432	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:06:19,007	[INFO]	433	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:06:19,007	[DEBUG]	
2020-12-17 15:06:19,008	[INFO]	434	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:06:19,009	[INFO]	435	SUCCESS	+4.0	
2020-12-17 15:06:19,009	[DEBUG]	
2020-12-17 15:06:19,965	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:06:19,966	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:06:23,334	[INFO]	438	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:06:23,335	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:06:24,293	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:06:24,294	[INFO]	440	SUCCESS	+4.0	
2020-12-17 15:06:24,295	[DEBUG]	
2020-12-17 15:06:25,222	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:06:25,223	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:06:25,978	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:06:26,887	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:06:27,667	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:06:31,934	[INFO]	446	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:06:31,935	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:06:31,937	[INFO]	447	SUCCESS	+4.0	
2020-12-17 15:06:31,937	[DEBUG]	
2020-12-17 15:06:36,959	[INFO]	448	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:06:38,021	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:06:38,859	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:06:39,777	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:06:40,542	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:06:40,544	[INFO]	453	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:06:41,286	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:06:45,546	[INFO]	455	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:06:46,428	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:06:47,340	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:06:50,593	[INFO]	458	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:06:50,594	[INFO]	459	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:06:50,595	[INFO]	460	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:06:50,596	[DEBUG]	
2020-12-17 15:06:51,511	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:06:51,513	[INFO]	462	SUCCESS	+4.0	
2020-12-17 15:06:51,514	[DEBUG]	
2020-12-17 15:06:55,118	[INFO]	463	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:06:55,119	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:06:55,120	[INFO]	464	SUCCESS	+4.0	
2020-12-17 15:06:55,120	[DEBUG]	
2020-12-17 15:06:58,226	[INFO]	465	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:06:58,227	[INFO]	466	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:06:58,228	[DEBUG]	
2020-12-17 15:06:58,981	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:06:58,982	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:06:59,902	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:06:59,904	[INFO]	470	SUCCESS	+4.0	
2020-12-17 15:06:59,905	[DEBUG]	
2020-12-17 15:06:59,906	[INFO]	471	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:06:59,907	[DEBUG]	
2020-12-17 15:07:00,640	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:07:00,641	[INFO]	473	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:07:00,642	[INFO]	474	SUCCESS	+4.0	
2020-12-17 15:07:00,642	[DEBUG]	
2020-12-17 15:07:00,643	[INFO]	475	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:07:00,644	[INFO]	476	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:07:13,617	[INFO]	477	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:07:14,270	[INFO]	478	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:07:17,525	[INFO]	479	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:07:17,526	[INFO]	480	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:07:17,526	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:07:17,527	[INFO]	481	SUCCESS	+4.0	
2020-12-17 15:07:17,527	[DEBUG]	
2020-12-17 15:07:17,528	[INFO]	482	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:07:17,529	[INFO]	483	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:07:17,529	[INFO]	484	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:07:17,530	[INFO]	485	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:07:17,530	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:07:17,531	[INFO]	486	SUCCESS	+4.0	
2020-12-17 15:07:17,531	[DEBUG]	
2020-12-17 15:07:20,683	[INFO]	487	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:07:21,601	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:07:21,602	[INFO]	489	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:07:21,603	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:07:22,481	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:07:23,427	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:07:23,430	[INFO]	493	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:07:23,432	[INFO]	494	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:07:23,435	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:07:23,437	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:07:23,440	[INFO]	497	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:07:23,442	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:07:24,199	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:07:24,203	[INFO]	500	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:07:24,203	[DEBUG]	
2020-12-17 15:07:24,204	[INFO]	==== END ====
2020-12-17 15:07:24,204	[INFO]	Reason: step budget
2020-12-17 15:07:24,205	[INFO]	
2020-12-17 15:07:24,205	[INFO]	========== EPOCH 3 ==========
2020-12-17 15:07:24,206	[INFO]	==== WARMUP ====
2020-12-17 15:07:27,448	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:07:27,449	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:07:30,701	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:07:30,701	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:07:33,931	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:07:33,931	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:07:37,251	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 15:07:37,251	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:07:37,251	[INFO]	==== START ====
2020-12-17 15:07:38,130	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:07:39,042	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:07:42,287	[INFO]	3	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:07:42,998	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:07:43,893	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:07:47,567	[INFO]	6	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:07:47,567	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:07:50,643	[INFO]	7	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:07:50,644	[INFO]	8	SUCCESS	+4.0	
2020-12-17 15:07:50,644	[DEBUG]	
2020-12-17 15:07:53,984	[INFO]	9	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:07:53,986	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:07:53,987	[INFO]	11	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:07:53,988	[INFO]	12	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:07:53,989	[DEBUG]	
2020-12-17 15:07:54,743	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:07:54,744	[INFO]	14	SUCCESS	+4.0	
2020-12-17 15:07:54,744	[DEBUG]	
2020-12-17 15:07:58,106	[INFO]	15	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:07:58,108	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:07:59,020	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:07:59,957	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:08:00,883	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:08:00,885	[INFO]	20	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:08:00,885	[DEBUG]	
2020-12-17 15:08:01,808	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:08:01,809	[INFO]	22	SUCCESS	+4.0	
2020-12-17 15:08:01,809	[DEBUG]	
2020-12-17 15:08:02,575	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:08:02,577	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:08:02,578	[INFO]	25	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:08:03,509	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:08:04,470	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:08:05,415	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:08:05,417	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:08:05,418	[INFO]	30	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:08:09,446	[INFO]	31	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:08:10,359	[INFO]	32	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:08:13,798	[INFO]	33	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:08:13,799	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:08:14,744	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:08:14,746	[INFO]	35	SUCCESS	+4.0	
2020-12-17 15:08:14,747	[DEBUG]	
2020-12-17 15:08:15,542	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:08:15,543	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:08:16,280	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:08:17,211	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:08:20,480	[INFO]	40	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:08:20,480	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:08:23,726	[INFO]	41	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:08:26,936	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:08:26,937	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,25 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:08:30,194	[INFO]	43	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:08:30,195	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:08:31,097	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:08:31,099	[INFO]	46	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:08:31,099	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:08:31,100	[INFO]	47	SUCCESS	+4.0	
2020-12-17 15:08:31,100	[DEBUG]	
2020-12-17 15:08:35,370	[INFO]	48	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:08:36,067	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:08:36,069	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:08:36,071	[INFO]	51	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:08:36,073	[INFO]	52	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:08:36,074	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:08:36,820	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:08:37,703	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:08:37,706	[INFO]	55	SUCCESS	+4.0	
2020-12-17 15:08:37,706	[DEBUG]	
2020-12-17 15:08:38,620	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:08:38,621	[INFO]	57	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:08:39,382	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:08:39,385	[INFO]	59	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:08:40,296	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:08:40,297	[INFO]	61	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:08:53,161	[INFO]	62	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:08:53,162	[INFO]	63	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:08:53,979	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:08:54,851	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:08:54,852	[INFO]	66	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:08:54,853	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:08:54,853	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:08:54,854	[INFO]	69	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:08:58,252	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:08:58,252	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:08:58,253	[INFO]	71	SUCCESS	+4.0	
2020-12-17 15:08:58,253	[DEBUG]	
2020-12-17 15:08:59,005	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:08:59,914	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:08:59,916	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:09:03,045	[INFO]	75	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:09:03,048	[INFO]	76	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:09:06,104	[INFO]	77	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:09:09,192	[INFO]	78	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:09:10,104	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:09:10,923	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:09:14,128	[INFO]	81	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:09:14,895	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:09:14,898	[INFO]	83	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:09:15,786	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:09:28,679	[INFO]	85	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:09:28,680	[INFO]	86	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:09:29,424	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:09:29,428	[INFO]	88	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:09:29,430	[INFO]	89	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:09:30,155	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:09:30,888	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:09:30,889	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:09:30,890	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:09:31,803	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:09:35,093	[INFO]	95	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:09:35,094	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:09:35,983	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:09:36,906	[INFO]	98	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:09:40,464	[INFO]	99	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:09:40,465	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:09:41,340	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:09:42,254	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:09:45,760	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:09:45,761	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:09:48,987	[INFO]	103	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:09:48,988	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:09:48,989	[INFO]	104	SUCCESS	+4.0	
2020-12-17 15:09:48,990	[DEBUG]	
2020-12-17 15:09:49,877	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:09:49,879	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:09:50,798	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:09:50,799	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:09:54,003	[INFO]	109	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:09:54,005	[INFO]	110	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:09:54,005	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:09:54,926	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:09:54,929	[INFO]	112	SUCCESS	+4.0	
2020-12-17 15:09:54,930	[DEBUG]	
2020-12-17 15:09:54,932	[INFO]	113	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:09:58,324	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:09:58,325	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:09:58,325	[INFO]	115	SUCCESS	+4.0	
2020-12-17 15:09:58,326	[DEBUG]	
2020-12-17 15:10:01,320	[INFO]	116	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:10:01,321	[INFO]	117	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:10:02,236	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:10:02,239	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:10:02,981	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:10:03,722	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:10:04,465	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:10:07,700	[INFO]	123	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:10:07,701	[INFO]	124	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:10:10,767	[INFO]	125	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:10:10,769	[INFO]	126	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:10:11,507	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:10:12,420	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:10:12,423	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:10:15,672	[INFO]	130	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:10:15,673	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:10:15,674	[INFO]	131	SUCCESS	+4.0	
2020-12-17 15:10:15,674	[DEBUG]	
2020-12-17 15:10:16,410	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:10:20,024	[INFO]	133	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:10:20,025	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:10:20,931	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:10:21,871	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:10:21,873	[INFO]	136	SUCCESS	+4.0	
2020-12-17 15:10:21,874	[DEBUG]	
2020-12-17 15:10:22,597	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:10:22,598	[INFO]	138	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:10:25,890	[INFO]	139	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:10:25,890	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:10:25,891	[INFO]	140	SUCCESS	+4.0	
2020-12-17 15:10:25,891	[DEBUG]	
2020-12-17 15:10:25,892	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:10:26,781	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:10:30,950	[INFO]	143	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:10:31,653	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:10:31,655	[INFO]	145	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:10:34,937	[INFO]	146	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:10:36,153	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:10:37,195	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:10:37,983	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:10:37,985	[INFO]	150	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:10:39,024	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:10:40,192	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:10:40,193	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:10:41,172	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:10:44,376	[INFO]	155	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:10:45,226	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:10:48,440	[INFO]	157	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:10:49,304	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:10:49,305	[INFO]	159	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:10:50,041	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:10:50,825	[INFO]	161	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:10:51,739	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:10:52,646	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:10:55,886	[INFO]	164	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:10:55,887	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:10:55,888	[INFO]	165	SUCCESS	+4.0	
2020-12-17 15:10:55,888	[DEBUG]	
2020-12-17 15:10:55,889	[INFO]	166	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:10:56,616	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:10:56,619	[INFO]	168	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:10:57,335	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:10:58,073	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:10:58,983	[INFO]	171	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:10:59,880	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:11:00,785	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:11:01,729	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:11:01,731	[INFO]	175	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:11:01,732	[DEBUG]	
2020-12-17 15:11:01,733	[INFO]	176	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:11:01,734	[INFO]	177	SUCCESS	+4.0	
2020-12-17 15:11:01,735	[DEBUG]	
2020-12-17 15:11:02,451	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:11:03,370	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:11:04,274	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:11:07,877	[INFO]	181	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:11:07,878	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:11:07,879	[INFO]	182	SUCCESS	+4.0	
2020-12-17 15:11:07,879	[DEBUG]	
2020-12-17 15:11:08,773	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:11:08,774	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:11:09,708	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:11:10,659	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:11:11,395	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:11:11,396	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:11:11,396	[INFO]	189	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:11:11,397	[DEBUG]	
2020-12-17 15:11:12,292	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:11:15,661	[INFO]	191	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:11:15,662	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:11:15,663	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:11:16,514	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:11:17,259	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:11:17,261	[INFO]	196	SUCCESS	+4.0	
2020-12-17 15:11:17,261	[DEBUG]	
2020-12-17 15:11:17,263	[INFO]	197	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:11:17,263	[DEBUG]	
2020-12-17 15:11:18,152	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:11:18,904	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:11:23,019	[INFO]	200	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:11:23,020	[INFO]	201	SUCCESS	+4.0	
2020-12-17 15:11:23,020	[DEBUG]	
2020-12-17 15:11:27,109	[INFO]	202	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:11:27,939	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:11:28,686	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:11:28,689	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:11:28,691	[INFO]	206	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:11:28,692	[DEBUG]	
2020-12-17 15:11:31,767	[INFO]	207	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:11:31,768	[INFO]	208	SUCCESS	+4.0	
2020-12-17 15:11:31,768	[DEBUG]	
2020-12-17 15:11:32,682	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:11:35,973	[INFO]	210	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:11:38,990	[INFO]	211	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:11:38,991	[INFO]	212	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:11:38,992	[DEBUG]	
2020-12-17 15:11:39,796	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:11:40,699	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:11:40,701	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:11:40,701	[INFO]	216	SUCCESS	+4.0	
2020-12-17 15:11:40,701	[DEBUG]	
2020-12-17 15:11:40,702	[INFO]	217	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:11:40,702	[DEBUG]	
2020-12-17 15:11:40,703	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:11:40,704	[INFO]	219	SUCCESS	+4.0	
2020-12-17 15:11:40,704	[DEBUG]	
2020-12-17 15:11:41,617	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:11:44,941	[INFO]	221	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:11:44,941	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:11:44,942	[INFO]	222	SUCCESS	+4.0	
2020-12-17 15:11:44,943	[DEBUG]	
2020-12-17 15:11:44,944	[INFO]	223	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:11:48,026	[INFO]	224	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:11:48,028	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:11:48,028	[INFO]	226	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:11:48,760	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:11:49,698	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:11:50,423	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:11:51,311	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:11:52,245	[INFO]	231	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:11:53,144	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:11:53,145	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:11:53,146	[INFO]	234	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:11:53,146	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:11:53,147	[INFO]	235	SUCCESS	+4.0	
2020-12-17 15:11:53,147	[DEBUG]	
2020-12-17 15:11:53,148	[INFO]	236	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:11:54,074	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:11:54,815	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:11:58,954	[INFO]	239	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:11:59,809	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:11:59,812	[INFO]	241	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:12:03,031	[INFO]	242	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:12:03,032	[INFO]	243	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:12:03,033	[DEBUG]	
2020-12-17 15:12:03,033	[INFO]	244	SUCCESS	+4.0	
2020-12-17 15:12:03,033	[DEBUG]	
2020-12-17 15:12:03,917	[INFO]	245	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:12:03,920	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:12:03,922	[INFO]	247	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:12:03,923	[DEBUG]	
2020-12-17 15:12:03,925	[INFO]	248	SUCCESS	+4.0	
2020-12-17 15:12:03,925	[DEBUG]	
2020-12-17 15:12:03,927	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:12:04,680	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:12:04,681	[INFO]	251	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:12:04,681	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:12:07,779	[INFO]	252	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:12:08,677	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:12:08,678	[INFO]	254	SUCCESS	+4.0	
2020-12-17 15:12:08,679	[DEBUG]	
2020-12-17 15:12:09,599	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:12:09,602	[INFO]	256	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:10,559	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:10,561	[INFO]	258	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:12:11,334	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:12:11,336	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:12:14,541	[INFO]	261	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:12:14,543	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:12:14,544	[INFO]	262	SUCCESS	+4.0	
2020-12-17 15:12:14,545	[DEBUG]	
2020-12-17 15:12:15,449	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:12:15,452	[INFO]	264	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:12:16,192	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:12:19,203	[INFO]	266	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:12:19,204	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:12:22,312	[INFO]	268	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:12:25,558	[INFO]	269	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:12:25,560	[INFO]	270	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:12:25,561	[DEBUG]	
2020-12-17 15:12:25,561	[INFO]	271	SUCCESS	+4.0	
2020-12-17 15:12:25,562	[DEBUG]	
2020-12-17 15:12:25,563	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:25,564	[INFO]	273	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:12:25,565	[INFO]	274	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:12:28,783	[INFO]	275	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:12:28,784	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:12:29,725	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:12:32,927	[INFO]	277	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:12:33,655	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:12:34,527	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:12:35,450	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:12:38,523	[INFO]	281	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:12:38,523	[INFO]	282	SUCCESS	+4.0	
2020-12-17 15:12:38,524	[DEBUG]	
2020-12-17 15:12:41,694	[INFO]	283	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:12:42,594	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:12:42,595	[INFO]	285	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:12:43,499	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:44,398	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:44,399	[INFO]	288	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:12:47,441	[INFO]	289	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:12:47,442	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:12:47,443	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:12:48,376	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:12:48,379	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:49,294	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:12:49,295	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:49,296	[INFO]	296	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:12:49,296	[DEBUG]	
2020-12-17 15:12:49,297	[INFO]	297	SUCCESS	+4.0	
2020-12-17 15:12:49,297	[DEBUG]	
2020-12-17 15:12:49,298	[INFO]	298	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:12:52,387	[INFO]	299	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:12:52,388	[INFO]	300	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:12:52,389	[INFO]	301	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:12:52,389	[INFO]	302	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:12:52,389	[DEBUG]	
2020-12-17 15:12:52,390	[INFO]	303	SUCCESS	+4.0	
2020-12-17 15:12:52,390	[DEBUG]	
2020-12-17 15:12:55,621	[INFO]	304	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:12:58,959	[INFO]	305	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:13:02,027	[INFO]	306	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:13:02,780	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:13:06,087	[INFO]	308	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:13:06,088	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:13:06,992	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:13:10,382	[INFO]	310	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:13:10,383	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,23 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             
+         } if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:13:10,384	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:13:10,385	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:13:10,386	[INFO]	312	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:13:10,386	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:13:10,387	[INFO]	313	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:13:10,387	[DEBUG]	
2020-12-17 15:13:10,388	[INFO]	314	SUCCESS	+4.0	
2020-12-17 15:13:10,388	[DEBUG]	
2020-12-17 15:13:10,388	[INFO]	315	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:13:10,389	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:13:10,390	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:13:10,391	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:13:10,391	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:13:14,953	[INFO]	320	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:13:14,954	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:13:14,955	[INFO]	321	SUCCESS	+4.0	
2020-12-17 15:13:14,955	[DEBUG]	
2020-12-17 15:13:14,956	[INFO]	322	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:13:14,957	[DEBUG]	
2020-12-17 15:13:14,958	[INFO]	323	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:13:14,958	[DEBUG]	
2020-12-17 15:13:14,959	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:13:15,821	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:13:16,592	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:13:16,594	[INFO]	327	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:13:16,594	[DEBUG]	
2020-12-17 15:13:19,900	[INFO]	328	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:13:19,900	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:13:19,901	[INFO]	329	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:13:19,901	[DEBUG]	
2020-12-17 15:13:20,815	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:13:20,817	[INFO]	331	SUCCESS	+4.0	
2020-12-17 15:13:20,818	[DEBUG]	
2020-12-17 15:13:20,819	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:13:20,820	[INFO]	333	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:13:20,821	[INFO]	334	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:13:20,821	[DEBUG]	
2020-12-17 15:13:20,822	[INFO]	335	SUCCESS	+4.0	
2020-12-17 15:13:20,822	[DEBUG]	
2020-12-17 15:13:20,823	[INFO]	336	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:13:20,824	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:13:24,134	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:13:24,134	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:13:24,135	[INFO]	339	SUCCESS	+4.0	
2020-12-17 15:13:24,136	[DEBUG]	
2020-12-17 15:13:24,907	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:13:25,641	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:13:25,643	[INFO]	342	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:13:25,643	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:13:26,587	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:13:26,589	[INFO]	344	SUCCESS	+4.0	
2020-12-17 15:13:26,590	[DEBUG]	
2020-12-17 15:13:27,534	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:13:28,299	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:13:28,300	[INFO]	347	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:13:28,300	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:13:31,417	[INFO]	348	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:13:31,418	[INFO]	349	SUCCESS	+4.0	
2020-12-17 15:13:31,418	[DEBUG]	
2020-12-17 15:13:32,366	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:13:33,294	[INFO]	351	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:13:33,295	[INFO]	352	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:13:33,295	[DEBUG]	
2020-12-17 15:13:33,296	[INFO]	353	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:13:34,234	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:13:34,236	[INFO]	355	SUCCESS	+4.0	
2020-12-17 15:13:34,236	[DEBUG]	
2020-12-17 15:13:34,238	[INFO]	356	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:13:35,146	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:13:35,147	[INFO]	358	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:13:35,149	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:13:35,150	[INFO]	360	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:13:36,057	[INFO]	361	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:13:37,004	[INFO]	362	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:13:37,770	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:13:38,721	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:13:39,627	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:13:39,628	[INFO]	366	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:13:39,629	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:13:40,551	[INFO]	368	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:13:41,471	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:13:42,392	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:13:43,333	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:13:44,301	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:13:45,048	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:13:45,809	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:13:46,758	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:13:46,760	[INFO]	376	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:13:50,074	[INFO]	377	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:13:50,075	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:13:50,992	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:13:54,285	[INFO]	379	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:13:54,286	[INFO]	380	SUCCESS	+4.0	
2020-12-17 15:13:54,287	[DEBUG]	
2020-12-17 15:13:57,365	[INFO]	381	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:13:58,129	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:13:58,889	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:13:58,891	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:13:58,892	[INFO]	385	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:13:58,892	[DEBUG]	
2020-12-17 15:13:58,893	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:13:58,894	[INFO]	387	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:13:59,825	[INFO]	388	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:14:00,748	[INFO]	389	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:14:00,749	[INFO]	390	SUCCESS	+4.0	
2020-12-17 15:14:00,750	[DEBUG]	
2020-12-17 15:14:01,664	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:14:01,665	[INFO]	392	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:04,953	[INFO]	393	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:14:08,247	[INFO]	394	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:14:08,985	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:14:12,144	[INFO]	396	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:14:15,413	[INFO]	397	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:14:15,414	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:15,415	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:14:15,415	[INFO]	400	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:14:16,371	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:14:16,372	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:14:16,372	[INFO]	403	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:16,373	[INFO]	404	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:14:16,374	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:14:16,375	[INFO]	406	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:14:16,375	[INFO]	407	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:16,376	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:14:17,301	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:14:17,302	[INFO]	410	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:14:18,223	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:18,225	[INFO]	412	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:14:18,226	[INFO]	413	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:14:19,158	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:14:19,160	[INFO]	415	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:14:19,160	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:14:19,162	[INFO]	417	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:14:19,162	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:14:19,163	[INFO]	418	SUCCESS	+4.0	
2020-12-17 15:14:19,164	[DEBUG]	
2020-12-17 15:14:19,164	[INFO]	419	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:14:22,488	[INFO]	420	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:14:22,488	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:14:22,489	[INFO]	421	SUCCESS	+4.0	
2020-12-17 15:14:22,489	[DEBUG]	
2020-12-17 15:14:25,453	[INFO]	422	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:14:25,455	[INFO]	423	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:14:26,388	[INFO]	424	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:14:27,302	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:28,219	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:14:31,410	[INFO]	427	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:14:31,413	[INFO]	428	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:14:32,324	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:14:32,325	[INFO]	430	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:14:35,642	[INFO]	431	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:14:38,734	[INFO]	432	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:14:39,643	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:14:40,517	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:14:43,775	[INFO]	435	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:14:43,776	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:14:43,777	[INFO]	436	SUCCESS	+4.0	
2020-12-17 15:14:43,777	[DEBUG]	
2020-12-17 15:14:43,778	[INFO]	437	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:14:43,778	[INFO]	438	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:14:44,522	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:14:45,264	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:14:46,196	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:14:47,098	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:14:50,163	[INFO]	443	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:14:51,097	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:14:51,876	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:52,606	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:14:52,607	[INFO]	447	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:14:53,489	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:14:56,634	[INFO]	449	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:14:56,635	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:14:56,636	[INFO]	451	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:14:59,900	[INFO]	452	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:14:59,901	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:15:00,790	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:15:00,793	[INFO]	454	SUCCESS	+4.0	
2020-12-17 15:15:00,793	[DEBUG]	
2020-12-17 15:15:01,550	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:15:02,453	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:15:03,373	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:15:03,374	[INFO]	458	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:15:03,374	[DEBUG]	
2020-12-17 15:15:03,375	[INFO]	459	SUCCESS	+4.0	
2020-12-17 15:15:03,375	[DEBUG]	
2020-12-17 15:15:03,376	[INFO]	460	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:15:03,377	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:15:03,377	[INFO]	462	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:15:03,378	[INFO]	463	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:15:03,379	[INFO]	464	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:15:04,295	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:15:04,297	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:15:04,298	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:15:04,298	[INFO]	468	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:15:04,299	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:15:04,299	[INFO]	469	SUCCESS	+4.0	
2020-12-17 15:15:04,299	[DEBUG]	
2020-12-17 15:15:05,226	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:15:05,228	[INFO]	471	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:15:05,230	[INFO]	472	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:15:08,793	[INFO]	473	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:15:08,794	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:15:09,696	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:15:09,699	[INFO]	475	SUCCESS	+4.0	
2020-12-17 15:15:09,700	[DEBUG]	
2020-12-17 15:15:10,461	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:15:10,463	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:15:11,345	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:15:12,113	[INFO]	479	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:15:13,018	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:15:13,906	[INFO]	481	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:15:17,194	[INFO]	482	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:15:17,195	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:15:17,196	[INFO]	483	SUCCESS	+4.0	
2020-12-17 15:15:17,197	[DEBUG]	
2020-12-17 15:15:17,197	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:15:18,115	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:15:19,019	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:15:19,749	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:15:23,035	[INFO]	488	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:15:23,036	[INFO]	489	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:15:23,036	[DEBUG]	
2020-12-17 15:15:23,037	[INFO]	490	SUCCESS	+4.0	
2020-12-17 15:15:23,037	[DEBUG]	
2020-12-17 15:15:26,298	[INFO]	491	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:15:26,299	[INFO]	492	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:15:26,299	[DEBUG]	
2020-12-17 15:15:27,214	[INFO]	493	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:15:27,217	[INFO]	494	SUCCESS	+4.0	
2020-12-17 15:15:27,217	[DEBUG]	
2020-12-17 15:15:28,122	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:15:28,881	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:15:29,785	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:15:29,788	[INFO]	498	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:15:29,789	[DEBUG]	
2020-12-17 15:15:29,790	[INFO]	499	SUCCESS	+4.0	
2020-12-17 15:15:29,791	[DEBUG]	
2020-12-17 15:15:33,139	[INFO]	500	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:15:33,140	[INFO]	==== END ====
2020-12-17 15:15:33,140	[INFO]	Reason: step budget
2020-12-17 15:15:33,140	[INFO]	
2020-12-17 15:15:33,140	[INFO]	========== EPOCH 4 ==========
2020-12-17 15:15:33,141	[INFO]	==== WARMUP ====
2020-12-17 15:15:36,620	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:15:36,620	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:15:39,981	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:15:39,982	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:15:43,505	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:15:43,505	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:15:46,914	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 15:15:46,915	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:15:46,915	[INFO]	==== START ====
2020-12-17 15:15:47,651	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:15:50,752	[INFO]	2	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:15:54,051	[INFO]	3	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:15:54,811	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:15:54,813	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:15:55,559	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:15:59,041	[INFO]	7	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:15:59,042	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:15:59,042	[INFO]	8	SUCCESS	+4.0	
2020-12-17 15:15:59,043	[DEBUG]	
2020-12-17 15:16:02,152	[INFO]	9	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:16:05,204	[INFO]	10	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:16:06,146	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:16:07,319	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:16:07,320	[INFO]	13	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:16:07,321	[DEBUG]	
2020-12-17 15:16:07,321	[INFO]	14	SUCCESS	+4.0	
2020-12-17 15:16:07,322	[DEBUG]	
2020-12-17 15:16:10,713	[INFO]	15	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:16:10,714	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:16:11,622	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:16:14,838	[INFO]	17	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:16:14,839	[INFO]	18	SUCCESS	+4.0	
2020-12-17 15:16:14,839	[DEBUG]	
2020-12-17 15:16:15,598	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:16:16,517	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:16:19,766	[INFO]	21	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:16:19,766	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:16:22,934	[INFO]	22	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:16:22,938	[INFO]	23	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:16:27,270	[INFO]	24	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:16:28,117	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:16:31,272	[INFO]	26	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:16:34,632	[INFO]	27	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:16:34,633	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:16:37,806	[INFO]	28	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:16:41,177	[INFO]	29	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:16:41,178	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:16:44,333	[INFO]	30	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:16:45,125	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:16:46,045	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:16:46,048	[INFO]	33	SUCCESS	+4.0	
2020-12-17 15:16:46,048	[DEBUG]	
2020-12-17 15:16:46,974	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:16:46,976	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:16:50,264	[INFO]	36	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:16:51,227	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:16:51,230	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:16:52,167	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:16:52,169	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:16:52,171	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:16:52,172	[INFO]	42	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:16:52,173	[DEBUG]	
2020-12-17 15:16:52,174	[INFO]	43	SUCCESS	+4.0	
2020-12-17 15:16:52,174	[DEBUG]	
2020-12-17 15:16:55,734	[INFO]	44	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:16:56,654	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:16:56,656	[INFO]	46	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:16:56,656	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:16:57,409	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:17:00,573	[INFO]	48	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:17:00,573	[INFO]	49	SUCCESS	+4.0	
2020-12-17 15:17:00,574	[DEBUG]	
2020-12-17 15:17:01,539	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:17:02,307	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:17:03,234	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:17:06,437	[INFO]	53	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:17:07,319	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:17:11,551	[INFO]	55	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:17:11,552	[INFO]	56	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:17:11,552	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:17:11,553	[INFO]	57	SUCCESS	+4.0	
2020-12-17 15:17:11,553	[DEBUG]	
2020-12-17 15:17:12,249	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:17:15,325	[INFO]	59	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:17:18,660	[INFO]	60	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:17:18,661	[INFO]	61	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:17:18,662	[INFO]	62	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:17:18,662	[DEBUG]	
2020-12-17 15:17:21,886	[INFO]	63	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:17:21,887	[INFO]	64	SUCCESS	+4.0	
2020-12-17 15:17:21,887	[DEBUG]	
2020-12-17 15:17:25,125	[INFO]	65	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:17:26,048	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:17:26,049	[INFO]	67	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:17:26,049	[DEBUG]	
2020-12-17 15:17:29,173	[INFO]	68	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:17:29,174	[INFO]	69	SUCCESS	+4.0	
2020-12-17 15:17:29,175	[DEBUG]	
2020-12-17 15:17:29,175	[INFO]	70	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:17:30,085	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:17:30,087	[INFO]	72	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:17:30,087	[DEBUG]	
2020-12-17 15:17:30,847	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:17:30,850	[INFO]	74	SUCCESS	+4.0	
2020-12-17 15:17:30,850	[DEBUG]	
2020-12-17 15:17:31,766	[INFO]	75	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:17:32,705	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:17:32,706	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:17:33,475	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:17:34,372	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:17:35,316	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:17:36,240	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:17:36,244	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:17:37,018	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:17:37,020	[INFO]	84	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:17:37,876	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:17:42,143	[INFO]	86	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:17:42,144	[INFO]	87	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:17:42,145	[INFO]	88	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:17:42,145	[DEBUG]	
2020-12-17 15:17:42,146	[INFO]	89	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:17:42,146	[DEBUG]	
2020-12-17 15:17:42,147	[INFO]	90	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:17:42,147	[DEBUG]	
2020-12-17 15:17:42,147	[INFO]	91	SUCCESS	+4.0	
2020-12-17 15:17:42,148	[DEBUG]	
2020-12-17 15:17:42,149	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:17:43,045	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:17:43,049	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:17:43,960	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:17:43,963	[INFO]	96	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:17:43,966	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:17:43,968	[INFO]	98	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:17:43,969	[DEBUG]	
2020-12-17 15:17:43,970	[INFO]	99	SUCCESS	+4.0	
2020-12-17 15:17:43,971	[DEBUG]	
2020-12-17 15:17:43,973	[INFO]	100	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:17:43,974	[INFO]	101	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:17:44,761	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:17:44,763	[INFO]	103	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:17:45,503	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:17:46,244	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:17:47,163	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:17:47,166	[INFO]	107	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:17:47,913	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:17:47,915	[INFO]	109	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:17:52,380	[INFO]	110	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:17:52,381	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:17:52,381	[INFO]	111	SUCCESS	+4.0	
2020-12-17 15:17:52,381	[DEBUG]	
2020-12-17 15:17:52,382	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:17:52,383	[INFO]	113	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:17:53,103	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:17:56,388	[INFO]	115	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:17:59,485	[INFO]	116	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:17:59,486	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:18:00,400	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:18:01,355	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:18:02,273	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:18:02,274	[INFO]	121	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:18:02,275	[DEBUG]	
2020-12-17 15:18:02,276	[INFO]	122	SUCCESS	+4.0	
2020-12-17 15:18:02,277	[DEBUG]	
2020-12-17 15:18:03,206	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:18:04,124	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:18:07,441	[INFO]	125	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:18:07,441	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:18:08,151	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:18:08,152	[INFO]	127	SUCCESS	+4.0	
2020-12-17 15:18:08,152	[DEBUG]	
2020-12-17 15:18:08,906	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:18:09,641	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:18:10,531	[INFO]	130	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:18:11,297	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:18:12,065	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:18:12,856	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:18:16,390	[INFO]	134	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:18:16,391	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:18:16,392	[INFO]	135	SUCCESS	+4.0	
2020-12-17 15:18:16,393	[DEBUG]	
2020-12-17 15:18:16,394	[INFO]	136	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:18:19,536	[INFO]	137	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:18:22,683	[INFO]	138	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:18:25,944	[INFO]	139	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:18:25,945	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:18:25,946	[INFO]	140	SUCCESS	+4.0	
2020-12-17 15:18:25,946	[DEBUG]	
2020-12-17 15:18:26,873	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:18:26,874	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:18:26,875	[INFO]	143	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:18:27,792	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:18:28,556	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:18:31,602	[INFO]	146	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:18:32,343	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:18:33,272	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:18:33,276	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:18:33,278	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:18:36,710	[INFO]	151	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:18:36,711	[INFO]	152	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:18:36,711	[DEBUG]	
2020-12-17 15:18:36,712	[INFO]	153	SUCCESS	+4.0	
2020-12-17 15:18:36,712	[DEBUG]	
2020-12-17 15:18:36,713	[INFO]	154	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:18:37,411	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:18:38,304	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:18:38,307	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:18:39,242	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:18:39,244	[INFO]	159	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:18:39,245	[DEBUG]	
2020-12-17 15:18:40,023	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:18:40,026	[INFO]	161	SUCCESS	+4.0	
2020-12-17 15:18:40,027	[DEBUG]	
2020-12-17 15:18:40,029	[INFO]	162	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:18:43,603	[INFO]	163	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:18:43,604	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:18:43,604	[INFO]	164	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:18:43,605	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:18:43,605	[INFO]	165	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:18:43,606	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:18:44,491	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:18:44,495	[INFO]	167	SUCCESS	+4.0	
2020-12-17 15:18:44,496	[DEBUG]	
2020-12-17 15:18:44,498	[INFO]	168	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:18:44,499	[DEBUG]	
2020-12-17 15:18:45,377	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:18:45,379	[INFO]	170	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:18:45,379	[DEBUG]	
2020-12-17 15:18:45,380	[INFO]	171	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:18:45,380	[DEBUG]	
2020-12-17 15:18:45,381	[INFO]	172	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:18:45,381	[DEBUG]	
2020-12-17 15:18:46,137	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:18:46,138	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:18:49,487	[INFO]	175	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:18:49,487	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:18:49,488	[INFO]	176	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:18:49,489	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:18:49,489	[INFO]	177	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:18:49,490	[DEBUG]	
2020-12-17 15:18:49,490	[INFO]	178	SUCCESS	+4.0	
2020-12-17 15:18:49,490	[DEBUG]	
2020-12-17 15:18:49,491	[INFO]	179	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:18:49,491	[DEBUG]	
2020-12-17 15:18:50,399	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:18:50,400	[INFO]	181	SUCCESS	+4.0	
2020-12-17 15:18:50,400	[DEBUG]	
2020-12-17 15:18:50,401	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:18:50,402	[INFO]	183	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:18:50,402	[DEBUG]	
2020-12-17 15:18:50,403	[INFO]	184	SUCCESS	+4.0	
2020-12-17 15:18:50,403	[DEBUG]	
2020-12-17 15:18:51,174	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:18:51,177	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:18:51,179	[INFO]	187	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:18:54,411	[INFO]	188	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:18:55,185	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:18:55,905	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:18:56,825	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:18:56,828	[INFO]	192	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:00,005	[INFO]	193	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:19:03,156	[INFO]	194	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:06,405	[INFO]	195	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:19:06,405	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:19:06,406	[INFO]	196	SUCCESS	+4.0	
2020-12-17 15:19:06,406	[DEBUG]	
2020-12-17 15:19:06,407	[INFO]	197	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:07,151	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:08,088	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:19:08,873	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:08,874	[INFO]	201	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:09,768	[INFO]	202	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:19:10,678	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:19:10,680	[INFO]	204	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:19:13,895	[INFO]	205	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:19:13,896	[INFO]	206	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:19:14,790	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:19:14,791	[INFO]	208	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:19:14,792	[DEBUG]	
2020-12-17 15:19:14,793	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:19:14,794	[INFO]	210	SUCCESS	+4.0	
2020-12-17 15:19:14,794	[DEBUG]	
2020-12-17 15:19:14,795	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:19:15,551	[INFO]	212	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:15,555	[INFO]	213	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:19:15,557	[INFO]	214	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:19:15,559	[INFO]	215	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:19:15,560	[DEBUG]	
2020-12-17 15:19:15,563	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:15,565	[INFO]	217	SUCCESS	+4.0	
2020-12-17 15:19:15,566	[DEBUG]	
2020-12-17 15:19:15,568	[INFO]	218	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:15,570	[DEBUG]	
2020-12-17 15:19:15,571	[INFO]	219	SUCCESS	+4.0	
2020-12-17 15:19:15,572	[DEBUG]	
2020-12-17 15:19:15,574	[INFO]	220	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:19:15,575	[DEBUG]	
2020-12-17 15:19:15,577	[INFO]	221	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:19:15,579	[INFO]	222	SUCCESS	+4.0	
2020-12-17 15:19:15,580	[DEBUG]	
2020-12-17 15:19:15,581	[INFO]	223	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:19:15,582	[DEBUG]	
2020-12-17 15:19:15,583	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:15,587	[INFO]	225	SUCCESS	+4.0	
2020-12-17 15:19:15,587	[DEBUG]	
2020-12-17 15:19:15,588	[INFO]	226	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:19:15,590	[INFO]	227	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:19:15,591	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:19:15,592	[INFO]	229	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:19:15,593	[INFO]	230	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:18,898	[INFO]	231	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:19:18,900	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:19,838	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:20,575	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:21,339	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:19:21,340	[INFO]	236	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:19:21,341	[INFO]	237	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:19:21,341	[DEBUG]	
2020-12-17 15:19:21,342	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:19:21,343	[INFO]	239	SUCCESS	+4.0	
2020-12-17 15:19:21,343	[DEBUG]	
2020-12-17 15:19:22,262	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:19:25,560	[INFO]	241	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:19:25,561	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:19:28,832	[INFO]	242	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:19:28,833	[INFO]	243	SUCCESS	+4.0	
2020-12-17 15:19:28,833	[DEBUG]	
2020-12-17 15:19:28,834	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:19:28,835	[INFO]	245	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:19:28,835	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:29,589	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:19:30,525	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:19:31,325	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:31,326	[INFO]	250	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:19:31,327	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:31,328	[INFO]	252	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:31,329	[INFO]	253	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:32,093	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:19:35,199	[INFO]	255	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:19:36,100	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:19:36,102	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:36,102	[INFO]	258	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:36,103	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:36,104	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:19:36,104	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:36,105	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:19:36,106	[INFO]	263	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:19:36,106	[INFO]	264	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:19:36,107	[DEBUG]	
2020-12-17 15:19:36,107	[INFO]	265	SUCCESS	+4.0	
2020-12-17 15:19:36,107	[DEBUG]	
2020-12-17 15:19:39,327	[INFO]	266	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:19:40,096	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:19:40,097	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:41,108	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:19:42,043	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:19:42,045	[INFO]	271	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:45,351	[INFO]	272	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:19:46,108	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:19:47,018	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:19:50,423	[INFO]	275	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:19:53,616	[INFO]	276	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:19:53,617	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:19:53,618	[INFO]	277	SUCCESS	+4.0	
2020-12-17 15:19:53,618	[DEBUG]	
2020-12-17 15:19:54,501	[INFO]	278	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:19:55,271	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:19:58,545	[INFO]	280	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:19:59,461	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:19:59,463	[INFO]	282	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:20:12,499	[INFO]	283	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:20:12,500	[INFO]	284	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:20:12,501	[INFO]	285	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:20:12,502	[INFO]	286	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:20:12,502	[DEBUG]	
2020-12-17 15:20:15,519	[INFO]	287	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:20:15,520	[INFO]	288	SUCCESS	+4.0	
2020-12-17 15:20:15,520	[DEBUG]	
2020-12-17 15:20:18,808	[INFO]	289	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:20:19,750	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:20:19,753	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:20:20,498	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:20:23,799	[INFO]	293	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:20:23,800	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:20:24,822	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:20:25,588	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:20:26,494	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:20:26,496	[INFO]	297	SUCCESS	+4.0	
2020-12-17 15:20:26,497	[DEBUG]	
2020-12-17 15:20:26,498	[INFO]	298	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:20:26,499	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:20:27,428	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:20:27,429	[INFO]	300	SUCCESS	+4.0	
2020-12-17 15:20:27,429	[DEBUG]	
2020-12-17 15:20:30,777	[INFO]	301	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:20:30,777	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:20:33,929	[INFO]	302	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:20:33,931	[INFO]	303	SUCCESS	+4.0	
2020-12-17 15:20:33,932	[DEBUG]	
2020-12-17 15:20:33,933	[INFO]	304	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:20:34,864	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:20:35,774	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:20:36,866	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:20:37,914	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:20:37,918	[INFO]	309	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:20:37,921	[INFO]	310	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:20:37,923	[INFO]	311	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:20:41,712	[INFO]	312	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:20:43,125	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:20:44,386	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:20:44,388	[INFO]	315	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:20:44,389	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:20:45,938	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:20:45,940	[INFO]	318	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:20:45,940	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:20:45,941	[INFO]	319	SUCCESS	+4.0	
2020-12-17 15:20:45,941	[DEBUG]	
2020-12-17 15:20:51,283	[INFO]	320	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:20:51,284	[INFO]	321	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:20:51,285	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:20:52,286	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:20:52,287	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:20:52,288	[INFO]	325	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:20:57,854	[INFO]	326	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:20:57,855	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:20:57,856	[INFO]	327	SUCCESS	+4.0	
2020-12-17 15:20:57,857	[DEBUG]	
2020-12-17 15:20:58,786	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:21:00,009	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:21:00,971	[INFO]	330	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:21:04,160	[INFO]	331	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:21:07,504	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:21:07,505	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:21:07,505	[INFO]	333	SUCCESS	+4.0	
2020-12-17 15:21:07,506	[DEBUG]	
2020-12-17 15:21:07,506	[INFO]	334	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:21:08,427	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:21:08,430	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:21:11,775	[INFO]	337	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:21:14,912	[INFO]	338	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:21:14,913	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:21:15,947	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:21:19,463	[INFO]	341	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:21:19,464	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:21:22,886	[INFO]	342	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:21:22,887	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,25 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 16,28 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:21:22,888	[INFO]	343	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:21:22,888	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:21:23,596	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:21:23,597	[INFO]	345	SUCCESS	+4.0	
2020-12-17 15:21:23,598	[DEBUG]	
2020-12-17 15:21:24,346	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:21:25,111	[INFO]	347	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:21:25,114	[INFO]	348	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:21:25,116	[INFO]	349	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:21:26,039	[INFO]	350	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:21:26,797	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:21:27,555	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:21:28,276	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:21:31,613	[INFO]	354	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:21:31,614	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:21:31,616	[INFO]	355	SUCCESS	+4.0	
2020-12-17 15:21:31,616	[DEBUG]	
2020-12-17 15:21:31,618	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:21:34,811	[INFO]	357	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:21:34,813	[INFO]	358	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:21:34,813	[INFO]	359	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:21:34,814	[INFO]	360	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:21:38,003	[INFO]	361	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:21:38,004	[INFO]	362	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:21:38,005	[DEBUG]	
2020-12-17 15:21:38,006	[INFO]	363	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:21:38,006	[INFO]	364	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:21:38,007	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:21:38,008	[INFO]	365	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:21:38,008	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:21:38,008	[INFO]	366	SUCCESS	+4.0	
2020-12-17 15:21:38,009	[DEBUG]	
2020-12-17 15:21:38,901	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:21:39,899	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:21:40,697	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:21:41,572	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:21:42,318	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:21:42,320	[INFO]	372	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:21:42,321	[INFO]	373	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:21:42,322	[INFO]	374	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:21:43,083	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:21:44,007	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:21:44,009	[INFO]	377	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:21:44,010	[INFO]	378	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:21:44,011	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:21:44,951	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:21:44,952	[INFO]	381	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:21:45,893	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:21:45,894	[INFO]	383	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:21:45,895	[INFO]	384	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:21:45,896	[INFO]	385	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:21:49,027	[INFO]	386	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:21:49,902	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:21:49,903	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:21:49,904	[INFO]	389	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:21:50,851	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:21:50,853	[INFO]	391	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:21:55,178	[INFO]	392	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:21:56,025	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:21:59,282	[INFO]	394	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:21:59,282	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:21:59,283	[INFO]	395	SUCCESS	+4.0	
2020-12-17 15:21:59,283	[DEBUG]	
2020-12-17 15:22:02,620	[INFO]	396	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:22:02,621	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:22:05,928	[INFO]	397	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:22:05,929	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:22:05,930	[INFO]	398	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:22:05,930	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:22:05,931	[INFO]	399	SUCCESS	+4.0	
2020-12-17 15:22:05,931	[DEBUG]	
2020-12-17 15:22:06,882	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:22:07,791	[INFO]	401	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:22:10,976	[INFO]	402	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:22:11,942	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:22:11,943	[INFO]	404	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:12,698	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:22:12,700	[INFO]	406	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:22:12,701	[DEBUG]	
2020-12-17 15:22:12,702	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:12,703	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:22:12,705	[INFO]	409	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:12,705	[DEBUG]	
2020-12-17 15:22:13,620	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:22:13,621	[INFO]	411	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:22:13,621	[DEBUG]	
2020-12-17 15:22:13,622	[INFO]	412	SUCCESS	+4.0	
2020-12-17 15:22:13,622	[DEBUG]	
2020-12-17 15:22:16,879	[INFO]	413	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:22:16,881	[INFO]	414	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:22:16,881	[DEBUG]	
2020-12-17 15:22:16,882	[INFO]	415	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:22:16,882	[INFO]	416	SUCCESS	+4.0	
2020-12-17 15:22:16,882	[DEBUG]	
2020-12-17 15:22:17,786	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:22:17,788	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:22:17,789	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:22:17,791	[INFO]	420	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:22:18,724	[INFO]	421	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:22:19,662	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:22:19,664	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:20,614	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:22:21,526	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:22:22,441	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:22:23,219	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:22:23,222	[INFO]	428	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:23,224	[INFO]	429	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:22:23,226	[INFO]	430	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:22:24,150	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:22:24,921	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:22:24,923	[INFO]	433	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:22:25,814	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:22:26,722	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:22:26,724	[INFO]	436	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:22:26,725	[INFO]	437	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:22:27,653	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:22:28,595	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:22:28,597	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:22:28,599	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:22:28,601	[INFO]	442	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:22:28,602	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:22:29,375	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:29,377	[INFO]	444	SUCCESS	+4.0	
2020-12-17 15:22:29,378	[DEBUG]	
2020-12-17 15:22:29,379	[INFO]	445	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:22:29,381	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:22:30,113	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:22:30,116	[INFO]	448	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:22:30,118	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:22:30,119	[INFO]	449	SUCCESS	+4.0	
2020-12-17 15:22:30,119	[DEBUG]	
2020-12-17 15:22:33,456	[INFO]	450	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:22:34,178	[INFO]	451	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:22:34,179	[INFO]	452	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:22:34,179	[DEBUG]	
2020-12-17 15:22:34,179	[INFO]	453	SUCCESS	+4.0	
2020-12-17 15:22:34,180	[DEBUG]	
2020-12-17 15:22:34,921	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:34,922	[INFO]	455	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:22:34,923	[DEBUG]	
2020-12-17 15:22:38,152	[INFO]	456	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:22:38,153	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:22:38,904	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:22:42,210	[INFO]	458	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:22:42,211	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:22:45,488	[INFO]	459	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:22:45,489	[INFO]	460	SUCCESS	+4.0	
2020-12-17 15:22:45,489	[DEBUG]	
2020-12-17 15:22:45,489	[INFO]	461	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:22:48,571	[INFO]	462	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:22:51,776	[INFO]	463	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:22:51,777	[INFO]	464	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:22:51,778	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:22:52,712	[INFO]	465	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:22:56,875	[INFO]	466	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:22:56,876	[INFO]	467	SUCCESS	+4.0	
2020-12-17 15:22:56,877	[DEBUG]	
2020-12-17 15:22:56,878	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:22:56,878	[INFO]	469	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:23:09,997	[INFO]	470	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:23:13,279	[INFO]	471	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:23:16,584	[INFO]	472	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:23:16,585	[INFO]	473	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:23:17,505	[INFO]	474	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:23:20,617	[INFO]	475	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:23:20,618	[INFO]	476	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:23:23,952	[INFO]	477	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:23:23,953	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:23:24,874	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:23:24,877	[INFO]	479	SUCCESS	+4.0	
2020-12-17 15:23:24,877	[DEBUG]	
2020-12-17 15:23:29,171	[INFO]	480	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:23:29,874	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:23:30,773	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:23:31,540	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:23:32,281	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:23:32,282	[INFO]	485	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:23:33,201	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:23:33,204	[INFO]	487	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:23:34,158	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:23:34,159	[INFO]	489	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:23:34,160	[INFO]	490	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:23:35,110	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:23:36,016	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:23:36,017	[INFO]	493	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:23:36,018	[INFO]	494	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:23:36,018	[DEBUG]	
2020-12-17 15:23:36,786	[INFO]	495	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:23:36,787	[INFO]	496	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:23:36,788	[INFO]	497	SUCCESS	+4.0	
2020-12-17 15:23:36,788	[DEBUG]	
2020-12-17 15:23:36,788	[INFO]	498	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:23:36,789	[INFO]	499	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:23:36,789	[DEBUG]	
2020-12-17 15:23:36,790	[INFO]	500	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:23:36,790	[INFO]	==== END ====
2020-12-17 15:23:36,790	[INFO]	Reason: step budget
2020-12-17 15:23:36,791	[INFO]	
2020-12-17 15:23:36,791	[INFO]	========== EPOCH 5 ==========
2020-12-17 15:23:36,791	[INFO]	==== WARMUP ====
2020-12-17 15:23:40,081	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:23:40,081	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:23:43,330	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:23:43,330	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:23:46,648	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:23:46,648	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:23:49,993	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 15:23:49,994	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:23:49,994	[INFO]	==== START ====
2020-12-17 15:23:53,065	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:23:56,373	[INFO]	2	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:23:59,545	[INFO]	3	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:24:00,434	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:24:01,242	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:24:02,013	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:24:02,946	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:24:03,857	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:24:04,616	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:05,504	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:24:06,279	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:06,280	[INFO]	12	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:24:06,281	[DEBUG]	
2020-12-17 15:24:07,022	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:24:07,023	[INFO]	14	SUCCESS	+4.0	
2020-12-17 15:24:07,023	[DEBUG]	
2020-12-17 15:24:07,024	[INFO]	15	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:24:07,024	[INFO]	16	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:24:07,025	[DEBUG]	
2020-12-17 15:24:10,150	[INFO]	17	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:24:10,151	[INFO]	18	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:24:10,152	[DEBUG]	
2020-12-17 15:24:10,152	[INFO]	19	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:24:10,152	[DEBUG]	
2020-12-17 15:24:13,467	[INFO]	20	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:24:14,212	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:24:14,969	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:24:14,971	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:24:15,856	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:24:20,122	[INFO]	25	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:20,123	[INFO]	26	SUCCESS	+4.0	
2020-12-17 15:24:20,123	[DEBUG]	
2020-12-17 15:24:23,420	[INFO]	27	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:24:26,745	[INFO]	28	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:24:26,746	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:24:27,669	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:24:27,674	[INFO]	30	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:24:27,675	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:24:27,678	[INFO]	31	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:24:27,678	[DEBUG]	
2020-12-17 15:24:27,680	[INFO]	32	SUCCESS	+4.0	
2020-12-17 15:24:27,681	[DEBUG]	
2020-12-17 15:24:28,612	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:24:29,378	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:30,119	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:31,035	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:24:31,990	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:24:32,753	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:24:32,755	[INFO]	39	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:36,100	[INFO]	40	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:24:36,101	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:24:36,102	[INFO]	41	SUCCESS	+4.0	
2020-12-17 15:24:36,102	[DEBUG]	
2020-12-17 15:24:36,102	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:24:39,308	[INFO]	43	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:24:43,780	[INFO]	44	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:24:43,781	[INFO]	45	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:24:43,783	[INFO]	46	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:24:45,553	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:24:45,555	[INFO]	48	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:24:45,557	[INFO]	49	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:24:50,911	[INFO]	50	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:24:50,912	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:24:52,257	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:24:52,264	[INFO]	52	SUCCESS	+4.0	
2020-12-17 15:24:52,265	[DEBUG]	
2020-12-17 15:24:52,266	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:24:52,268	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:24:57,394	[INFO]	55	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:24:57,396	[INFO]	56	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:24:57,396	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:24:57,397	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:24:57,398	[INFO]	59	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:57,399	[INFO]	60	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:24:57,400	[INFO]	61	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:24:57,401	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:24:57,402	[INFO]	62	SUCCESS	+4.0	
2020-12-17 15:24:57,402	[DEBUG]	
2020-12-17 15:24:57,404	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:24:57,405	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:25:03,318	[INFO]	64	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:25:03,320	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
--- 14,29 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:25:03,322	[INFO]	65	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:25:03,324	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
--- 14,29 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:25:04,610	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:05,756	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:25:10,897	[INFO]	68	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:25:10,901	[INFO]	69	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:25:10,902	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
--- 14,29 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:25:10,903	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:25:10,904	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:25:10,905	[INFO]	71	SUCCESS	+4.0	
2020-12-17 15:25:10,906	[DEBUG]	
2020-12-17 15:25:12,801	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:25:12,804	[INFO]	73	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:12,805	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:14,014	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:25:14,016	[INFO]	76	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:25:14,016	[DEBUG]	
2020-12-17 15:25:14,018	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:25:14,019	[INFO]	78	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:25:14,020	[INFO]	79	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:25:14,021	[INFO]	80	SUCCESS	+4.0	
2020-12-17 15:25:14,021	[DEBUG]	
2020-12-17 15:25:14,022	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:25:15,044	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:25:15,045	[INFO]	83	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:25:15,046	[DEBUG]	
2020-12-17 15:25:18,565	[INFO]	84	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:19,665	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:25:19,667	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:25:23,873	[INFO]	87	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:25:23,874	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:25:23,875	[INFO]	88	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:25:23,875	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:25:23,876	[INFO]	89	SUCCESS	+4.0	
2020-12-17 15:25:23,876	[DEBUG]	
2020-12-17 15:25:25,012	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:25:26,193	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:25:26,194	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:25:27,226	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:25:30,692	[INFO]	94	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:25:34,073	[INFO]	95	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:25:34,074	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:25:34,075	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:25:34,076	[INFO]	98	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:34,076	[DEBUG]	
2020-12-17 15:25:34,077	[INFO]	99	SUCCESS	+4.0	
2020-12-17 15:25:34,077	[DEBUG]	
2020-12-17 15:25:37,441	[INFO]	100	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:25:37,443	[INFO]	101	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:37,444	[INFO]	102	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:25:38,204	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:25:38,205	[INFO]	104	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:25:38,206	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:25:41,777	[INFO]	106	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:25:41,778	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:25:45,179	[INFO]	107	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:45,180	[INFO]	108	SUCCESS	+4.0	
2020-12-17 15:25:45,180	[DEBUG]	
2020-12-17 15:25:48,388	[INFO]	109	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:25:48,389	[INFO]	110	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:25:48,390	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:25:49,578	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:25:53,421	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:25:53,422	[INFO]	113	SUCCESS	+4.0	
2020-12-17 15:25:53,422	[DEBUG]	
2020-12-17 15:25:54,388	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:25:54,389	[INFO]	115	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:25:54,390	[INFO]	116	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:25:54,390	[DEBUG]	
2020-12-17 15:25:54,390	[INFO]	117	SUCCESS	+4.0	
2020-12-17 15:25:54,391	[DEBUG]	
2020-12-17 15:25:55,339	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:25:55,340	[INFO]	119	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:26:08,745	[INFO]	120	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:26:09,620	[INFO]	121	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:26:09,622	[INFO]	122	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:26:10,578	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:26:10,582	[INFO]	124	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:26:10,584	[INFO]	125	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:26:10,587	[INFO]	126	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:26:11,371	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:26:12,289	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:26:16,008	[INFO]	129	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:26:17,429	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:26:23,405	[INFO]	131	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:26:24,790	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:26:24,792	[INFO]	133	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:26:24,792	[DEBUG]	
2020-12-17 15:26:24,793	[INFO]	134	SUCCESS	+4.0	
2020-12-17 15:26:24,793	[DEBUG]	
2020-12-17 15:26:24,794	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:26:25,981	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:26:26,936	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:26:28,020	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:26:29,382	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:26:29,383	[INFO]	140	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:26:29,384	[INFO]	141	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:26:29,385	[DEBUG]	
2020-12-17 15:26:29,385	[INFO]	142	SUCCESS	+4.0	
2020-12-17 15:26:29,386	[DEBUG]	
2020-12-17 15:26:29,386	[INFO]	143	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:26:29,387	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:26:29,388	[INFO]	145	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:26:29,388	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:26:33,017	[INFO]	146	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:26:33,018	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,25 ****
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 18,28 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:26:33,922	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:26:37,241	[INFO]	148	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:26:37,242	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:26:37,242	[INFO]	149	SUCCESS	+4.0	
2020-12-17 15:26:37,243	[DEBUG]	
2020-12-17 15:26:38,180	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:26:38,182	[INFO]	151	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:26:39,118	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:26:42,285	[INFO]	153	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:26:43,053	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:26:43,054	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:26:43,055	[INFO]	156	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:26:43,055	[DEBUG]	
2020-12-17 15:26:43,056	[INFO]	157	SUCCESS	+4.0	
2020-12-17 15:26:43,057	[DEBUG]	
2020-12-17 15:26:46,165	[INFO]	158	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:26:46,166	[INFO]	159	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:26:46,166	[DEBUG]	
2020-12-17 15:26:46,167	[INFO]	160	SUCCESS	+4.0	
2020-12-17 15:26:46,167	[DEBUG]	
2020-12-17 15:26:47,124	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:26:47,904	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:26:48,812	[INFO]	163	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:26:52,437	[INFO]	164	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:26:52,438	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:26:53,198	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:26:53,200	[INFO]	166	SUCCESS	+4.0	
2020-12-17 15:26:53,201	[DEBUG]	
2020-12-17 15:26:53,203	[INFO]	167	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:26:53,954	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:26:58,469	[INFO]	169	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:26:58,470	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:26:59,340	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:26:59,341	[INFO]	171	SUCCESS	+4.0	
2020-12-17 15:26:59,342	[DEBUG]	
2020-12-17 15:27:02,666	[INFO]	172	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:27:03,430	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:27:03,431	[INFO]	174	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:27:04,359	[INFO]	175	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:27:04,361	[INFO]	176	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:27:05,319	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:27:05,321	[INFO]	178	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:27:05,322	[INFO]	179	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:27:06,274	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:27:06,278	[INFO]	181	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:27:06,279	[DEBUG]	
2020-12-17 15:27:06,281	[INFO]	182	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:27:06,282	[DEBUG]	
2020-12-17 15:27:09,640	[INFO]	183	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:27:09,641	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:27:09,644	[INFO]	184	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:27:09,645	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:27:09,646	[INFO]	185	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:27:09,646	[DEBUG]	
2020-12-17 15:27:09,648	[INFO]	186	SUCCESS	+4.0	
2020-12-17 15:27:09,648	[DEBUG]	
2020-12-17 15:27:10,597	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:27:13,806	[INFO]	188	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:27:13,809	[INFO]	189	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:27:13,810	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:27:13,811	[INFO]	190	SUCCESS	+4.0	
2020-12-17 15:27:13,811	[DEBUG]	
2020-12-17 15:27:13,813	[INFO]	191	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:27:14,739	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:27:17,958	[INFO]	193	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:27:17,960	[INFO]	194	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:27:18,898	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:27:19,837	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:27:20,601	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:27:23,925	[INFO]	198	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:27:24,852	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:27:25,798	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:27:25,801	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:27:25,802	[INFO]	202	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:27:25,804	[INFO]	203	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:27:25,804	[DEBUG]	
2020-12-17 15:27:25,806	[INFO]	204	SUCCESS	+4.0	
2020-12-17 15:27:25,806	[DEBUG]	
2020-12-17 15:27:26,730	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:27:26,732	[INFO]	206	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:27:26,732	[DEBUG]	
2020-12-17 15:27:27,677	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:27:27,678	[INFO]	208	SUCCESS	+4.0	
2020-12-17 15:27:27,679	[DEBUG]	
2020-12-17 15:27:28,625	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:27:29,396	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:27:32,629	[INFO]	211	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:27:32,631	[INFO]	212	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:27:33,554	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:27:34,293	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:27:35,197	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:27:36,163	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:27:39,346	[INFO]	217	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:27:43,747	[INFO]	218	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:27:44,468	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:27:45,247	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:27:45,249	[INFO]	221	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:27:45,249	[DEBUG]	
2020-12-17 15:27:45,250	[INFO]	222	SUCCESS	+4.0	
2020-12-17 15:27:45,250	[DEBUG]	
2020-12-17 15:27:46,037	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:27:47,015	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:27:47,019	[INFO]	225	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:27:48,035	[INFO]	226	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:27:49,008	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:27:49,010	[INFO]	228	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:27:49,011	[INFO]	229	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:27:49,996	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:27:49,998	[INFO]	231	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:27:53,505	[INFO]	232	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:27:53,506	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:06,787	[INFO]	234	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:07,495	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:11,800	[INFO]	236	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:28:12,723	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:28:12,724	[INFO]	238	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:28:12,725	[INFO]	239	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:13,722	[INFO]	240	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:28:13,724	[INFO]	241	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:14,691	[INFO]	242	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:15,704	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:28:15,705	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:28:15,706	[INFO]	245	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:15,707	[DEBUG]	
2020-12-17 15:28:15,708	[INFO]	246	SUCCESS	+4.0	
2020-12-17 15:28:15,708	[DEBUG]	
2020-12-17 15:28:15,709	[INFO]	247	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:28:15,710	[INFO]	248	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:28:15,710	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:28:15,711	[INFO]	249	SUCCESS	+4.0	
2020-12-17 15:28:15,711	[DEBUG]	
2020-12-17 15:28:15,712	[INFO]	250	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:28:15,712	[DEBUG]	
2020-12-17 15:28:16,519	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:28:17,500	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:28:17,501	[INFO]	253	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:28:17,502	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:28:17,503	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:17,504	[INFO]	256	SUCCESS	+4.0	
2020-12-17 15:28:17,504	[DEBUG]	
2020-12-17 15:28:18,285	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:18,286	[INFO]	258	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:18,287	[DEBUG]	
2020-12-17 15:28:18,287	[INFO]	259	SUCCESS	+4.0	
2020-12-17 15:28:18,288	[DEBUG]	
2020-12-17 15:28:18,288	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:18,289	[INFO]	261	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:28:19,279	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:20,279	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:20,282	[INFO]	264	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:28:21,061	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:28:21,063	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:21,063	[INFO]	267	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:28:21,860	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:28:21,862	[INFO]	269	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:28:21,862	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:28:21,863	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:25,269	[INFO]	272	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:28:25,270	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:28:28,795	[INFO]	273	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:28:28,797	[INFO]	274	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:28:28,797	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:28:28,798	[INFO]	275	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:28:28,800	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:28:29,771	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:28:30,570	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:28:31,617	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:31,619	[INFO]	279	SUCCESS	+4.0	
2020-12-17 15:28:31,619	[DEBUG]	
2020-12-17 15:28:32,426	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:35,922	[INFO]	281	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:28:35,923	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:28:35,924	[INFO]	282	SUCCESS	+4.0	
2020-12-17 15:28:35,924	[DEBUG]	
2020-12-17 15:28:36,678	[INFO]	283	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:28:36,679	[INFO]	284	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:28:36,679	[INFO]	285	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:37,636	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:28:38,557	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:28:38,560	[INFO]	288	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:28:39,334	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:39,336	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:40,148	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:28:43,631	[INFO]	292	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:28:43,632	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:28:44,580	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:28:44,581	[INFO]	294	SUCCESS	+4.0	
2020-12-17 15:28:44,581	[DEBUG]	
2020-12-17 15:28:45,585	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:28:45,587	[INFO]	296	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:45,588	[INFO]	297	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:28:48,946	[INFO]	298	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:28:49,910	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:28:49,912	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:49,913	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:28:50,884	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:28:51,682	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:52,417	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:28:52,418	[INFO]	305	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:52,418	[INFO]	306	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:28:52,419	[DEBUG]	
2020-12-17 15:28:52,420	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:28:52,421	[INFO]	308	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:53,190	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:28:53,191	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:28:53,192	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:28:53,947	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:28:53,948	[INFO]	313	SUCCESS	+4.0	
2020-12-17 15:28:53,948	[DEBUG]	
2020-12-17 15:28:53,949	[INFO]	314	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:28:53,949	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:28:53,950	[INFO]	315	SUCCESS	+4.0	
2020-12-17 15:28:53,950	[DEBUG]	
2020-12-17 15:28:53,950	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:28:53,951	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:28:54,705	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:28:54,707	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:28:54,707	[INFO]	320	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:28:55,623	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:28:58,917	[INFO]	322	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:28:59,852	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:28:59,854	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:29:00,750	[INFO]	325	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:00,751	[INFO]	326	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:00,753	[INFO]	327	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:29:00,753	[DEBUG]	
2020-12-17 15:29:01,723	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:02,478	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:29:02,479	[INFO]	330	SUCCESS	+4.0	
2020-12-17 15:29:02,480	[DEBUG]	
2020-12-17 15:29:02,481	[INFO]	331	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:29:02,483	[INFO]	332	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:29:02,484	[INFO]	333	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:29:02,485	[INFO]	334	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:29:03,284	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:29:06,502	[INFO]	336	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:29:07,251	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:29:08,031	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:29:08,788	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:11,840	[INFO]	340	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:29:11,841	[INFO]	341	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:29:11,842	[INFO]	342	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:29:11,842	[DEBUG]	
2020-12-17 15:29:11,843	[INFO]	343	SUCCESS	+4.0	
2020-12-17 15:29:11,843	[DEBUG]	
2020-12-17 15:29:12,604	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:29:12,606	[INFO]	345	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:29:13,343	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:29:13,344	[INFO]	347	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:29:14,294	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:14,296	[INFO]	349	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:29:14,297	[DEBUG]	
2020-12-17 15:29:14,298	[INFO]	350	SUCCESS	+4.0	
2020-12-17 15:29:14,298	[DEBUG]	
2020-12-17 15:29:14,300	[INFO]	351	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:29:17,469	[INFO]	352	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:29:18,368	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:29:19,123	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:29:22,743	[INFO]	355	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:29:22,744	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:29:22,745	[INFO]	356	SUCCESS	+4.0	
2020-12-17 15:29:22,745	[DEBUG]	
2020-12-17 15:29:23,525	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:29:26,635	[INFO]	358	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:29:27,566	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:29:27,567	[INFO]	360	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:29:27,568	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:30,893	[INFO]	362	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:29:30,894	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:29:30,895	[INFO]	363	SUCCESS	+4.0	
2020-12-17 15:29:30,895	[DEBUG]	
2020-12-17 15:29:33,971	[INFO]	364	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:29:34,750	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:29:35,697	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:29:36,634	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:29:36,635	[INFO]	368	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:29:36,635	[DEBUG]	
2020-12-17 15:29:39,958	[INFO]	369	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:29:39,959	[INFO]	370	SUCCESS	+4.0	
2020-12-17 15:29:39,960	[DEBUG]	
2020-12-17 15:29:43,105	[INFO]	371	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:29:43,858	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:29:44,597	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:29:47,906	[INFO]	374	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:29:47,908	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:29:47,909	[INFO]	376	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:29:51,124	[INFO]	377	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:29:51,126	[INFO]	378	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:29:51,127	[INFO]	379	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:29:51,128	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:29:51,128	[INFO]	380	SUCCESS	+4.0	
2020-12-17 15:29:51,129	[DEBUG]	
2020-12-17 15:29:51,895	[INFO]	381	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:29:52,805	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:57,326	[INFO]	383	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:29:57,327	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:29:57,328	[INFO]	384	SUCCESS	+4.0	
2020-12-17 15:29:57,328	[DEBUG]	
2020-12-17 15:29:57,329	[INFO]	385	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:29:57,329	[DEBUG]	
2020-12-17 15:29:57,330	[INFO]	386	SUCCESS	+4.0	
2020-12-17 15:29:57,330	[DEBUG]	
2020-12-17 15:29:57,331	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:29:58,208	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:29:59,139	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:29:59,141	[INFO]	390	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:29:59,141	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:29:59,142	[INFO]	391	SUCCESS	+4.0	
2020-12-17 15:29:59,143	[DEBUG]	
2020-12-17 15:29:59,891	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:29:59,893	[INFO]	393	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:29:59,893	[DEBUG]	
2020-12-17 15:29:59,893	[INFO]	394	SUCCESS	+4.0	
2020-12-17 15:29:59,894	[DEBUG]	
2020-12-17 15:30:03,273	[INFO]	395	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:30:04,171	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:30:05,146	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:30:06,095	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:30:07,045	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:30:10,208	[INFO]	400	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:30:10,212	[INFO]	401	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:30:10,213	[DEBUG]	
2020-12-17 15:30:11,009	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:30:11,012	[INFO]	403	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:30:11,014	[DEBUG]	
2020-12-17 15:30:11,926	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:30:11,927	[INFO]	405	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:30:11,928	[DEBUG]	
2020-12-17 15:30:11,928	[INFO]	406	SUCCESS	+4.0	
2020-12-17 15:30:11,928	[DEBUG]	
2020-12-17 15:30:12,834	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:30:13,611	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:30:13,613	[INFO]	409	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:30:14,556	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:30:15,487	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:30:18,862	[INFO]	412	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:30:19,776	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:30:19,779	[INFO]	414	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:30:22,871	[INFO]	415	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:30:23,806	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:30:23,809	[INFO]	417	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:30:27,347	[INFO]	418	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:30:27,348	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:30:28,107	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:30:28,108	[INFO]	420	SUCCESS	+4.0	
2020-12-17 15:30:28,108	[DEBUG]	
2020-12-17 15:30:31,337	[INFO]	421	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:30:34,505	[INFO]	422	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:30:34,506	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:30:38,520	[INFO]	424	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:30:38,521	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:30:38,521	[INFO]	425	SUCCESS	+4.0	
2020-12-17 15:30:38,522	[DEBUG]	
2020-12-17 15:30:39,711	[INFO]	426	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:30:43,514	[INFO]	427	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:30:44,420	[INFO]	428	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:30:45,200	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:30:46,124	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:30:46,125	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:30:47,122	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:30:47,124	[INFO]	433	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:30:47,125	[INFO]	434	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:30:47,126	[INFO]	435	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:30:48,088	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:30:48,090	[INFO]	437	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:30:48,855	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:30:48,856	[INFO]	439	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:30:48,857	[INFO]	440	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:30:48,857	[DEBUG]	
2020-12-17 15:30:48,858	[INFO]	441	SUCCESS	+4.0	
2020-12-17 15:30:48,858	[DEBUG]	
2020-12-17 15:30:48,859	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:30:49,819	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:30:49,821	[INFO]	444	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:30:49,822	[INFO]	445	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:30:50,592	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:30:51,580	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:30:51,581	[INFO]	448	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:30:55,017	[INFO]	449	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:30:55,827	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:30:55,829	[INFO]	451	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:30:55,829	[DEBUG]	
2020-12-17 15:30:55,829	[INFO]	452	SUCCESS	+4.0	
2020-12-17 15:30:55,830	[DEBUG]	
2020-12-17 15:30:55,831	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:30:55,831	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:30:55,832	[INFO]	454	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:30:55,833	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:30:55,833	[INFO]	455	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:30:55,834	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:30:55,834	[INFO]	456	SUCCESS	+4.0	
2020-12-17 15:30:55,835	[DEBUG]	
2020-12-17 15:30:55,835	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:30:56,629	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:31:00,180	[INFO]	459	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:31:01,111	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:31:01,112	[INFO]	461	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:31:01,113	[DEBUG]	
2020-12-17 15:31:01,114	[INFO]	462	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:31:01,943	[INFO]	463	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:31:05,427	[INFO]	464	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:31:05,428	[INFO]	465	SUCCESS	+4.0	
2020-12-17 15:31:05,428	[DEBUG]	
2020-12-17 15:31:06,437	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:31:07,420	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:31:07,421	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:31:08,394	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:31:08,395	[INFO]	470	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:31:08,396	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:31:09,383	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:31:10,379	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:31:11,354	[INFO]	474	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:31:11,355	[INFO]	475	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:31:11,355	[DEBUG]	
2020-12-17 15:31:11,356	[INFO]	476	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:31:11,357	[INFO]	477	SUCCESS	+4.0	
2020-12-17 15:31:11,357	[DEBUG]	
2020-12-17 15:31:12,321	[INFO]	478	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:31:12,322	[INFO]	479	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:31:15,838	[INFO]	480	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:31:15,840	[INFO]	481	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:31:15,841	[INFO]	482	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:31:15,841	[INFO]	483	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:31:16,804	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:31:16,807	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:31:16,809	[INFO]	486	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:31:16,810	[INFO]	487	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:31:16,811	[INFO]	488	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:31:16,813	[INFO]	489	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:31:20,299	[INFO]	490	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:31:21,231	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:31:22,203	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:31:22,204	[INFO]	493	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:31:22,984	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:31:26,530	[INFO]	495	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:31:26,531	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:31:27,510	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:31:27,513	[INFO]	497	SUCCESS	+4.0	
2020-12-17 15:31:27,513	[DEBUG]	
2020-12-17 15:31:27,515	[INFO]	498	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:31:27,517	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:31:28,508	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:31:28,508	[INFO]	==== END ====
2020-12-17 15:31:28,508	[INFO]	Reason: step budget
2020-12-17 15:31:28,509	[INFO]	
2020-12-17 15:31:28,509	[INFO]	========== EPOCH 6 ==========
2020-12-17 15:31:28,510	[INFO]	==== WARMUP ====
2020-12-17 15:31:32,048	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:31:32,049	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:31:35,528	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:31:35,528	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:31:38,997	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:31:38,997	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:31:42,370	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 15:31:42,370	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:31:42,370	[INFO]	==== START ====
2020-12-17 15:31:45,521	[INFO]	1	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:31:46,287	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:31:47,045	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:31:47,795	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:31:48,592	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:31:49,630	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:31:50,659	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:31:51,659	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:31:51,660	[INFO]	9	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:31:51,661	[DEBUG]	
2020-12-17 15:31:51,662	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:31:51,663	[INFO]	11	SUCCESS	+4.0	
2020-12-17 15:31:51,663	[DEBUG]	
2020-12-17 15:31:51,664	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:31:52,663	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:31:52,664	[INFO]	14	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:31:52,665	[DEBUG]	
2020-12-17 15:31:52,665	[INFO]	15	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:31:52,666	[DEBUG]	
2020-12-17 15:31:53,663	[INFO]	16	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:31:59,229	[INFO]	17	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:32:03,286	[INFO]	18	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:32:07,298	[INFO]	19	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:08,622	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:32:10,861	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:32:10,868	[INFO]	22	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:10,869	[DEBUG]	
2020-12-17 15:32:17,943	[INFO]	23	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:32:19,745	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:32:19,747	[INFO]	25	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:32:19,747	[DEBUG]	
2020-12-17 15:32:19,749	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:32:19,750	[INFO]	27	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:19,750	[DEBUG]	
2020-12-17 15:32:19,752	[INFO]	28	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:32:19,753	[INFO]	29	SUCCESS	+4.0	
2020-12-17 15:32:19,753	[DEBUG]	
2020-12-17 15:32:21,194	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:32:21,196	[INFO]	31	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:32:21,197	[DEBUG]	
2020-12-17 15:32:26,348	[INFO]	32	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:32:27,290	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:32:28,311	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:32:28,315	[INFO]	35	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:32:28,316	[DEBUG]	
2020-12-17 15:32:28,317	[INFO]	36	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:32:28,317	[DEBUG]	
2020-12-17 15:32:28,318	[INFO]	37	SUCCESS	+4.0	
2020-12-17 15:32:28,319	[DEBUG]	
2020-12-17 15:32:41,818	[INFO]	38	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:42,722	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:32:43,680	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:32:44,468	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:45,420	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:46,353	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:32:47,327	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:32:48,274	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:32:49,241	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:32:49,242	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:32:49,243	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:32:50,275	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:32:51,298	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:32:51,300	[INFO]	51	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:32:51,301	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:52,539	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:32:53,681	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:32:53,682	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:32:53,684	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:32:53,685	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:32:54,888	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:32:54,889	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:32:55,882	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:32:55,884	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:32:55,885	[INFO]	62	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:32:55,885	[INFO]	63	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:32:57,398	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:32:57,401	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:32:59,632	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:33:05,363	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:33:05,365	[INFO]	68	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:33:05,367	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:33:06,808	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:33:06,809	[INFO]	71	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:33:06,810	[INFO]	72	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:33:10,587	[INFO]	73	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:33:11,532	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:33:12,498	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:33:12,500	[INFO]	76	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:33:13,428	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:33:16,700	[INFO]	78	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:33:19,918	[INFO]	79	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:33:20,919	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:33:20,921	[INFO]	81	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:33:20,922	[INFO]	82	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:33:20,924	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:33:20,926	[INFO]	84	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:33:20,927	[DEBUG]	
2020-12-17 15:33:22,269	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:33:23,625	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:33:23,627	[INFO]	87	SUCCESS	+4.0	
2020-12-17 15:33:23,627	[DEBUG]	
2020-12-17 15:33:23,628	[INFO]	88	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:33:23,628	[DEBUG]	
2020-12-17 15:33:23,629	[INFO]	89	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:33:24,747	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:33:26,409	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:33:27,718	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:33:27,720	[INFO]	93	SUCCESS	+4.0	
2020-12-17 15:33:27,721	[DEBUG]	
2020-12-17 15:33:29,134	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:33:29,137	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:33:33,632	[INFO]	96	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:33:37,030	[INFO]	97	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:33:38,013	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:33:41,397	[INFO]	99	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:33:41,399	[INFO]	100	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:33:41,399	[DEBUG]	
2020-12-17 15:33:41,400	[INFO]	101	SUCCESS	+4.0	
2020-12-17 15:33:41,400	[DEBUG]	
2020-12-17 15:33:41,402	[INFO]	102	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:33:42,449	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:33:46,377	[INFO]	104	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:33:47,162	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:33:47,163	[INFO]	106	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:33:48,155	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:33:48,157	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:33:48,157	[INFO]	109	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:33:49,117	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:33:49,119	[INFO]	111	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:33:52,604	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:33:52,605	[INFO]	113	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:33:53,519	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:33:54,433	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:33:54,435	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:33:55,456	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:33:55,457	[INFO]	118	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:33:55,457	[DEBUG]	
2020-12-17 15:33:55,458	[INFO]	119	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:33:55,459	[INFO]	120	SUCCESS	+4.0	
2020-12-17 15:33:55,460	[DEBUG]	
2020-12-17 15:33:56,398	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:33:56,400	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:33:56,402	[INFO]	123	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:33:56,402	[DEBUG]	
2020-12-17 15:33:56,404	[INFO]	124	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:33:56,406	[INFO]	125	SUCCESS	+4.0	
2020-12-17 15:33:56,406	[DEBUG]	
2020-12-17 15:33:57,326	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:33:57,327	[INFO]	127	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:33:58,085	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:33:58,834	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:33:59,738	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:33:59,742	[INFO]	131	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:34:03,152	[INFO]	132	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:34:03,153	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:34:03,154	[INFO]	133	SUCCESS	+4.0	
2020-12-17 15:34:03,154	[DEBUG]	
2020-12-17 15:34:03,930	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:34:04,837	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:34:08,339	[INFO]	136	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:34:09,139	[INFO]	137	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:34:09,943	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:34:09,944	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:34:09,945	[INFO]	140	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:34:09,946	[INFO]	141	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:34:09,947	[INFO]	142	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:34:09,947	[DEBUG]	
2020-12-17 15:34:13,533	[INFO]	143	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:34:14,671	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:34:14,673	[INFO]	145	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:34:14,675	[INFO]	146	SUCCESS	+4.0	
2020-12-17 15:34:14,675	[DEBUG]	
2020-12-17 15:34:14,677	[INFO]	147	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:34:15,659	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:34:16,866	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:34:16,868	[INFO]	150	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:34:20,541	[INFO]	151	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:34:20,543	[INFO]	152	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:34:21,933	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:34:21,935	[INFO]	154	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:34:21,935	[DEBUG]	
2020-12-17 15:34:21,936	[INFO]	155	SUCCESS	+4.0	
2020-12-17 15:34:21,937	[DEBUG]	
2020-12-17 15:34:21,939	[INFO]	156	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:34:21,940	[INFO]	157	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:34:21,941	[DEBUG]	
2020-12-17 15:34:21,942	[INFO]	158	SUCCESS	+4.0	
2020-12-17 15:34:21,944	[DEBUG]	
2020-12-17 15:34:23,113	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:34:23,114	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:34:23,115	[INFO]	161	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:34:23,116	[INFO]	162	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:34:23,116	[INFO]	163	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:34:24,122	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:34:27,635	[INFO]	165	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:34:28,687	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:34:28,690	[INFO]	167	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:34:28,691	[DEBUG]	
2020-12-17 15:34:28,693	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:34:28,694	[INFO]	169	SUCCESS	+4.0	
2020-12-17 15:34:28,694	[DEBUG]	
2020-12-17 15:34:28,696	[INFO]	170	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:34:28,697	[INFO]	171	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:34:28,698	[INFO]	172	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:34:29,840	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:34:29,841	[INFO]	174	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:34:30,821	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:34:30,822	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:34:34,540	[INFO]	177	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:34:34,541	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:34:38,247	[INFO]	179	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:34:38,248	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:34:39,275	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:34:39,277	[INFO]	181	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:34:39,277	[DEBUG]	
2020-12-17 15:34:40,273	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:34:40,276	[INFO]	183	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:34:40,276	[DEBUG]	
2020-12-17 15:34:40,278	[INFO]	184	SUCCESS	+4.0	
2020-12-17 15:34:40,279	[DEBUG]	
2020-12-17 15:34:41,368	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:34:42,227	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:34:43,259	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:34:43,261	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:34:57,679	[INFO]	189	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:35:00,935	[INFO]	190	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:35:00,936	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:35:00,936	[INFO]	191	SUCCESS	+4.0	
2020-12-17 15:35:00,937	[DEBUG]	
2020-12-17 15:35:00,937	[INFO]	192	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:04,360	[INFO]	193	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:35:04,361	[INFO]	194	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:35:04,362	[INFO]	195	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:35:04,363	[INFO]	196	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:35:04,363	[INFO]	197	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:35:04,364	[INFO]	198	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:35:04,365	[INFO]	199	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:35:04,365	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:35:04,366	[INFO]	201	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:35:04,367	[INFO]	202	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:35:04,367	[DEBUG]	
2020-12-17 15:35:08,692	[INFO]	203	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:35:08,693	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:35:08,694	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:35:09,776	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:35:09,777	[INFO]	207	SUCCESS	+4.0	
2020-12-17 15:35:09,777	[DEBUG]	
2020-12-17 15:35:09,778	[INFO]	208	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:35:10,914	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:35:15,488	[INFO]	210	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:15,489	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:35:15,489	[INFO]	212	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:35:15,490	[INFO]	213	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:35:15,491	[INFO]	214	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:35:16,397	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:35:16,399	[INFO]	216	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:35:16,400	[INFO]	217	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:35:16,401	[INFO]	218	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:35:16,402	[INFO]	219	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:16,403	[INFO]	220	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:35:16,404	[INFO]	221	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:35:16,405	[INFO]	222	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:16,406	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:17,195	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:35:17,198	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:21,292	[INFO]	226	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:35:21,294	[INFO]	227	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:35:25,045	[INFO]	228	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:35:28,442	[INFO]	229	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:35:31,942	[INFO]	230	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:35:31,944	[INFO]	231	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:35:31,944	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:35:31,945	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:35:31,946	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:35:31,946	[INFO]	235	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:35:31,947	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:35,518	[INFO]	237	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:35:40,482	[INFO]	238	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:41,508	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:35:41,509	[INFO]	240	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:41,510	[INFO]	241	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:35:41,511	[INFO]	242	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:35:41,511	[DEBUG]	
2020-12-17 15:35:41,512	[INFO]	243	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:35:41,512	[DEBUG]	
2020-12-17 15:35:42,278	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:35:42,279	[INFO]	245	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:35:42,279	[DEBUG]	
2020-12-17 15:35:42,280	[INFO]	246	SUCCESS	+4.0	
2020-12-17 15:35:42,280	[DEBUG]	
2020-12-17 15:35:43,045	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:35:43,046	[INFO]	248	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:35:43,047	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:43,047	[INFO]	250	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:35:43,832	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:35:44,877	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:35:44,878	[INFO]	253	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:35:44,879	[DEBUG]	
2020-12-17 15:35:44,880	[INFO]	254	SUCCESS	+4.0	
2020-12-17 15:35:44,881	[DEBUG]	
2020-12-17 15:35:44,882	[INFO]	255	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:35:44,882	[DEBUG]	
2020-12-17 15:35:48,571	[INFO]	256	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:35:52,942	[INFO]	257	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:35:52,946	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:35:54,302	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:35:54,305	[INFO]	259	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:35:54,306	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:35:54,307	[INFO]	260	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:35:54,308	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:35:58,174	[INFO]	261	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:35:58,176	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,24 ****
--- 18,30 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:36:02,055	[INFO]	262	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:36:02,056	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:36:03,055	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:36:03,057	[INFO]	264	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:36:03,057	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:36:03,058	[INFO]	265	SUCCESS	+4.0	
2020-12-17 15:36:03,058	[DEBUG]	
2020-12-17 15:36:03,059	[INFO]	266	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:36:04,064	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:36:04,066	[INFO]	268	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:36:07,658	[INFO]	269	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:36:12,353	[INFO]	270	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:36:12,354	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:36:13,298	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:36:13,299	[INFO]	272	SUCCESS	+4.0	
2020-12-17 15:36:13,299	[DEBUG]	
2020-12-17 15:36:13,300	[INFO]	273	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:36:13,300	[DEBUG]	
2020-12-17 15:36:14,169	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:36:18,307	[INFO]	275	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:36:18,308	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:36:19,364	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:36:19,365	[INFO]	277	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:36:19,366	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:36:19,366	[INFO]	278	SUCCESS	+4.0	
2020-12-17 15:36:19,366	[DEBUG]	
2020-12-17 15:36:19,367	[INFO]	279	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:36:19,368	[INFO]	280	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:36:19,368	[DEBUG]	
2020-12-17 15:36:19,369	[INFO]	281	SUCCESS	+4.0	
2020-12-17 15:36:19,369	[DEBUG]	
2020-12-17 15:36:19,369	[INFO]	282	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:36:19,370	[INFO]	283	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:36:19,371	[DEBUG]	
2020-12-17 15:36:19,372	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:36:23,221	[INFO]	285	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:36:23,222	[INFO]	286	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:36:23,223	[DEBUG]	
2020-12-17 15:36:23,224	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:36:23,225	[INFO]	288	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:36:23,225	[DEBUG]	
2020-12-17 15:36:24,357	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:36:24,358	[INFO]	290	SUCCESS	+4.0	
2020-12-17 15:36:24,359	[DEBUG]	
2020-12-17 15:36:24,360	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:36:25,219	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:36:25,220	[INFO]	293	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:36:25,221	[DEBUG]	
2020-12-17 15:36:25,222	[INFO]	294	SUCCESS	+4.0	
2020-12-17 15:36:25,222	[DEBUG]	
2020-12-17 15:36:26,549	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:36:26,551	[INFO]	296	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:36:27,523	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:36:27,524	[INFO]	298	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:36:27,525	[INFO]	299	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:36:27,527	[INFO]	300	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:36:27,527	[DEBUG]	
2020-12-17 15:36:27,528	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:36:27,529	[INFO]	302	SUCCESS	+4.0	
2020-12-17 15:36:27,529	[DEBUG]	
2020-12-17 15:36:27,530	[INFO]	303	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:36:27,531	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:36:27,532	[INFO]	305	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:36:27,532	[DEBUG]	
2020-12-17 15:36:27,533	[INFO]	306	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:36:27,534	[INFO]	307	SUCCESS	+4.0	
2020-12-17 15:36:27,535	[DEBUG]	
2020-12-17 15:36:28,542	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:36:28,544	[INFO]	309	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:36:29,333	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:36:29,334	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:36:29,334	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:36:32,790	[INFO]	312	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:36:32,791	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,25 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:36:37,527	[INFO]	313	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:36:37,528	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:36:37,528	[INFO]	314	SUCCESS	+4.0	
2020-12-17 15:36:37,529	[DEBUG]	
2020-12-17 15:36:37,529	[INFO]	315	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:36:37,530	[INFO]	316	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:36:38,510	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:36:41,833	[INFO]	318	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:36:45,279	[INFO]	319	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:36:45,282	[INFO]	320	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:36:46,187	[INFO]	321	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:36:46,188	[INFO]	322	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:36:46,188	[INFO]	323	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:36:46,189	[DEBUG]	
2020-12-17 15:36:46,190	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:36:46,190	[INFO]	325	SUCCESS	+4.0	
2020-12-17 15:36:46,191	[DEBUG]	
2020-12-17 15:36:46,191	[INFO]	326	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:36:49,507	[INFO]	327	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:36:49,508	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:36:49,509	[INFO]	328	SUCCESS	+4.0	
2020-12-17 15:36:49,509	[DEBUG]	
2020-12-17 15:36:49,511	[INFO]	329	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:36:49,511	[DEBUG]	
2020-12-17 15:36:49,512	[INFO]	330	SUCCESS	+4.0	
2020-12-17 15:36:49,512	[DEBUG]	
2020-12-17 15:36:52,772	[INFO]	331	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:36:56,180	[INFO]	332	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:36:57,077	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:36:57,079	[INFO]	334	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:36:57,994	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:36:57,995	[INFO]	336	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:36:57,995	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:36:57,996	[INFO]	337	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:36:57,996	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:36:58,738	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:36:58,740	[INFO]	339	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:36:58,740	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:36:58,741	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:36:58,742	[INFO]	341	SUCCESS	+4.0	
2020-12-17 15:36:58,742	[DEBUG]	
2020-12-17 15:36:59,480	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:37:00,209	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:00,960	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:37:00,962	[INFO]	345	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:37:05,139	[INFO]	346	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:05,140	[INFO]	347	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:05,140	[INFO]	348	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:37:05,141	[DEBUG]	
2020-12-17 15:37:05,141	[INFO]	349	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:37:05,142	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:37:05,142	[INFO]	351	SUCCESS	+4.0	
2020-12-17 15:37:05,143	[DEBUG]	
2020-12-17 15:37:05,990	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:37:06,911	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:37:06,912	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:06,914	[INFO]	355	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:06,914	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:37:10,266	[INFO]	356	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:10,267	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,23 ****
--- 15,29 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:37:13,664	[INFO]	357	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:37:13,667	[INFO]	358	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:13,668	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:37:14,684	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:37:14,685	[INFO]	360	SUCCESS	+4.0	
2020-12-17 15:37:14,685	[DEBUG]	
2020-12-17 15:37:14,686	[INFO]	361	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:37:14,687	[DEBUG]	
2020-12-17 15:37:14,687	[INFO]	362	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:14,688	[DEBUG]	
2020-12-17 15:37:14,689	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:37:15,612	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:37:15,615	[INFO]	365	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:37:15,616	[DEBUG]	
2020-12-17 15:37:15,617	[INFO]	366	SUCCESS	+4.0	
2020-12-17 15:37:15,617	[DEBUG]	
2020-12-17 15:37:16,795	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:37:16,797	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:37:16,799	[INFO]	369	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:37:16,799	[DEBUG]	
2020-12-17 15:37:17,797	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:37:17,799	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:37:18,793	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:37:19,885	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:37:20,970	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:37:20,971	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:37:21,987	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:37:21,988	[INFO]	377	SUCCESS	+4.0	
2020-12-17 15:37:21,989	[DEBUG]	
2020-12-17 15:37:21,990	[INFO]	378	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:37:21,991	[INFO]	379	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:37:21,991	[DEBUG]	
2020-12-17 15:37:21,992	[INFO]	380	SUCCESS	+4.0	
2020-12-17 15:37:21,992	[DEBUG]	
2020-12-17 15:37:21,993	[INFO]	381	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:37:21,995	[INFO]	382	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:21,995	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:37:21,996	[INFO]	383	SUCCESS	+4.0	
2020-12-17 15:37:21,997	[DEBUG]	
2020-12-17 15:37:22,932	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:37:22,933	[INFO]	385	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:37:23,932	[INFO]	386	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:37:23,934	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:37:23,935	[INFO]	388	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:37:27,832	[INFO]	389	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:27,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:37:27,833	[INFO]	390	SUCCESS	+4.0	
2020-12-17 15:37:27,833	[DEBUG]	
2020-12-17 15:37:27,834	[INFO]	391	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:27,835	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:37:27,836	[INFO]	393	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:37:27,836	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:37:28,875	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:37:28,876	[INFO]	396	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:37:28,877	[INFO]	397	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:37:32,368	[INFO]	398	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:37:33,347	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:37:37,157	[INFO]	400	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:37,158	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:37:37,159	[INFO]	401	SUCCESS	+4.0	
2020-12-17 15:37:37,159	[DEBUG]	
2020-12-17 15:37:37,160	[INFO]	402	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:37:37,160	[DEBUG]	
2020-12-17 15:37:37,161	[INFO]	403	SUCCESS	+4.0	
2020-12-17 15:37:37,162	[DEBUG]	
2020-12-17 15:37:37,163	[INFO]	404	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:37,164	[INFO]	405	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:37:37,164	[DEBUG]	
2020-12-17 15:37:37,165	[INFO]	406	SUCCESS	+4.0	
2020-12-17 15:37:37,165	[DEBUG]	
2020-12-17 15:37:38,109	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:37:38,111	[INFO]	408	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:38,113	[INFO]	409	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:37:39,077	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:37:42,325	[INFO]	411	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:37:43,322	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:37:46,984	[INFO]	413	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:37:46,985	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:37:46,986	[INFO]	414	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:37:46,986	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:37:50,356	[INFO]	415	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:37:50,359	[INFO]	416	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:37:50,361	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:37:50,363	[INFO]	417	SUCCESS	+4.0	
2020-12-17 15:37:50,363	[DEBUG]	
2020-12-17 15:37:50,366	[INFO]	418	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:50,368	[INFO]	419	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:50,370	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:37:50,372	[INFO]	420	SUCCESS	+4.0	
2020-12-17 15:37:50,373	[DEBUG]	
2020-12-17 15:37:50,375	[INFO]	421	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:37:53,827	[INFO]	422	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:37:54,587	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:37:55,474	[INFO]	424	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:37:56,374	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:37:57,261	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:37:57,262	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:37:58,015	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:37:58,979	[INFO]	429	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:37:59,904	[INFO]	430	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:37:59,907	[INFO]	431	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:37:59,907	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:38:00,834	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:38:00,835	[INFO]	433	SUCCESS	+4.0	
2020-12-17 15:38:00,836	[DEBUG]	
2020-12-17 15:38:00,836	[INFO]	434	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:38:01,602	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:38:01,604	[INFO]	436	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:38:01,606	[INFO]	437	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:38:02,525	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:38:02,526	[INFO]	439	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:38:03,283	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:38:04,259	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:38:04,262	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:38:05,054	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:38:05,812	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:38:05,814	[INFO]	445	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:38:06,770	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:38:07,564	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:38:08,519	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:38:08,521	[INFO]	449	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:38:08,521	[DEBUG]	
2020-12-17 15:38:08,521	[INFO]	450	SUCCESS	+4.0	
2020-12-17 15:38:08,522	[DEBUG]	
2020-12-17 15:38:09,488	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:38:09,489	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:38:10,675	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:38:11,685	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:38:11,686	[INFO]	455	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:38:12,739	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:38:12,742	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:38:15,951	[INFO]	458	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:38:16,884	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:38:16,885	[INFO]	460	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:38:16,886	[DEBUG]	
2020-12-17 15:38:17,858	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:38:18,967	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:38:18,970	[INFO]	463	SUCCESS	+4.0	
2020-12-17 15:38:18,971	[DEBUG]	
2020-12-17 15:38:22,713	[INFO]	464	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:38:23,724	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:38:23,726	[INFO]	466	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:38:23,727	[INFO]	467	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:38:27,004	[INFO]	468	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:38:27,813	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:38:27,816	[INFO]	470	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:38:27,818	[INFO]	471	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:38:28,754	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:38:29,772	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:38:33,957	[INFO]	474	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:38:37,550	[INFO]	475	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:38:38,443	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:38:39,290	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:38:40,312	[INFO]	478	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:38:53,852	[INFO]	479	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:38:53,854	[INFO]	480	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:38:56,861	[INFO]	481	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:38:56,863	[INFO]	482	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:38:56,864	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:38:59,984	[INFO]	484	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:38:59,986	[INFO]	485	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:38:59,988	[INFO]	486	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:39:01,318	[INFO]	487	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:39:01,321	[INFO]	488	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:39:01,322	[DEBUG]	
2020-12-17 15:39:01,323	[INFO]	489	SUCCESS	+4.0	
2020-12-17 15:39:01,324	[DEBUG]	
2020-12-17 15:39:02,870	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:39:06,897	[INFO]	491	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:39:06,898	[INFO]	492	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:39:07,833	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:39:07,835	[INFO]	494	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:39:07,835	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:39:07,836	[INFO]	495	SUCCESS	+4.0	
2020-12-17 15:39:07,836	[DEBUG]	
2020-12-17 15:39:07,837	[INFO]	496	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:39:08,742	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:39:12,021	[INFO]	498	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:39:15,624	[INFO]	499	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:39:15,626	[INFO]	500	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:39:15,626	[INFO]	==== END ====
2020-12-17 15:39:15,626	[INFO]	Reason: step budget
2020-12-17 15:39:15,626	[INFO]	
2020-12-17 15:39:15,626	[INFO]	========== EPOCH 7 ==========
2020-12-17 15:39:15,627	[INFO]	==== WARMUP ====
2020-12-17 15:39:18,856	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:39:18,856	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:39:22,691	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:39:22,692	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:39:27,949	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:39:27,949	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:39:33,574	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 15:39:33,575	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:39:33,575	[INFO]	==== START ====
2020-12-17 15:39:37,053	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:39:38,013	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:39:39,011	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:39:42,975	[INFO]	4	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:39:42,976	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:39:43,860	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:39:44,831	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:39:45,773	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:39:46,728	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:39:49,877	[INFO]	9	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:39:49,880	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:39:53,100	[INFO]	11	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:39:53,101	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,22 ****
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:39:53,825	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:39:57,160	[INFO]	13	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:39:57,161	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:39:57,858	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:40:01,175	[INFO]	15	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:40:01,176	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:40:01,178	[INFO]	16	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:40:01,178	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:40:01,932	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:40:05,265	[INFO]	18	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:40:05,266	[INFO]	19	SUCCESS	+4.0	
2020-12-17 15:40:05,266	[DEBUG]	
2020-12-17 15:40:08,572	[INFO]	20	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:40:09,348	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:40:10,263	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:40:14,700	[INFO]	23	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:40:15,659	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:40:16,681	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:40:16,682	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:40:16,683	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:40:16,684	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:40:20,906	[INFO]	29	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:40:25,063	[INFO]	30	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:40:26,199	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:40:26,200	[INFO]	32	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:40:26,201	[DEBUG]	
2020-12-17 15:40:26,202	[INFO]	33	SUCCESS	+4.0	
2020-12-17 15:40:26,202	[DEBUG]	
2020-12-17 15:40:26,203	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:40:27,154	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:40:28,104	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:40:31,855	[INFO]	37	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:40:31,856	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:40:31,857	[INFO]	38	SUCCESS	+4.0	
2020-12-17 15:40:31,858	[DEBUG]	
2020-12-17 15:40:31,859	[INFO]	39	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:40:31,860	[INFO]	40	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:40:35,234	[INFO]	41	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:40:35,236	[INFO]	42	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:40:35,237	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:40:36,712	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:40:38,279	[INFO]	45	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:40:38,281	[INFO]	46	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:40:39,288	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:40:40,447	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:40:41,848	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:40:42,955	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:40:42,957	[INFO]	51	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:40:44,010	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:40:45,171	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:40:45,173	[INFO]	54	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:40:45,173	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:40:48,891	[INFO]	56	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:40:53,156	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:40:53,156	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:40:53,157	[INFO]	58	SUCCESS	+4.0	
2020-12-17 15:40:53,158	[DEBUG]	
2020-12-17 15:40:53,158	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:40:54,118	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:40:54,120	[INFO]	61	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:40:54,120	[INFO]	62	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:40:54,965	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:40:55,997	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:40:57,044	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:40:57,905	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:41:01,816	[INFO]	67	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:41:01,817	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:41:05,240	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:41:05,241	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:09,075	[INFO]	69	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:41:09,982	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:41:09,983	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:41:09,984	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:09,985	[INFO]	72	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:41:09,985	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:09,986	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:09,987	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:09,988	[INFO]	74	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:09,988	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:09,989	[INFO]	75	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:09,989	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:10,922	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:41:11,888	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:41:11,890	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:11,890	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:12,702	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:41:12,706	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:41:12,708	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:12,710	[INFO]	81	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:41:12,710	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:12,712	[INFO]	82	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:41:12,713	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:13,712	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:41:13,714	[INFO]	84	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:13,715	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:13,716	[INFO]	85	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:13,717	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:13,718	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:41:13,719	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:13,719	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:14,703	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:41:19,443	[INFO]	89	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:19,445	[INFO]	90	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:19,446	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:20,290	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:41:23,758	[INFO]	92	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:41:24,684	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:41:27,753	[INFO]	94	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:27,755	[INFO]	95	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:28,678	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:41:28,680	[INFO]	97	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:28,680	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:28,681	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:41:28,682	[INFO]	99	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:28,683	[INFO]	100	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:41:28,683	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:28,684	[INFO]	101	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:28,685	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:28,686	[INFO]	102	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:41:29,581	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:29,583	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:29,583	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:29,584	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:29,585	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:29,585	[INFO]	106	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:29,586	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:29,587	[INFO]	107	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:29,588	[INFO]	108	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:41:29,588	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:30,347	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:41:30,350	[INFO]	110	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:41:30,351	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:30,353	[INFO]	111	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:41:30,354	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:30,356	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:41:30,358	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:30,359	[INFO]	113	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:41:30,361	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:41:30,363	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:33,605	[INFO]	115	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:41:33,607	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,26 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
! if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:33,608	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:41:33,609	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,26 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
! if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:34,533	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:41:34,538	[INFO]	118	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:41:34,540	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,26 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
! if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:37,799	[INFO]	119	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:41:38,541	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:41:39,537	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:41:39,542	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:41:39,544	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,26 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
! if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:39,547	[INFO]	123	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:39,548	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,26 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
! if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:40,520	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:41:41,486	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:41:41,488	[INFO]	126	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:41:41,489	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,26 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
! if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:41,490	[INFO]	127	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:41,490	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:41,491	[INFO]	128	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:41:41,492	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:41:41,492	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:41:41,493	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:41:41,493	[INFO]	130	SUCCESS	+4.0	
2020-12-17 15:41:41,494	[DEBUG]	
2020-12-17 15:41:44,776	[INFO]	131	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:44,777	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:41:45,529	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:41:45,532	[INFO]	134	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:41:45,533	[DEBUG]	
2020-12-17 15:41:45,536	[INFO]	135	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:41:49,903	[INFO]	136	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:41:49,905	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:41:49,906	[INFO]	137	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:41:49,907	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:41:49,908	[INFO]	138	SUCCESS	+4.0	
2020-12-17 15:41:49,908	[DEBUG]	
2020-12-17 15:41:50,592	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:41:50,593	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:41:50,594	[INFO]	141	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:41:51,514	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:41:52,479	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:41:53,414	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:41:53,415	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:41:53,415	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:41:53,416	[INFO]	146	SUCCESS	+4.0	
2020-12-17 15:41:53,416	[DEBUG]	
2020-12-17 15:41:54,365	[INFO]	147	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:41:54,366	[INFO]	148	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:41:54,367	[DEBUG]	
2020-12-17 15:41:55,126	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:41:55,129	[INFO]	150	SUCCESS	+4.0	
2020-12-17 15:41:55,130	[DEBUG]	
2020-12-17 15:41:56,127	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:41:56,975	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:41:58,195	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:41:58,196	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:41:58,197	[INFO]	155	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:41:59,182	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:42:00,119	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:42:00,121	[INFO]	158	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:42:00,935	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:42:01,865	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:42:05,212	[INFO]	161	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:42:05,213	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:42:19,152	[INFO]	162	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:42:22,580	[INFO]	163	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:42:22,581	[INFO]	164	SUCCESS	+4.0	
2020-12-17 15:42:22,582	[DEBUG]	
2020-12-17 15:42:23,478	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:42:24,407	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:42:24,408	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:42:27,717	[INFO]	168	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:42:28,652	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:42:29,385	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:42:30,287	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:42:31,197	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:42:31,199	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:42:32,003	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:42:32,005	[INFO]	175	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:42:35,422	[INFO]	176	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:42:36,369	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:42:37,163	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:42:37,167	[INFO]	179	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:42:37,169	[INFO]	180	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:42:37,170	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:42:38,105	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:42:38,107	[INFO]	182	SUCCESS	+4.0	
2020-12-17 15:42:38,108	[DEBUG]	
2020-12-17 15:42:41,327	[INFO]	183	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:42:41,328	[INFO]	184	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:42:41,328	[DEBUG]	
2020-12-17 15:42:41,329	[INFO]	185	SUCCESS	+4.0	
2020-12-17 15:42:41,329	[DEBUG]	
2020-12-17 15:42:42,072	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:42:42,075	[INFO]	187	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:42:42,077	[INFO]	188	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:42:42,077	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:42:45,850	[INFO]	189	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:42:50,034	[INFO]	190	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:42:50,035	[INFO]	191	SUCCESS	+4.0	
2020-12-17 15:42:50,035	[DEBUG]	
2020-12-17 15:42:50,036	[INFO]	192	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:42:50,037	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:42:50,037	[INFO]	194	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:42:50,038	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:42:53,069	[INFO]	196	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:42:53,070	[INFO]	197	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:42:53,071	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:42:54,162	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:42:55,121	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:42:55,122	[INFO]	201	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:42:55,123	[INFO]	202	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:42:58,450	[INFO]	203	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:42:59,169	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:42:59,935	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:43:01,052	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:43:01,054	[INFO]	207	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:43:01,055	[DEBUG]	
2020-12-17 15:43:02,257	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:43:02,258	[INFO]	209	SUCCESS	+4.0	
2020-12-17 15:43:02,259	[DEBUG]	
2020-12-17 15:43:06,912	[INFO]	210	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:43:06,913	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:43:07,704	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:43:13,395	[INFO]	212	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:43:13,396	[INFO]	213	SUCCESS	+4.0	
2020-12-17 15:43:13,396	[DEBUG]	
2020-12-17 15:43:14,140	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:43:14,954	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:43:15,921	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:43:19,376	[INFO]	217	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:43:23,887	[INFO]	218	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:43:23,888	[INFO]	219	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:43:23,889	[DEBUG]	
2020-12-17 15:43:25,793	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:43:27,422	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:43:27,423	[INFO]	222	SUCCESS	+4.0	
2020-12-17 15:43:27,423	[DEBUG]	
2020-12-17 15:43:31,593	[INFO]	223	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:43:35,918	[INFO]	224	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:43:37,339	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:43:37,341	[INFO]	226	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:43:37,342	[INFO]	227	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:43:38,359	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:43:38,360	[INFO]	229	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:43:39,872	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:43:41,340	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:43:42,995	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:43:42,997	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:43:49,659	[INFO]	234	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:43:51,806	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:43:53,744	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:43:53,746	[INFO]	237	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:43:56,025	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:43:58,109	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:44:00,131	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:44:00,136	[INFO]	241	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:00,136	[DEBUG]	
2020-12-17 15:44:00,138	[INFO]	242	SUCCESS	+4.0	
2020-12-17 15:44:00,139	[DEBUG]	
2020-12-17 15:44:00,140	[INFO]	243	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:44:01,917	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:03,219	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:44:04,245	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:44:05,097	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:06,078	[INFO]	248	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:44:09,417	[INFO]	249	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:44:10,164	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:10,990	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:11,937	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:44:15,605	[INFO]	253	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:44:18,810	[INFO]	254	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:44:18,812	[INFO]	255	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:44:18,813	[INFO]	256	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:44:19,761	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:44:19,763	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:19,764	[INFO]	259	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:44:19,764	[DEBUG]	
2020-12-17 15:44:19,764	[INFO]	260	SUCCESS	+4.0	
2020-12-17 15:44:19,765	[DEBUG]	
2020-12-17 15:44:20,719	[INFO]	261	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:20,720	[INFO]	262	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:44:20,720	[INFO]	263	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:20,721	[INFO]	264	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:44:21,654	[INFO]	265	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:44:21,656	[INFO]	266	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:24,887	[INFO]	267	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:44:24,889	[INFO]	268	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:44:24,889	[INFO]	269	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:44:28,629	[INFO]	270	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:44:28,631	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:34,822	[INFO]	272	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:44:34,823	[INFO]	273	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:44:34,823	[INFO]	274	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:44:38,701	[INFO]	275	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:44:39,624	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:44:43,091	[INFO]	277	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:44:44,082	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:44:44,083	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:44:44,084	[INFO]	280	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:44:45,063	[INFO]	281	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:44:45,064	[INFO]	282	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:45,065	[DEBUG]	
2020-12-17 15:44:45,967	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:45,970	[INFO]	284	SUCCESS	+4.0	
2020-12-17 15:44:45,970	[DEBUG]	
2020-12-17 15:44:45,973	[INFO]	285	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:44:45,976	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:44:45,978	[INFO]	287	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:46,977	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:46,978	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:44:46,979	[INFO]	290	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:44:46,979	[DEBUG]	
2020-12-17 15:44:46,980	[INFO]	291	SUCCESS	+4.0	
2020-12-17 15:44:46,980	[DEBUG]	
2020-12-17 15:44:46,981	[INFO]	292	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:44:46,981	[DEBUG]	
2020-12-17 15:44:46,982	[INFO]	293	SUCCESS	+4.0	
2020-12-17 15:44:46,982	[DEBUG]	
2020-12-17 15:44:47,968	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:44:47,970	[INFO]	295	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:47,970	[INFO]	296	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:44:47,972	[INFO]	297	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:44:48,767	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:44:52,611	[INFO]	299	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:44:52,613	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:44:53,621	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:44:54,416	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:44:54,417	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:44:55,397	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:44:55,398	[INFO]	304	SUCCESS	+4.0	
2020-12-17 15:44:55,399	[DEBUG]	
2020-12-17 15:44:55,400	[INFO]	305	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:44:55,400	[DEBUG]	
2020-12-17 15:44:55,401	[INFO]	306	SUCCESS	+4.0	
2020-12-17 15:44:55,401	[DEBUG]	
2020-12-17 15:44:55,402	[INFO]	307	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:44:55,403	[INFO]	308	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:44:55,404	[INFO]	309	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:55,405	[DEBUG]	
2020-12-17 15:44:55,405	[INFO]	310	SUCCESS	+4.0	
2020-12-17 15:44:55,406	[DEBUG]	
2020-12-17 15:44:55,407	[INFO]	311	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:55,408	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:44:58,929	[INFO]	313	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:44:58,931	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:44:58,931	[INFO]	315	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:44:58,932	[INFO]	316	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:44:58,933	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:44:58,934	[INFO]	318	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:44:59,904	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:45:03,626	[INFO]	320	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:45:04,665	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:45:04,669	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:45:04,672	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:45:08,687	[INFO]	324	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:45:08,690	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:45:12,768	[INFO]	325	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:45:13,904	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:45:13,905	[INFO]	327	SUCCESS	+4.0	
2020-12-17 15:45:13,906	[DEBUG]	
2020-12-17 15:45:17,688	[INFO]	328	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:45:18,715	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:45:18,717	[INFO]	330	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:45:19,772	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:45:19,774	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:45:19,775	[INFO]	333	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:45:19,776	[DEBUG]	
2020-12-17 15:45:19,777	[INFO]	334	SUCCESS	+4.0	
2020-12-17 15:45:19,777	[DEBUG]	
2020-12-17 15:45:20,789	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:45:24,319	[INFO]	336	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:45:25,126	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:45:26,101	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:45:29,718	[INFO]	339	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:45:29,719	[INFO]	340	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:45:29,720	[DEBUG]	
2020-12-17 15:45:30,796	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:45:30,797	[INFO]	342	SUCCESS	+4.0	
2020-12-17 15:45:30,797	[DEBUG]	
2020-12-17 15:45:36,170	[INFO]	343	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:45:36,172	[INFO]	344	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:45:37,115	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:45:40,721	[INFO]	346	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:45:40,722	[INFO]	347	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:45:41,793	[INFO]	348	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:45:42,723	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:45:46,405	[INFO]	350	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:45:46,406	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:45:46,407	[INFO]	351	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:45:46,408	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:45:49,933	[INFO]	352	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:45:50,883	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:45:54,463	[INFO]	354	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:45:54,464	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,27 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:45:58,440	[INFO]	355	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:45:58,441	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:45:58,442	[INFO]	356	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:45:58,442	[DEBUG]	
2020-12-17 15:45:59,474	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:45:59,475	[INFO]	358	SUCCESS	+4.0	
2020-12-17 15:45:59,475	[DEBUG]	
2020-12-17 15:46:00,294	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:46:00,296	[INFO]	360	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:46:00,296	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:46:00,297	[INFO]	361	SUCCESS	+4.0	
2020-12-17 15:46:00,297	[DEBUG]	
2020-12-17 15:46:01,089	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:46:01,091	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:46:01,924	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:46:01,926	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:46:02,892	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:46:02,895	[INFO]	367	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:46:06,252	[INFO]	368	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:46:06,254	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:46:06,255	[INFO]	370	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:46:07,212	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:46:08,198	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:46:11,679	[INFO]	373	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:46:11,680	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:46:12,797	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:46:12,798	[INFO]	375	SUCCESS	+4.0	
2020-12-17 15:46:12,798	[DEBUG]	
2020-12-17 15:46:13,635	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:46:13,636	[INFO]	377	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:46:17,375	[INFO]	378	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:46:18,872	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:46:22,309	[INFO]	380	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:46:23,267	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:46:24,075	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:46:28,516	[INFO]	383	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:46:32,005	[INFO]	384	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:46:32,959	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:46:33,782	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:46:33,785	[INFO]	387	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:46:34,744	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:46:34,745	[INFO]	389	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:46:34,746	[DEBUG]	
2020-12-17 15:46:35,545	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:46:35,546	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:46:35,547	[INFO]	392	SUCCESS	+4.0	
2020-12-17 15:46:35,547	[DEBUG]	
2020-12-17 15:46:38,870	[INFO]	393	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:46:38,871	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:46:38,871	[INFO]	395	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:46:43,733	[INFO]	396	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:46:43,734	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:46:45,338	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:46:46,437	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:46:46,438	[INFO]	399	SUCCESS	+4.0	
2020-12-17 15:46:46,438	[DEBUG]	
2020-12-17 15:46:53,920	[INFO]	400	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:46:55,019	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:46:59,657	[INFO]	402	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:46:59,659	[INFO]	403	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:46:59,661	[INFO]	404	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:46:59,661	[DEBUG]	
2020-12-17 15:46:59,662	[INFO]	405	SUCCESS	+4.0	
2020-12-17 15:46:59,663	[DEBUG]	
2020-12-17 15:47:00,865	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:47:00,866	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:47:00,867	[INFO]	408	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:47:00,868	[INFO]	409	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:47:05,890	[INFO]	410	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:47:07,382	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:47:08,711	[INFO]	412	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:47:10,112	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:47:10,114	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:47:10,116	[INFO]	415	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:47:14,954	[INFO]	416	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:47:14,955	[INFO]	417	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:47:16,320	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:47:17,866	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:47:17,868	[INFO]	420	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:47:17,870	[INFO]	421	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:47:21,913	[INFO]	422	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:47:25,547	[INFO]	423	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:47:25,548	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:47:26,590	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:47:26,592	[INFO]	425	SUCCESS	+4.0	
2020-12-17 15:47:26,593	[DEBUG]	
2020-12-17 15:47:26,594	[INFO]	426	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:47:26,595	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:47:27,590	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:47:27,591	[INFO]	429	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:47:28,464	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:47:29,513	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:47:30,499	[INFO]	432	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:47:31,362	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:47:34,924	[INFO]	434	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:47:34,925	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:47:34,926	[INFO]	435	SUCCESS	+4.0	
2020-12-17 15:47:34,926	[DEBUG]	
2020-12-17 15:47:38,648	[INFO]	436	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:47:40,230	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:47:41,682	[INFO]	438	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:47:41,686	[INFO]	439	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:47:43,336	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:47:43,338	[INFO]	441	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:47:44,851	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:47:45,881	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:47:45,882	[INFO]	444	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:47:45,882	[DEBUG]	
2020-12-17 15:47:45,883	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:47:45,884	[INFO]	446	SUCCESS	+4.0	
2020-12-17 15:47:45,884	[DEBUG]	
2020-12-17 15:47:46,723	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:47:50,380	[INFO]	448	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:47:51,676	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:47:51,679	[INFO]	450	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:47:51,681	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:47:52,543	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:47:57,151	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:47:57,153	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:47:58,327	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:47:58,328	[INFO]	455	SUCCESS	+4.0	
2020-12-17 15:47:58,328	[DEBUG]	
2020-12-17 15:47:59,515	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:47:59,517	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:48:04,078	[INFO]	458	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:48:05,608	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:48:06,921	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:48:06,922	[INFO]	461	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:48:11,272	[INFO]	462	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:48:11,273	[INFO]	463	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:48:11,274	[DEBUG]	
2020-12-17 15:48:11,275	[INFO]	464	SUCCESS	+4.0	
2020-12-17 15:48:11,275	[DEBUG]	
2020-12-17 15:48:12,293	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:48:16,648	[INFO]	466	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:48:16,649	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:48:20,937	[INFO]	467	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:48:20,938	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:48:21,807	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:48:21,808	[INFO]	469	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:48:21,809	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:48:21,809	[INFO]	470	SUCCESS	+4.0	
2020-12-17 15:48:21,810	[DEBUG]	
2020-12-17 15:48:22,813	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:48:22,814	[INFO]	472	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:48:22,815	[DEBUG]	
2020-12-17 15:48:22,815	[INFO]	473	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:48:22,816	[DEBUG]	
2020-12-17 15:48:22,816	[INFO]	474	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:48:22,817	[DEBUG]	
2020-12-17 15:48:22,817	[INFO]	475	SUCCESS	+4.0	
2020-12-17 15:48:22,817	[DEBUG]	
2020-12-17 15:48:22,818	[INFO]	476	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:48:22,818	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:48:22,819	[INFO]	478	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:48:22,820	[INFO]	479	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:48:22,820	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:48:22,821	[INFO]	481	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:48:22,822	[INFO]	482	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:48:23,844	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:48:23,845	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:48:25,411	[INFO]	485	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:48:25,413	[INFO]	486	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:48:25,414	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:48:25,415	[INFO]	488	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:48:25,416	[DEBUG]	
2020-12-17 15:48:25,417	[INFO]	489	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:48:25,418	[INFO]	490	SUCCESS	+4.0	
2020-12-17 15:48:25,419	[DEBUG]	
2020-12-17 15:48:25,420	[INFO]	491	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:48:25,421	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:48:25,422	[INFO]	492	SUCCESS	+4.0	
2020-12-17 15:48:25,423	[DEBUG]	
2020-12-17 15:48:25,424	[INFO]	493	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:48:25,425	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:48:25,426	[INFO]	495	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:48:27,266	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:48:31,626	[INFO]	497	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:48:31,627	[INFO]	498	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:48:32,636	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:48:32,638	[INFO]	500	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:48:32,638	[INFO]	==== END ====
2020-12-17 15:48:32,638	[INFO]	Reason: step budget
2020-12-17 15:48:32,638	[INFO]	
2020-12-17 15:48:32,638	[INFO]	========== EPOCH 8 ==========
2020-12-17 15:48:32,639	[INFO]	==== WARMUP ====
2020-12-17 15:48:36,304	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:48:36,305	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:48:39,931	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:48:39,931	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:48:43,722	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:48:43,722	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:48:48,541	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 15:48:48,541	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:48:48,542	[INFO]	==== START ====
2020-12-17 15:48:49,800	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:48:54,568	[INFO]	2	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:48:58,520	[INFO]	3	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:48:59,457	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:48:59,462	[INFO]	5	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:48:59,462	[DEBUG]	
2020-12-17 15:49:00,515	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:49:00,517	[INFO]	7	SUCCESS	+4.0	
2020-12-17 15:49:00,517	[DEBUG]	
2020-12-17 15:49:00,519	[INFO]	8	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:49:00,519	[DEBUG]	
2020-12-17 15:49:00,521	[INFO]	9	SUCCESS	+4.0	
2020-12-17 15:49:00,521	[DEBUG]	
2020-12-17 15:49:05,335	[INFO]	10	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:49:06,587	[INFO]	11	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:49:06,589	[INFO]	12	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:49:06,590	[INFO]	13	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:49:06,590	[DEBUG]	
2020-12-17 15:49:06,591	[INFO]	14	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:49:07,596	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:49:08,452	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:49:08,453	[INFO]	17	SUCCESS	+4.0	
2020-12-17 15:49:08,454	[DEBUG]	
2020-12-17 15:49:14,099	[INFO]	18	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:49:15,741	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:49:15,743	[INFO]	20	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:49:15,744	[DEBUG]	
2020-12-17 15:49:15,745	[INFO]	21	SUCCESS	+4.0	
2020-12-17 15:49:15,745	[DEBUG]	
2020-12-17 15:49:17,159	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:49:17,161	[INFO]	23	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:49:17,163	[DEBUG]	
2020-12-17 15:49:22,759	[INFO]	24	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:49:22,761	[INFO]	25	SUCCESS	+4.0	
2020-12-17 15:49:22,761	[DEBUG]	
2020-12-17 15:49:27,108	[INFO]	26	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:49:28,538	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:49:28,541	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:49:32,362	[INFO]	29	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:49:37,441	[INFO]	30	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:49:37,444	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:49:39,120	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:49:45,552	[INFO]	32	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:49:45,554	[INFO]	33	SUCCESS	+4.0	
2020-12-17 15:49:45,554	[DEBUG]	
2020-12-17 15:49:47,826	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:49:50,288	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:49:50,291	[INFO]	36	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:49:50,294	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:49:50,296	[INFO]	38	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:49:52,312	[INFO]	39	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:49:54,347	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:49:56,736	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:49:59,322	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:50:01,389	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:50:08,259	[INFO]	44	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:50:08,260	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:50:09,794	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:50:09,795	[INFO]	46	SUCCESS	+4.0	
2020-12-17 15:50:09,795	[DEBUG]	
2020-12-17 15:50:16,989	[INFO]	47	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:50:16,992	[INFO]	48	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:50:16,992	[DEBUG]	
2020-12-17 15:50:16,994	[INFO]	49	SUCCESS	+4.0	
2020-12-17 15:50:16,994	[DEBUG]	
2020-12-17 15:50:16,996	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:50:16,998	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:50:24,720	[INFO]	52	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:50:24,725	[INFO]	53	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:50:24,726	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:50:24,729	[INFO]	54	SUCCESS	+4.0	
2020-12-17 15:50:24,729	[DEBUG]	
2020-12-17 15:50:24,731	[INFO]	55	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:50:24,731	[DEBUG]	
2020-12-17 15:50:26,852	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:50:26,854	[INFO]	57	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:50:26,855	[INFO]	58	SUCCESS	+4.0	
2020-12-17 15:50:26,855	[DEBUG]	
2020-12-17 15:50:26,857	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:50:26,858	[INFO]	60	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:50:28,452	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:50:30,031	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:50:30,033	[INFO]	63	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:50:35,152	[INFO]	64	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:50:35,154	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:50:36,907	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:50:36,909	[INFO]	66	SUCCESS	+4.0	
2020-12-17 15:50:36,910	[DEBUG]	
2020-12-17 15:50:38,327	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:50:38,329	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:50:42,164	[INFO]	69	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:50:42,165	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:50:42,166	[INFO]	70	SUCCESS	+4.0	
2020-12-17 15:50:42,167	[DEBUG]	
2020-12-17 15:50:48,804	[INFO]	71	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:50:50,455	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:50:50,458	[INFO]	73	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:50:54,622	[INFO]	74	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:50:54,623	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:50:54,624	[INFO]	76	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:50:54,625	[DEBUG]	
2020-12-17 15:50:54,626	[INFO]	77	SUCCESS	+4.0	
2020-12-17 15:50:54,626	[DEBUG]	
2020-12-17 15:50:55,670	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:50:56,861	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:50:57,675	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:50:57,676	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:50:58,629	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:51:05,703	[INFO]	83	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:51:05,705	[INFO]	84	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:51:13,157	[INFO]	85	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:51:21,032	[INFO]	86	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:51:21,034	[INFO]	87	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:51:22,757	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:51:22,759	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:51:22,760	[INFO]	90	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:51:25,006	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:51:27,555	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:51:34,755	[INFO]	93	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:51:36,537	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:51:36,541	[INFO]	95	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:51:38,429	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:51:39,581	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:51:39,584	[INFO]	98	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:51:39,585	[DEBUG]	
2020-12-17 15:51:46,210	[INFO]	99	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:51:46,212	[INFO]	100	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:51:46,212	[DEBUG]	
2020-12-17 15:51:46,213	[INFO]	101	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:51:47,425	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:51:48,488	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:51:48,490	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:51:48,491	[INFO]	105	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:51:48,491	[DEBUG]	
2020-12-17 15:51:48,492	[INFO]	106	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:51:48,494	[INFO]	107	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:51:48,495	[INFO]	108	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:51:48,495	[DEBUG]	
2020-12-17 15:51:48,496	[INFO]	109	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:51:48,496	[DEBUG]	
2020-12-17 15:51:49,675	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:51:49,676	[INFO]	111	SUCCESS	+4.0	
2020-12-17 15:51:49,677	[DEBUG]	
2020-12-17 15:51:50,882	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:51:50,885	[INFO]	113	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:51:50,886	[INFO]	114	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:51:50,887	[INFO]	115	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:51:50,888	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:51:52,137	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:51:53,552	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:51:53,554	[INFO]	118	SUCCESS	+4.0	
2020-12-17 15:51:53,554	[DEBUG]	
2020-12-17 15:51:56,103	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:52:02,524	[INFO]	120	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:52:02,525	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:52:07,132	[INFO]	121	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:52:07,134	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,22 ****
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:52:07,135	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:52:07,136	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:52:08,754	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:52:08,755	[INFO]	124	SUCCESS	+4.0	
2020-12-17 15:52:08,756	[DEBUG]	
2020-12-17 15:52:08,758	[INFO]	125	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:52:08,758	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:52:10,184	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:52:10,185	[INFO]	127	SUCCESS	+4.0	
2020-12-17 15:52:10,185	[DEBUG]	
2020-12-17 15:52:10,186	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:52:15,066	[INFO]	129	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:52:15,068	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:52:15,072	[INFO]	130	SUCCESS	+4.0	
2020-12-17 15:52:15,073	[DEBUG]	
2020-12-17 15:52:15,074	[INFO]	131	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:52:16,732	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:52:16,735	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:52:18,018	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:52:25,022	[INFO]	135	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:52:27,167	[INFO]	136	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:52:28,952	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:52:28,956	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:52:34,329	[INFO]	139	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:52:35,425	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:52:36,818	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:52:36,819	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:52:41,990	[INFO]	143	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:52:42,803	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:52:44,010	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:52:45,009	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:52:45,965	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:52:46,743	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:52:47,731	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:52:47,734	[INFO]	150	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:52:51,138	[INFO]	151	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:52:51,139	[INFO]	152	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:52:51,879	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:52:52,637	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:52:52,638	[INFO]	155	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:52:52,640	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:52:52,641	[INFO]	157	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:52:52,641	[DEBUG]	
2020-12-17 15:52:52,642	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:52:52,643	[INFO]	159	SUCCESS	+4.0	
2020-12-17 15:52:52,644	[DEBUG]	
2020-12-17 15:52:55,831	[INFO]	160	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:52:56,585	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:52:56,587	[INFO]	162	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:52:57,519	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:52:57,521	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:52:57,522	[INFO]	165	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:52:57,522	[DEBUG]	
2020-12-17 15:52:58,452	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:52:58,453	[INFO]	167	SUCCESS	+4.0	
2020-12-17 15:52:58,453	[DEBUG]	
2020-12-17 15:52:58,454	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:52:58,455	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:52:59,250	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:53:02,831	[INFO]	171	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:53:02,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:53:03,645	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:53:03,647	[INFO]	173	SUCCESS	+4.0	
2020-12-17 15:53:03,647	[DEBUG]	
2020-12-17 15:53:04,795	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:53:04,796	[INFO]	175	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:53:04,797	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:53:06,072	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:53:06,073	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:53:06,918	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:53:07,952	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:53:12,262	[INFO]	181	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:53:13,482	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:53:17,464	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:53:17,465	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:53:18,683	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:53:19,672	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:53:19,673	[INFO]	186	SUCCESS	+4.0	
2020-12-17 15:53:19,673	[DEBUG]	
2020-12-17 15:53:19,674	[INFO]	187	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:53:20,930	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:53:20,931	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:53:20,932	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:53:21,909	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:53:22,688	[INFO]	192	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:53:23,605	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:53:24,333	[INFO]	194	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:53:25,129	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:53:25,130	[INFO]	196	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:53:25,131	[DEBUG]	
2020-12-17 15:53:28,480	[INFO]	197	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:53:28,481	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:53:28,482	[INFO]	198	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:53:28,482	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:53:28,483	[INFO]	199	SUCCESS	+4.0	
2020-12-17 15:53:28,483	[DEBUG]	
2020-12-17 15:53:29,831	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:53:45,502	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:53:47,342	[INFO]	202	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:53:47,344	[INFO]	203	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:53:47,346	[INFO]	204	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:53:47,347	[DEBUG]	
2020-12-17 15:53:47,348	[INFO]	205	SUCCESS	+4.0	
2020-12-17 15:53:47,348	[DEBUG]	
2020-12-17 15:53:47,350	[INFO]	206	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:53:47,351	[INFO]	207	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:53:47,352	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:53:48,555	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:53:48,557	[INFO]	210	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:53:48,558	[INFO]	211	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:53:48,559	[DEBUG]	
2020-12-17 15:53:48,560	[INFO]	212	SUCCESS	+4.0	
2020-12-17 15:53:48,560	[DEBUG]	
2020-12-17 15:53:52,861	[INFO]	213	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:53:52,863	[INFO]	214	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:53:53,718	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:53:57,181	[INFO]	216	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:54:00,741	[INFO]	217	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:54:00,742	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:54:01,706	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:54:02,693	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:54:02,695	[INFO]	220	SUCCESS	+4.0	
2020-12-17 15:54:02,696	[DEBUG]	
2020-12-17 15:54:02,698	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:54:02,700	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:54:03,528	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:54:04,291	[INFO]	224	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:54:05,142	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:54:05,145	[INFO]	226	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:54:08,428	[INFO]	227	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:54:09,219	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:54:09,222	[INFO]	229	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:54:09,223	[INFO]	230	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:54:09,224	[DEBUG]	
2020-12-17 15:54:09,225	[INFO]	231	SUCCESS	+4.0	
2020-12-17 15:54:09,226	[DEBUG]	
2020-12-17 15:54:09,228	[INFO]	232	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:54:09,229	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:54:09,230	[INFO]	233	SUCCESS	+4.0	
2020-12-17 15:54:09,231	[DEBUG]	
2020-12-17 15:54:09,233	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:54:09,236	[INFO]	235	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:54:10,164	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:54:10,943	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:54:11,875	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:54:12,861	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:54:12,864	[INFO]	240	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:54:13,777	[INFO]	241	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:54:13,778	[INFO]	242	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:54:13,779	[DEBUG]	
2020-12-17 15:54:13,780	[INFO]	243	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:54:13,780	[INFO]	244	SUCCESS	+4.0	
2020-12-17 15:54:13,780	[DEBUG]	
2020-12-17 15:54:13,781	[INFO]	245	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:54:13,782	[INFO]	246	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:54:14,736	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:54:18,155	[INFO]	248	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:54:19,104	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:54:19,106	[INFO]	250	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:54:19,108	[INFO]	251	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:54:20,123	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:54:23,548	[INFO]	253	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:54:23,549	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 15:54:23,550	[INFO]	254	SUCCESS	+4.0	
2020-12-17 15:54:23,550	[DEBUG]	
2020-12-17 15:54:24,481	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:54:24,483	[INFO]	256	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:54:25,485	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:54:26,430	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:54:27,397	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:54:28,344	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:54:31,776	[INFO]	261	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:54:31,777	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:54:31,778	[INFO]	263	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:54:32,805	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:54:33,847	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:54:34,902	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:54:34,904	[INFO]	267	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:54:34,904	[DEBUG]	
2020-12-17 15:54:39,015	[INFO]	268	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:54:39,018	[INFO]	269	SUCCESS	+4.0	
2020-12-17 15:54:39,019	[DEBUG]	
2020-12-17 15:54:40,318	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:54:42,225	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:54:47,692	[INFO]	272	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:54:48,624	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:54:49,436	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:54:49,437	[INFO]	275	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:54:49,438	[DEBUG]	
2020-12-17 15:54:49,439	[INFO]	276	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:54:49,440	[INFO]	277	SUCCESS	+4.0	
2020-12-17 15:54:49,440	[DEBUG]	
2020-12-17 15:54:53,194	[INFO]	278	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:54:53,194	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:54:53,196	[INFO]	279	SUCCESS	+4.0	
2020-12-17 15:54:53,196	[DEBUG]	
2020-12-17 15:54:53,197	[INFO]	280	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:54:53,198	[INFO]	281	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:54:53,199	[INFO]	282	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:54:54,110	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:54:54,111	[INFO]	284	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:54:54,904	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:54:54,905	[INFO]	286	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:54:54,906	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:54:54,906	[INFO]	287	SUCCESS	+4.0	
2020-12-17 15:54:54,907	[DEBUG]	
2020-12-17 15:54:54,907	[INFO]	288	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:54:55,846	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:54:59,105	[INFO]	290	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:55:00,036	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:55:03,329	[INFO]	292	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:55:03,331	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:55:03,332	[INFO]	294	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:55:04,257	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:55:07,736	[INFO]	296	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:55:07,737	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:55:07,738	[INFO]	297	SUCCESS	+4.0	
2020-12-17 15:55:07,738	[DEBUG]	
2020-12-17 15:55:07,740	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:55:08,660	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:55:09,681	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:55:09,683	[INFO]	301	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:55:09,683	[DEBUG]	
2020-12-17 15:55:09,684	[INFO]	302	SUCCESS	+4.0	
2020-12-17 15:55:09,684	[DEBUG]	
2020-12-17 15:55:09,686	[INFO]	303	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:55:09,686	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:55:10,652	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:55:14,559	[INFO]	306	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:55:14,560	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 15:55:14,561	[INFO]	307	SUCCESS	+4.0	
2020-12-17 15:55:14,561	[DEBUG]	
2020-12-17 15:55:14,562	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:55:15,477	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:55:16,416	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:55:17,364	[INFO]	311	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:55:18,325	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:55:18,326	[INFO]	313	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:55:18,327	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:55:18,328	[INFO]	314	SUCCESS	+4.0	
2020-12-17 15:55:18,328	[DEBUG]	
2020-12-17 15:55:19,290	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:55:19,292	[INFO]	316	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:55:19,292	[DEBUG]	
2020-12-17 15:55:19,293	[INFO]	317	SUCCESS	+4.0	
2020-12-17 15:55:19,293	[DEBUG]	
2020-12-17 15:55:20,484	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:55:20,485	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:55:20,487	[INFO]	320	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:55:20,488	[INFO]	321	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:55:21,644	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:55:22,487	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:55:23,296	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:55:23,300	[INFO]	325	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:55:27,069	[INFO]	326	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:55:28,052	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:55:28,053	[INFO]	328	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:55:28,054	[DEBUG]	
2020-12-17 15:55:28,055	[INFO]	329	SUCCESS	+4.0	
2020-12-17 15:55:28,055	[DEBUG]	
2020-12-17 15:55:28,056	[INFO]	330	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:55:29,068	[INFO]	331	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:55:30,074	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:55:31,092	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:55:32,111	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:55:32,112	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:55:33,106	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:55:36,726	[INFO]	337	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:55:37,505	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:55:38,432	[INFO]	339	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:55:38,433	[INFO]	340	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:55:39,240	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:55:39,242	[INFO]	342	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:55:40,202	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:55:40,203	[INFO]	344	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:55:40,204	[INFO]	345	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:55:40,205	[INFO]	346	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:55:40,205	[DEBUG]	
2020-12-17 15:55:40,206	[INFO]	347	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:55:40,206	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:55:41,178	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:55:44,388	[INFO]	349	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:55:44,390	[INFO]	350	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:55:44,390	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:55:44,391	[INFO]	351	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:55:44,391	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:55:45,371	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:55:45,374	[INFO]	353	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:55:45,375	[DEBUG]	
2020-12-17 15:55:45,378	[INFO]	354	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:55:45,380	[INFO]	355	SUCCESS	+4.0	
2020-12-17 15:55:45,381	[DEBUG]	
2020-12-17 15:55:45,383	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:55:46,344	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:55:47,276	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:55:48,072	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:55:48,075	[INFO]	360	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:55:51,450	[INFO]	361	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:55:51,451	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:55:51,451	[INFO]	362	SUCCESS	+4.0	
2020-12-17 15:55:51,452	[DEBUG]	
2020-12-17 15:55:51,453	[INFO]	363	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:55:52,218	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:55:52,219	[INFO]	365	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:55:55,465	[INFO]	366	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:55:59,798	[INFO]	367	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:55:59,799	[INFO]	368	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:56:00,703	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:56:01,693	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:56:02,701	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:56:02,703	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:03,712	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:56:07,215	[INFO]	374	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:56:10,849	[INFO]	375	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:56:10,850	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:56:10,851	[INFO]	376	SUCCESS	+4.0	
2020-12-17 15:56:10,851	[DEBUG]	
2020-12-17 15:56:11,814	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:11,815	[INFO]	378	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:56:11,815	[DEBUG]	
2020-12-17 15:56:11,816	[INFO]	379	SUCCESS	+4.0	
2020-12-17 15:56:11,816	[DEBUG]	
2020-12-17 15:56:12,790	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:56:12,791	[INFO]	381	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:56:12,792	[INFO]	382	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:56:12,792	[DEBUG]	
2020-12-17 15:56:12,793	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:56:12,793	[INFO]	384	SUCCESS	+4.0	
2020-12-17 15:56:12,794	[DEBUG]	
2020-12-17 15:56:12,794	[INFO]	385	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:12,795	[INFO]	386	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:56:12,795	[DEBUG]	
2020-12-17 15:56:12,796	[INFO]	387	SUCCESS	+4.0	
2020-12-17 15:56:12,796	[DEBUG]	
2020-12-17 15:56:13,752	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:56:13,753	[INFO]	389	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:56:13,753	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:56:13,754	[INFO]	390	SUCCESS	+4.0	
2020-12-17 15:56:13,754	[DEBUG]	
2020-12-17 15:56:13,755	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:56:17,024	[INFO]	392	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:56:20,172	[INFO]	393	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:56:23,574	[INFO]	394	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:56:23,575	[INFO]	395	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:56:24,516	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:56:25,357	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:56:26,328	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:56:26,330	[INFO]	399	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:56:29,823	[INFO]	400	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:56:30,581	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:56:30,582	[INFO]	402	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:30,583	[DEBUG]	
2020-12-17 15:56:34,047	[INFO]	403	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:56:34,047	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:56:34,048	[INFO]	404	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:34,049	[DEBUG]	
2020-12-17 15:56:34,049	[INFO]	405	SUCCESS	+4.0	
2020-12-17 15:56:34,049	[DEBUG]	
2020-12-17 15:56:34,050	[INFO]	406	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 15:56:34,050	[DEBUG]	
2020-12-17 15:56:34,051	[INFO]	407	SUCCESS	+4.0	
2020-12-17 15:56:34,051	[DEBUG]	
2020-12-17 15:56:34,052	[INFO]	408	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:56:34,052	[INFO]	409	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:56:37,506	[INFO]	410	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:56:37,507	[INFO]	411	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:56:38,273	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:56:39,027	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:56:39,815	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:56:44,464	[INFO]	415	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:56:44,465	[INFO]	416	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:56:44,465	[INFO]	417	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:56:45,401	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:56:45,402	[INFO]	419	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:46,389	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:56:46,390	[INFO]	421	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:46,391	[INFO]	422	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:56:46,391	[DEBUG]	
2020-12-17 15:56:46,392	[INFO]	423	SUCCESS	+4.0	
2020-12-17 15:56:46,392	[DEBUG]	
2020-12-17 15:56:47,239	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:56:48,219	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:56:51,887	[INFO]	426	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:56:51,887	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:56:51,888	[INFO]	427	SUCCESS	+4.0	
2020-12-17 15:56:51,888	[DEBUG]	
2020-12-17 15:56:52,835	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:56:52,837	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:56:52,838	[INFO]	430	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:56,217	[INFO]	431	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:56,218	[INFO]	432	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:56:56,219	[INFO]	433	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:56,220	[INFO]	434	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:56:56,984	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:56:57,897	[INFO]	436	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:56:57,898	[INFO]	437	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:56:58,706	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:56:58,710	[INFO]	439	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:56:58,713	[INFO]	440	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:56:58,714	[DEBUG]	
2020-12-17 15:56:59,686	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:56:59,689	[INFO]	442	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:56:59,691	[INFO]	443	SUCCESS	+4.0	
2020-12-17 15:56:59,691	[DEBUG]	
2020-12-17 15:57:00,670	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:57:01,595	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:57:05,038	[INFO]	446	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:57:05,039	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:57:05,816	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:57:05,818	[INFO]	449	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:57:09,025	[INFO]	450	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:57:09,998	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:57:11,001	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:57:11,003	[INFO]	453	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:57:11,004	[INFO]	454	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:57:11,993	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:57:11,995	[INFO]	456	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:57:11,995	[DEBUG]	
2020-12-17 15:57:13,002	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:57:13,976	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:57:14,816	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:57:14,818	[INFO]	460	SUCCESS	+4.0	
2020-12-17 15:57:14,818	[DEBUG]	
2020-12-17 15:57:15,783	[INFO]	461	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:57:20,340	[INFO]	462	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:57:23,735	[INFO]	463	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:57:24,514	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:57:24,518	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:57:24,519	[INFO]	466	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:57:24,521	[INFO]	467	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:57:25,277	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:57:26,037	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:57:26,038	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:57:26,039	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:57:26,040	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:57:29,521	[INFO]	473	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:57:29,522	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 15:57:29,524	[INFO]	474	SUCCESS	+4.0	
2020-12-17 15:57:29,524	[DEBUG]	
2020-12-17 15:57:29,525	[INFO]	475	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:57:29,525	[DEBUG]	
2020-12-17 15:57:29,526	[INFO]	476	SUCCESS	+4.0	
2020-12-17 15:57:29,527	[DEBUG]	
2020-12-17 15:57:32,865	[INFO]	477	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:57:32,866	[INFO]	478	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:57:33,654	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:57:33,657	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:57:33,658	[INFO]	481	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:57:33,660	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:57:33,662	[INFO]	483	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:57:34,604	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:57:34,605	[INFO]	485	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:57:34,606	[INFO]	486	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:57:37,870	[INFO]	487	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:57:38,689	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:57:38,691	[INFO]	489	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:57:39,629	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:57:39,631	[INFO]	491	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:57:39,632	[INFO]	492	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:57:43,078	[INFO]	493	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:57:43,078	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:57:46,571	[INFO]	494	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:57:47,571	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:57:51,097	[INFO]	496	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 15:57:51,098	[INFO]	497	SUCCESS	+4.0	
2020-12-17 15:57:51,098	[DEBUG]	
2020-12-17 15:57:54,644	[INFO]	498	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:57:54,644	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:57:54,645	[INFO]	499	SUCCESS	+4.0	
2020-12-17 15:57:54,645	[DEBUG]	
2020-12-17 15:57:54,646	[INFO]	500	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:57:54,646	[DEBUG]	
2020-12-17 15:57:54,646	[INFO]	==== END ====
2020-12-17 15:57:54,647	[INFO]	Reason: step budget
2020-12-17 15:57:54,647	[INFO]	
2020-12-17 15:57:54,647	[INFO]	========== EPOCH 9 ==========
2020-12-17 15:57:54,647	[INFO]	==== WARMUP ====
2020-12-17 15:57:58,259	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:57:58,260	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:58:01,822	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:58:01,822	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:58:06,096	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 15:58:06,096	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:58:09,702	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 15:58:09,702	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 15:58:09,703	[INFO]	==== START ====
2020-12-17 15:58:10,815	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:58:11,705	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:58:12,696	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:58:13,514	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:58:13,516	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:58:14,627	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:58:14,629	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:58:15,483	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:58:16,270	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:58:21,078	[INFO]	10	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:58:21,079	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:58:22,018	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:58:25,265	[INFO]	13	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:58:26,221	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:58:27,005	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:58:31,654	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:58:31,657	[INFO]	17	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:58:31,657	[DEBUG]	
2020-12-17 15:58:31,658	[INFO]	18	SUCCESS	+4.0	
2020-12-17 15:58:31,659	[DEBUG]	
2020-12-17 15:58:31,660	[INFO]	19	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:58:36,137	[INFO]	20	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:58:37,111	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:58:38,039	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:58:38,835	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:58:38,836	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:58:38,837	[INFO]	25	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:58:38,838	[INFO]	26	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:58:39,774	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:58:43,190	[INFO]	28	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:58:43,192	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:58:46,584	[INFO]	30	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:58:46,585	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 15:58:46,585	[INFO]	31	SUCCESS	+4.0	
2020-12-17 15:58:46,586	[DEBUG]	
2020-12-17 15:58:49,810	[INFO]	32	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 15:58:49,812	[INFO]	33	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:58:49,812	[DEBUG]	
2020-12-17 15:58:49,813	[INFO]	34	SUCCESS	+4.0	
2020-12-17 15:58:49,813	[DEBUG]	
2020-12-17 15:58:49,814	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:58:49,814	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:58:53,197	[INFO]	37	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:58:54,185	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:58:57,854	[INFO]	39	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:58:58,673	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:58:58,675	[INFO]	41	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 15:58:59,485	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:58:59,487	[INFO]	43	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:58:59,488	[INFO]	44	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:58:59,489	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:59:00,314	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 15:59:00,317	[INFO]	47	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:59:00,318	[INFO]	48	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:59:03,917	[INFO]	49	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:59:03,918	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:59:03,919	[INFO]	50	SUCCESS	+4.0	
2020-12-17 15:59:03,919	[DEBUG]	
2020-12-17 15:59:07,537	[INFO]	51	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:59:07,538	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 15:59:07,539	[INFO]	52	SUCCESS	+4.0	
2020-12-17 15:59:07,539	[DEBUG]	
2020-12-17 15:59:08,297	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:59:09,308	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:59:10,085	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:11,029	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:59:11,966	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:59:12,928	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:59:12,930	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:59:12,931	[INFO]	60	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:59:12,931	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:59:12,932	[INFO]	62	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:12,932	[DEBUG]	
2020-12-17 15:59:13,905	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:13,909	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:13,911	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:13,915	[INFO]	66	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:59:13,917	[INFO]	67	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:59:13,919	[INFO]	68	SUCCESS	+4.0	
2020-12-17 15:59:13,920	[DEBUG]	
2020-12-17 15:59:13,922	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:59:13,925	[INFO]	70	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 15:59:13,928	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 15:59:14,808	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:59:15,793	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:59:16,737	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:59:16,738	[INFO]	75	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:16,739	[INFO]	76	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:59:16,740	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 15:59:17,713	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 15:59:17,714	[INFO]	78	SUCCESS	+4.0	
2020-12-17 15:59:17,714	[DEBUG]	
2020-12-17 15:59:18,521	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:18,522	[INFO]	80	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:59:18,523	[DEBUG]	
2020-12-17 15:59:19,445	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 15:59:19,446	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:19,447	[INFO]	83	SUCCESS	+4.0	
2020-12-17 15:59:19,447	[DEBUG]	
2020-12-17 15:59:22,951	[INFO]	84	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 15:59:22,952	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 15:59:22,953	[INFO]	85	SUCCESS	+4.0	
2020-12-17 15:59:22,953	[DEBUG]	
2020-12-17 15:59:22,954	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:22,954	[INFO]	87	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:26,234	[INFO]	88	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:59:27,196	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:59:28,135	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:59:28,136	[INFO]	91	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 15:59:29,743	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:30,614	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 15:59:34,317	[INFO]	94	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 15:59:35,204	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 15:59:35,205	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:35,206	[INFO]	97	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:59:35,206	[DEBUG]	
2020-12-17 15:59:40,162	[INFO]	98	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:59:40,163	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:59:40,164	[INFO]	99	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:59:40,164	[DEBUG]	
2020-12-17 15:59:40,165	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:43,559	[INFO]	101	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 15:59:43,560	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 15:59:43,561	[INFO]	102	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 15:59:43,561	[DEBUG]	
2020-12-17 15:59:43,562	[INFO]	103	SUCCESS	+4.0	
2020-12-17 15:59:43,563	[DEBUG]	
2020-12-17 15:59:43,564	[INFO]	104	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:43,565	[INFO]	105	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 15:59:44,535	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:45,345	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 15:59:45,346	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 15:59:46,291	[INFO]	109	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:59:47,507	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:47,508	[INFO]	111	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:47,509	[INFO]	112	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 15:59:47,509	[DEBUG]	
2020-12-17 15:59:48,489	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 15:59:48,490	[INFO]	114	SUCCESS	+4.0	
2020-12-17 15:59:48,491	[DEBUG]	
2020-12-17 15:59:53,025	[INFO]	115	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 15:59:53,026	[INFO]	116	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 15:59:53,777	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:59:53,780	[INFO]	118	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 15:59:54,825	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 15:59:58,037	[INFO]	120	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 15:59:58,969	[INFO]	121	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:00:02,615	[INFO]	122	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:00:02,618	[INFO]	123	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:00:02,618	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:00:03,605	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:03,606	[INFO]	125	SUCCESS	+4.0	
2020-12-17 16:00:03,607	[DEBUG]	
2020-12-17 16:00:03,608	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:00:03,608	[INFO]	127	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:00:03,609	[INFO]	128	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:04,422	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:00:07,639	[INFO]	130	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:07,640	[INFO]	131	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:00:08,470	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:09,486	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:09,490	[INFO]	134	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:00:09,491	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:00:09,492	[INFO]	135	SUCCESS	+4.0	
2020-12-17 16:00:09,493	[DEBUG]	
2020-12-17 16:00:09,495	[INFO]	136	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:09,497	[INFO]	137	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:10,482	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:00:11,482	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:00:12,282	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:00:12,284	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:12,285	[INFO]	142	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:00:12,285	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:00:12,286	[INFO]	143	SUCCESS	+4.0	
2020-12-17 16:00:12,286	[DEBUG]	
2020-12-17 16:00:12,287	[INFO]	144	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:00:12,288	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:00:12,289	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:12,289	[INFO]	147	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:00:12,290	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:00:12,291	[INFO]	149	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:00:12,291	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:00:12,292	[INFO]	150	SUCCESS	+4.0	
2020-12-17 16:00:12,292	[DEBUG]	
2020-12-17 16:00:15,783	[INFO]	151	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:00:15,785	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:15,785	[INFO]	153	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:15,786	[INFO]	154	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:15,787	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:00:15,788	[INFO]	156	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:00:15,788	[INFO]	157	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:00:15,789	[DEBUG]	
2020-12-17 16:00:15,789	[INFO]	158	SUCCESS	+4.0	
2020-12-17 16:00:15,789	[DEBUG]	
2020-12-17 16:00:15,790	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:15,791	[INFO]	160	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:00:15,792	[INFO]	161	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:00:16,892	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:00:17,888	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:00:21,211	[INFO]	164	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:00:22,136	[INFO]	165	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:00:22,916	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:00:23,851	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:27,121	[INFO]	168	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:00:27,876	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:00:28,806	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:00:28,807	[INFO]	171	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:00:28,807	[INFO]	172	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:00:28,808	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:00:28,808	[INFO]	173	SUCCESS	+4.0	
2020-12-17 16:00:28,809	[DEBUG]	
2020-12-17 16:00:32,668	[INFO]	174	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:00:32,669	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:00:32,670	[INFO]	175	SUCCESS	+4.0	
2020-12-17 16:00:32,670	[DEBUG]	
2020-12-17 16:00:32,671	[INFO]	176	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:00:33,438	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:00:39,149	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:00:39,152	[INFO]	179	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:00:39,152	[DEBUG]	
2020-12-17 16:00:43,085	[INFO]	180	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:00:43,086	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:00:43,086	[INFO]	182	SUCCESS	+4.0	
2020-12-17 16:00:43,087	[DEBUG]	
2020-12-17 16:00:43,087	[INFO]	183	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:00:43,088	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:00:44,050	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:00:47,356	[INFO]	186	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:00:47,360	[INFO]	187	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:00:48,322	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:00:48,323	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:00:48,324	[INFO]	190	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:00:49,103	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:00:49,104	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:00:49,105	[INFO]	193	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:00:52,922	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:00:52,923	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:00:52,924	[INFO]	195	SUCCESS	+4.0	
2020-12-17 16:00:52,925	[DEBUG]	
2020-12-17 16:00:52,926	[INFO]	196	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:00:52,927	[INFO]	197	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:00:52,928	[DEBUG]	
2020-12-17 16:00:52,929	[INFO]	198	SUCCESS	+4.0	
2020-12-17 16:00:52,929	[DEBUG]	
2020-12-17 16:00:59,473	[INFO]	199	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:01:01,200	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:01:09,160	[INFO]	201	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:01:09,161	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:01:09,163	[INFO]	202	SUCCESS	+4.0	
2020-12-17 16:01:09,163	[DEBUG]	
2020-12-17 16:01:09,165	[INFO]	203	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:01:09,165	[DEBUG]	
2020-12-17 16:01:09,167	[INFO]	204	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:01:09,168	[DEBUG]	
2020-12-17 16:01:09,169	[INFO]	205	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:01:09,170	[DEBUG]	
2020-12-17 16:01:09,171	[INFO]	206	SUCCESS	+4.0	
2020-12-17 16:01:09,172	[DEBUG]	
2020-12-17 16:01:09,173	[INFO]	207	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:01:11,182	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:01:12,356	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:01:12,359	[INFO]	210	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:01:12,360	[INFO]	211	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:01:12,361	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:01:13,384	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:01:13,386	[INFO]	213	SUCCESS	+4.0	
2020-12-17 16:01:13,386	[DEBUG]	
2020-12-17 16:01:13,388	[INFO]	214	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:01:14,733	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:01:16,051	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:01:16,052	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:01:16,053	[INFO]	218	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:01:16,054	[INFO]	219	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:01:17,290	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:01:21,320	[INFO]	221	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:01:21,321	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:01:27,721	[INFO]	222	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:01:27,724	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,26 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:01:35,808	[INFO]	223	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:01:35,810	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:01:43,348	[INFO]	224	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:01:43,350	[INFO]	225	SUCCESS	+4.0	
2020-12-17 16:01:43,350	[DEBUG]	
2020-12-17 16:01:43,352	[INFO]	226	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:01:43,354	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:01:51,309	[INFO]	227	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:01:51,312	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
!             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:01:51,314	[INFO]	228	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:01:51,314	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:01:51,316	[INFO]	229	SUCCESS	+4.0	
2020-12-17 16:01:51,318	[DEBUG]	
2020-12-17 16:01:51,320	[INFO]	230	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:01:51,321	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:02:01,236	[INFO]	231	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:02:01,237	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:02:03,833	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:02:14,635	[INFO]	233	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:02:16,592	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:02:27,435	[INFO]	235	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:02:27,436	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:02:37,255	[INFO]	236	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:02:37,257	[INFO]	237	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:02:37,257	[DEBUG]	
2020-12-17 16:02:37,258	[INFO]	238	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:02:37,259	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:02:38,985	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:02:40,467	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:02:40,468	[INFO]	241	SUCCESS	+4.0	
2020-12-17 16:02:40,469	[DEBUG]	
2020-12-17 16:02:41,509	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:02:42,793	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:02:42,794	[INFO]	244	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:02:42,795	[DEBUG]	
2020-12-17 16:02:42,795	[INFO]	245	SUCCESS	+4.0	
2020-12-17 16:02:42,796	[DEBUG]	
2020-12-17 16:02:42,797	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:02:42,798	[INFO]	247	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:02:43,811	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:02:48,172	[INFO]	249	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:02:48,174	[INFO]	250	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:02:48,174	[DEBUG]	
2020-12-17 16:02:48,175	[INFO]	251	SUCCESS	+4.0	
2020-12-17 16:02:48,175	[DEBUG]	
2020-12-17 16:02:48,176	[INFO]	252	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:02:52,647	[INFO]	253	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:02:57,946	[INFO]	254	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:02:57,947	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:02:57,948	[INFO]	255	SUCCESS	+4.0	
2020-12-17 16:02:57,948	[DEBUG]	
2020-12-17 16:02:57,949	[INFO]	256	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:02:57,949	[DEBUG]	
2020-12-17 16:02:59,247	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:02:59,249	[INFO]	258	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:02:59,250	[INFO]	259	SUCCESS	+4.0	
2020-12-17 16:02:59,250	[DEBUG]	
2020-12-17 16:03:00,865	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:03:08,335	[INFO]	261	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:03:15,640	[INFO]	262	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:03:15,641	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:03:22,602	[INFO]	263	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:03:22,604	[INFO]	264	SUCCESS	+4.0	
2020-12-17 16:03:22,605	[DEBUG]	
2020-12-17 16:03:22,606	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:03:29,670	[INFO]	266	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:03:36,579	[INFO]	267	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:03:36,581	[INFO]	268	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:03:43,535	[INFO]	269	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:03:43,538	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:03:43,541	[INFO]	271	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:03:51,146	[INFO]	272	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:03:51,149	[INFO]	273	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:03:52,879	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:03:53,927	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:03:53,929	[INFO]	276	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:03:55,220	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:03:55,221	[INFO]	278	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:03:56,476	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:03:56,478	[INFO]	280	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:03:57,771	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:03:57,772	[INFO]	282	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:04:02,218	[INFO]	283	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:04:03,577	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:04:03,579	[INFO]	285	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:04:03,580	[INFO]	286	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:04:04,939	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:04:04,940	[INFO]	288	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:04:04,942	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:04:06,002	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:04:11,160	[INFO]	291	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:04:11,162	[INFO]	292	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:04:16,669	[INFO]	293	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:04:16,671	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:04:16,672	[INFO]	294	SUCCESS	+4.0	
2020-12-17 16:04:16,672	[DEBUG]	
2020-12-17 16:04:16,674	[INFO]	295	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:04:21,640	[INFO]	296	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:04:23,145	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:04:24,414	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:04:30,212	[INFO]	299	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:04:31,828	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:04:33,361	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:04:33,362	[INFO]	302	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:04:37,908	[INFO]	303	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:04:37,909	[INFO]	304	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:04:37,910	[DEBUG]	
2020-12-17 16:04:39,713	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:04:39,719	[INFO]	306	SUCCESS	+4.0	
2020-12-17 16:04:39,720	[DEBUG]	
2020-12-17 16:04:41,886	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:04:43,761	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:04:43,763	[INFO]	309	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:04:43,765	[INFO]	310	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:04:43,767	[INFO]	311	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:04:45,143	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:04:45,145	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:04:46,780	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:04:46,782	[INFO]	315	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:04:46,783	[INFO]	316	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:04:53,611	[INFO]	317	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:04:53,612	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:04:55,134	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:04:56,416	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:04:57,432	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:05:02,319	[INFO]	322	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:05:02,320	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:05:02,321	[INFO]	323	SUCCESS	+4.0	
2020-12-17 16:05:02,321	[DEBUG]	
2020-12-17 16:05:03,574	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:05:04,831	[INFO]	325	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:05:06,143	[INFO]	326	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:05:07,707	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:05:07,709	[INFO]	328	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:05:07,710	[INFO]	329	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:05:07,711	[DEBUG]	
2020-12-17 16:05:07,712	[INFO]	330	SUCCESS	+4.0	
2020-12-17 16:05:07,712	[DEBUG]	
2020-12-17 16:05:08,919	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:05:08,920	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:05:08,921	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:05:08,923	[INFO]	334	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:05:09,928	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:05:11,241	[INFO]	336	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:05:15,824	[INFO]	337	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:05:15,826	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:05:16,838	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:05:16,840	[INFO]	339	SUCCESS	+4.0	
2020-12-17 16:05:16,841	[DEBUG]	
2020-12-17 16:05:16,842	[INFO]	340	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:05:16,843	[DEBUG]	
2020-12-17 16:05:18,103	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:05:19,420	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:05:19,421	[INFO]	343	SUCCESS	+4.0	
2020-12-17 16:05:19,421	[DEBUG]	
2020-12-17 16:05:19,422	[INFO]	344	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:05:20,474	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:05:25,922	[INFO]	346	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:05:25,924	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:05:25,925	[INFO]	347	SUCCESS	+4.0	
2020-12-17 16:05:25,925	[DEBUG]	
2020-12-17 16:05:25,927	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:05:27,590	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:05:28,906	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:05:33,518	[INFO]	351	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:05:39,623	[INFO]	352	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:05:43,937	[INFO]	353	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:05:45,309	[INFO]	354	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:05:50,437	[INFO]	355	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:05:51,776	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:05:51,778	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:05:53,409	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:05:54,568	[INFO]	359	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:05:54,570	[INFO]	360	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:05:59,462	[INFO]	361	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:06:06,733	[INFO]	362	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:06:06,735	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:06:13,737	[INFO]	363	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:06:13,742	[INFO]	364	SUCCESS	+4.0	
2020-12-17 16:06:13,742	[DEBUG]	
2020-12-17 16:06:13,744	[INFO]	365	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:06:15,646	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:06:20,202	[INFO]	367	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:06:20,204	[INFO]	368	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:06:20,206	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:06:26,931	[INFO]	370	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:06:26,934	[INFO]	371	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:06:26,935	[DEBUG]	
2020-12-17 16:06:29,087	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:06:29,089	[INFO]	373	SUCCESS	+4.0	
2020-12-17 16:06:29,089	[DEBUG]	
2020-12-17 16:06:30,804	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:06:30,806	[INFO]	375	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:06:30,809	[DEBUG]	
2020-12-17 16:06:36,248	[INFO]	376	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:06:40,867	[INFO]	377	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:06:40,868	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:06:40,870	[INFO]	378	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:06:40,870	[DEBUG]	
2020-12-17 16:06:40,872	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:06:40,872	[INFO]	380	SUCCESS	+4.0	
2020-12-17 16:06:40,873	[DEBUG]	
2020-12-17 16:06:42,221	[INFO]	381	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:06:48,036	[INFO]	382	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:06:48,038	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:06:48,041	[INFO]	383	SUCCESS	+4.0	
2020-12-17 16:06:48,042	[DEBUG]	
2020-12-17 16:06:48,044	[INFO]	384	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:06:48,045	[INFO]	385	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:06:48,046	[DEBUG]	
2020-12-17 16:06:48,051	[INFO]	386	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:06:48,053	[INFO]	387	SUCCESS	+4.0	
2020-12-17 16:06:48,054	[DEBUG]	
2020-12-17 16:06:49,637	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:06:57,268	[INFO]	389	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:06:57,269	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:06:57,271	[INFO]	390	SUCCESS	+4.0	
2020-12-17 16:06:57,271	[DEBUG]	
2020-12-17 16:06:58,882	[INFO]	391	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:06:58,884	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:06:58,885	[INFO]	393	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:07:03,325	[INFO]	394	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:07:04,573	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:07:04,575	[INFO]	396	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:07:08,969	[INFO]	397	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:07:08,970	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:07:10,220	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:07:11,200	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:07:11,201	[INFO]	401	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:07:11,203	[INFO]	402	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:07:11,204	[INFO]	403	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:07:11,204	[DEBUG]	
2020-12-17 16:07:15,641	[INFO]	404	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:07:15,642	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:07:15,644	[INFO]	405	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:07:15,644	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:07:15,645	[INFO]	406	SUCCESS	+4.0	
2020-12-17 16:07:15,646	[DEBUG]	
2020-12-17 16:07:15,646	[INFO]	407	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:07:15,647	[INFO]	408	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:07:15,648	[DEBUG]	
2020-12-17 16:07:15,648	[INFO]	409	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:07:16,603	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:07:17,837	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:07:17,838	[INFO]	412	SUCCESS	+4.0	
2020-12-17 16:07:17,838	[DEBUG]	
2020-12-17 16:07:19,174	[INFO]	413	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:07:24,023	[INFO]	414	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:07:24,024	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:07:24,025	[INFO]	415	SUCCESS	+4.0	
2020-12-17 16:07:24,025	[DEBUG]	
2020-12-17 16:07:25,380	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:07:26,739	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:07:26,740	[INFO]	418	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:07:26,741	[INFO]	419	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:07:31,474	[INFO]	420	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:07:32,790	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:07:32,792	[INFO]	422	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:07:32,792	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:07:34,199	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:07:34,202	[INFO]	424	SUCCESS	+4.0	
2020-12-17 16:07:34,202	[DEBUG]	
2020-12-17 16:07:40,188	[INFO]	425	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:07:45,084	[INFO]	426	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:07:45,086	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:07:49,379	[INFO]	427	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:07:49,381	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:07:49,381	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:07:54,849	[INFO]	429	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:07:54,852	[INFO]	430	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:07:54,852	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:07:56,661	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:07:57,926	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:07:57,928	[INFO]	433	SUCCESS	+4.0	
2020-12-17 16:07:57,928	[DEBUG]	
2020-12-17 16:07:57,930	[INFO]	434	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:07:57,931	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:07:58,989	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:07:58,991	[INFO]	437	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:08:04,432	[INFO]	438	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:08:09,356	[INFO]	439	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:08:15,173	[INFO]	440	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:08:15,175	[INFO]	441	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:08:16,896	[INFO]	442	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:08:16,900	[INFO]	443	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:08:18,280	[INFO]	444	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:08:19,534	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:08:19,536	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:08:19,537	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:08:20,869	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:08:22,091	[INFO]	449	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:08:22,094	[INFO]	450	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:08:23,350	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:08:23,352	[INFO]	452	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:08:23,353	[INFO]	453	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:08:24,628	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:08:24,630	[INFO]	455	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:08:24,631	[DEBUG]	
2020-12-17 16:08:24,631	[INFO]	456	SUCCESS	+4.0	
2020-12-17 16:08:24,632	[DEBUG]	
2020-12-17 16:08:30,783	[INFO]	457	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:08:30,784	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:08:32,064	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:08:32,066	[INFO]	459	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:08:32,066	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:08:34,010	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:08:34,012	[INFO]	461	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:08:34,013	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:08:35,636	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:08:36,693	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:08:36,695	[INFO]	464	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:08:36,696	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:08:36,696	[INFO]	465	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:08:36,697	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:08:36,698	[INFO]	466	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:08:37,927	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:08:38,945	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:08:38,946	[INFO]	469	SUCCESS	+4.0	
2020-12-17 16:08:38,947	[DEBUG]	
2020-12-17 16:08:39,898	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:08:39,900	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:08:41,167	[INFO]	472	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:08:42,213	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:08:43,448	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:08:43,449	[INFO]	475	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:08:43,450	[DEBUG]	
2020-12-17 16:08:43,451	[INFO]	476	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:08:43,451	[DEBUG]	
2020-12-17 16:08:47,968	[INFO]	477	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:08:47,969	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:08:52,416	[INFO]	478	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:08:56,960	[INFO]	479	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:08:56,961	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:01,502	[INFO]	480	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:09:01,504	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:01,508	[INFO]	481	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:09:01,509	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:01,513	[INFO]	482	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:09:01,517	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:01,519	[INFO]	483	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:09:01,520	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:06,047	[INFO]	484	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:09:06,049	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!         else if (a.charAt(0) == b.charAt(0)) {
!             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:06,050	[INFO]	485	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:09:06,051	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:07,686	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:09:07,692	[INFO]	487	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:09:07,693	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:07,695	[INFO]	488	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:09:07,696	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:07,698	[INFO]	489	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:09:07,699	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:07,701	[INFO]	490	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:09:07,702	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:07,703	[INFO]	491	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:09:07,704	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,21 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:13,749	[INFO]	492	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:09:15,048	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:09:16,044	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:09:17,243	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:09:17,246	[INFO]	496	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:09:17,247	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:17,249	[INFO]	497	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:09:17,250	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,24 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
!          if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:21,688	[INFO]	498	SUCCESS	+4.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:09:21,689	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 12,20 ****
   */
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
!         if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 12,21 ----
   */
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
!          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:09:22,938	[INFO]	499	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:09:27,169	[INFO]	500	SUCCESS	 9.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:09:27,169	[INFO]	==== END ====
2020-12-17 16:09:27,170	[INFO]	Reason: step budget
2020-12-17 16:09:27,170	[INFO]	
2020-12-17 16:09:27,171	[INFO]	========== EPOCH 10 ==========
2020-12-17 16:09:27,171	[INFO]	==== WARMUP ====
2020-12-17 16:09:31,768	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:09:31,768	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:09:36,263	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:09:36,263	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:09:40,787	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:09:40,787	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:09:45,249	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 16:09:45,249	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:09:45,250	[INFO]	==== START ====
2020-12-17 16:09:49,476	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:09:50,778	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:09:52,019	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:09:56,983	[INFO]	4	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:09:56,984	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:10:01,390	[INFO]	5	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:10:02,426	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:10:07,382	[INFO]	7	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:10:07,383	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,22 ****
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:10:11,889	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:10:11,890	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:10:11,891	[INFO]	9	SUCCESS	+4.0	
2020-12-17 16:10:11,891	[DEBUG]	
2020-12-17 16:10:13,191	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:10:14,515	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:10:15,998	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:10:17,678	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:10:18,685	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:10:18,687	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:10:18,688	[INFO]	16	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:10:18,689	[DEBUG]	
2020-12-17 16:10:19,941	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:10:21,173	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:10:22,388	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:10:23,441	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:10:23,443	[INFO]	21	SUCCESS	+4.0	
2020-12-17 16:10:23,443	[DEBUG]	
2020-12-17 16:10:24,743	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:10:25,767	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:10:25,769	[INFO]	24	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:10:25,769	[DEBUG]	
2020-12-17 16:10:25,770	[INFO]	25	SUCCESS	+4.0	
2020-12-17 16:10:25,770	[DEBUG]	
2020-12-17 16:10:25,772	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:10:30,067	[INFO]	27	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:10:34,583	[INFO]	28	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:10:34,584	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:10:36,096	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:10:40,884	[INFO]	30	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:10:40,886	[INFO]	31	SUCCESS	+4.0	
2020-12-17 16:10:40,887	[DEBUG]	
2020-12-17 16:10:40,888	[INFO]	32	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:10:40,888	[DEBUG]	
2020-12-17 16:10:42,457	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:10:44,019	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:10:44,020	[INFO]	35	SUCCESS	+4.0	
2020-12-17 16:10:44,021	[DEBUG]	
2020-12-17 16:10:49,762	[INFO]	36	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:10:51,091	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:10:51,092	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:10:55,644	[INFO]	39	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:10:56,884	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:10:58,135	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:10:59,378	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:10:59,380	[INFO]	43	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:11:03,617	[INFO]	44	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:11:03,619	[INFO]	45	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:11:03,619	[DEBUG]	
2020-12-17 16:11:03,620	[INFO]	46	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:11:08,441	[INFO]	47	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:11:08,442	[INFO]	48	SUCCESS	+4.0	
2020-12-17 16:11:08,442	[DEBUG]	
2020-12-17 16:11:12,854	[INFO]	49	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:11:14,130	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:11:14,132	[INFO]	51	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:11:14,132	[DEBUG]	
2020-12-17 16:11:14,133	[INFO]	52	SUCCESS	+4.0	
2020-12-17 16:11:14,134	[DEBUG]	
2020-12-17 16:11:14,134	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:11:14,136	[INFO]	54	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:11:18,613	[INFO]	55	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:11:18,614	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:11:18,615	[INFO]	57	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:11:18,616	[INFO]	58	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:11:18,617	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:11:18,618	[INFO]	59	SUCCESS	+4.0	
2020-12-17 16:11:18,619	[DEBUG]	
2020-12-17 16:11:19,629	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:11:19,631	[INFO]	61	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:11:19,632	[INFO]	62	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:11:19,632	[DEBUG]	
2020-12-17 16:11:19,633	[INFO]	63	SUCCESS	+4.0	
2020-12-17 16:11:19,634	[DEBUG]	
2020-12-17 16:11:23,822	[INFO]	64	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:11:23,823	[INFO]	65	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:11:23,824	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:11:23,825	[INFO]	67	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:11:25,161	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:11:26,180	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:11:26,182	[INFO]	70	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:11:26,183	[DEBUG]	
2020-12-17 16:11:30,666	[INFO]	71	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:11:30,667	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:11:30,668	[INFO]	72	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:11:30,668	[DEBUG]	
2020-12-17 16:11:30,669	[INFO]	73	SUCCESS	+4.0	
2020-12-17 16:11:30,670	[DEBUG]	
2020-12-17 16:11:30,671	[INFO]	74	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:11:35,491	[INFO]	75	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:11:35,492	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:11:35,493	[INFO]	76	SUCCESS	+4.0	
2020-12-17 16:11:35,494	[DEBUG]	
2020-12-17 16:11:39,694	[INFO]	77	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:11:45,616	[INFO]	78	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:11:50,946	[INFO]	79	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:11:50,946	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:11:54,529	[INFO]	80	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:11:54,530	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,25 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 16,28 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:11:58,058	[INFO]	81	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:11:58,058	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:11:58,060	[INFO]	82	SUCCESS	+4.0	
2020-12-17 16:11:58,060	[DEBUG]	
2020-12-17 16:11:58,828	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:11:59,752	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:12:03,184	[INFO]	85	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:12:04,116	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:04,117	[INFO]	87	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:12:04,118	[INFO]	88	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:12:04,879	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:12:04,880	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:12:05,824	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:12:05,826	[INFO]	92	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:12:06,804	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:12:06,806	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:12:06,807	[INFO]	95	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:12:06,808	[DEBUG]	
2020-12-17 16:12:06,809	[INFO]	96	SUCCESS	+4.0	
2020-12-17 16:12:06,809	[DEBUG]	
2020-12-17 16:12:06,811	[INFO]	97	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:12:10,091	[INFO]	98	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:12:10,092	[INFO]	99	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:12:11,038	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:12:15,930	[INFO]	101	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:12:15,930	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:12:15,931	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:12:15,932	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:12:15,933	[INFO]	103	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:12:15,933	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:12:15,934	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:15,934	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:12:15,935	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:15,935	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:12:15,936	[INFO]	106	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:15,937	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:12:16,667	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:12:16,668	[INFO]	108	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:16,669	[DEBUG]	
2020-12-17 16:12:16,669	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:16,670	[INFO]	110	SUCCESS	+4.0	
2020-12-17 16:12:16,670	[DEBUG]	
2020-12-17 16:12:19,772	[INFO]	111	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:12:19,773	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:12:19,774	[INFO]	113	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:12:19,775	[INFO]	114	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:12:20,585	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:12:20,587	[INFO]	116	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:12:20,588	[INFO]	117	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:12:21,497	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:12:22,295	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:12:25,953	[INFO]	120	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:12:26,911	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:12:26,914	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:12:26,917	[INFO]	123	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:12:27,706	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:28,682	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:12:28,683	[INFO]	126	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:12:28,683	[DEBUG]	
2020-12-17 16:12:28,684	[INFO]	127	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:12:28,684	[DEBUG]	
2020-12-17 16:12:28,685	[INFO]	128	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:12:28,685	[DEBUG]	
2020-12-17 16:12:28,686	[INFO]	129	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:12:28,687	[INFO]	130	SUCCESS	+4.0	
2020-12-17 16:12:28,687	[DEBUG]	
2020-12-17 16:12:29,626	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:12:34,257	[INFO]	132	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:12:34,258	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:12:34,994	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:12:34,997	[INFO]	134	SUCCESS	+4.0	
2020-12-17 16:12:34,997	[DEBUG]	
2020-12-17 16:12:35,931	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:12:36,874	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:12:37,825	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:12:37,826	[INFO]	138	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:12:38,639	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:12:38,644	[INFO]	140	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:12:38,644	[DEBUG]	
2020-12-17 16:12:38,646	[INFO]	141	SUCCESS	+4.0	
2020-12-17 16:12:38,646	[DEBUG]	
2020-12-17 16:12:42,136	[INFO]	142	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:12:43,076	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:12:46,346	[INFO]	144	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:12:47,123	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:12:47,124	[INFO]	146	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:12:47,124	[DEBUG]	
2020-12-17 16:12:47,125	[INFO]	147	SUCCESS	+4.0	
2020-12-17 16:12:47,125	[DEBUG]	
2020-12-17 16:12:47,126	[INFO]	148	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:12:47,902	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:13:01,424	[INFO]	150	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:02,337	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:13:02,338	[INFO]	152	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:13:03,309	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:13:04,268	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:13:07,499	[INFO]	155	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:13:07,500	[INFO]	156	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:13:08,460	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:13:09,518	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:13:10,532	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:10,535	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:10,536	[INFO]	161	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:13:10,538	[INFO]	162	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:13:10,540	[INFO]	163	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:13:11,526	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:13:11,527	[INFO]	165	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:13:11,528	[INFO]	166	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:11,528	[DEBUG]	
2020-12-17 16:13:11,529	[INFO]	167	SUCCESS	+4.0	
2020-12-17 16:13:11,529	[DEBUG]	
2020-12-17 16:13:11,530	[INFO]	168	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:13:11,531	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:11,531	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:12,364	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:13:15,824	[INFO]	172	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:13:15,825	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:13:16,768	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:13:16,770	[INFO]	174	SUCCESS	+4.0	
2020-12-17 16:13:16,770	[DEBUG]	
2020-12-17 16:13:16,772	[INFO]	175	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:13:20,186	[INFO]	176	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:13:20,187	[INFO]	177	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:13:20,188	[DEBUG]	
2020-12-17 16:13:20,189	[INFO]	178	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:13:21,142	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:13:21,145	[INFO]	180	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:13:21,146	[DEBUG]	
2020-12-17 16:13:21,148	[INFO]	181	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:13:21,148	[DEBUG]	
2020-12-17 16:13:21,149	[INFO]	182	SUCCESS	+4.0	
2020-12-17 16:13:21,150	[DEBUG]	
2020-12-17 16:13:21,152	[INFO]	183	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:13:21,153	[INFO]	184	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:13:21,156	[INFO]	185	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:22,120	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:13:22,121	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:13:22,925	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:13:24,006	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:13:27,293	[INFO]	190	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:13:28,246	[INFO]	191	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:13:29,181	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:13:32,604	[INFO]	193	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:13:32,605	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:13:32,606	[INFO]	194	SUCCESS	+4.0	
2020-12-17 16:13:32,606	[DEBUG]	
2020-12-17 16:13:33,558	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:13:36,980	[INFO]	196	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:13:36,981	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:13:36,982	[INFO]	197	SUCCESS	+4.0	
2020-12-17 16:13:36,982	[DEBUG]	
2020-12-17 16:13:36,983	[INFO]	198	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:13:36,983	[INFO]	199	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:13:36,984	[INFO]	200	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:13:37,911	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:13:38,884	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:38,886	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:13:42,043	[INFO]	204	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:13:42,044	[INFO]	205	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:13:42,045	[INFO]	206	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:13:42,045	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:13:42,916	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:13:43,699	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:13:43,700	[INFO]	209	SUCCESS	+4.0	
2020-12-17 16:13:43,701	[DEBUG]	
2020-12-17 16:13:44,635	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:13:48,151	[INFO]	211	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:13:51,370	[INFO]	212	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:13:51,371	[INFO]	213	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:13:51,372	[DEBUG]	
2020-12-17 16:13:52,150	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:13:52,151	[INFO]	215	SUCCESS	+4.0	
2020-12-17 16:13:52,151	[DEBUG]	
2020-12-17 16:13:52,152	[INFO]	216	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:13:52,153	[INFO]	217	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:13:55,355	[INFO]	218	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:13:58,701	[INFO]	219	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:13:58,703	[INFO]	220	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:14:01,852	[INFO]	221	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:14:02,627	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:14:03,547	[INFO]	223	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:14:03,549	[INFO]	224	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:14:04,329	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:14:07,764	[INFO]	226	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:14:07,766	[INFO]	227	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:14:07,766	[DEBUG]	
2020-12-17 16:14:07,767	[INFO]	228	SUCCESS	+4.0	
2020-12-17 16:14:07,767	[DEBUG]	
2020-12-17 16:14:08,533	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:14:09,450	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:14:09,451	[INFO]	231	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:14:12,701	[INFO]	232	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:14:16,122	[INFO]	233	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:14:16,123	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:14:17,566	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:14:17,571	[INFO]	235	SUCCESS	+4.0	
2020-12-17 16:14:17,574	[DEBUG]	
2020-12-17 16:14:18,867	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:14:19,842	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:14:20,633	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:14:20,634	[INFO]	239	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:14:20,635	[DEBUG]	
2020-12-17 16:14:21,564	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:14:21,565	[INFO]	241	SUCCESS	+4.0	
2020-12-17 16:14:21,566	[DEBUG]	
2020-12-17 16:14:22,783	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:14:29,602	[INFO]	243	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:14:29,603	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:14:29,604	[INFO]	245	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:14:30,569	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:14:31,604	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:14:35,099	[INFO]	248	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:14:35,100	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:14:35,101	[INFO]	249	SUCCESS	+4.0	
2020-12-17 16:14:35,101	[DEBUG]	
2020-12-17 16:14:35,102	[INFO]	250	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:14:35,103	[INFO]	251	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:14:36,150	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:14:36,152	[INFO]	253	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:14:36,153	[INFO]	254	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:14:37,221	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:14:37,222	[INFO]	256	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:14:41,464	[INFO]	257	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:14:41,465	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:14:42,495	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:14:46,337	[INFO]	259	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:14:46,338	[INFO]	260	SUCCESS	+4.0	
2020-12-17 16:14:46,339	[DEBUG]	
2020-12-17 16:14:46,340	[INFO]	261	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:14:47,392	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:14:50,611	[INFO]	263	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:14:51,382	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:14:54,680	[INFO]	265	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:14:58,156	[INFO]	266	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:14:59,079	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:15:00,028	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:15:03,532	[INFO]	269	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:15:03,534	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:04,633	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:15:04,635	[INFO]	272	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:15:04,636	[INFO]	273	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:15:05,728	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:15:06,749	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:15:06,750	[INFO]	276	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:15:10,427	[INFO]	277	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:11,377	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:15:15,178	[INFO]	279	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:15:15,179	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:15:15,180	[INFO]	280	SUCCESS	+4.0	
2020-12-17 16:15:15,180	[DEBUG]	
2020-12-17 16:15:15,181	[INFO]	281	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:15:15,182	[INFO]	282	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:15:15,183	[DEBUG]	
2020-12-17 16:15:19,036	[INFO]	283	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:15:19,037	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:19,038	[INFO]	284	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:15:19,039	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:19,039	[INFO]	285	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:15:19,040	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:19,041	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:15:19,041	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:19,042	[INFO]	287	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:15:19,043	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:19,044	[INFO]	288	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:15:19,044	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:19,922	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:15:21,559	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:15:21,562	[INFO]	291	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:15:21,562	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:21,565	[INFO]	292	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:15:21,566	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:21,568	[INFO]	293	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:21,569	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:21,574	[INFO]	294	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:21,575	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:21,577	[INFO]	295	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:21,578	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:26,808	[INFO]	296	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:15:26,810	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:31,630	[INFO]	297	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:15:32,894	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:15:32,897	[INFO]	299	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:32,898	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:32,900	[INFO]	300	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:32,901	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:32,903	[INFO]	301	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:32,904	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:33,938	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:15:33,940	[INFO]	303	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:15:33,940	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:33,941	[INFO]	304	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:15:33,942	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:33,943	[INFO]	305	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:33,944	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:35,033	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:15:35,034	[INFO]	307	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:35,035	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:36,622	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:15:36,624	[INFO]	309	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:36,626	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:37,907	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:15:37,912	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:37,914	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:37,918	[INFO]	312	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:37,920	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:37,924	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:37,928	[INFO]	314	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:37,929	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:37,933	[INFO]	315	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:37,934	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:39,045	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:15:39,047	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:15:39,047	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:39,048	[INFO]	318	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:15:39,049	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:39,050	[INFO]	319	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:39,051	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:42,797	[INFO]	320	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:42,799	[INFO]	321	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:15:42,800	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:42,802	[INFO]	322	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:42,803	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:43,655	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:15:43,659	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:15:43,661	[INFO]	325	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:15:43,662	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:43,663	[INFO]	326	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:15:43,664	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:44,737	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:15:44,740	[INFO]	328	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:44,741	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:44,742	[INFO]	329	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:44,743	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:45,973	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:15:45,976	[INFO]	331	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:45,978	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:15:45,980	[INFO]	333	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:45,981	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:45,982	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:15:45,983	[INFO]	335	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:45,986	[INFO]	336	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:45,987	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:45,988	[INFO]	337	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:15:45,989	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:45,991	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:45,992	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:45,993	[INFO]	339	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:15:49,388	[INFO]	340	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:15:49,389	[INFO]	341	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:15:49,390	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:50,368	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:15:50,370	[INFO]	343	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:15:50,371	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:51,737	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:15:51,741	[INFO]	345	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:15:51,742	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:15:51,743	[INFO]	346	SUCCESS	+4.0	
2020-12-17 16:15:51,743	[DEBUG]	
2020-12-17 16:16:06,000	[INFO]	347	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:16:06,674	[INFO]	348	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:16:09,717	[INFO]	349	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:16:10,594	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:16:11,338	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:11,341	[INFO]	352	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:14,521	[INFO]	353	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:16:14,522	[INFO]	354	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:15,253	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:16:15,254	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:16:16,143	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:16:16,916	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:17,806	[INFO]	359	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:16:21,093	[INFO]	360	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:16:21,094	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:16:21,095	[INFO]	361	SUCCESS	+4.0	
2020-12-17 16:16:21,095	[DEBUG]	
2020-12-17 16:16:21,980	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:22,886	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:16:26,039	[INFO]	364	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:16:26,040	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:16:26,042	[INFO]	366	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:16:26,970	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:16:27,754	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:16:27,758	[INFO]	369	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:16:27,760	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:16:32,263	[INFO]	371	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:33,127	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:16:34,076	[INFO]	373	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:16:37,248	[INFO]	374	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:16:37,250	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:16:37,251	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:37,252	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:41,798	[INFO]	378	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:16:42,751	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:42,752	[INFO]	380	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:16:43,498	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:43,500	[INFO]	382	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:16:44,251	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:16:44,252	[INFO]	384	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:44,253	[INFO]	385	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:16:44,253	[DEBUG]	
2020-12-17 16:16:44,254	[INFO]	386	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:44,254	[DEBUG]	
2020-12-17 16:16:44,255	[INFO]	387	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:16:45,146	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:16:45,148	[INFO]	389	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:16:45,148	[DEBUG]	
2020-12-17 16:16:45,149	[INFO]	390	SUCCESS	+4.0	
2020-12-17 16:16:45,149	[DEBUG]	
2020-12-17 16:16:46,075	[INFO]	391	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:16:49,345	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:16:49,346	[INFO]	393	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:16:49,347	[INFO]	394	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:49,347	[INFO]	395	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:16:49,348	[INFO]	396	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:16:50,288	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:16:51,213	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:16:51,214	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:16:51,215	[INFO]	400	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:16:51,215	[INFO]	401	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:16:51,216	[INFO]	402	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:51,216	[INFO]	403	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:16:54,259	[INFO]	404	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:16:54,260	[INFO]	405	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:54,260	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:54,995	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:54,997	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:16:54,997	[INFO]	409	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:16:54,998	[INFO]	410	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:16:55,906	[INFO]	411	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:16:55,908	[INFO]	412	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:16:55,908	[INFO]	413	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:55,909	[INFO]	414	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:16:55,909	[DEBUG]	
2020-12-17 16:16:55,910	[INFO]	415	SUCCESS	+4.0	
2020-12-17 16:16:55,910	[DEBUG]	
2020-12-17 16:16:56,823	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:16:57,725	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:16:58,629	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:16:58,630	[INFO]	419	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:16:58,630	[DEBUG]	
2020-12-17 16:16:58,631	[INFO]	420	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:16:58,631	[DEBUG]	
2020-12-17 16:17:01,713	[INFO]	421	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:17:01,714	[INFO]	422	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:17:01,714	[DEBUG]	
2020-12-17 16:17:01,715	[INFO]	423	SUCCESS	+4.0	
2020-12-17 16:17:01,715	[DEBUG]	
2020-12-17 16:17:01,716	[INFO]	424	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:17:01,716	[INFO]	425	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:17:01,717	[INFO]	426	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:17:01,718	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:17:02,465	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:17:02,467	[INFO]	429	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:17:03,201	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:17:03,202	[INFO]	431	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:17:06,423	[INFO]	432	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:17:06,424	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:17:07,330	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:17:07,331	[INFO]	434	SUCCESS	+4.0	
2020-12-17 16:17:07,331	[DEBUG]	
2020-12-17 16:17:10,775	[INFO]	435	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:17:10,776	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:17:10,777	[INFO]	436	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:17:10,778	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:17:11,736	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:17:12,705	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:17:13,682	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:17:13,685	[INFO]	440	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:17:13,686	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:17:13,687	[INFO]	441	SUCCESS	+4.0	
2020-12-17 16:17:13,687	[DEBUG]	
2020-12-17 16:17:13,689	[INFO]	442	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:17:13,690	[INFO]	443	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:17:14,709	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:17:15,712	[INFO]	445	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:17:15,713	[INFO]	446	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:17:15,714	[INFO]	447	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:17:15,714	[DEBUG]	
2020-12-17 16:17:15,715	[INFO]	448	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:17:15,715	[INFO]	449	SUCCESS	+4.0	
2020-12-17 16:17:15,715	[DEBUG]	
2020-12-17 16:17:15,716	[INFO]	450	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:17:15,717	[INFO]	451	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:17:15,717	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:17:15,718	[INFO]	452	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:17:15,719	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:17:16,742	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:17:16,745	[INFO]	454	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:17:16,746	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:17:16,748	[INFO]	455	SUCCESS	+4.0	
2020-12-17 16:17:16,748	[DEBUG]	
2020-12-17 16:17:19,947	[INFO]	456	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:17:20,704	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:17:20,706	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:17:20,707	[INFO]	459	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:17:20,708	[DEBUG]	
2020-12-17 16:17:20,709	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:17:21,646	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:17:21,647	[INFO]	462	SUCCESS	+4.0	
2020-12-17 16:17:21,647	[DEBUG]	
2020-12-17 16:17:24,761	[INFO]	463	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:17:25,524	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:17:25,526	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:17:26,426	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:17:29,608	[INFO]	467	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:17:30,370	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:17:33,777	[INFO]	469	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:17:37,172	[INFO]	470	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:17:37,173	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:17:37,174	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:17:50,677	[INFO]	473	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:17:51,619	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:17:51,622	[INFO]	475	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:17:51,623	[DEBUG]	
2020-12-17 16:17:51,624	[INFO]	476	SUCCESS	+4.0	
2020-12-17 16:17:51,625	[DEBUG]	
2020-12-17 16:17:51,626	[INFO]	477	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:17:52,579	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:17:52,580	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:17:53,540	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:17:53,541	[INFO]	481	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:17:54,311	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:17:55,293	[INFO]	483	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:17:55,294	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:17:55,295	[INFO]	485	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:17:55,296	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:17:55,296	[INFO]	487	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:17:55,297	[DEBUG]	
2020-12-17 16:17:55,297	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:17:56,347	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:17:57,181	[INFO]	490	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:17:57,182	[INFO]	491	SUCCESS	+4.0	
2020-12-17 16:17:57,183	[DEBUG]	
2020-12-17 16:17:57,183	[INFO]	492	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:17:57,184	[INFO]	493	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:18:00,513	[INFO]	494	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:18:00,514	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:18:00,515	[INFO]	495	SUCCESS	+4.0	
2020-12-17 16:18:00,516	[DEBUG]	
2020-12-17 16:18:00,517	[INFO]	496	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:18:03,808	[INFO]	497	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:18:04,566	[INFO]	498	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:18:05,312	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:18:06,222	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:18:06,222	[INFO]	==== END ====
2020-12-17 16:18:06,223	[INFO]	Reason: step budget
2020-12-17 16:18:06,224	[INFO]	
2020-12-17 16:18:06,224	[INFO]	========== EPOCH 11 ==========
2020-12-17 16:18:06,224	[INFO]	==== WARMUP ====
2020-12-17 16:18:09,562	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:18:09,562	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:18:12,849	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:18:12,849	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:18:16,175	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:18:16,175	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:18:19,417	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 16:18:19,417	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:18:19,417	[INFO]	==== START ====
2020-12-17 16:18:22,654	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:18:25,960	[INFO]	2	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:18:26,901	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:18:30,220	[INFO]	4	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:18:30,221	[INFO]	5	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:18:30,222	[DEBUG]	
2020-12-17 16:18:33,736	[INFO]	6	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:18:33,737	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:18:33,738	[INFO]	7	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:18:33,738	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:18:34,712	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:18:35,662	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:18:35,664	[INFO]	10	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:18:35,664	[DEBUG]	
2020-12-17 16:18:36,688	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:18:36,692	[INFO]	12	SUCCESS	 8.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:18:36,693	[INFO]	13	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:18:36,694	[DEBUG]	
2020-12-17 16:18:36,695	[INFO]	14	SUCCESS	+4.0	
2020-12-17 16:18:36,696	[DEBUG]	
2020-12-17 16:18:37,472	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:18:40,792	[INFO]	16	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:18:40,793	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:18:45,038	[INFO]	17	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:18:45,040	[INFO]	18	SUCCESS	+4.0	
2020-12-17 16:18:45,040	[DEBUG]	
2020-12-17 16:18:45,878	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:18:46,845	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:18:47,613	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:18:48,529	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:18:49,442	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:18:50,382	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:18:53,640	[INFO]	25	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:18:56,739	[INFO]	26	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:18:57,464	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:18:58,406	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:18:59,357	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:19:00,116	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:19:00,119	[INFO]	31	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:19:01,035	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:19:01,803	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:19:01,804	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:19:05,990	[INFO]	35	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:19:06,695	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:19:07,623	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:19:07,625	[INFO]	38	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:19:07,625	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:19:08,615	[INFO]	39	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:19:12,096	[INFO]	40	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:19:15,604	[INFO]	41	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:19:15,605	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:19:15,606	[INFO]	42	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:19:15,606	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:19:18,896	[INFO]	43	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:19:18,897	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:19:19,758	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:19:22,958	[INFO]	46	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:19:22,962	[INFO]	47	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:19:22,963	[DEBUG]	
2020-12-17 16:19:36,700	[INFO]	48	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:19:36,702	[INFO]	49	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:19:36,702	[INFO]	50	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:19:36,703	[INFO]	51	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:19:36,703	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:19:36,704	[INFO]	52	SUCCESS	+4.0	
2020-12-17 16:19:36,704	[DEBUG]	
2020-12-17 16:19:36,705	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:19:36,705	[INFO]	54	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:19:36,706	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:19:37,595	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:19:40,901	[INFO]	57	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:19:41,818	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:19:42,579	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:19:42,581	[INFO]	60	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:19:43,512	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:19:44,422	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:19:44,423	[INFO]	63	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:19:44,424	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:19:44,424	[INFO]	64	SUCCESS	+4.0	
2020-12-17 16:19:44,425	[DEBUG]	
2020-12-17 16:19:47,819	[INFO]	65	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:19:48,802	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:19:48,806	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:19:52,336	[INFO]	68	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:19:53,125	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:19:54,042	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:19:57,359	[INFO]	71	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:19:58,307	[INFO]	72	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:19:58,309	[INFO]	73	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:19:59,213	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:20:00,155	[INFO]	75	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:20:01,095	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:20:01,099	[INFO]	77	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:20:02,043	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:20:02,044	[INFO]	79	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:20:02,044	[DEBUG]	
2020-12-17 16:20:02,987	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:20:02,989	[INFO]	81	SUCCESS	+4.0	
2020-12-17 16:20:02,990	[DEBUG]	
2020-12-17 16:20:02,992	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:20:02,993	[INFO]	83	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:20:02,995	[INFO]	84	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:20:02,996	[DEBUG]	
2020-12-17 16:20:03,735	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:20:03,736	[INFO]	86	SUCCESS	+4.0	
2020-12-17 16:20:03,736	[DEBUG]	
2020-12-17 16:20:03,737	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:20:03,738	[INFO]	88	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:20:03,738	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:20:03,739	[INFO]	90	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:20:07,011	[INFO]	91	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:20:07,930	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:20:07,932	[INFO]	93	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:20:08,685	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:20:09,415	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:20:10,317	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:20:11,082	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:20:11,083	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:20:11,993	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:20:12,920	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:20:12,923	[INFO]	101	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:20:12,925	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:20:16,256	[INFO]	103	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:20:19,351	[INFO]	104	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:20:19,354	[INFO]	105	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:20:20,100	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:20:21,020	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:20:21,021	[INFO]	108	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:20:21,944	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:20:21,945	[INFO]	110	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:20:21,946	[DEBUG]	
2020-12-17 16:20:22,896	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:20:22,897	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:20:22,898	[INFO]	113	SUCCESS	+4.0	
2020-12-17 16:20:22,898	[DEBUG]	
2020-12-17 16:20:26,299	[INFO]	114	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:20:26,300	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:20:27,268	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:20:28,232	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:20:28,233	[INFO]	117	SUCCESS	+4.0	
2020-12-17 16:20:28,233	[DEBUG]	
2020-12-17 16:20:28,234	[INFO]	118	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:20:28,235	[INFO]	119	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:20:28,235	[INFO]	120	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:20:28,236	[INFO]	121	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:20:28,237	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:20:28,237	[INFO]	122	SUCCESS	+4.0	
2020-12-17 16:20:28,237	[DEBUG]	
2020-12-17 16:20:31,911	[INFO]	123	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:20:33,056	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:20:34,174	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:20:35,408	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:20:36,787	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:20:36,791	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:20:38,056	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:20:38,057	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:20:39,241	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:20:40,336	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:20:47,092	[INFO]	133	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:20:47,095	[INFO]	134	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:20:47,096	[INFO]	135	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:20:49,076	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:20:55,070	[INFO]	137	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:20:55,072	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:20:55,073	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:20:55,929	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:20:56,932	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:20:56,934	[INFO]	142	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:20:58,346	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:20:59,297	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:21:03,599	[INFO]	145	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:21:03,600	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:21:04,443	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:21:04,444	[INFO]	147	SUCCESS	+4.0	
2020-12-17 16:21:04,444	[DEBUG]	
2020-12-17 16:21:04,445	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:21:04,446	[INFO]	149	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:21:04,446	[DEBUG]	
2020-12-17 16:21:04,447	[INFO]	150	SUCCESS	+4.0	
2020-12-17 16:21:04,447	[DEBUG]	
2020-12-17 16:21:05,649	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:21:05,651	[INFO]	152	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:21:05,652	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:21:05,654	[INFO]	154	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:21:05,654	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:21:05,656	[INFO]	155	SUCCESS	+4.0	
2020-12-17 16:21:05,656	[DEBUG]	
2020-12-17 16:21:05,658	[INFO]	156	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:21:05,658	[DEBUG]	
2020-12-17 16:21:05,660	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:21:05,661	[INFO]	158	SUCCESS	+4.0	
2020-12-17 16:21:05,661	[DEBUG]	
2020-12-17 16:21:09,618	[INFO]	159	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:21:13,451	[INFO]	160	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:21:13,452	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:21:13,454	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:21:13,455	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:21:14,482	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:21:15,280	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:21:16,318	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:21:21,165	[INFO]	165	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:21:22,116	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:21:23,736	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:21:24,850	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:21:25,938	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:21:29,329	[INFO]	170	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:21:29,330	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:21:30,221	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:21:31,770	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:21:31,772	[INFO]	174	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:21:31,772	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:21:31,773	[INFO]	175	SUCCESS	+4.0	
2020-12-17 16:21:31,773	[DEBUG]	
2020-12-17 16:21:36,414	[INFO]	176	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:21:36,415	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:21:36,415	[INFO]	177	SUCCESS	+4.0	
2020-12-17 16:21:36,416	[DEBUG]	
2020-12-17 16:21:36,416	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:21:37,312	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:21:37,313	[INFO]	180	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:21:37,314	[INFO]	181	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:21:37,315	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:21:37,315	[INFO]	182	SUCCESS	+4.0	
2020-12-17 16:21:37,315	[DEBUG]	
2020-12-17 16:21:37,316	[INFO]	183	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:21:37,316	[DEBUG]	
2020-12-17 16:21:37,317	[INFO]	184	SUCCESS	+4.0	
2020-12-17 16:21:37,317	[DEBUG]	
2020-12-17 16:21:38,066	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:21:41,498	[INFO]	186	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:21:41,499	[INFO]	187	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:21:44,728	[INFO]	188	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:21:47,913	[INFO]	189	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:21:47,914	[INFO]	190	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:21:47,915	[DEBUG]	
2020-12-17 16:21:51,163	[INFO]	191	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:21:51,164	[INFO]	192	SUCCESS	+4.0	
2020-12-17 16:21:51,164	[DEBUG]	
2020-12-17 16:21:55,524	[INFO]	193	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:21:58,811	[INFO]	194	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:21:59,752	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:21:59,753	[INFO]	196	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:21:59,753	[DEBUG]	
2020-12-17 16:21:59,754	[INFO]	197	SUCCESS	+4.0	
2020-12-17 16:21:59,754	[DEBUG]	
2020-12-17 16:22:00,699	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:22:01,620	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:22:02,536	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:22:02,537	[INFO]	201	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:22:03,452	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:22:04,214	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:22:04,945	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:22:05,850	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:22:06,794	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:22:07,682	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:22:07,683	[INFO]	208	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:22:10,995	[INFO]	209	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:22:11,908	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:22:26,370	[INFO]	211	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:22:27,242	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:22:31,622	[INFO]	213	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:22:31,623	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:22:31,624	[INFO]	215	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:22:31,624	[DEBUG]	
2020-12-17 16:22:31,625	[INFO]	216	SUCCESS	+4.0	
2020-12-17 16:22:31,625	[DEBUG]	
2020-12-17 16:22:31,626	[INFO]	217	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:22:31,626	[DEBUG]	
2020-12-17 16:22:34,996	[INFO]	218	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:22:34,998	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:22:34,999	[INFO]	219	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:22:34,999	[DEBUG]	
2020-12-17 16:22:35,784	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:22:36,767	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:22:36,771	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:22:36,773	[INFO]	223	SUCCESS	+4.0	
2020-12-17 16:22:36,774	[DEBUG]	
2020-12-17 16:22:36,776	[INFO]	224	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:22:37,742	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:22:37,745	[INFO]	226	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:22:37,746	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:22:37,748	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:22:38,643	[INFO]	229	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:22:39,567	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:22:39,568	[INFO]	231	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:22:40,461	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:22:40,462	[INFO]	233	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:22:40,463	[DEBUG]	
2020-12-17 16:22:40,464	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:22:40,465	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:22:40,466	[INFO]	236	SUCCESS	+4.0	
2020-12-17 16:22:40,466	[DEBUG]	
2020-12-17 16:22:40,467	[INFO]	237	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:22:40,467	[DEBUG]	
2020-12-17 16:22:40,468	[INFO]	238	SUCCESS	+4.0	
2020-12-17 16:22:40,469	[DEBUG]	
2020-12-17 16:22:40,469	[INFO]	239	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:22:40,470	[DEBUG]	
2020-12-17 16:22:40,471	[INFO]	240	SUCCESS	+4.0	
2020-12-17 16:22:40,471	[DEBUG]	
2020-12-17 16:22:41,428	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:22:41,431	[INFO]	242	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:22:42,361	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:22:42,363	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:22:43,152	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:22:43,153	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:22:44,242	[INFO]	247	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:22:48,485	[INFO]	248	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:22:49,311	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:22:50,060	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:22:53,453	[INFO]	251	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:22:56,507	[INFO]	252	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:22:59,790	[INFO]	253	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:23:00,710	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:23:00,714	[INFO]	255	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:23:01,458	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:23:04,576	[INFO]	257	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:23:07,990	[INFO]	258	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:23:08,896	[INFO]	259	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:23:08,897	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:23:12,358	[INFO]	261	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:23:12,359	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:23:12,360	[INFO]	262	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:23:12,361	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:23:12,361	[INFO]	263	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:23:12,362	[DEBUG]	
2020-12-17 16:23:12,362	[INFO]	264	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:12,363	[DEBUG]	
2020-12-17 16:23:12,363	[INFO]	265	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:12,363	[DEBUG]	
2020-12-17 16:23:12,364	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:13,310	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:23:13,311	[INFO]	268	SUCCESS	+4.0	
2020-12-17 16:23:13,312	[DEBUG]	
2020-12-17 16:23:13,312	[INFO]	269	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:23:13,313	[INFO]	270	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:23:13,313	[DEBUG]	
2020-12-17 16:23:13,314	[INFO]	271	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:23:13,314	[DEBUG]	
2020-12-17 16:23:13,315	[INFO]	272	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:23:13,315	[DEBUG]	
2020-12-17 16:23:13,316	[INFO]	273	SUCCESS	+4.0	
2020-12-17 16:23:13,316	[DEBUG]	
2020-12-17 16:23:14,124	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:23:14,127	[INFO]	275	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:23:14,128	[DEBUG]	
2020-12-17 16:23:14,130	[INFO]	276	SUCCESS	+4.0	
2020-12-17 16:23:14,131	[DEBUG]	
2020-12-17 16:23:14,910	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:23:15,880	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:23:15,883	[INFO]	279	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:16,848	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:23:16,849	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:23:16,850	[INFO]	282	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:23:16,850	[INFO]	283	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:23:16,851	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:23:16,852	[INFO]	285	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:16,852	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:23:16,853	[INFO]	287	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:23:16,854	[INFO]	288	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:23:16,854	[DEBUG]	
2020-12-17 16:23:16,855	[INFO]	289	SUCCESS	+4.0	
2020-12-17 16:23:16,855	[DEBUG]	
2020-12-17 16:23:20,090	[INFO]	290	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:23:20,091	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:20,865	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:23:21,604	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:22,346	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:23:22,349	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:22,351	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:23:22,353	[INFO]	297	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:23:23,265	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:23,266	[INFO]	299	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:24,182	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:23:24,184	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:24,943	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:23:25,866	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:26,624	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:23:27,530	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:23:28,465	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:23:28,467	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:23:28,468	[INFO]	308	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:23:28,469	[INFO]	309	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:23:31,566	[INFO]	310	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:23:31,568	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:32,416	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:23:32,419	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:32,420	[INFO]	314	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:23:33,334	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:34,244	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:23:35,252	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:23:35,256	[INFO]	318	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:23:36,234	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:23:39,325	[INFO]	320	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:23:42,534	[INFO]	321	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:23:42,535	[INFO]	322	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:23:42,535	[DEBUG]	
2020-12-17 16:23:45,823	[INFO]	323	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:23:46,761	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:23:46,762	[INFO]	325	SUCCESS	+4.0	
2020-12-17 16:23:46,762	[DEBUG]	
2020-12-17 16:23:46,763	[INFO]	326	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:23:50,266	[INFO]	327	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:23:50,267	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:23:50,268	[INFO]	328	SUCCESS	+4.0	
2020-12-17 16:23:50,268	[DEBUG]	
2020-12-17 16:23:51,217	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:23:54,525	[INFO]	330	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:23:54,526	[INFO]	331	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:23:57,975	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:23:57,976	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:23:58,923	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:00,337	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:24:00,339	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:24:00,340	[INFO]	336	SUCCESS	+4.0	
2020-12-17 16:24:00,341	[DEBUG]	
2020-12-17 16:24:00,342	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:03,804	[INFO]	338	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:24:04,726	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:04,727	[INFO]	340	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:05,657	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:24:05,660	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:24:08,824	[INFO]	343	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:24:13,275	[INFO]	344	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:24:13,276	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:24:13,277	[INFO]	345	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:13,278	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:24:13,279	[INFO]	346	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:13,280	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:24:14,157	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:24:14,925	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:24:15,657	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:24:16,592	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:16,594	[INFO]	351	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:16,595	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:24:16,596	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:21,397	[INFO]	353	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:24:21,399	[INFO]	354	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:24:21,399	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:24:21,400	[INFO]	355	SUCCESS	+4.0	
2020-12-17 16:24:21,400	[DEBUG]	
2020-12-17 16:24:22,232	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:24:23,139	[INFO]	357	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:23,141	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:24,061	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:24:24,837	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:25,771	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:26,736	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:26,738	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:27,690	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:24:27,691	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:24:27,692	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:24:27,693	[INFO]	367	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:24:27,693	[DEBUG]	
2020-12-17 16:24:27,694	[INFO]	368	SUCCESS	+4.0	
2020-12-17 16:24:27,694	[DEBUG]	
2020-12-17 16:24:28,502	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:24:29,474	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:24:29,475	[INFO]	371	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:29,476	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:24:29,476	[INFO]	373	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:24:29,477	[INFO]	374	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:24:29,477	[DEBUG]	
2020-12-17 16:24:30,488	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:24:30,490	[INFO]	376	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:30,490	[DEBUG]	
2020-12-17 16:24:30,490	[INFO]	377	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:30,491	[DEBUG]	
2020-12-17 16:24:30,492	[INFO]	378	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:30,492	[DEBUG]	
2020-12-17 16:24:30,493	[INFO]	379	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:30,493	[DEBUG]	
2020-12-17 16:24:30,493	[INFO]	380	SUCCESS	+4.0	
2020-12-17 16:24:30,494	[DEBUG]	
2020-12-17 16:24:31,490	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:24:31,493	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:24:34,981	[INFO]	383	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:24:35,927	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:35,928	[INFO]	385	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:36,938	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:24:41,220	[INFO]	387	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:24:44,451	[INFO]	388	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:24:44,452	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:24:44,453	[INFO]	389	SUCCESS	+4.0	
2020-12-17 16:24:44,453	[DEBUG]	
2020-12-17 16:24:44,454	[INFO]	390	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:24:45,365	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:24:48,795	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:24:49,531	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:24:52,763	[INFO]	394	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:24:52,766	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:24:53,702	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:54,614	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:55,336	[INFO]	398	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:24:58,533	[INFO]	399	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:24:58,537	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:24:59,237	[INFO]	401	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:25:00,120	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:25:00,893	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:25:00,894	[INFO]	404	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:01,642	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:25:01,646	[INFO]	406	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:02,573	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:25:05,876	[INFO]	408	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:25:05,877	[INFO]	409	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:25:06,844	[INFO]	410	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:07,627	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:25:08,395	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:25:09,191	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:25:10,185	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:25:10,187	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:25:10,188	[INFO]	416	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:25:10,188	[DEBUG]	
2020-12-17 16:25:12,338	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:25:12,340	[INFO]	418	SUCCESS	+4.0	
2020-12-17 16:25:12,340	[DEBUG]	
2020-12-17 16:25:12,342	[INFO]	419	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:25:13,445	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:25:13,448	[INFO]	421	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:25:14,418	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:25:14,420	[INFO]	423	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:25:14,421	[DEBUG]	
2020-12-17 16:25:15,230	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:15,233	[INFO]	425	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:25:15,234	[INFO]	426	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:25:15,235	[DEBUG]	
2020-12-17 16:25:15,236	[INFO]	427	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:25:15,236	[DEBUG]	
2020-12-17 16:25:15,238	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:25:15,239	[INFO]	429	SUCCESS	+4.0	
2020-12-17 16:25:15,239	[DEBUG]	
2020-12-17 16:25:16,191	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:25:17,160	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:25:17,164	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:25:17,166	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:18,141	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:25:19,115	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:22,666	[INFO]	436	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:25:22,667	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:25:23,609	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:24,563	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:25:24,565	[INFO]	439	SUCCESS	+4.0	
2020-12-17 16:25:24,566	[DEBUG]	
2020-12-17 16:25:24,568	[INFO]	440	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:24,569	[INFO]	441	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:25:24,570	[DEBUG]	
2020-12-17 16:25:24,572	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:24,573	[INFO]	443	SUCCESS	+4.0	
2020-12-17 16:25:24,573	[DEBUG]	
2020-12-17 16:25:25,513	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:25:28,902	[INFO]	445	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:25:28,903	[INFO]	446	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:25:28,904	[INFO]	447	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:25:28,905	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:25:29,834	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:25:29,835	[INFO]	449	SUCCESS	+4.0	
2020-12-17 16:25:29,835	[DEBUG]	
2020-12-17 16:25:32,986	[INFO]	450	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:25:33,927	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:25:34,695	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:25:38,172	[INFO]	453	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:25:38,175	[INFO]	454	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:25:38,175	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:25:38,177	[INFO]	455	SUCCESS	+4.0	
2020-12-17 16:25:38,177	[DEBUG]	
2020-12-17 16:25:38,179	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:38,181	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:41,588	[INFO]	458	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:25:41,589	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:25:41,590	[INFO]	459	SUCCESS	+4.0	
2020-12-17 16:25:41,590	[DEBUG]	
2020-12-17 16:25:41,591	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:42,534	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:25:42,536	[INFO]	462	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:42,537	[DEBUG]	
2020-12-17 16:25:42,538	[INFO]	463	SUCCESS	+4.0	
2020-12-17 16:25:42,538	[DEBUG]	
2020-12-17 16:25:43,473	[INFO]	464	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:25:46,669	[INFO]	465	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:25:51,123	[INFO]	466	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:25:52,202	[INFO]	467	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:25:52,205	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:25:53,476	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:53,477	[INFO]	470	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:53,478	[DEBUG]	
2020-12-17 16:25:53,479	[INFO]	471	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:25:53,480	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:25:53,480	[INFO]	473	SUCCESS	+4.0	
2020-12-17 16:25:53,480	[DEBUG]	
2020-12-17 16:25:53,481	[INFO]	474	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:25:54,481	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:25:56,162	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:25:56,165	[INFO]	477	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:25:56,165	[DEBUG]	
2020-12-17 16:25:56,166	[INFO]	478	SUCCESS	+4.0	
2020-12-17 16:25:56,167	[DEBUG]	
2020-12-17 16:25:56,168	[INFO]	479	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:25:56,168	[DEBUG]	
2020-12-17 16:25:56,169	[INFO]	480	SUCCESS	+4.0	
2020-12-17 16:25:56,169	[DEBUG]	
2020-12-17 16:25:57,214	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:25:57,215	[INFO]	482	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:25:57,216	[INFO]	483	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:57,218	[INFO]	484	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:25:58,033	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:25:58,037	[INFO]	486	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:25:58,038	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:25:58,040	[INFO]	487	SUCCESS	+4.0	
2020-12-17 16:25:58,041	[DEBUG]	
2020-12-17 16:25:58,806	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:25:58,809	[INFO]	489	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:25:58,810	[INFO]	490	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:25:58,810	[INFO]	491	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:25:59,708	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:26:03,292	[INFO]	493	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:26:03,294	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:26:03,295	[INFO]	494	SUCCESS	+4.0	
2020-12-17 16:26:03,295	[DEBUG]	
2020-12-17 16:26:03,297	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:26:03,298	[INFO]	496	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:26:03,300	[INFO]	497	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:26:03,300	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:26:03,301	[INFO]	498	SUCCESS	+4.0	
2020-12-17 16:26:03,302	[DEBUG]	
2020-12-17 16:26:03,303	[INFO]	499	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:26:03,304	[INFO]	500	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:26:03,304	[INFO]	==== END ====
2020-12-17 16:26:03,305	[INFO]	Reason: step budget
2020-12-17 16:26:03,305	[INFO]	
2020-12-17 16:26:03,305	[INFO]	========== EPOCH 12 ==========
2020-12-17 16:26:03,306	[INFO]	==== WARMUP ====
2020-12-17 16:26:06,894	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:26:06,895	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:26:10,287	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:26:10,288	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:26:13,733	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:26:13,734	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:26:17,077	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 16:26:17,077	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:26:17,077	[INFO]	==== START ====
2020-12-17 16:26:20,464	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:26:20,465	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:26:20,466	[INFO]	2	SUCCESS	+4.0	
2020-12-17 16:26:20,466	[DEBUG]	
2020-12-17 16:26:21,379	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:26:22,305	[INFO]	4	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:26:25,566	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:26:29,822	[INFO]	6	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:26:30,695	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:26:34,223	[INFO]	8	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:26:37,595	[INFO]	9	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:26:38,564	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:26:39,548	[INFO]	11	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:26:40,385	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:26:40,386	[INFO]	13	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:26:40,386	[DEBUG]	
2020-12-17 16:26:40,387	[INFO]	14	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:26:40,387	[DEBUG]	
2020-12-17 16:26:40,388	[INFO]	15	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:26:40,388	[DEBUG]	
2020-12-17 16:26:40,389	[INFO]	16	SUCCESS	+4.0	
2020-12-17 16:26:40,389	[DEBUG]	
2020-12-17 16:26:43,899	[INFO]	17	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:26:43,901	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:26:47,282	[INFO]	18	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:26:50,510	[INFO]	19	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:26:50,511	[INFO]	20	SUCCESS	+4.0	
2020-12-17 16:26:50,511	[DEBUG]	
2020-12-17 16:26:51,642	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:26:51,644	[INFO]	22	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:26:51,644	[DEBUG]	
2020-12-17 16:26:51,645	[INFO]	23	SUCCESS	+4.0	
2020-12-17 16:26:51,646	[DEBUG]	
2020-12-17 16:26:52,650	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:26:55,772	[INFO]	25	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:26:56,692	[INFO]	26	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:26:56,694	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:26:56,694	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:26:56,695	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:26:57,643	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:26:57,645	[INFO]	31	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:26:57,646	[DEBUG]	
2020-12-17 16:26:57,647	[INFO]	32	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:26:57,648	[INFO]	33	SUCCESS	+4.0	
2020-12-17 16:26:57,648	[DEBUG]	
2020-12-17 16:26:58,418	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:26:59,334	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:26:59,335	[INFO]	36	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:27:00,281	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:27:01,273	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:27:02,196	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:27:02,198	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:02,199	[INFO]	41	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:02,199	[DEBUG]	
2020-12-17 16:27:02,200	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:27:02,201	[INFO]	43	SUCCESS	+4.0	
2020-12-17 16:27:02,202	[DEBUG]	
2020-12-17 16:27:02,976	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:03,909	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:27:03,910	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:03,912	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:27:04,836	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:27:04,837	[INFO]	49	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:27:04,838	[INFO]	50	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:27:04,839	[DEBUG]	
2020-12-17 16:27:04,839	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:05,599	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:27:06,391	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:27:09,613	[INFO]	54	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:27:09,616	[INFO]	55	SUCCESS	+4.0	
2020-12-17 16:27:09,617	[DEBUG]	
2020-12-17 16:27:09,620	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:27:12,774	[INFO]	57	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:27:16,086	[INFO]	58	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:27:16,087	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:16,088	[INFO]	60	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:16,088	[INFO]	61	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:27:17,053	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:27:17,055	[INFO]	63	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:27:17,058	[INFO]	64	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:17,877	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:27:17,882	[INFO]	66	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:27:17,885	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:27:18,849	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:27:19,628	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:27:19,629	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:27:19,630	[INFO]	71	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:27:22,876	[INFO]	72	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:27:22,877	[INFO]	73	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:27:22,878	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:27:26,220	[INFO]	75	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:27:26,965	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:27:26,967	[INFO]	77	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:26,968	[DEBUG]	
2020-12-17 16:27:26,970	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:27:27,889	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:27:27,890	[INFO]	80	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:27:27,891	[INFO]	81	SUCCESS	+4.0	
2020-12-17 16:27:27,891	[DEBUG]	
2020-12-17 16:27:27,892	[INFO]	82	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:27:27,892	[INFO]	83	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:27:27,893	[INFO]	84	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:27,894	[INFO]	85	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:27:27,894	[DEBUG]	
2020-12-17 16:27:27,894	[INFO]	86	SUCCESS	+4.0	
2020-12-17 16:27:27,895	[DEBUG]	
2020-12-17 16:27:27,895	[INFO]	87	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:27:27,896	[DEBUG]	
2020-12-17 16:27:28,850	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:27:28,851	[INFO]	89	SUCCESS	+4.0	
2020-12-17 16:27:28,852	[DEBUG]	
2020-12-17 16:27:32,227	[INFO]	90	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:27:32,977	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:27:32,980	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:27:32,982	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:27:33,909	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:27:33,913	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:34,704	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:27:34,707	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:39,054	[INFO]	98	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:27:39,910	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:27:40,706	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:27:40,710	[INFO]	101	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:27:40,711	[DEBUG]	
2020-12-17 16:27:41,476	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:27:42,410	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:27:42,412	[INFO]	104	SUCCESS	+4.0	
2020-12-17 16:27:42,412	[DEBUG]	
2020-12-17 16:27:43,360	[INFO]	105	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:27:43,364	[INFO]	106	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:27:43,364	[DEBUG]	
2020-12-17 16:27:44,343	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:27:45,137	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:45,140	[INFO]	109	SUCCESS	+4.0	
2020-12-17 16:27:45,141	[DEBUG]	
2020-12-17 16:27:46,091	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:27:47,046	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:27:47,050	[INFO]	112	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:47,051	[DEBUG]	
2020-12-17 16:27:47,052	[INFO]	113	SUCCESS	+4.0	
2020-12-17 16:27:47,053	[DEBUG]	
2020-12-17 16:27:50,143	[INFO]	114	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:27:53,469	[INFO]	115	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:27:53,470	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:27:54,240	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:27:54,993	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:27:58,219	[INFO]	118	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:27:59,100	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:27:59,101	[INFO]	120	SUCCESS	+4.0	
2020-12-17 16:27:59,101	[DEBUG]	
2020-12-17 16:27:59,936	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:28:03,530	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:28:03,530	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:28:03,531	[INFO]	123	SUCCESS	+4.0	
2020-12-17 16:28:03,532	[DEBUG]	
2020-12-17 16:28:03,532	[INFO]	124	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:28:06,949	[INFO]	125	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:28:06,950	[INFO]	126	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:28:06,950	[DEBUG]	
2020-12-17 16:28:10,429	[INFO]	127	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:28:10,429	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:28:10,430	[INFO]	128	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:28:10,430	[DEBUG]	
2020-12-17 16:28:10,431	[INFO]	129	SUCCESS	+4.0	
2020-12-17 16:28:10,431	[DEBUG]	
2020-12-17 16:28:13,665	[INFO]	130	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:28:17,107	[INFO]	131	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:28:17,108	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:28:18,169	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:28:22,099	[INFO]	133	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:28:22,882	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:28:22,883	[INFO]	135	SUCCESS	+4.0	
2020-12-17 16:28:22,883	[DEBUG]	
2020-12-17 16:28:23,658	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:28:27,132	[INFO]	137	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:28:27,133	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:28:27,955	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:28:32,557	[INFO]	140	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:28:35,852	[INFO]	141	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:28:39,114	[INFO]	142	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:28:42,413	[INFO]	143	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:28:42,416	[INFO]	144	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:28:43,194	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:28:44,177	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:28:44,179	[INFO]	147	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:28:45,113	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:28:46,109	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:28:46,113	[INFO]	150	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:28:46,113	[DEBUG]	
2020-12-17 16:28:46,115	[INFO]	151	SUCCESS	+4.0	
2020-12-17 16:28:46,116	[DEBUG]	
2020-12-17 16:28:46,117	[INFO]	152	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:28:46,119	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:28:46,121	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:28:46,123	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:28:46,125	[INFO]	156	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:28:47,089	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:28:48,023	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:28:48,994	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:28:49,934	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:28:53,256	[INFO]	161	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:28:53,257	[INFO]	162	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:28:53,258	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:28:53,259	[INFO]	164	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:28:53,259	[DEBUG]	
2020-12-17 16:28:54,003	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:28:54,004	[INFO]	166	SUCCESS	+4.0	
2020-12-17 16:28:54,005	[DEBUG]	
2020-12-17 16:28:54,932	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:28:55,888	[INFO]	168	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:28:59,297	[INFO]	169	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:29:02,724	[INFO]	170	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:29:02,724	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:29:02,725	[INFO]	171	SUCCESS	+4.0	
2020-12-17 16:29:02,725	[DEBUG]	
2020-12-17 16:29:05,918	[INFO]	172	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:29:10,341	[INFO]	173	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:29:11,249	[INFO]	174	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:29:14,562	[INFO]	175	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:29:14,563	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:29:14,563	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:29:15,320	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:29:15,321	[INFO]	179	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:29:16,083	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:29:16,085	[INFO]	181	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:29:17,048	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:29:17,054	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:29:20,450	[INFO]	184	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:29:20,451	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:29:23,896	[INFO]	186	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:29:23,897	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:29:23,898	[INFO]	187	SUCCESS	+4.0	
2020-12-17 16:29:23,898	[DEBUG]	
2020-12-17 16:29:24,674	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:29:25,612	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:29:26,573	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:29:26,576	[INFO]	191	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:29:26,577	[INFO]	192	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:29:26,577	[DEBUG]	
2020-12-17 16:29:29,957	[INFO]	193	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:29:29,958	[INFO]	194	SUCCESS	+4.0	
2020-12-17 16:29:29,958	[DEBUG]	
2020-12-17 16:29:29,959	[INFO]	195	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:29:29,959	[INFO]	196	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:29:29,960	[DEBUG]	
2020-12-17 16:29:29,960	[INFO]	197	SUCCESS	+4.0	
2020-12-17 16:29:29,960	[DEBUG]	
2020-12-17 16:29:30,747	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:29:35,119	[INFO]	199	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:29:38,443	[INFO]	200	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:29:38,445	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:29:38,446	[INFO]	201	SUCCESS	+4.0	
2020-12-17 16:29:38,447	[DEBUG]	
2020-12-17 16:29:41,879	[INFO]	202	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:29:42,859	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:29:43,624	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:29:43,626	[INFO]	205	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:29:46,991	[INFO]	206	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:29:47,933	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:29:47,936	[INFO]	208	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:29:48,939	[INFO]	209	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:29:48,944	[INFO]	210	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:29:48,945	[DEBUG]	
2020-12-17 16:29:52,344	[INFO]	211	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:29:52,345	[INFO]	212	SUCCESS	+4.0	
2020-12-17 16:29:52,345	[DEBUG]	
2020-12-17 16:29:53,141	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:29:53,891	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:29:54,897	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:29:58,322	[INFO]	216	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:29:58,323	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:29:58,324	[INFO]	217	SUCCESS	+4.0	
2020-12-17 16:29:58,324	[DEBUG]	
2020-12-17 16:30:01,671	[INFO]	218	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:30:01,672	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:30:05,102	[INFO]	219	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:30:05,103	[INFO]	220	SUCCESS	+4.0	
2020-12-17 16:30:05,103	[DEBUG]	
2020-12-17 16:30:05,104	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:30:08,503	[INFO]	222	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:30:09,453	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:30:10,381	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:30:10,383	[INFO]	225	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:30:10,383	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:30:10,384	[INFO]	226	SUCCESS	+4.0	
2020-12-17 16:30:10,384	[DEBUG]	
2020-12-17 16:30:11,178	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:30:14,423	[INFO]	228	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:30:14,424	[INFO]	229	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:30:17,736	[INFO]	230	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:30:18,690	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:30:18,694	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:30:18,696	[INFO]	233	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:30:19,447	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:30:20,221	[INFO]	235	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:30:21,143	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:30:24,300	[INFO]	237	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:30:25,236	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:30:26,048	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:30:26,051	[INFO]	240	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:30:26,052	[DEBUG]	
2020-12-17 16:30:26,053	[INFO]	241	SUCCESS	+4.0	
2020-12-17 16:30:26,054	[DEBUG]	
2020-12-17 16:30:26,055	[INFO]	242	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:30:26,056	[DEBUG]	
2020-12-17 16:30:26,057	[INFO]	243	SUCCESS	+4.0	
2020-12-17 16:30:26,058	[DEBUG]	
2020-12-17 16:30:26,059	[INFO]	244	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:30:26,060	[DEBUG]	
2020-12-17 16:30:26,061	[INFO]	245	SUCCESS	+4.0	
2020-12-17 16:30:26,061	[DEBUG]	
2020-12-17 16:30:29,516	[INFO]	246	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:30:29,517	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:30:30,459	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:30:30,464	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:30:30,467	[INFO]	249	SUCCESS	+4.0	
2020-12-17 16:30:30,468	[DEBUG]	
2020-12-17 16:30:30,471	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:30:30,474	[INFO]	251	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:30:34,190	[INFO]	252	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:30:34,191	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:30:34,192	[INFO]	253	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:30:34,192	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:30:34,968	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:30:34,969	[INFO]	255	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:30:34,969	[DEBUG]	
2020-12-17 16:30:34,970	[INFO]	256	SUCCESS	+4.0	
2020-12-17 16:30:34,970	[DEBUG]	
2020-12-17 16:30:39,051	[INFO]	257	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:30:40,152	[INFO]	258	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:30:40,153	[INFO]	259	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:30:40,153	[DEBUG]	
2020-12-17 16:30:40,987	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:30:40,992	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:30:40,996	[INFO]	262	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:30:40,998	[INFO]	263	SUCCESS	+4.0	
2020-12-17 16:30:40,999	[DEBUG]	
2020-12-17 16:30:44,346	[INFO]	264	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:30:45,222	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:30:46,013	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:30:50,398	[INFO]	267	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:30:50,399	[INFO]	268	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:30:50,400	[INFO]	269	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:30:50,401	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:30:51,260	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:30:52,003	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:30:55,269	[INFO]	273	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:30:55,270	[INFO]	274	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:30:56,188	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:30:56,189	[INFO]	276	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:31:09,674	[INFO]	277	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:31:09,675	[INFO]	278	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:31:09,676	[DEBUG]	
2020-12-17 16:31:10,563	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:31:10,565	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:31:11,335	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:31:11,338	[INFO]	282	SUCCESS	+4.0	
2020-12-17 16:31:11,339	[DEBUG]	
2020-12-17 16:31:11,342	[INFO]	283	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:31:11,344	[INFO]	284	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:31:12,131	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:31:12,133	[INFO]	286	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:31:15,321	[INFO]	287	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:31:16,294	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:31:17,240	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:31:18,039	[INFO]	290	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:31:18,040	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:31:18,998	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:31:19,002	[INFO]	293	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:31:19,005	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:31:22,410	[INFO]	295	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:31:22,411	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:31:25,694	[INFO]	296	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:31:26,642	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:31:27,599	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:31:27,600	[INFO]	299	SUCCESS	+4.0	
2020-12-17 16:31:27,601	[DEBUG]	
2020-12-17 16:31:31,021	[INFO]	300	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:31:31,023	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:31:34,278	[INFO]	301	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:31:34,279	[INFO]	302	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:31:34,280	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:31:35,197	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:31:35,199	[INFO]	304	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:31:35,199	[DEBUG]	
2020-12-17 16:31:36,138	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:31:36,139	[INFO]	306	SUCCESS	+4.0	
2020-12-17 16:31:36,139	[DEBUG]	
2020-12-17 16:31:36,139	[INFO]	307	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:31:36,140	[INFO]	308	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:31:36,141	[INFO]	309	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:31:36,141	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:31:39,603	[INFO]	311	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:31:39,606	[INFO]	312	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:31:39,607	[DEBUG]	
2020-12-17 16:31:39,608	[INFO]	313	SUCCESS	+4.0	
2020-12-17 16:31:39,609	[DEBUG]	
2020-12-17 16:31:43,087	[INFO]	314	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:31:43,088	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:31:43,089	[INFO]	315	SUCCESS	+4.0	
2020-12-17 16:31:43,089	[DEBUG]	
2020-12-17 16:31:43,090	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:31:43,887	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:31:44,677	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:31:44,681	[INFO]	319	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:31:44,682	[DEBUG]	
2020-12-17 16:31:48,956	[INFO]	320	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:31:48,957	[INFO]	321	SUCCESS	+4.0	
2020-12-17 16:31:48,958	[DEBUG]	
2020-12-17 16:31:48,959	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:31:48,960	[INFO]	323	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:31:48,960	[DEBUG]	
2020-12-17 16:31:49,696	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:31:50,576	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:31:51,551	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:31:52,529	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:31:55,881	[INFO]	328	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:31:55,882	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:31:55,882	[INFO]	329	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:31:55,883	[DEBUG]	
2020-12-17 16:31:56,676	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:31:57,657	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:32:01,069	[INFO]	332	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:32:01,070	[INFO]	333	SUCCESS	+4.0	
2020-12-17 16:32:01,070	[DEBUG]	
2020-12-17 16:32:04,432	[INFO]	334	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:32:04,433	[INFO]	335	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:32:07,885	[INFO]	336	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:32:07,886	[INFO]	337	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:07,887	[DEBUG]	
2020-12-17 16:32:07,887	[INFO]	338	SUCCESS	+4.0	
2020-12-17 16:32:07,888	[DEBUG]	
2020-12-17 16:32:08,814	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:08,815	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:12,386	[INFO]	341	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:32:12,387	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:32:12,388	[INFO]	342	SUCCESS	+4.0	
2020-12-17 16:32:12,388	[DEBUG]	
2020-12-17 16:32:15,813	[INFO]	343	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:32:16,732	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:32:17,661	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:32:18,618	[INFO]	346	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:32:19,590	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:32:20,547	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:32:20,548	[INFO]	349	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:32:21,483	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:32:21,485	[INFO]	351	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:32:22,300	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:32:25,674	[INFO]	353	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:32:25,675	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:32:25,676	[INFO]	354	SUCCESS	+4.0	
2020-12-17 16:32:25,676	[DEBUG]	
2020-12-17 16:32:25,677	[INFO]	355	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:32:26,610	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:32:26,611	[INFO]	357	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:26,612	[INFO]	358	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:27,382	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:32:27,384	[INFO]	360	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:32:27,384	[DEBUG]	
2020-12-17 16:32:27,385	[INFO]	361	SUCCESS	+4.0	
2020-12-17 16:32:27,386	[DEBUG]	
2020-12-17 16:32:27,387	[INFO]	362	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:32:28,142	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:32:28,143	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:32:28,143	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:32:28,144	[INFO]	366	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:32:28,145	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:32:29,106	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:32:29,110	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:32:29,113	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:32:29,116	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:32:29,118	[INFO]	372	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:32:29,121	[INFO]	373	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:32:29,124	[INFO]	374	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:32:29,125	[DEBUG]	
2020-12-17 16:32:29,128	[INFO]	375	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:32:32,373	[INFO]	376	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:32:32,374	[INFO]	377	SUCCESS	+4.0	
2020-12-17 16:32:32,374	[DEBUG]	
2020-12-17 16:32:32,375	[INFO]	378	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:32,376	[INFO]	379	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:32:32,376	[INFO]	380	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:32:33,294	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:32:34,265	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:32:35,199	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:32:38,548	[INFO]	384	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:32:38,549	[INFO]	385	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:39,544	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:32:40,358	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:32:43,857	[INFO]	388	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:32:43,858	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:32:47,178	[INFO]	389	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:32:47,179	[INFO]	390	SUCCESS	+4.0	
2020-12-17 16:32:47,179	[DEBUG]	
2020-12-17 16:32:47,180	[INFO]	391	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:32:48,222	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:32:48,226	[INFO]	393	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:48,229	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:32:49,214	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:32:52,519	[INFO]	396	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:32:52,520	[INFO]	397	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:32:52,521	[DEBUG]	
2020-12-17 16:32:52,521	[INFO]	398	SUCCESS	+4.0	
2020-12-17 16:32:52,521	[DEBUG]	
2020-12-17 16:32:53,428	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:32:56,884	[INFO]	400	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:32:56,885	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:32:57,748	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:33:01,129	[INFO]	402	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:33:01,130	[INFO]	403	SUCCESS	+4.0	
2020-12-17 16:33:01,130	[DEBUG]	
2020-12-17 16:33:04,493	[INFO]	404	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:33:08,031	[INFO]	405	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:33:08,032	[INFO]	406	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:33:08,033	[INFO]	407	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:33:11,384	[INFO]	408	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:33:12,325	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:33:15,696	[INFO]	410	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:33:15,697	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:33:15,698	[INFO]	411	SUCCESS	+4.0	
2020-12-17 16:33:15,698	[DEBUG]	
2020-12-17 16:33:19,063	[INFO]	412	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:33:19,897	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:33:20,818	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:33:20,821	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:33:34,415	[INFO]	416	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:33:35,325	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:33:36,106	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:33:37,091	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:33:38,002	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:33:38,004	[INFO]	421	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:33:38,006	[INFO]	422	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:33:38,993	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:33:38,994	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:33:38,995	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:33:42,520	[INFO]	426	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:33:42,520	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:33:43,487	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:33:43,488	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:33:43,489	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:33:43,489	[INFO]	429	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:33:43,490	[DEBUG]	
2020-12-17 16:33:43,491	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:33:43,492	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:33:44,490	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:33:44,491	[INFO]	433	SUCCESS	+4.0	
2020-12-17 16:33:44,492	[DEBUG]	
2020-12-17 16:33:44,493	[INFO]	434	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:33:44,493	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:33:44,494	[INFO]	435	SUCCESS	+4.0	
2020-12-17 16:33:44,494	[DEBUG]	
2020-12-17 16:33:45,322	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:33:46,103	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:33:46,104	[INFO]	438	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:33:46,104	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:33:49,312	[INFO]	439	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:33:49,313	[INFO]	440	SUCCESS	+4.0	
2020-12-17 16:33:49,313	[DEBUG]	
2020-12-17 16:33:50,312	[INFO]	441	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:33:50,317	[INFO]	442	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:33:50,318	[INFO]	443	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:33:53,564	[INFO]	444	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:33:53,565	[INFO]	445	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:33:53,566	[INFO]	446	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:33:54,401	[INFO]	447	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:33:55,337	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:33:56,304	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:34:00,405	[INFO]	450	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:34:01,367	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:34:02,180	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:34:03,132	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:34:03,133	[INFO]	454	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:34:03,133	[DEBUG]	
2020-12-17 16:34:06,565	[INFO]	455	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:34:06,566	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:34:07,484	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:34:08,411	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:34:08,412	[INFO]	458	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:34:08,412	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:34:09,205	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:34:09,208	[INFO]	460	SUCCESS	+4.0	
2020-12-17 16:34:09,209	[DEBUG]	
2020-12-17 16:34:12,707	[INFO]	461	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:34:13,728	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:34:13,731	[INFO]	463	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:34:17,252	[INFO]	464	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:34:17,254	[INFO]	465	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:34:17,254	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:34:22,136	[INFO]	466	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:34:22,137	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:34:26,840	[INFO]	467	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:34:26,841	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:34:31,363	[INFO]	468	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:34:31,364	[INFO]	469	SUCCESS	+4.0	
2020-12-17 16:34:31,365	[DEBUG]	
2020-12-17 16:34:32,244	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:34:32,246	[INFO]	471	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:34:32,246	[DEBUG]	
2020-12-17 16:34:32,247	[INFO]	472	SUCCESS	+4.0	
2020-12-17 16:34:32,247	[DEBUG]	
2020-12-17 16:34:33,026	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:34:33,814	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:34:33,815	[INFO]	475	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:34:33,816	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:34:33,816	[INFO]	476	SUCCESS	+4.0	
2020-12-17 16:34:33,816	[DEBUG]	
2020-12-17 16:34:34,962	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:34:34,964	[INFO]	478	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:34:35,937	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:34:36,950	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:34:40,211	[INFO]	481	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:34:40,212	[INFO]	482	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:34:40,213	[INFO]	483	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:34:43,835	[INFO]	484	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:34:43,836	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:34:43,837	[INFO]	485	SUCCESS	+4.0	
2020-12-17 16:34:43,838	[DEBUG]	
2020-12-17 16:34:43,839	[INFO]	486	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:34:43,840	[INFO]	487	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:34:43,841	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:34:43,842	[INFO]	489	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:34:43,843	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:34:43,843	[INFO]	490	SUCCESS	+4.0	
2020-12-17 16:34:43,844	[DEBUG]	
2020-12-17 16:34:47,208	[INFO]	491	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:34:50,733	[INFO]	492	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:34:51,523	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:34:51,527	[INFO]	494	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:34:51,529	[INFO]	495	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:34:51,531	[INFO]	496	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:34:51,531	[DEBUG]	
2020-12-17 16:34:51,533	[INFO]	497	SUCCESS	+4.0	
2020-12-17 16:34:51,534	[DEBUG]	
2020-12-17 16:34:51,536	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:34:51,538	[INFO]	499	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:34:51,541	[INFO]	500	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:34:51,541	[INFO]	==== END ====
2020-12-17 16:34:51,542	[INFO]	Reason: step budget
2020-12-17 16:34:51,543	[INFO]	
2020-12-17 16:34:51,544	[INFO]	========== EPOCH 13 ==========
2020-12-17 16:34:51,545	[INFO]	==== WARMUP ====
2020-12-17 16:34:54,999	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:34:54,999	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:34:58,404	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:34:58,405	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:35:01,744	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:35:01,745	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:35:05,195	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 16:35:05,195	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:35:05,195	[INFO]	==== START ====
2020-12-17 16:35:08,635	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:35:08,635	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:35:08,636	[INFO]	2	SUCCESS	+4.0	
2020-12-17 16:35:08,636	[DEBUG]	
2020-12-17 16:35:09,569	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:35:12,812	[INFO]	4	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:35:16,231	[INFO]	5	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:35:17,182	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:35:21,377	[INFO]	7	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:35:22,135	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:35:22,923	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:35:22,926	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:35:26,297	[INFO]	11	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:35:29,899	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:35:30,828	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:35:35,239	[INFO]	14	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:35:36,075	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:35:37,010	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:35:38,048	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:35:39,022	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:35:39,023	[INFO]	19	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:35:40,011	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:35:43,467	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:35:43,471	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:35:44,258	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:35:47,467	[INFO]	23	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:35:48,435	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:35:49,462	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:35:49,467	[INFO]	26	SUCCESS	+4.0	
2020-12-17 16:35:49,467	[DEBUG]	
2020-12-17 16:35:49,469	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:35:49,473	[INFO]	28	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:35:50,439	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:35:53,676	[INFO]	30	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:35:53,677	[INFO]	31	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:35:53,677	[DEBUG]	
2020-12-17 16:35:53,678	[INFO]	32	SUCCESS	+4.0	
2020-12-17 16:35:53,678	[DEBUG]	
2020-12-17 16:35:54,587	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:35:54,588	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:35:54,589	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:35:54,590	[INFO]	36	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:35:54,591	[INFO]	37	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:35:54,592	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:35:55,559	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:35:55,561	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:35:58,987	[INFO]	41	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:35:58,988	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:35:58,988	[INFO]	42	SUCCESS	+4.0	
2020-12-17 16:35:58,988	[DEBUG]	
2020-12-17 16:35:59,926	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:03,160	[INFO]	44	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:36:06,445	[INFO]	45	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:36:10,141	[INFO]	46	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:36:10,142	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:36:10,143	[INFO]	47	SUCCESS	+4.0	
2020-12-17 16:36:10,143	[DEBUG]	
2020-12-17 16:36:11,121	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:36:12,110	[INFO]	49	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:12,111	[INFO]	50	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:36:15,682	[INFO]	51	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:36:16,490	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:36:17,453	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:36:20,842	[INFO]	54	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:36:20,844	[INFO]	55	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:36:20,846	[INFO]	56	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:36:20,847	[INFO]	57	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:36:20,848	[DEBUG]	
2020-12-17 16:36:20,848	[INFO]	58	SUCCESS	+4.0	
2020-12-17 16:36:20,849	[DEBUG]	
2020-12-17 16:36:20,850	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:36:20,850	[INFO]	60	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:36:20,851	[INFO]	61	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:36:21,658	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:36:21,662	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:36:21,664	[INFO]	64	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:36:21,665	[INFO]	65	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:36:22,419	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:36:23,163	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:36:24,126	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:36:25,085	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:36:25,886	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:36:26,819	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:27,840	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:36:31,411	[INFO]	73	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:36:31,412	[INFO]	74	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:36:32,215	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:36:33,169	[INFO]	76	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:36:33,173	[INFO]	77	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:36:36,795	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:36:36,796	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:36:40,160	[INFO]	79	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:36:40,161	[INFO]	80	SUCCESS	+4.0	
2020-12-17 16:36:40,161	[DEBUG]	
2020-12-17 16:36:40,162	[INFO]	81	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:36:41,139	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:41,142	[INFO]	83	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:36:44,635	[INFO]	84	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:36:44,636	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:36:44,637	[INFO]	85	SUCCESS	+4.0	
2020-12-17 16:36:44,637	[DEBUG]	
2020-12-17 16:36:45,356	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:36:48,551	[INFO]	87	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:36:48,552	[INFO]	88	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:36:49,321	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:36:49,323	[INFO]	90	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:36:50,306	[INFO]	91	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:36:51,252	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:36:52,255	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:36:52,259	[INFO]	94	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:36:53,229	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:36:53,230	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:36:53,232	[INFO]	97	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:54,049	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:36:54,050	[INFO]	99	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:54,836	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:36:54,841	[INFO]	101	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:36:54,842	[DEBUG]	
2020-12-17 16:36:54,844	[INFO]	102	SUCCESS	+4.0	
2020-12-17 16:36:54,845	[DEBUG]	
2020-12-17 16:36:54,847	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:36:54,849	[INFO]	104	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:36:55,809	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:36:55,810	[INFO]	106	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:36:56,811	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:36:56,814	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:36:57,603	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:36:58,376	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:36:58,378	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:36:59,288	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:36:59,289	[INFO]	113	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:36:59,290	[INFO]	114	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:59,290	[INFO]	115	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:36:59,291	[INFO]	116	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:37:00,090	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:37:03,481	[INFO]	118	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:37:03,482	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:37:03,483	[INFO]	119	SUCCESS	+4.0	
2020-12-17 16:37:03,483	[DEBUG]	
2020-12-17 16:37:03,484	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:37:03,484	[INFO]	121	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:37:06,883	[INFO]	122	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:37:06,883	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:37:06,884	[INFO]	123	SUCCESS	+4.0	
2020-12-17 16:37:06,884	[DEBUG]	
2020-12-17 16:37:06,885	[INFO]	124	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:37:06,886	[INFO]	125	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:37:07,945	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:37:07,950	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:37:08,917	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:37:08,918	[INFO]	129	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:37:09,714	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:37:09,715	[INFO]	131	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:37:09,715	[DEBUG]	
2020-12-17 16:37:09,716	[INFO]	132	SUCCESS	+4.0	
2020-12-17 16:37:09,716	[DEBUG]	
2020-12-17 16:37:10,501	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:37:11,413	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:37:12,394	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:37:15,730	[INFO]	136	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:37:16,492	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:37:16,493	[INFO]	138	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:37:16,493	[DEBUG]	
2020-12-17 16:37:16,494	[INFO]	139	SUCCESS	+4.0	
2020-12-17 16:37:16,494	[DEBUG]	
2020-12-17 16:37:16,495	[INFO]	140	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:37:16,495	[DEBUG]	
2020-12-17 16:37:19,733	[INFO]	141	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:37:19,734	[INFO]	142	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:37:19,734	[DEBUG]	
2020-12-17 16:37:20,494	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:37:20,495	[INFO]	144	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:37:20,495	[DEBUG]	
2020-12-17 16:37:20,496	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:37:20,497	[INFO]	146	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:37:20,497	[DEBUG]	
2020-12-17 16:37:23,769	[INFO]	147	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:37:23,770	[INFO]	148	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:37:23,771	[DEBUG]	
2020-12-17 16:37:23,771	[INFO]	149	SUCCESS	+4.0	
2020-12-17 16:37:23,772	[DEBUG]	
2020-12-17 16:37:23,773	[INFO]	150	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:37:23,773	[DEBUG]	
2020-12-17 16:37:23,774	[INFO]	151	SUCCESS	+4.0	
2020-12-17 16:37:23,774	[DEBUG]	
2020-12-17 16:37:27,243	[INFO]	152	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:37:27,244	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:37:27,245	[INFO]	153	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:37:27,246	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:37:28,026	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:37:28,030	[INFO]	155	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:37:28,031	[DEBUG]	
2020-12-17 16:37:28,983	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:37:29,786	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:37:34,407	[INFO]	158	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:37:34,408	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:37:34,409	[INFO]	159	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:37:34,409	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:37:35,303	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:37:35,306	[INFO]	161	SUCCESS	+4.0	
2020-12-17 16:37:35,307	[DEBUG]	
2020-12-17 16:37:36,068	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:37:37,045	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:37:38,009	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:37:51,668	[INFO]	165	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:37:51,669	[INFO]	166	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:37:51,670	[DEBUG]	
2020-12-17 16:37:52,388	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:37:53,157	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:37:53,161	[INFO]	169	SUCCESS	+4.0	
2020-12-17 16:37:53,161	[DEBUG]	
2020-12-17 16:37:54,140	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:37:55,105	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:37:55,108	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:37:56,117	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:37:56,912	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:37:57,692	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:37:57,693	[INFO]	176	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:37:57,694	[DEBUG]	
2020-12-17 16:37:57,695	[INFO]	177	SUCCESS	+4.0	
2020-12-17 16:37:57,695	[DEBUG]	
2020-12-17 16:37:57,696	[INFO]	178	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:38:00,957	[INFO]	179	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:38:00,958	[INFO]	180	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:38:00,959	[INFO]	181	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:38:01,882	[INFO]	182	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:38:05,086	[INFO]	183	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:38:05,087	[INFO]	184	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:38:05,087	[DEBUG]	
2020-12-17 16:38:05,088	[INFO]	185	SUCCESS	+4.0	
2020-12-17 16:38:05,088	[DEBUG]	
2020-12-17 16:38:06,038	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:38:06,041	[INFO]	187	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:38:06,043	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:38:07,026	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:38:07,027	[INFO]	190	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:38:07,027	[DEBUG]	
2020-12-17 16:38:10,472	[INFO]	191	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:38:10,473	[INFO]	192	SUCCESS	+4.0	
2020-12-17 16:38:10,473	[DEBUG]	
2020-12-17 16:38:10,474	[INFO]	193	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:38:10,475	[INFO]	194	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:38:11,386	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:38:11,389	[INFO]	196	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:38:12,162	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:38:13,084	[INFO]	198	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:38:13,085	[INFO]	199	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:38:14,039	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:38:18,248	[INFO]	201	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:38:19,168	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:38:22,748	[INFO]	203	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:38:23,486	[INFO]	204	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:38:25,050	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:38:26,720	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:38:26,722	[INFO]	207	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:38:26,723	[INFO]	208	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:38:26,723	[INFO]	209	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:38:26,724	[DEBUG]	
2020-12-17 16:38:26,724	[INFO]	210	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:38:31,171	[INFO]	211	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:38:32,081	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:38:32,860	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:38:46,606	[INFO]	214	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:38:46,607	[INFO]	215	SUCCESS	+4.0	
2020-12-17 16:38:46,607	[DEBUG]	
2020-12-17 16:38:47,490	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:38:47,492	[INFO]	217	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:38:48,252	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:38:51,701	[INFO]	219	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:38:51,702	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:38:55,402	[INFO]	220	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:38:55,403	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:38:59,176	[INFO]	221	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:38:59,177	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:38:59,937	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:38:59,938	[INFO]	223	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:38:59,939	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:39:00,720	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:39:01,642	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:01,644	[INFO]	226	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:39:01,645	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:39:01,646	[INFO]	227	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:01,647	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:39:01,648	[INFO]	228	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:01,648	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:39:01,649	[INFO]	229	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:01,649	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:39:01,650	[INFO]	230	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:39:01,650	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:39:01,651	[INFO]	231	SUCCESS	+4.0	
2020-12-17 16:39:01,651	[DEBUG]	
2020-12-17 16:39:05,033	[INFO]	232	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:39:05,034	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:39:08,394	[INFO]	234	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:39:09,153	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:39:10,084	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:39:10,086	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:39:10,087	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:39:10,088	[INFO]	239	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:39:10,089	[DEBUG]	
2020-12-17 16:39:10,090	[INFO]	240	SUCCESS	+4.0	
2020-12-17 16:39:10,090	[DEBUG]	
2020-12-17 16:39:13,422	[INFO]	241	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:39:13,423	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:39:14,369	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:14,371	[INFO]	243	SUCCESS	+4.0	
2020-12-17 16:39:14,372	[DEBUG]	
2020-12-17 16:39:14,374	[INFO]	244	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:39:14,375	[INFO]	245	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:39:14,376	[DEBUG]	
2020-12-17 16:39:14,378	[INFO]	246	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:39:14,379	[INFO]	247	SUCCESS	+4.0	
2020-12-17 16:39:14,380	[DEBUG]	
2020-12-17 16:39:14,382	[INFO]	248	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:17,868	[INFO]	249	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:39:17,868	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:39:17,869	[INFO]	250	SUCCESS	+4.0	
2020-12-17 16:39:17,869	[DEBUG]	
2020-12-17 16:39:17,870	[INFO]	251	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:39:17,870	[DEBUG]	
2020-12-17 16:39:18,792	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:39:18,793	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:39:19,571	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:39:19,573	[INFO]	255	SUCCESS	+4.0	
2020-12-17 16:39:19,573	[DEBUG]	
2020-12-17 16:39:19,575	[INFO]	256	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:39:19,576	[INFO]	257	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:39:19,577	[INFO]	258	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:39:20,499	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:39:20,501	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:21,473	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:39:22,428	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:39:23,429	[INFO]	263	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:39:24,383	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:39:27,823	[INFO]	265	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:39:27,823	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:39:27,824	[INFO]	266	SUCCESS	+4.0	
2020-12-17 16:39:27,824	[DEBUG]	
2020-12-17 16:39:28,804	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:39:28,806	[INFO]	268	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:29,584	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:39:30,513	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:31,304	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:32,291	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:39:32,292	[INFO]	273	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:39:33,300	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:39:34,221	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:39:34,223	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:39:35,209	[INFO]	277	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:36,165	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:37,129	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:39:37,131	[INFO]	280	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:39:37,947	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:39:37,948	[INFO]	282	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:39:37,949	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:39:38,751	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:39:38,754	[INFO]	284	SUCCESS	+4.0	
2020-12-17 16:39:38,755	[DEBUG]	
2020-12-17 16:39:38,757	[INFO]	285	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:39:38,759	[INFO]	286	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:39:38,759	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:39:39,503	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:39,504	[INFO]	288	SUCCESS	+4.0	
2020-12-17 16:39:39,504	[DEBUG]	
2020-12-17 16:39:40,432	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:39:40,438	[INFO]	290	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:39:40,441	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:39:40,444	[INFO]	292	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:39:43,741	[INFO]	293	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:39:43,743	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:39:43,745	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:39:43,747	[INFO]	296	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:39:44,699	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:39:44,700	[INFO]	298	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:39:48,050	[INFO]	299	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:39:48,829	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:39:48,834	[INFO]	301	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:48,835	[DEBUG]	
2020-12-17 16:39:48,838	[INFO]	302	SUCCESS	+4.0	
2020-12-17 16:39:48,839	[DEBUG]	
2020-12-17 16:39:53,101	[INFO]	303	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:53,103	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:53,847	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:39:53,850	[INFO]	306	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:39:53,851	[DEBUG]	
2020-12-17 16:39:53,853	[INFO]	307	SUCCESS	+4.0	
2020-12-17 16:39:53,853	[DEBUG]	
2020-12-17 16:39:57,044	[INFO]	308	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:39:57,046	[INFO]	309	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:39:57,046	[INFO]	310	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:39:57,046	[DEBUG]	
2020-12-17 16:39:57,047	[INFO]	311	SUCCESS	+4.0	
2020-12-17 16:39:57,047	[DEBUG]	
2020-12-17 16:39:57,048	[INFO]	312	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:39:57,049	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:39:57,050	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:39:57,050	[INFO]	315	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:57,051	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:39:57,052	[INFO]	317	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:39:57,052	[DEBUG]	
2020-12-17 16:39:57,053	[INFO]	318	SUCCESS	+4.0	
2020-12-17 16:39:57,053	[DEBUG]	
2020-12-17 16:39:57,053	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:57,054	[INFO]	320	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:39:57,837	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:39:58,799	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:39:58,800	[INFO]	323	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:39:59,557	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:39:59,558	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:40:00,313	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:40:01,110	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:40:02,046	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:40:03,001	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:40:06,407	[INFO]	330	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:40:06,407	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:40:09,839	[INFO]	331	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:40:10,616	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:40:10,620	[INFO]	333	SUCCESS	+4.0	
2020-12-17 16:40:10,621	[DEBUG]	
2020-12-17 16:40:11,549	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:40:12,318	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:40:13,267	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:40:14,208	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:40:15,152	[INFO]	338	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:40:18,556	[INFO]	339	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:40:18,557	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:40:19,477	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:40:23,903	[INFO]	341	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:40:27,270	[INFO]	342	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:40:27,271	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,26 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:40:30,701	[INFO]	343	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:40:30,702	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:40:30,703	[INFO]	344	SUCCESS	+4.0	
2020-12-17 16:40:30,703	[DEBUG]	
2020-12-17 16:40:34,085	[INFO]	345	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:40:34,086	[INFO]	346	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:40:34,820	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:40:34,821	[INFO]	348	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:40:34,821	[DEBUG]	
2020-12-17 16:40:35,995	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:40:35,996	[INFO]	350	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:40:35,997	[INFO]	351	SUCCESS	+4.0	
2020-12-17 16:40:35,997	[DEBUG]	
2020-12-17 16:40:37,330	[INFO]	352	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:40:37,333	[INFO]	353	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:40:38,157	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:40:38,162	[INFO]	355	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:40:39,365	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:40:40,678	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:40:40,682	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:40:44,752	[INFO]	359	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:40:48,605	[INFO]	360	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:40:48,606	[INFO]	361	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:40:52,980	[INFO]	362	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:40:56,266	[INFO]	363	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:40:57,179	[INFO]	364	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:40:57,182	[INFO]	365	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:40:57,182	[DEBUG]	
2020-12-17 16:40:57,183	[INFO]	366	SUCCESS	+4.0	
2020-12-17 16:40:57,184	[DEBUG]	
2020-12-17 16:41:00,554	[INFO]	367	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:41:00,555	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:41:00,556	[INFO]	368	SUCCESS	+4.0	
2020-12-17 16:41:00,556	[DEBUG]	
2020-12-17 16:41:01,479	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:41:02,246	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:41:02,247	[INFO]	371	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:41:02,248	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:41:05,720	[INFO]	373	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:41:05,721	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:41:06,699	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:41:10,232	[INFO]	375	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:41:10,233	[INFO]	376	SUCCESS	+4.0	
2020-12-17 16:41:10,233	[DEBUG]	
2020-12-17 16:41:11,150	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:41:11,929	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:41:12,714	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:41:16,063	[INFO]	380	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:41:17,045	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:41:20,336	[INFO]	382	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:41:21,300	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:41:22,243	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:41:23,207	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:41:26,440	[INFO]	386	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:41:27,381	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:41:28,325	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:41:29,288	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:41:29,290	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:41:30,249	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:41:31,048	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:41:31,856	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:41:32,822	[INFO]	394	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:41:32,824	[INFO]	395	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:41:33,777	[INFO]	396	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:41:36,949	[INFO]	397	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:41:37,854	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:41:38,635	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:41:39,590	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:41:43,218	[INFO]	401	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:41:44,180	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:41:44,953	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:41:44,954	[INFO]	404	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:41:45,869	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:41:45,870	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:41:46,688	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:41:46,689	[INFO]	408	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:41:47,480	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:41:48,242	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:41:49,008	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:41:49,814	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:41:49,818	[INFO]	413	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:41:49,820	[INFO]	414	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:41:53,515	[INFO]	415	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:41:53,516	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:41:53,517	[INFO]	416	SUCCESS	+4.0	
2020-12-17 16:41:53,517	[DEBUG]	
2020-12-17 16:41:53,518	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:41:53,519	[INFO]	418	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:41:54,438	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:41:55,219	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:41:55,222	[INFO]	421	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:41:55,223	[DEBUG]	
2020-12-17 16:41:55,225	[INFO]	422	SUCCESS	+4.0	
2020-12-17 16:41:55,225	[DEBUG]	
2020-12-17 16:41:56,188	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:41:56,997	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:42:00,321	[INFO]	425	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:42:00,322	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:42:01,296	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:42:01,301	[INFO]	427	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:42:01,303	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:42:01,306	[INFO]	428	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:42:01,307	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:42:01,309	[INFO]	429	SUCCESS	+4.0	
2020-12-17 16:42:01,310	[DEBUG]	
2020-12-17 16:42:02,232	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:42:03,191	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:42:03,194	[INFO]	432	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:42:03,196	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:42:03,197	[INFO]	434	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:42:03,198	[DEBUG]	
2020-12-17 16:42:03,199	[INFO]	435	SUCCESS	+4.0	
2020-12-17 16:42:03,200	[DEBUG]	
2020-12-17 16:42:06,631	[INFO]	436	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:42:06,631	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:42:07,556	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:42:10,942	[INFO]	438	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:42:11,885	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:42:11,887	[INFO]	440	SUCCESS	+4.0	
2020-12-17 16:42:11,888	[DEBUG]	
2020-12-17 16:42:15,144	[INFO]	441	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:42:15,145	[INFO]	442	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:42:15,145	[INFO]	443	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:42:15,146	[INFO]	444	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:42:15,146	[DEBUG]	
2020-12-17 16:42:15,147	[INFO]	445	SUCCESS	+4.0	
2020-12-17 16:42:15,147	[DEBUG]	
2020-12-17 16:42:19,355	[INFO]	446	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:42:20,129	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:42:20,130	[INFO]	448	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:42:20,131	[DEBUG]	
2020-12-17 16:42:20,131	[INFO]	449	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:42:21,089	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:42:21,090	[INFO]	451	SUCCESS	+4.0	
2020-12-17 16:42:21,090	[DEBUG]	
2020-12-17 16:42:22,056	[INFO]	452	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:42:22,057	[INFO]	453	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:42:22,854	[INFO]	454	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:42:23,602	[INFO]	455	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:42:24,553	[INFO]	456	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:42:25,458	[INFO]	457	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:42:29,238	[INFO]	458	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:42:30,181	[INFO]	459	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:42:31,149	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:42:34,376	[INFO]	461	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:42:35,347	[INFO]	462	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:42:35,350	[INFO]	463	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:42:35,350	[DEBUG]	
2020-12-17 16:42:35,352	[INFO]	464	SUCCESS	+4.0	
2020-12-17 16:42:35,352	[DEBUG]	
2020-12-17 16:42:35,354	[INFO]	465	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:42:35,354	[DEBUG]	
2020-12-17 16:42:35,355	[INFO]	466	SUCCESS	+4.0	
2020-12-17 16:42:35,356	[DEBUG]	
2020-12-17 16:42:38,777	[INFO]	467	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:42:39,744	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:42:40,691	[INFO]	469	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:42:40,693	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:42:40,695	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:42:43,866	[INFO]	472	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:42:47,278	[INFO]	473	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:42:48,228	[INFO]	474	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:42:48,229	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:42:51,540	[INFO]	476	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:42:51,544	[INFO]	477	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:42:51,547	[INFO]	478	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:42:52,495	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:42:55,932	[INFO]	480	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:42:59,189	[INFO]	481	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:42:59,962	[INFO]	482	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:42:59,963	[INFO]	483	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:42:59,963	[DEBUG]	
2020-12-17 16:43:00,944	[INFO]	484	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:43:04,355	[INFO]	485	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:43:04,355	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:43:05,176	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:43:05,180	[INFO]	487	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:43:05,181	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:43:05,950	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:43:09,202	[INFO]	489	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:43:09,205	[INFO]	490	SUCCESS	+4.0	
2020-12-17 16:43:09,206	[DEBUG]	
2020-12-17 16:43:10,165	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:43:10,167	[INFO]	492	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:43:10,167	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:43:10,168	[INFO]	493	SUCCESS	+4.0	
2020-12-17 16:43:10,168	[DEBUG]	
2020-12-17 16:43:13,516	[INFO]	494	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:43:14,424	[INFO]	495	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:43:17,862	[INFO]	496	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:43:17,863	[INFO]	497	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:43:21,071	[INFO]	498	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:43:21,073	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:43:24,498	[INFO]	500	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:43:24,498	[INFO]	==== END ====
2020-12-17 16:43:24,498	[INFO]	Reason: step budget
2020-12-17 16:43:24,499	[INFO]	
2020-12-17 16:43:24,499	[INFO]	========== EPOCH 14 ==========
2020-12-17 16:43:24,500	[INFO]	==== WARMUP ====
2020-12-17 16:43:27,874	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:43:27,874	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:43:31,273	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:43:31,274	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:43:34,677	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:43:34,677	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:43:38,117	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 16:43:38,117	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:43:38,117	[INFO]	==== START ====
2020-12-17 16:43:38,118	[INFO]	1	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:43:38,118	[DEBUG]	
2020-12-17 16:43:38,119	[INFO]	2	SUCCESS	+4.0	
2020-12-17 16:43:38,119	[DEBUG]	
2020-12-17 16:43:38,914	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:43:39,843	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:43:40,608	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:43:41,586	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:43:42,384	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:43:43,301	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:43:46,596	[INFO]	9	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:43:47,478	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:43:50,763	[INFO]	11	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:43:50,768	[INFO]	12	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:43:50,769	[DEBUG]	
2020-12-17 16:43:50,772	[INFO]	13	SUCCESS	+4.0	
2020-12-17 16:43:50,773	[DEBUG]	
2020-12-17 16:43:51,728	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:43:52,653	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:43:55,856	[INFO]	16	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:43:56,651	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:43:57,606	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:44:01,037	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:44:01,038	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:01,039	[INFO]	20	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:44:01,040	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:01,040	[INFO]	21	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:44:01,041	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:01,042	[INFO]	22	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:44:01,042	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:04,385	[INFO]	23	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:44:04,389	[INFO]	24	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:44:04,390	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:04,391	[INFO]	25	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:44:04,392	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:05,364	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:44:05,366	[INFO]	27	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:44:05,366	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:06,368	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:44:06,371	[INFO]	29	SUCCESS	+4.0	
2020-12-17 16:44:06,371	[DEBUG]	
2020-12-17 16:44:07,146	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:44:07,919	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:44:08,712	[INFO]	32	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:44:08,713	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:44:09,619	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:44:10,556	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:44:10,558	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:44:11,388	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:44:11,392	[INFO]	38	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:44:11,393	[INFO]	39	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:44:11,396	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:44:12,176	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:44:12,179	[INFO]	42	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:44:12,180	[DEBUG]	
2020-12-17 16:44:13,137	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:44:13,140	[INFO]	44	SUCCESS	+4.0	
2020-12-17 16:44:13,140	[DEBUG]	
2020-12-17 16:44:13,143	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:44:16,261	[INFO]	46	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:44:17,059	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:44:17,062	[INFO]	48	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:44:17,062	[DEBUG]	
2020-12-17 16:44:17,063	[INFO]	49	SUCCESS	+4.0	
2020-12-17 16:44:17,064	[DEBUG]	
2020-12-17 16:44:18,042	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:44:18,825	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:44:22,081	[INFO]	52	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:44:25,536	[INFO]	53	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:44:25,537	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:44:29,804	[INFO]	54	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:44:29,805	[INFO]	55	SUCCESS	+4.0	
2020-12-17 16:44:29,805	[DEBUG]	
2020-12-17 16:44:30,511	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:44:30,513	[INFO]	57	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:44:30,513	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:31,309	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:44:31,311	[INFO]	59	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:44:31,311	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:34,785	[INFO]	60	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:44:35,741	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:44:40,092	[INFO]	62	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:44:40,093	[INFO]	63	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:44:40,094	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:43,409	[INFO]	64	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:44:44,357	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:44:44,361	[INFO]	66	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:44:44,362	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:44,364	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:44:44,366	[INFO]	68	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:44:44,367	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:45,371	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:44:45,372	[INFO]	70	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:44:45,373	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:48,870	[INFO]	71	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:44:52,052	[INFO]	72	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:44:52,053	[INFO]	73	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:44:52,054	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:52,055	[INFO]	74	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:44:52,055	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:52,056	[INFO]	75	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:44:52,056	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:44:52,057	[INFO]	76	SUCCESS	+4.0	
2020-12-17 16:44:52,057	[DEBUG]	
2020-12-17 16:44:53,012	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:44:53,013	[INFO]	78	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:44:57,363	[INFO]	79	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:44:58,221	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:44:58,989	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:44:58,990	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:44:59,955	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:45:00,966	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:00,970	[INFO]	85	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:45:00,972	[DEBUG]	
2020-12-17 16:45:01,964	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:45:01,967	[INFO]	87	SUCCESS	+4.0	
2020-12-17 16:45:01,967	[DEBUG]	
2020-12-17 16:45:01,969	[INFO]	88	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:01,970	[DEBUG]	
2020-12-17 16:45:01,971	[INFO]	89	SUCCESS	+4.0	
2020-12-17 16:45:01,972	[DEBUG]	
2020-12-17 16:45:01,974	[INFO]	90	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:45:01,975	[DEBUG]	
2020-12-17 16:45:03,004	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:45:03,008	[INFO]	92	SUCCESS	+4.0	
2020-12-17 16:45:03,009	[DEBUG]	
2020-12-17 16:45:03,011	[INFO]	93	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:03,821	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:03,822	[INFO]	95	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:45:04,802	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:45:04,803	[INFO]	97	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:45:04,804	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:45:04,805	[INFO]	99	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:04,805	[INFO]	100	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:08,502	[INFO]	101	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:45:08,502	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:45:09,340	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:09,343	[INFO]	103	SUCCESS	+4.0	
2020-12-17 16:45:09,344	[DEBUG]	
2020-12-17 16:45:09,346	[INFO]	104	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:10,128	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:45:11,073	[INFO]	106	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:45:12,052	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:45:12,058	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:12,060	[INFO]	109	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:45:12,063	[INFO]	110	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:45:25,560	[INFO]	111	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:45:25,561	[INFO]	112	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:45:25,562	[INFO]	113	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:25,562	[DEBUG]	
2020-12-17 16:45:25,563	[INFO]	114	SUCCESS	+4.0	
2020-12-17 16:45:25,563	[DEBUG]	
2020-12-17 16:45:26,472	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:45:27,425	[INFO]	116	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:45:30,727	[INFO]	117	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:45:30,730	[INFO]	118	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:30,732	[INFO]	119	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:45:31,545	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:45:34,847	[INFO]	121	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:45:34,848	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:45:38,281	[INFO]	123	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:45:39,255	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:40,192	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:45:40,983	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:40,988	[INFO]	127	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:45:40,989	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:45:40,991	[INFO]	128	SUCCESS	+4.0	
2020-12-17 16:45:40,992	[DEBUG]	
2020-12-17 16:45:40,994	[INFO]	129	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:45:44,345	[INFO]	130	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:45:47,863	[INFO]	131	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:45:47,864	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:45:47,865	[INFO]	132	SUCCESS	+4.0	
2020-12-17 16:45:47,865	[DEBUG]	
2020-12-17 16:45:48,822	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:45:48,824	[INFO]	134	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:49,752	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:45:49,754	[INFO]	136	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:49,756	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:45:53,171	[INFO]	138	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:45:53,172	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:45:53,173	[INFO]	139	SUCCESS	+4.0	
2020-12-17 16:45:53,173	[DEBUG]	
2020-12-17 16:45:54,109	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:45:54,893	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:45:54,897	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:45:54,900	[INFO]	143	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:45:54,901	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:45:54,903	[INFO]	144	SUCCESS	+4.0	
2020-12-17 16:45:54,903	[DEBUG]	
2020-12-17 16:45:54,905	[INFO]	145	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:45:54,905	[DEBUG]	
2020-12-17 16:45:55,853	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:45:56,859	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:45:56,861	[INFO]	148	SUCCESS	+4.0	
2020-12-17 16:45:56,861	[DEBUG]	
2020-12-17 16:45:57,801	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:45:57,802	[INFO]	150	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:45:57,802	[DEBUG]	
2020-12-17 16:45:57,803	[INFO]	151	SUCCESS	+4.0	
2020-12-17 16:45:57,803	[DEBUG]	
2020-12-17 16:45:57,804	[INFO]	152	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:57,804	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:45:57,805	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:45:57,806	[INFO]	155	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:45:57,806	[DEBUG]	
2020-12-17 16:45:58,617	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:45:58,621	[INFO]	157	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:45:58,623	[INFO]	158	SUCCESS	+4.0	
2020-12-17 16:45:58,623	[DEBUG]	
2020-12-17 16:45:58,625	[INFO]	159	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:45:58,626	[DEBUG]	
2020-12-17 16:45:58,627	[INFO]	160	SUCCESS	+4.0	
2020-12-17 16:45:58,628	[DEBUG]	
2020-12-17 16:45:59,405	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:46:00,165	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:46:01,127	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:46:01,132	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:46:01,134	[INFO]	165	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:46:01,912	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:46:01,915	[INFO]	167	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:46:01,915	[DEBUG]	
2020-12-17 16:46:01,917	[INFO]	168	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:46:01,918	[DEBUG]	
2020-12-17 16:46:02,870	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:46:02,871	[INFO]	170	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:46:02,872	[DEBUG]	
2020-12-17 16:46:02,872	[INFO]	171	SUCCESS	+4.0	
2020-12-17 16:46:02,872	[DEBUG]	
2020-12-17 16:46:02,873	[INFO]	172	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:46:03,843	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:46:03,848	[INFO]	174	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:46:04,655	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:46:07,880	[INFO]	176	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:46:08,846	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:46:08,848	[INFO]	178	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:46:08,848	[DEBUG]	
2020-12-17 16:46:08,849	[INFO]	179	SUCCESS	+4.0	
2020-12-17 16:46:08,849	[DEBUG]	
2020-12-17 16:46:09,606	[INFO]	180	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:46:12,853	[INFO]	181	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:46:13,792	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:46:17,134	[INFO]	183	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:46:17,139	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:46:17,145	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:46:17,148	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:46:20,328	[INFO]	187	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:46:20,331	[INFO]	188	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:46:20,332	[DEBUG]	
2020-12-17 16:46:20,334	[INFO]	189	SUCCESS	+4.0	
2020-12-17 16:46:20,334	[DEBUG]	
2020-12-17 16:46:20,337	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:46:20,339	[INFO]	191	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:46:20,340	[DEBUG]	
2020-12-17 16:46:20,342	[INFO]	192	SUCCESS	+4.0	
2020-12-17 16:46:20,342	[DEBUG]	
2020-12-17 16:46:20,344	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:46:23,722	[INFO]	194	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:46:23,723	[INFO]	195	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:46:23,723	[DEBUG]	
2020-12-17 16:46:27,428	[INFO]	196	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:46:27,429	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:46:28,340	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:46:28,341	[INFO]	198	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:46:28,341	[DEBUG]	
2020-12-17 16:46:28,342	[INFO]	199	SUCCESS	+4.0	
2020-12-17 16:46:28,342	[DEBUG]	
2020-12-17 16:46:28,343	[INFO]	200	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:46:28,343	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:46:42,042	[INFO]	201	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:46:42,043	[INFO]	202	SUCCESS	+4.0	
2020-12-17 16:46:42,043	[DEBUG]	
2020-12-17 16:46:42,767	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:46:46,019	[INFO]	204	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:46:46,020	[INFO]	205	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:46:46,020	[DEBUG]	
2020-12-17 16:46:46,021	[INFO]	206	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:46:46,021	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:46:49,498	[INFO]	207	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:46:49,500	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:46:52,718	[INFO]	209	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:46:53,699	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:46:53,700	[INFO]	211	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:46:53,701	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:46:58,334	[INFO]	212	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:46:58,334	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,25 ****
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 15,26 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:46:59,274	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:47:04,212	[INFO]	214	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:47:04,213	[INFO]	215	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:47:04,213	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:47:04,214	[INFO]	216	SUCCESS	+4.0	
2020-12-17 16:47:04,214	[DEBUG]	
2020-12-17 16:47:07,575	[INFO]	217	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:47:08,543	[INFO]	218	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:47:08,545	[INFO]	219	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:47:08,545	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:47:08,546	[INFO]	220	SUCCESS	+4.0	
2020-12-17 16:47:08,547	[DEBUG]	
2020-12-17 16:47:09,346	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:47:10,291	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:47:11,083	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:47:11,086	[INFO]	224	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:47:14,433	[INFO]	225	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:47:14,434	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:47:17,838	[INFO]	226	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:47:17,839	[INFO]	227	SUCCESS	+4.0	
2020-12-17 16:47:17,839	[DEBUG]	
2020-12-17 16:47:17,840	[INFO]	228	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:47:17,840	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:47:18,785	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:47:18,786	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:47:18,787	[INFO]	231	SUCCESS	+4.0	
2020-12-17 16:47:18,787	[DEBUG]	
2020-12-17 16:47:19,715	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:47:20,658	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:47:21,442	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:47:22,391	[INFO]	235	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:47:22,395	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:47:22,397	[INFO]	237	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:47:22,400	[INFO]	238	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:47:22,401	[DEBUG]	
2020-12-17 16:47:23,375	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:47:23,376	[INFO]	240	SUCCESS	+4.0	
2020-12-17 16:47:23,376	[DEBUG]	
2020-12-17 16:47:26,532	[INFO]	241	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:47:27,488	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:47:27,491	[INFO]	243	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:47:27,492	[DEBUG]	
2020-12-17 16:47:27,494	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:47:27,496	[INFO]	245	SUCCESS	+4.0	
2020-12-17 16:47:27,496	[DEBUG]	
2020-12-17 16:47:27,498	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:47:28,423	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:47:28,425	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:47:28,426	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:47:28,427	[INFO]	250	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:47:29,396	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:47:30,212	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:47:30,214	[INFO]	253	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:47:30,216	[INFO]	254	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:47:33,491	[INFO]	255	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:47:34,402	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:47:47,994	[INFO]	257	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:47:51,210	[INFO]	258	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:47:51,985	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:47:52,939	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:47:56,325	[INFO]	261	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:47:59,760	[INFO]	262	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:47:59,761	[INFO]	263	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:47:59,762	[DEBUG]	
2020-12-17 16:47:59,762	[INFO]	264	SUCCESS	+4.0	
2020-12-17 16:47:59,762	[DEBUG]	
2020-12-17 16:47:59,763	[INFO]	265	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:47:59,764	[INFO]	266	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:48:00,510	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:48:01,470	[INFO]	268	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:48:01,473	[INFO]	269	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:48:01,475	[INFO]	270	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:48:01,477	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:48:01,479	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:48:01,481	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:48:02,452	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:48:03,413	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:48:03,416	[INFO]	276	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:48:04,192	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:48:04,193	[INFO]	278	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:48:05,161	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:48:05,164	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:48:05,166	[INFO]	281	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:48:06,137	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:48:09,539	[INFO]	283	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:48:10,288	[INFO]	284	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:48:11,218	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:48:11,219	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:48:14,432	[INFO]	287	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:48:17,843	[INFO]	288	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:48:18,793	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:48:18,794	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:48:22,025	[INFO]	291	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:48:22,027	[INFO]	292	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:48:22,027	[DEBUG]	
2020-12-17 16:48:22,028	[INFO]	293	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:48:22,029	[INFO]	294	SUCCESS	+4.0	
2020-12-17 16:48:22,029	[DEBUG]	
2020-12-17 16:48:22,030	[INFO]	295	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:48:22,946	[INFO]	296	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:48:22,947	[INFO]	297	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:48:22,947	[DEBUG]	
2020-12-17 16:48:22,948	[INFO]	298	SUCCESS	+4.0	
2020-12-17 16:48:22,948	[DEBUG]	
2020-12-17 16:48:22,949	[INFO]	299	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:48:22,949	[DEBUG]	
2020-12-17 16:48:22,949	[INFO]	300	SUCCESS	+4.0	
2020-12-17 16:48:22,950	[DEBUG]	
2020-12-17 16:48:22,950	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:48:26,354	[INFO]	302	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:48:26,356	[INFO]	303	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:48:29,815	[INFO]	304	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:48:29,816	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:48:29,817	[INFO]	305	SUCCESS	+4.0	
2020-12-17 16:48:29,817	[DEBUG]	
2020-12-17 16:48:29,818	[INFO]	306	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:48:29,819	[INFO]	307	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:48:33,253	[INFO]	308	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:48:33,254	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:48:33,255	[INFO]	309	SUCCESS	+4.0	
2020-12-17 16:48:33,255	[DEBUG]	
2020-12-17 16:48:33,256	[INFO]	310	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:48:36,657	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:48:36,658	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:48:37,580	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:48:40,998	[INFO]	313	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:48:40,999	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 12,20 ****
   */
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
!         if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 12,21 ----
   */
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
!          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:48:41,000	[INFO]	314	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:48:41,000	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:48:44,397	[INFO]	315	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:48:47,664	[INFO]	316	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:48:48,614	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:48:48,615	[INFO]	318	SUCCESS	+4.0	
2020-12-17 16:48:48,615	[DEBUG]	
2020-12-17 16:48:49,559	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:48:49,560	[INFO]	320	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:48:50,361	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:48:53,773	[INFO]	322	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:48:53,774	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:48:54,545	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:48:54,546	[INFO]	324	SUCCESS	+4.0	
2020-12-17 16:48:54,546	[DEBUG]	
2020-12-17 16:48:55,464	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:48:55,466	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:48:56,410	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:48:56,411	[INFO]	328	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:48:56,412	[INFO]	329	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:48:57,381	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:48:58,324	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:48:59,282	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:49:12,829	[INFO]	333	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:49:16,062	[INFO]	334	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:49:16,066	[INFO]	335	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:49:16,068	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:49:19,475	[INFO]	337	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:49:19,475	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 16:49:19,476	[INFO]	338	SUCCESS	+4.0	
2020-12-17 16:49:19,476	[DEBUG]	
2020-12-17 16:49:20,393	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:49:20,397	[INFO]	340	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:49:20,400	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:49:20,402	[INFO]	342	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:49:20,405	[INFO]	343	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:49:20,408	[INFO]	344	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:49:21,201	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:49:25,169	[INFO]	346	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:49:26,088	[INFO]	347	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:49:27,047	[INFO]	348	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:49:27,861	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:49:31,092	[INFO]	350	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:49:32,041	[INFO]	351	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:49:35,759	[INFO]	352	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:49:35,760	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:49:35,760	[INFO]	353	SUCCESS	+4.0	
2020-12-17 16:49:35,761	[DEBUG]	
2020-12-17 16:49:35,762	[INFO]	354	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:49:39,032	[INFO]	355	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:49:39,033	[INFO]	356	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:49:39,773	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:49:40,547	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:49:40,551	[INFO]	359	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:49:40,554	[INFO]	360	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:49:40,556	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:49:43,846	[INFO]	361	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:49:43,847	[INFO]	362	SUCCESS	+4.0	
2020-12-17 16:49:43,848	[DEBUG]	
2020-12-17 16:49:44,851	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:49:44,856	[INFO]	364	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:49:44,860	[INFO]	365	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:49:44,861	[DEBUG]	
2020-12-17 16:49:44,864	[INFO]	366	SUCCESS	+4.0	
2020-12-17 16:49:44,864	[DEBUG]	
2020-12-17 16:49:45,808	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:49:46,797	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:49:47,760	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:49:48,734	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:49:48,736	[INFO]	371	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:49:49,676	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:49:49,677	[INFO]	373	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:49:50,450	[INFO]	374	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:49:50,451	[INFO]	375	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:49:50,452	[DEBUG]	
2020-12-17 16:49:50,452	[INFO]	376	SUCCESS	+4.0	
2020-12-17 16:49:50,452	[DEBUG]	
2020-12-17 16:49:50,453	[INFO]	377	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:49:50,454	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:49:50,455	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:49:54,803	[INFO]	380	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:49:55,542	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:49:55,546	[INFO]	382	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:49:56,287	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:49:57,066	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:49:58,023	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:49:58,024	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:49:58,972	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:49:59,744	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:50:00,699	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:50:01,473	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:50:02,230	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:50:05,607	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:50:05,609	[INFO]	393	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:50:05,609	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:50:05,610	[INFO]	395	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:50:05,610	[DEBUG]	
2020-12-17 16:50:05,611	[INFO]	396	SUCCESS	+4.0	
2020-12-17 16:50:05,611	[DEBUG]	
2020-12-17 16:50:05,612	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:50:05,612	[INFO]	398	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:50:05,613	[INFO]	399	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:50:06,612	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:50:07,394	[INFO]	401	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:50:08,294	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:50:09,215	[INFO]	403	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:50:10,173	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:50:13,639	[INFO]	405	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:50:13,640	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:50:13,641	[INFO]	406	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:50:13,642	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:50:14,574	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:50:17,997	[INFO]	408	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:50:17,999	[INFO]	409	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:50:17,999	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:50:18,000	[INFO]	410	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:50:18,000	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:50:18,001	[INFO]	411	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:50:18,002	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:50:18,002	[INFO]	412	SUCCESS	+4.0	
2020-12-17 16:50:18,002	[DEBUG]	
2020-12-17 16:50:18,959	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:50:23,285	[INFO]	414	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:50:24,202	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:50:24,203	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:50:24,204	[INFO]	417	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:50:24,204	[DEBUG]	
2020-12-17 16:50:24,205	[INFO]	418	SUCCESS	+4.0	
2020-12-17 16:50:24,205	[DEBUG]	
2020-12-17 16:50:25,160	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:50:25,164	[INFO]	420	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:50:25,166	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:50:25,168	[INFO]	421	SUCCESS	+4.0	
2020-12-17 16:50:25,169	[DEBUG]	
2020-12-17 16:50:25,172	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:50:28,712	[INFO]	423	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:50:28,713	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:50:28,713	[INFO]	424	SUCCESS	+4.0	
2020-12-17 16:50:28,714	[DEBUG]	
2020-12-17 16:50:28,714	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:50:29,625	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:50:30,564	[INFO]	427	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:50:30,565	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:50:30,566	[INFO]	429	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:50:30,567	[INFO]	430	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:50:30,568	[INFO]	431	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:50:30,569	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:50:30,570	[INFO]	432	SUCCESS	+4.0	
2020-12-17 16:50:30,570	[DEBUG]	
2020-12-17 16:50:31,582	[INFO]	433	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:50:32,503	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:50:33,302	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:50:33,304	[INFO]	436	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:50:33,304	[DEBUG]	
2020-12-17 16:50:34,274	[INFO]	437	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:50:34,275	[INFO]	438	SUCCESS	+4.0	
2020-12-17 16:50:34,275	[DEBUG]	
2020-12-17 16:50:38,597	[INFO]	439	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:50:38,598	[INFO]	440	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:50:38,598	[DEBUG]	
2020-12-17 16:50:38,599	[INFO]	441	SUCCESS	+4.0	
2020-12-17 16:50:38,599	[DEBUG]	
2020-12-17 16:50:38,600	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:50:39,860	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:50:39,861	[INFO]	444	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:50:39,861	[DEBUG]	
2020-12-17 16:50:39,862	[INFO]	445	SUCCESS	+4.0	
2020-12-17 16:50:39,862	[DEBUG]	
2020-12-17 16:50:39,863	[INFO]	446	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:50:39,863	[DEBUG]	
2020-12-17 16:50:39,864	[INFO]	447	SUCCESS	+4.0	
2020-12-17 16:50:39,865	[DEBUG]	
2020-12-17 16:50:40,849	[INFO]	448	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:50:40,851	[INFO]	449	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:50:40,852	[DEBUG]	
2020-12-17 16:50:40,852	[INFO]	450	SUCCESS	+4.0	
2020-12-17 16:50:40,853	[DEBUG]	
2020-12-17 16:50:40,854	[INFO]	451	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:50:44,348	[INFO]	452	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:50:48,972	[INFO]	453	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:50:48,973	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:50:49,897	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:50:55,968	[INFO]	455	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:50:55,969	[INFO]	456	SUCCESS	+4.0	
2020-12-17 16:50:55,969	[DEBUG]	
2020-12-17 16:50:59,275	[INFO]	457	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:50:59,276	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:50:59,277	[INFO]	458	SUCCESS	+4.0	
2020-12-17 16:50:59,277	[DEBUG]	
2020-12-17 16:50:59,278	[INFO]	459	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:51:00,221	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:51:03,420	[INFO]	461	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:51:04,409	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:51:04,411	[INFO]	463	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:51:04,412	[INFO]	464	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:51:04,414	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:51:05,188	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:51:06,207	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:51:06,209	[INFO]	468	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:51:06,209	[INFO]	469	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:51:06,210	[INFO]	470	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:51:06,211	[INFO]	471	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:51:06,211	[INFO]	472	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:51:09,714	[INFO]	473	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:51:09,714	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:51:09,715	[INFO]	474	SUCCESS	+4.0	
2020-12-17 16:51:09,715	[DEBUG]	
2020-12-17 16:51:09,716	[INFO]	475	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:51:09,717	[INFO]	476	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:51:09,717	[DEBUG]	
2020-12-17 16:51:12,899	[INFO]	477	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:51:12,900	[INFO]	478	SUCCESS	+4.0	
2020-12-17 16:51:12,901	[DEBUG]	
2020-12-17 16:51:12,902	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:51:12,902	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:51:13,865	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:51:14,829	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:51:18,330	[INFO]	483	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:51:18,331	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:51:19,266	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:51:20,225	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:51:23,548	[INFO]	487	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:51:23,550	[INFO]	488	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:51:23,551	[DEBUG]	
2020-12-17 16:51:23,552	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:51:24,547	[INFO]	490	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:51:24,548	[INFO]	491	SUCCESS	+4.0	
2020-12-17 16:51:24,548	[DEBUG]	
2020-12-17 16:51:25,510	[INFO]	492	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:51:25,511	[INFO]	493	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:51:26,468	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:51:29,925	[INFO]	495	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:51:34,377	[INFO]	496	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:51:34,378	[INFO]	497	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:51:34,378	[DEBUG]	
2020-12-17 16:51:34,379	[INFO]	498	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:51:34,379	[INFO]	499	SUCCESS	+4.0	
2020-12-17 16:51:34,380	[DEBUG]	
2020-12-17 16:51:34,380	[INFO]	500	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:51:34,381	[INFO]	==== END ====
2020-12-17 16:51:34,381	[INFO]	Reason: step budget
2020-12-17 16:51:34,381	[INFO]	
2020-12-17 16:51:34,381	[INFO]	========== EPOCH 15 ==========
2020-12-17 16:51:34,381	[INFO]	==== WARMUP ====
2020-12-17 16:51:37,753	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:51:37,753	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:51:41,319	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:51:41,320	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:51:44,790	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 16:51:44,790	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:51:48,282	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 16:51:48,282	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 16:51:48,282	[INFO]	==== START ====
2020-12-17 16:51:51,499	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:51:52,478	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:51:53,432	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:51:54,378	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:51:57,837	[INFO]	5	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:51:57,837	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:51:58,635	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:52:02,908	[INFO]	7	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:52:02,909	[INFO]	8	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:52:02,909	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:52:03,693	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:52:03,694	[INFO]	10	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:52:03,694	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:52:04,646	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:52:04,647	[INFO]	12	SUCCESS	+4.0	
2020-12-17 16:52:04,647	[DEBUG]	
2020-12-17 16:52:05,420	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:52:06,235	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:52:06,238	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:52:07,248	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:52:07,250	[INFO]	17	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:52:07,250	[DEBUG]	
2020-12-17 16:52:07,251	[INFO]	18	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:52:07,252	[INFO]	19	SUCCESS	+4.0	
2020-12-17 16:52:07,252	[DEBUG]	
2020-12-17 16:52:12,176	[INFO]	20	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:52:15,715	[INFO]	21	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:52:15,717	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:52:15,717	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:52:15,718	[INFO]	24	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:52:15,718	[DEBUG]	
2020-12-17 16:52:19,162	[INFO]	25	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:52:19,164	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:52:19,167	[INFO]	26	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:52:19,168	[DEBUG]	
2020-12-17 16:52:19,170	[INFO]	27	SUCCESS	+4.0	
2020-12-17 16:52:19,171	[DEBUG]	
2020-12-17 16:52:22,646	[INFO]	28	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:52:23,395	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:52:24,205	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:52:24,979	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:52:24,980	[INFO]	32	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:52:25,935	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:52:26,836	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:52:31,628	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:52:32,449	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:52:32,450	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:52:33,371	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:52:34,176	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:52:35,113	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:52:35,115	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:52:38,624	[INFO]	42	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:52:38,625	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:52:38,626	[INFO]	43	SUCCESS	+4.0	
2020-12-17 16:52:38,626	[DEBUG]	
2020-12-17 16:52:38,627	[INFO]	44	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:52:38,628	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:52:41,875	[INFO]	46	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:52:42,857	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:52:43,637	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:52:46,925	[INFO]	49	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:52:47,904	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:52:47,906	[INFO]	51	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:52:48,866	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:52:48,868	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:52:49,639	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:52:50,406	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:52:50,409	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:52:50,410	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:52:50,411	[INFO]	58	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:52:50,412	[DEBUG]	
2020-12-17 16:52:50,413	[INFO]	59	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:52:50,414	[INFO]	60	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:52:50,415	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:52:53,802	[INFO]	62	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:52:54,579	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:52:54,581	[INFO]	64	SUCCESS	+4.0	
2020-12-17 16:52:54,582	[DEBUG]	
2020-12-17 16:52:55,572	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:52:55,575	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:52:56,383	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:52:56,387	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:52:59,829	[INFO]	69	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:52:59,830	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:52:59,831	[INFO]	70	SUCCESS	+4.0	
2020-12-17 16:52:59,832	[DEBUG]	
2020-12-17 16:52:59,833	[INFO]	71	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:52:59,833	[DEBUG]	
2020-12-17 16:52:59,834	[INFO]	72	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:53:04,145	[INFO]	73	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:53:05,033	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:53:05,034	[INFO]	75	SUCCESS	+4.0	
2020-12-17 16:53:05,034	[DEBUG]	
2020-12-17 16:53:05,947	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:53:06,950	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:07,923	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:53:11,349	[INFO]	79	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:53:11,350	[INFO]	80	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:53:12,289	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:53:13,229	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:53:16,570	[INFO]	83	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:53:17,524	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:53:18,489	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:53:18,491	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:53:19,431	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:53:20,235	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:53:21,129	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:24,548	[INFO]	90	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:53:24,549	[INFO]	91	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:24,550	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:24,551	[INFO]	93	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:53:24,551	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:53:27,906	[INFO]	95	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:53:27,906	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:53:28,842	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:53:29,811	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:53:29,812	[INFO]	98	SUCCESS	+4.0	
2020-12-17 16:53:29,812	[DEBUG]	
2020-12-17 16:53:29,813	[INFO]	99	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:53:29,814	[INFO]	100	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:53:30,765	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:53:30,766	[INFO]	102	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:31,794	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:53:31,798	[INFO]	104	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:53:35,211	[INFO]	105	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:53:35,212	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:53:35,213	[INFO]	106	SUCCESS	+4.0	
2020-12-17 16:53:35,213	[DEBUG]	
2020-12-17 16:53:38,555	[INFO]	107	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:53:38,558	[INFO]	108	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:53:38,561	[INFO]	109	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:53:38,562	[DEBUG]	
2020-12-17 16:53:38,565	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:38,568	[INFO]	111	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:53:38,570	[INFO]	112	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:38,571	[DEBUG]	
2020-12-17 16:53:39,464	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:53:39,465	[INFO]	114	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:39,465	[DEBUG]	
2020-12-17 16:53:39,466	[INFO]	115	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:53:39,467	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:53:40,425	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:41,390	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:53:41,392	[INFO]	118	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:53:41,392	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:53:44,847	[INFO]	119	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:53:44,848	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:53:44,849	[INFO]	120	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:53:44,849	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:53:44,850	[INFO]	121	SUCCESS	+4.0	
2020-12-17 16:53:44,851	[DEBUG]	
2020-12-17 16:53:44,852	[INFO]	122	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:53:44,853	[INFO]	123	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:53:44,854	[INFO]	124	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:53:44,855	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:53:45,602	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:53:45,603	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:53:45,604	[INFO]	128	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:53:45,604	[INFO]	129	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:53:46,389	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:46,392	[INFO]	131	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:53:46,394	[INFO]	132	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:53:50,815	[INFO]	133	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:53:54,115	[INFO]	134	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:53:55,070	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:53:55,881	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:53:55,886	[INFO]	137	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:53:55,888	[DEBUG]	
2020-12-17 16:53:55,891	[INFO]	138	SUCCESS	+4.0	
2020-12-17 16:53:55,892	[DEBUG]	
2020-12-17 16:53:56,840	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:53:56,841	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:53:57,769	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:53:58,570	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:53:58,571	[INFO]	143	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:53:58,571	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:53:58,572	[INFO]	144	SUCCESS	+4.0	
2020-12-17 16:53:58,572	[DEBUG]	
2020-12-17 16:53:58,573	[INFO]	145	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:53:59,498	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:54:00,445	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:54:00,446	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:54:00,447	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:54:01,206	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:54:04,578	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:54:04,578	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:54:04,580	[INFO]	152	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:54:04,580	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:54:05,516	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:54:09,022	[INFO]	154	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:54:09,759	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:54:09,761	[INFO]	156	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:54:09,761	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:54:13,001	[INFO]	157	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:54:13,002	[INFO]	158	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:54:13,002	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:54:13,743	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:54:14,687	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:54:19,171	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:54:19,172	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:54:19,898	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:54:19,900	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:54:19,900	[INFO]	164	SUCCESS	+4.0	
2020-12-17 16:54:19,901	[DEBUG]	
2020-12-17 16:54:20,840	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:54:21,783	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:54:21,784	[INFO]	167	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:54:21,784	[DEBUG]	
2020-12-17 16:54:21,785	[INFO]	168	SUCCESS	+4.0	
2020-12-17 16:54:21,785	[DEBUG]	
2020-12-17 16:54:22,605	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:54:23,533	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:54:24,453	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:54:24,454	[INFO]	172	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:54:27,740	[INFO]	173	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:54:31,172	[INFO]	174	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:54:32,138	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:54:35,308	[INFO]	176	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:54:36,252	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:54:36,254	[INFO]	178	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:54:37,195	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:54:37,994	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:54:37,997	[INFO]	181	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:54:38,923	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:54:39,872	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:54:40,628	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:54:41,563	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:54:45,287	[INFO]	186	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:54:45,288	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:54:48,608	[INFO]	187	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:54:52,304	[INFO]	188	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:54:52,305	[INFO]	189	SUCCESS	+4.0	
2020-12-17 16:54:52,305	[DEBUG]	
2020-12-17 16:54:56,787	[INFO]	190	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:54:56,788	[INFO]	191	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:54:56,789	[DEBUG]	
2020-12-17 16:54:56,789	[INFO]	192	SUCCESS	+4.0	
2020-12-17 16:54:56,789	[DEBUG]	
2020-12-17 16:54:57,517	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:54:58,265	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:54:58,268	[INFO]	195	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:54:58,269	[DEBUG]	
2020-12-17 16:55:11,958	[INFO]	196	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:55:11,959	[INFO]	197	SUCCESS	+4.0	
2020-12-17 16:55:11,959	[DEBUG]	
2020-12-17 16:55:12,860	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:55:12,862	[INFO]	199	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:55:12,863	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:55:16,241	[INFO]	201	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:55:16,242	[INFO]	202	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:55:16,242	[DEBUG]	
2020-12-17 16:55:16,243	[INFO]	203	SUCCESS	+4.0	
2020-12-17 16:55:16,243	[DEBUG]	
2020-12-17 16:55:16,244	[INFO]	204	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:55:16,244	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:55:16,244	[INFO]	205	SUCCESS	+4.0	
2020-12-17 16:55:16,245	[DEBUG]	
2020-12-17 16:55:16,245	[INFO]	206	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:55:16,246	[INFO]	207	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:55:16,247	[DEBUG]	
2020-12-17 16:55:17,188	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:55:17,190	[INFO]	209	SUCCESS	+4.0	
2020-12-17 16:55:17,191	[DEBUG]	
2020-12-17 16:55:17,193	[INFO]	210	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:55:17,193	[DEBUG]	
2020-12-17 16:55:17,195	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:55:17,197	[INFO]	212	SUCCESS	+4.0	
2020-12-17 16:55:17,197	[DEBUG]	
2020-12-17 16:55:18,132	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:55:21,391	[INFO]	214	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:55:22,318	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:55:25,492	[INFO]	216	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:55:25,494	[INFO]	217	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:55:26,236	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:55:27,255	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:55:28,185	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:55:31,624	[INFO]	221	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:55:32,603	[INFO]	222	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:55:32,606	[INFO]	223	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:55:32,608	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:55:33,560	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:55:33,561	[INFO]	225	SUCCESS	+4.0	
2020-12-17 16:55:33,561	[DEBUG]	
2020-12-17 16:55:34,514	[INFO]	226	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:55:37,880	[INFO]	227	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:55:37,881	[INFO]	228	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:55:37,881	[DEBUG]	
2020-12-17 16:55:37,882	[INFO]	229	SUCCESS	+4.0	
2020-12-17 16:55:37,882	[DEBUG]	
2020-12-17 16:55:38,852	[INFO]	230	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:55:39,827	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:55:39,829	[INFO]	232	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:55:39,829	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:55:40,642	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:40,645	[INFO]	234	SUCCESS	+4.0	
2020-12-17 16:55:40,646	[DEBUG]	
2020-12-17 16:55:41,401	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:41,402	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:55:41,403	[INFO]	237	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:55:41,403	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:55:42,154	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:55:42,156	[INFO]	240	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:55:42,158	[INFO]	241	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:55:42,159	[INFO]	242	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:55:42,161	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:42,962	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:55:42,964	[INFO]	245	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:55:42,965	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:55:43,925	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:55:44,743	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:44,744	[INFO]	249	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:55:44,745	[DEBUG]	
2020-12-17 16:55:44,746	[INFO]	250	SUCCESS	+4.0	
2020-12-17 16:55:44,746	[DEBUG]	
2020-12-17 16:55:44,748	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:45,503	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:55:45,505	[INFO]	253	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:55:45,505	[DEBUG]	
2020-12-17 16:55:46,259	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:47,216	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:55:48,771	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:55:48,773	[INFO]	257	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:55:48,774	[DEBUG]	
2020-12-17 16:55:48,776	[INFO]	258	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:55:48,776	[DEBUG]	
2020-12-17 16:55:49,908	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:55:50,900	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:55:50,901	[INFO]	261	SUCCESS	+4.0	
2020-12-17 16:55:50,901	[DEBUG]	
2020-12-17 16:55:50,902	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:55:50,903	[INFO]	263	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:55:50,903	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:55:50,904	[INFO]	264	SUCCESS	+4.0	
2020-12-17 16:55:50,904	[DEBUG]	
2020-12-17 16:55:51,700	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:55:55,052	[INFO]	266	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:55,053	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 16:55:55,053	[INFO]	267	SUCCESS	+4.0	
2020-12-17 16:55:55,054	[DEBUG]	
2020-12-17 16:55:55,054	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:55:58,622	[INFO]	269	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:55:58,623	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:55:59,583	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:55:59,584	[INFO]	271	SUCCESS	+4.0	
2020-12-17 16:55:59,584	[DEBUG]	
2020-12-17 16:55:59,585	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:56:04,204	[INFO]	273	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:56:07,550	[INFO]	274	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:56:10,938	[INFO]	275	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:56:10,939	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 16:56:10,940	[INFO]	276	SUCCESS	+4.0	
2020-12-17 16:56:10,941	[DEBUG]	
2020-12-17 16:56:14,322	[INFO]	277	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:56:14,323	[INFO]	278	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:56:15,280	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:56:16,241	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:56:16,989	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:56:16,991	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:56:20,407	[INFO]	283	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:56:20,408	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 16:56:21,309	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:56:21,310	[INFO]	285	SUCCESS	+4.0	
2020-12-17 16:56:21,310	[DEBUG]	
2020-12-17 16:56:24,488	[INFO]	286	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:56:24,490	[INFO]	287	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:56:24,490	[DEBUG]	
2020-12-17 16:56:24,491	[INFO]	288	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:56:24,491	[DEBUG]	
2020-12-17 16:56:24,491	[INFO]	289	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:56:24,492	[DEBUG]	
2020-12-17 16:56:24,492	[INFO]	290	SUCCESS	+4.0	
2020-12-17 16:56:24,492	[DEBUG]	
2020-12-17 16:56:27,761	[INFO]	291	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:56:28,543	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:56:28,544	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:56:29,329	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:56:30,279	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:56:33,797	[INFO]	296	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:56:34,759	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:56:35,695	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:56:38,867	[INFO]	299	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:56:39,639	[INFO]	300	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:56:39,641	[INFO]	301	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:56:39,641	[DEBUG]	
2020-12-17 16:56:39,643	[INFO]	302	SUCCESS	+4.0	
2020-12-17 16:56:39,643	[DEBUG]	
2020-12-17 16:56:40,604	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:56:40,606	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:56:41,536	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:56:44,688	[INFO]	306	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:56:45,642	[INFO]	307	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:56:46,448	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:56:47,392	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:56:48,355	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:56:49,137	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:56:50,090	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:56:50,852	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:56:50,853	[INFO]	314	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:56:50,854	[DEBUG]	
2020-12-17 16:56:50,854	[INFO]	315	SUCCESS	+4.0	
2020-12-17 16:56:50,854	[DEBUG]	
2020-12-17 16:56:55,174	[INFO]	316	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:56:55,175	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:56:58,485	[INFO]	318	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:56:58,486	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:56:59,269	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:56:59,273	[INFO]	321	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:56:59,274	[DEBUG]	
2020-12-17 16:57:00,041	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:57:00,042	[INFO]	323	SUCCESS	+4.0	
2020-12-17 16:57:00,043	[DEBUG]	
2020-12-17 16:57:03,391	[INFO]	324	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:57:03,392	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:57:03,394	[INFO]	325	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:57:03,394	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:57:03,395	[INFO]	326	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:57:03,396	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 16:57:03,397	[INFO]	327	SUCCESS	+4.0	
2020-12-17 16:57:03,397	[DEBUG]	
2020-12-17 16:57:04,182	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:57:07,649	[INFO]	329	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:57:08,598	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:57:09,639	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:57:09,641	[INFO]	332	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:57:09,641	[DEBUG]	
2020-12-17 16:57:09,642	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:57:10,612	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:57:10,614	[INFO]	335	SUCCESS	+4.0	
2020-12-17 16:57:10,614	[DEBUG]	
2020-12-17 16:57:11,432	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:57:12,272	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:57:15,776	[INFO]	338	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:57:16,750	[INFO]	339	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:57:17,802	[INFO]	340	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:57:17,805	[INFO]	341	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:57:17,806	[DEBUG]	
2020-12-17 16:57:17,807	[INFO]	342	SUCCESS	+4.0	
2020-12-17 16:57:17,808	[DEBUG]	
2020-12-17 16:57:17,811	[INFO]	343	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:57:17,812	[DEBUG]	
2020-12-17 16:57:17,813	[INFO]	344	SUCCESS	+4.0	
2020-12-17 16:57:17,813	[DEBUG]	
2020-12-17 16:57:18,792	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:57:18,793	[INFO]	346	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:57:19,800	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:57:19,802	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:57:19,802	[INFO]	349	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:57:19,803	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:57:19,804	[INFO]	351	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:57:19,805	[INFO]	352	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:57:19,805	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:57:23,360	[INFO]	353	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:57:23,362	[INFO]	354	SUCCESS	+4.0	
2020-12-17 16:57:23,362	[DEBUG]	
2020-12-17 16:57:23,363	[INFO]	355	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:57:23,364	[INFO]	356	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:57:23,365	[INFO]	357	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:57:23,365	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:57:26,834	[INFO]	358	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:57:30,411	[INFO]	359	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 16:57:30,412	[INFO]	360	SUCCESS	+4.0	
2020-12-17 16:57:30,412	[DEBUG]	
2020-12-17 16:57:31,529	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:57:35,323	[INFO]	362	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:57:36,670	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:57:41,736	[INFO]	364	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:57:41,738	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:57:45,755	[INFO]	366	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:57:47,051	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:57:48,430	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:57:50,263	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:57:50,265	[INFO]	370	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 16:57:50,266	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 16:57:51,600	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:57:51,601	[INFO]	372	SUCCESS	+4.0	
2020-12-17 16:57:51,602	[DEBUG]	
2020-12-17 16:57:56,002	[INFO]	373	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:58:09,561	[INFO]	374	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:58:10,601	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:58:11,492	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:58:11,493	[INFO]	377	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:58:15,011	[INFO]	378	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:58:15,013	[INFO]	379	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:58:15,014	[INFO]	380	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:58:16,736	[INFO]	381	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:58:18,513	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:58:18,518	[INFO]	383	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:58:20,068	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:58:20,069	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:58:22,023	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:58:27,938	[INFO]	387	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:58:29,765	[INFO]	388	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:58:29,767	[INFO]	389	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 16:58:31,799	[INFO]	390	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:58:31,804	[INFO]	391	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:58:33,967	[INFO]	392	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:58:40,518	[INFO]	393	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 16:58:40,520	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 16:58:40,523	[INFO]	394	SUCCESS	+4.0	
2020-12-17 16:58:40,524	[DEBUG]	
2020-12-17 16:58:42,384	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:58:42,385	[INFO]	396	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:58:43,653	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:58:43,655	[INFO]	398	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:58:44,619	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:58:44,620	[INFO]	400	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:58:45,580	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:58:45,581	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:58:45,582	[INFO]	403	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:58:50,056	[INFO]	404	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:58:50,979	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:58:50,981	[INFO]	406	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:58:50,983	[INFO]	407	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:58:50,984	[INFO]	408	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:58:50,985	[DEBUG]	
2020-12-17 16:58:50,987	[INFO]	409	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:58:50,988	[INFO]	410	SUCCESS	+4.0	
2020-12-17 16:58:50,989	[DEBUG]	
2020-12-17 16:58:50,990	[INFO]	411	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 16:58:54,679	[INFO]	412	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:58:54,682	[INFO]	413	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:58:55,622	[INFO]	414	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:58:56,582	[INFO]	415	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:58:56,585	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:58:57,591	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:58:58,591	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:59:01,945	[INFO]	419	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:59:01,948	[INFO]	420	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:59:02,741	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:59:02,743	[INFO]	422	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:59:03,721	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:59:03,724	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 16:59:04,694	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:59:05,724	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:59:09,810	[INFO]	427	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 16:59:09,812	[INFO]	428	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:59:09,813	[INFO]	429	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 16:59:10,956	[INFO]	430	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:59:12,118	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:59:17,280	[INFO]	432	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:59:17,281	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:17,282	[INFO]	433	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:59:17,282	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:18,220	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:59:19,587	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:59:26,207	[INFO]	436	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 16:59:28,483	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:29,774	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:59:31,051	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:59:32,047	[INFO]	440	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:59:32,048	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:32,049	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:33,212	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:59:33,214	[INFO]	443	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:33,215	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,374	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:59:34,376	[INFO]	445	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:59:34,376	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,377	[INFO]	446	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:59:34,378	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,379	[INFO]	447	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 16:59:34,380	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,381	[INFO]	448	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:34,381	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,382	[INFO]	449	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:59:34,383	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,384	[INFO]	450	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:59:34,385	[INFO]	451	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:34,386	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,386	[INFO]	452	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:59:34,387	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 16:59:34,388	[INFO]	453	SUCCESS	+4.0	
2020-12-17 16:59:34,388	[DEBUG]	
2020-12-17 16:59:35,517	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:59:36,664	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 16:59:36,666	[INFO]	456	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 16:59:37,585	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 16:59:37,586	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:59:41,401	[INFO]	459	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 16:59:41,403	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:41,404	[INFO]	461	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:42,492	[INFO]	462	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:59:43,448	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:59:44,599	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 16:59:44,601	[INFO]	465	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 16:59:44,601	[DEBUG]	
2020-12-17 16:59:44,603	[INFO]	466	SUCCESS	+4.0	
2020-12-17 16:59:44,604	[DEBUG]	
2020-12-17 16:59:45,587	[INFO]	467	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:59:49,429	[INFO]	468	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 16:59:49,430	[INFO]	469	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 16:59:49,431	[DEBUG]	
2020-12-17 16:59:50,324	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 16:59:50,326	[INFO]	471	SUCCESS	+4.0	
2020-12-17 16:59:50,326	[DEBUG]	
2020-12-17 16:59:51,457	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 16:59:55,384	[INFO]	473	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 16:59:56,652	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 16:59:58,116	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:59:58,118	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 16:59:59,483	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:59:59,484	[INFO]	478	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:59:59,485	[DEBUG]	
2020-12-17 16:59:59,485	[INFO]	479	SUCCESS	+4.0	
2020-12-17 16:59:59,486	[DEBUG]	
2020-12-17 16:59:59,487	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 16:59:59,488	[INFO]	481	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 16:59:59,489	[INFO]	482	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 16:59:59,489	[DEBUG]	
2020-12-17 16:59:59,490	[INFO]	483	SUCCESS	+4.0	
2020-12-17 16:59:59,490	[DEBUG]	
2020-12-17 16:59:59,491	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:00:00,664	[INFO]	485	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:00:00,666	[INFO]	486	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:00:00,666	[DEBUG]	
2020-12-17 17:00:00,667	[INFO]	487	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:00:01,820	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:00:05,723	[INFO]	489	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:00:05,724	[INFO]	490	SUCCESS	+4.0	
2020-12-17 17:00:05,725	[DEBUG]	
2020-12-17 17:00:05,726	[INFO]	491	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:00:05,726	[DEBUG]	
2020-12-17 17:00:05,727	[INFO]	492	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:00:05,728	[INFO]	493	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:00:05,729	[INFO]	494	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:00:05,729	[DEBUG]	
2020-12-17 17:00:05,730	[INFO]	495	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:00:05,730	[DEBUG]	
2020-12-17 17:00:05,731	[INFO]	496	SUCCESS	+4.0	
2020-12-17 17:00:05,731	[DEBUG]	
2020-12-17 17:00:05,732	[INFO]	497	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:00:06,683	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:00:06,685	[INFO]	499	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:00:10,726	[INFO]	500	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:00:10,726	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:00:10,727	[INFO]	==== END ====
2020-12-17 17:00:10,727	[INFO]	Reason: step budget
2020-12-17 17:00:10,727	[INFO]	
2020-12-17 17:00:10,727	[INFO]	========== EPOCH 16 ==========
2020-12-17 17:00:10,728	[INFO]	==== WARMUP ====
2020-12-17 17:00:14,663	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:00:14,663	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:00:18,682	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:00:18,682	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:00:23,668	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:00:23,669	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:00:28,829	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 17:00:28,830	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:00:28,830	[INFO]	==== START ====
2020-12-17 17:00:33,927	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:00:33,930	[INFO]	2	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:00:33,930	[DEBUG]	
2020-12-17 17:00:35,153	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:00:37,035	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:00:37,036	[INFO]	5	SUCCESS	+4.0	
2020-12-17 17:00:37,037	[DEBUG]	
2020-12-17 17:00:37,038	[INFO]	6	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:00:37,039	[DEBUG]	
2020-12-17 17:00:37,040	[INFO]	7	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:00:43,889	[INFO]	8	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:00:43,890	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:00:43,891	[INFO]	9	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:00:43,892	[DEBUG]	
2020-12-17 17:00:43,893	[INFO]	10	SUCCESS	+4.0	
2020-12-17 17:00:43,894	[DEBUG]	
2020-12-17 17:00:50,326	[INFO]	11	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:00:56,825	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:01:02,088	[INFO]	13	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:01:03,319	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:01:04,786	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:01:06,170	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:01:07,804	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:01:07,805	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:01:07,806	[INFO]	19	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:01:07,806	[DEBUG]	
2020-12-17 17:01:14,602	[INFO]	20	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:01:14,603	[INFO]	21	SUCCESS	+4.0	
2020-12-17 17:01:14,604	[DEBUG]	
2020-12-17 17:01:14,605	[INFO]	22	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:01:14,605	[INFO]	23	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:01:14,606	[INFO]	24	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:01:14,606	[DEBUG]	
2020-12-17 17:01:14,607	[INFO]	25	SUCCESS	+4.0	
2020-12-17 17:01:14,607	[DEBUG]	
2020-12-17 17:01:19,365	[INFO]	26	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:01:19,367	[INFO]	27	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:01:19,368	[DEBUG]	
2020-12-17 17:01:19,369	[INFO]	28	SUCCESS	+4.0	
2020-12-17 17:01:19,369	[DEBUG]	
2020-12-17 17:01:19,371	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:01:24,523	[INFO]	30	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:01:25,781	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:01:30,964	[INFO]	32	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:01:30,966	[INFO]	33	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:01:30,968	[DEBUG]	
2020-12-17 17:01:30,969	[INFO]	34	SUCCESS	+4.0	
2020-12-17 17:01:30,970	[DEBUG]	
2020-12-17 17:01:32,672	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:01:33,899	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:01:39,569	[INFO]	37	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:01:39,571	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:01:39,572	[INFO]	38	SUCCESS	+4.0	
2020-12-17 17:01:39,573	[DEBUG]	
2020-12-17 17:01:41,114	[INFO]	39	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:01:42,656	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:01:42,657	[INFO]	41	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:01:42,660	[INFO]	42	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:01:44,254	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:01:49,371	[INFO]	44	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:01:54,262	[INFO]	45	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:01:54,264	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:01:59,205	[INFO]	47	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:02:00,426	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:02:00,429	[INFO]	49	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:02:01,911	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:02:01,913	[INFO]	51	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:02:03,326	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:02:03,329	[INFO]	53	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:02:03,329	[DEBUG]	
2020-12-17 17:02:03,331	[INFO]	54	SUCCESS	+4.0	
2020-12-17 17:02:03,332	[DEBUG]	
2020-12-17 17:02:03,333	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:02:04,752	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:02:05,922	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:02:05,923	[INFO]	58	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:02:10,915	[INFO]	59	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:02:12,261	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:02:12,264	[INFO]	61	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:02:13,494	[INFO]	62	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:02:13,495	[INFO]	63	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:02:13,496	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:02:13,497	[INFO]	64	SUCCESS	+4.0	
2020-12-17 17:02:13,497	[DEBUG]	
2020-12-17 17:02:18,781	[INFO]	65	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:02:18,783	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:02:18,785	[INFO]	66	SUCCESS	+4.0	
2020-12-17 17:02:18,786	[DEBUG]	
2020-12-17 17:02:24,103	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:02:25,603	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:02:25,606	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:02:25,608	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:02:31,670	[INFO]	71	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:02:33,162	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:02:33,165	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:02:33,166	[INFO]	74	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:02:33,167	[DEBUG]	
2020-12-17 17:02:33,168	[INFO]	75	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:02:33,169	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:02:33,170	[INFO]	76	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:02:33,171	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:02:33,173	[INFO]	77	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:02:33,174	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:02:33,175	[INFO]	78	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:02:34,412	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:02:39,292	[INFO]	80	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:02:39,294	[INFO]	81	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:02:39,295	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:02:45,881	[INFO]	82	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:02:45,882	[INFO]	83	SUCCESS	+4.0	
2020-12-17 17:02:45,882	[DEBUG]	
2020-12-17 17:02:47,294	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:02:47,296	[INFO]	85	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:02:47,297	[DEBUG]	
2020-12-17 17:02:47,298	[INFO]	86	SUCCESS	+4.0	
2020-12-17 17:02:47,298	[DEBUG]	
2020-12-17 17:02:47,299	[INFO]	87	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:02:47,300	[DEBUG]	
2020-12-17 17:02:47,301	[INFO]	88	SUCCESS	+4.0	
2020-12-17 17:02:47,301	[DEBUG]	
2020-12-17 17:02:52,636	[INFO]	89	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:02:52,639	[INFO]	90	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:02:52,641	[INFO]	91	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:02:52,641	[DEBUG]	
2020-12-17 17:02:52,643	[INFO]	92	SUCCESS	+4.0	
2020-12-17 17:02:52,643	[DEBUG]	
2020-12-17 17:02:57,857	[INFO]	93	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:02:59,311	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:02:59,313	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:02:59,314	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:03:04,539	[INFO]	97	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:03:04,540	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:03:06,014	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:03:06,015	[INFO]	99	SUCCESS	+4.0	
2020-12-17 17:03:06,016	[DEBUG]	
2020-12-17 17:03:06,018	[INFO]	100	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:03:07,475	[INFO]	101	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:07,477	[INFO]	102	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:07,479	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:03:09,008	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:03:10,428	[INFO]	105	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:03:15,498	[INFO]	106	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:20,338	[INFO]	107	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:03:25,295	[INFO]	108	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:03:30,325	[INFO]	109	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:03:30,327	[INFO]	110	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:30,328	[INFO]	111	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:03:30,329	[INFO]	112	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:03:31,508	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:03:32,946	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:03:32,948	[INFO]	115	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:03:32,950	[INFO]	116	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:03:32,951	[INFO]	117	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:34,398	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:03:34,400	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:34,402	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:03:40,066	[INFO]	121	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:03:40,073	[INFO]	122	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:03:41,933	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:03:41,934	[INFO]	124	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:03:43,213	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:03:44,561	[INFO]	126	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:03:45,700	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:03:45,701	[INFO]	128	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:45,702	[DEBUG]	
2020-12-17 17:03:45,702	[INFO]	129	SUCCESS	+4.0	
2020-12-17 17:03:45,703	[DEBUG]	
2020-12-17 17:03:45,704	[INFO]	130	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:03:47,096	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:03:51,892	[INFO]	132	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:03:51,894	[INFO]	133	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:03:51,895	[INFO]	134	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:03:52,975	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:03:54,106	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:03:54,108	[INFO]	137	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:03:54,108	[DEBUG]	
2020-12-17 17:03:54,109	[INFO]	138	SUCCESS	+4.0	
2020-12-17 17:03:54,110	[DEBUG]	
2020-12-17 17:03:54,110	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:03:54,111	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:03:55,599	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:03:55,601	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:03:55,602	[INFO]	143	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:56,689	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:03:56,690	[INFO]	145	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:03:56,691	[INFO]	146	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:03:57,807	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:03:57,809	[INFO]	148	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:03:57,811	[INFO]	149	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:03:57,812	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:04:02,808	[INFO]	151	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:04:02,809	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:04:02,811	[INFO]	152	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:04:02,811	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:04:02,812	[INFO]	153	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:04:02,813	[DEBUG]	
2020-12-17 17:04:02,814	[INFO]	154	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:04:02,814	[INFO]	155	SUCCESS	+4.0	
2020-12-17 17:04:02,815	[DEBUG]	
2020-12-17 17:04:02,816	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:04:02,817	[INFO]	157	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:04:02,817	[DEBUG]	
2020-12-17 17:04:02,818	[INFO]	158	SUCCESS	+4.0	
2020-12-17 17:04:02,819	[DEBUG]	
2020-12-17 17:04:09,007	[INFO]	159	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:04:10,026	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:04:10,027	[INFO]	161	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:04:11,099	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:04:12,455	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:04:12,457	[INFO]	164	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:04:12,457	[DEBUG]	
2020-12-17 17:04:12,460	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:04:13,566	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:04:13,568	[INFO]	167	SUCCESS	+4.0	
2020-12-17 17:04:13,569	[DEBUG]	
2020-12-17 17:04:13,570	[INFO]	168	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:04:13,571	[DEBUG]	
2020-12-17 17:04:13,572	[INFO]	169	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:04:14,695	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:04:14,696	[INFO]	171	SUCCESS	+4.0	
2020-12-17 17:04:14,697	[DEBUG]	
2020-12-17 17:04:15,829	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:04:17,200	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:04:17,202	[INFO]	174	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:04:17,203	[DEBUG]	
2020-12-17 17:04:18,590	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:04:18,591	[INFO]	176	SUCCESS	+4.0	
2020-12-17 17:04:18,592	[DEBUG]	
2020-12-17 17:04:23,381	[INFO]	177	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:04:28,519	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:04:33,293	[INFO]	179	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:04:34,719	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:04:36,129	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:04:37,490	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:04:38,925	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:04:43,703	[INFO]	184	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:04:43,704	[INFO]	185	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:04:44,781	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:04:44,783	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:04:44,784	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:04:46,135	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:04:47,283	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:04:51,942	[INFO]	191	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:04:56,419	[INFO]	192	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:04:56,421	[INFO]	193	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:05:01,834	[INFO]	194	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:05:01,836	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:05:01,837	[INFO]	195	SUCCESS	+4.0	
2020-12-17 17:05:01,837	[DEBUG]	
2020-12-17 17:05:01,838	[INFO]	196	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:05:01,840	[INFO]	197	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:05:02,908	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:05:02,910	[INFO]	199	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:05:02,911	[DEBUG]	
2020-12-17 17:05:02,912	[INFO]	200	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:05:02,913	[DEBUG]	
2020-12-17 17:05:02,913	[INFO]	201	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:05:02,914	[DEBUG]	
2020-12-17 17:05:02,914	[INFO]	202	SUCCESS	+4.0	
2020-12-17 17:05:02,914	[DEBUG]	
2020-12-17 17:05:02,915	[INFO]	203	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:05:04,372	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:05:04,374	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:05:05,583	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:05:12,474	[INFO]	207	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:05:12,475	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 17:05:18,983	[INFO]	208	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:05:24,290	[INFO]	209	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:05:25,802	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:05:30,690	[INFO]	211	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:05:30,692	[INFO]	212	SUCCESS	+4.0	
2020-12-17 17:05:30,693	[DEBUG]	
2020-12-17 17:05:36,553	[INFO]	213	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:05:36,556	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:05:37,697	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:05:39,563	[INFO]	216	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:05:39,565	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:05:39,567	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:05:44,675	[INFO]	219	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:05:44,676	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:05:44,677	[INFO]	220	SUCCESS	+4.0	
2020-12-17 17:05:44,678	[DEBUG]	
2020-12-17 17:05:45,780	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:05:50,724	[INFO]	222	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:05:52,101	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:05:53,510	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:05:54,904	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:05:59,849	[INFO]	226	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:05:59,850	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:05:59,851	[INFO]	227	SUCCESS	+4.0	
2020-12-17 17:05:59,851	[DEBUG]	
2020-12-17 17:06:00,950	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:06:02,357	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:06:03,487	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:06:18,714	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:06:18,716	[INFO]	232	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:06:18,717	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:06:18,718	[INFO]	233	SUCCESS	+4.0	
2020-12-17 17:06:18,718	[DEBUG]	
2020-12-17 17:06:20,050	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:06:21,370	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:06:21,372	[INFO]	236	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:06:21,373	[DEBUG]	
2020-12-17 17:06:21,374	[INFO]	237	SUCCESS	+4.0	
2020-12-17 17:06:21,374	[DEBUG]	
2020-12-17 17:06:22,790	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:06:22,791	[INFO]	239	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:06:23,858	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:06:25,213	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:06:26,629	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:06:28,043	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:06:28,045	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:06:29,469	[INFO]	245	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:06:29,472	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:06:29,473	[INFO]	247	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:06:30,977	[INFO]	248	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:06:30,979	[INFO]	249	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:06:30,981	[INFO]	250	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:06:30,982	[INFO]	251	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:06:30,983	[DEBUG]	
2020-12-17 17:06:30,984	[INFO]	252	SUCCESS	+4.0	
2020-12-17 17:06:30,984	[DEBUG]	
2020-12-17 17:06:32,422	[INFO]	253	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:06:33,835	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:06:33,837	[INFO]	255	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:06:34,917	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:06:36,049	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:06:36,051	[INFO]	258	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:06:42,090	[INFO]	259	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:06:42,091	[INFO]	260	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:06:42,092	[INFO]	261	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:06:42,093	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:06:43,578	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:06:44,746	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:06:44,748	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:06:44,750	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:06:46,161	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:06:46,163	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:06:46,164	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:06:47,439	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:06:47,440	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:06:48,702	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:06:50,252	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:06:50,254	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:06:50,256	[INFO]	275	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:06:50,256	[DEBUG]	
2020-12-17 17:06:50,257	[INFO]	276	SUCCESS	+4.0	
2020-12-17 17:06:50,258	[DEBUG]	
2020-12-17 17:06:50,259	[INFO]	277	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:06:50,260	[INFO]	278	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:06:51,606	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:06:53,185	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:06:58,879	[INFO]	281	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:06:58,881	[INFO]	282	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:07:04,336	[INFO]	283	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:07:11,548	[INFO]	284	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:07:11,549	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:07:17,713	[INFO]	285	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:07:17,715	[INFO]	286	SUCCESS	+4.0	
2020-12-17 17:07:17,715	[DEBUG]	
2020-12-17 17:07:18,809	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:07:18,811	[INFO]	288	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:07:20,107	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:07:20,109	[INFO]	290	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:07:20,110	[INFO]	291	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:07:20,111	[DEBUG]	
2020-12-17 17:07:20,112	[INFO]	292	SUCCESS	+4.0	
2020-12-17 17:07:20,113	[DEBUG]	
2020-12-17 17:07:21,387	[INFO]	293	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:07:27,553	[INFO]	294	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:07:27,554	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:07:28,642	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:07:28,644	[INFO]	297	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:07:28,645	[INFO]	298	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:07:28,646	[INFO]	299	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:07:30,032	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:07:30,034	[INFO]	301	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:07:30,035	[INFO]	302	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:07:31,460	[INFO]	303	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:07:31,465	[INFO]	304	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:07:32,582	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:07:34,020	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:07:35,137	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:07:35,138	[INFO]	308	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:07:40,523	[INFO]	309	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:07:41,926	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:07:46,891	[INFO]	311	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:07:52,028	[INFO]	312	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:07:52,029	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:07:53,416	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:07:58,374	[INFO]	314	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:07:58,376	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
--- 14,29 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:08:02,929	[INFO]	315	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:08:07,627	[INFO]	316	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:08:07,630	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,33 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:08:12,583	[INFO]	317	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:08:12,584	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:08:18,723	[INFO]	318	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:08:23,662	[INFO]	319	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:08:23,663	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:08:23,665	[INFO]	320	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:08:23,666	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:08:23,668	[INFO]	321	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:08:23,669	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:08:23,673	[INFO]	322	SUCCESS	+4.0	
2020-12-17 17:08:23,674	[DEBUG]	
2020-12-17 17:08:23,675	[INFO]	323	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:08:23,677	[INFO]	324	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:08:23,678	[DEBUG]	
2020-12-17 17:08:23,680	[INFO]	325	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:08:24,848	[INFO]	326	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:08:24,850	[INFO]	327	SUCCESS	+4.0	
2020-12-17 17:08:24,850	[DEBUG]	
2020-12-17 17:08:24,852	[INFO]	328	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:08:24,852	[DEBUG]	
2020-12-17 17:08:24,854	[INFO]	329	SUCCESS	+4.0	
2020-12-17 17:08:24,854	[DEBUG]	
2020-12-17 17:08:24,856	[INFO]	330	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:08:25,915	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:08:25,917	[INFO]	332	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:08:25,919	[INFO]	333	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:08:25,920	[INFO]	334	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:08:27,261	[INFO]	335	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:08:27,263	[INFO]	336	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:08:28,728	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:08:29,858	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:08:31,213	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:08:31,214	[INFO]	340	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:08:31,216	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:08:36,189	[INFO]	342	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:08:36,191	[INFO]	343	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:08:36,191	[DEBUG]	
2020-12-17 17:08:36,192	[INFO]	344	SUCCESS	+4.0	
2020-12-17 17:08:36,192	[DEBUG]	
2020-12-17 17:08:37,570	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:08:37,572	[INFO]	346	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:08:37,573	[DEBUG]	
2020-12-17 17:08:37,573	[INFO]	347	SUCCESS	+4.0	
2020-12-17 17:08:37,574	[DEBUG]	
2020-12-17 17:08:38,966	[INFO]	348	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:08:38,967	[INFO]	349	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:08:38,968	[DEBUG]	
2020-12-17 17:08:40,372	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:08:41,766	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:08:41,768	[INFO]	352	SUCCESS	+4.0	
2020-12-17 17:08:41,768	[DEBUG]	
2020-12-17 17:08:43,136	[INFO]	353	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:08:48,508	[INFO]	354	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:08:48,509	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:08:48,510	[INFO]	355	SUCCESS	+4.0	
2020-12-17 17:08:48,510	[DEBUG]	
2020-12-17 17:08:49,755	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:08:50,890	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:08:50,891	[INFO]	358	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:08:50,893	[INFO]	359	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:08:55,873	[INFO]	360	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:08:55,874	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:08:55,875	[INFO]	361	SUCCESS	+4.0	
2020-12-17 17:08:55,876	[DEBUG]	
2020-12-17 17:08:55,877	[INFO]	362	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:08:55,877	[DEBUG]	
2020-12-17 17:08:55,878	[INFO]	363	SUCCESS	+4.0	
2020-12-17 17:08:55,878	[DEBUG]	
2020-12-17 17:08:55,879	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:08:57,216	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:08:57,218	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:08:57,219	[INFO]	367	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:08:58,333	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:08:58,335	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:08:58,336	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:08:59,491	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:08:59,493	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:08:59,494	[INFO]	373	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:09:00,857	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:09:00,859	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:09:00,860	[INFO]	376	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:09:05,469	[INFO]	377	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:09:05,471	[INFO]	378	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:09:06,791	[INFO]	379	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:09:11,878	[INFO]	380	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:09:11,879	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:09:11,881	[INFO]	381	SUCCESS	+4.0	
2020-12-17 17:09:11,882	[DEBUG]	
2020-12-17 17:09:11,883	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:09:11,885	[INFO]	383	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:09:11,886	[INFO]	384	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:09:11,888	[INFO]	385	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:09:11,888	[DEBUG]	
2020-12-17 17:09:16,856	[INFO]	386	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:09:16,858	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:09:16,859	[INFO]	387	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:09:16,859	[DEBUG]	
2020-12-17 17:09:16,860	[INFO]	388	SUCCESS	+4.0	
2020-12-17 17:09:16,861	[DEBUG]	
2020-12-17 17:09:17,947	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:09:19,021	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:09:19,023	[INFO]	391	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:09:24,046	[INFO]	392	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:09:24,048	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:09:24,049	[INFO]	393	SUCCESS	+4.0	
2020-12-17 17:09:24,050	[DEBUG]	
2020-12-17 17:09:24,051	[INFO]	394	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:09:25,416	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:09:25,418	[INFO]	396	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:09:25,419	[INFO]	397	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:09:25,420	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:09:26,822	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:09:26,824	[INFO]	400	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:09:26,825	[INFO]	401	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:09:26,827	[INFO]	402	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:09:28,236	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:09:28,238	[INFO]	404	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:09:28,239	[INFO]	405	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:09:35,044	[INFO]	406	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:09:35,046	[INFO]	407	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:09:35,047	[INFO]	408	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:09:36,114	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:09:36,116	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:09:36,118	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:09:36,119	[INFO]	412	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:09:36,120	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:09:41,006	[INFO]	414	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:09:41,008	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:09:42,485	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:09:43,941	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:09:45,074	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:09:46,500	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:09:46,502	[INFO]	420	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:09:47,941	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:09:49,324	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:09:50,829	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:09:52,229	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:09:53,288	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:09:54,449	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:09:55,883	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:10:02,112	[INFO]	428	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:10:03,413	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:10:04,734	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:10:06,106	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:10:06,109	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:10:07,556	[INFO]	433	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:10:07,558	[INFO]	434	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:10:08,726	[INFO]	435	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:10:10,048	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:10:14,858	[INFO]	437	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:10:14,859	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:10:14,861	[INFO]	438	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:10:14,861	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:10:14,862	[INFO]	439	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:10:14,863	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:10:14,863	[INFO]	440	SUCCESS	+4.0	
2020-12-17 17:10:14,864	[DEBUG]	
2020-12-17 17:10:19,840	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:10:19,841	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:10:24,691	[INFO]	442	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:10:24,692	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:10:31,020	[INFO]	443	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:10:32,470	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:10:38,245	[INFO]	445	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:10:38,246	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:10:38,247	[INFO]	446	SUCCESS	+4.0	
2020-12-17 17:10:38,248	[DEBUG]	
2020-12-17 17:10:38,250	[INFO]	447	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:10:38,252	[INFO]	448	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:10:38,252	[DEBUG]	
2020-12-17 17:10:38,253	[INFO]	449	SUCCESS	+4.0	
2020-12-17 17:10:38,254	[DEBUG]	
2020-12-17 17:10:43,862	[INFO]	450	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:10:44,929	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:10:46,282	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:10:51,117	[INFO]	453	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:10:51,119	[INFO]	454	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:10:52,509	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:10:52,511	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:10:54,014	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:10:54,016	[INFO]	458	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:10:54,016	[DEBUG]	
2020-12-17 17:10:58,933	[INFO]	459	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:10:58,935	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:10:58,936	[INFO]	460	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:10:58,937	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:10:58,937	[INFO]	461	SUCCESS	+4.0	
2020-12-17 17:10:58,938	[DEBUG]	
2020-12-17 17:10:58,939	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:11:00,047	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:11:04,989	[INFO]	464	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:11:06,474	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:11:06,476	[INFO]	466	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:11:06,478	[INFO]	467	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:11:11,581	[INFO]	468	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:11:11,582	[INFO]	469	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:11:12,979	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:11:12,981	[INFO]	471	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:11:12,982	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:11:17,923	[INFO]	472	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:11:19,053	[INFO]	473	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:11:19,055	[INFO]	474	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:11:19,055	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:11:19,056	[INFO]	475	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:11:19,057	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:11:19,058	[INFO]	476	SUCCESS	+4.0	
2020-12-17 17:11:19,058	[DEBUG]	
2020-12-17 17:11:19,059	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:11:20,403	[INFO]	478	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:11:21,520	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:11:21,522	[INFO]	480	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:11:21,523	[DEBUG]	
2020-12-17 17:11:21,524	[INFO]	481	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:11:21,525	[DEBUG]	
2020-12-17 17:11:21,526	[INFO]	482	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:11:21,526	[DEBUG]	
2020-12-17 17:11:21,529	[INFO]	483	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:11:26,346	[INFO]	484	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:11:26,348	[INFO]	485	SUCCESS	+4.0	
2020-12-17 17:11:26,349	[DEBUG]	
2020-12-17 17:11:27,768	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:11:32,920	[INFO]	487	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:11:32,921	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:11:34,307	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:11:35,454	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:11:36,878	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:11:36,880	[INFO]	491	SUCCESS	+4.0	
2020-12-17 17:11:36,880	[DEBUG]	
2020-12-17 17:11:36,881	[INFO]	492	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:11:42,160	[INFO]	493	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:11:42,162	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:11:46,634	[INFO]	495	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:11:53,147	[INFO]	496	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:11:53,148	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:12:00,509	[INFO]	497	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:12:04,846	[INFO]	498	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:12:04,848	[INFO]	499	SUCCESS	+4.0	
2020-12-17 17:12:04,848	[DEBUG]	
2020-12-17 17:12:05,958	[INFO]	500	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:12:05,959	[INFO]	==== END ====
2020-12-17 17:12:05,959	[INFO]	Reason: step budget
2020-12-17 17:12:05,960	[INFO]	
2020-12-17 17:12:05,960	[INFO]	========== EPOCH 17 ==========
2020-12-17 17:12:05,960	[INFO]	==== WARMUP ====
2020-12-17 17:12:11,139	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:12:11,139	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:12:16,341	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:12:16,342	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:12:21,406	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:12:21,406	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:12:26,519	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 17:12:26,520	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:12:26,520	[INFO]	==== START ====
2020-12-17 17:12:31,453	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:12:32,890	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:12:38,241	[INFO]	3	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:12:38,242	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:12:38,244	[INFO]	4	SUCCESS	+4.0	
2020-12-17 17:12:38,244	[DEBUG]	
2020-12-17 17:12:42,824	[INFO]	5	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:12:47,778	[INFO]	6	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:12:49,191	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:12:50,368	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:12:55,264	[INFO]	9	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:13:00,130	[INFO]	10	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:13:01,246	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:13:01,248	[INFO]	12	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:13:01,248	[DEBUG]	
2020-12-17 17:13:01,250	[INFO]	13	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:13:02,717	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:13:04,169	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:13:04,170	[INFO]	16	SUCCESS	+4.0	
2020-12-17 17:13:04,171	[DEBUG]	
2020-12-17 17:13:05,642	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:13:07,095	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:13:11,892	[INFO]	19	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:13:13,312	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:13:19,626	[INFO]	21	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:13:20,981	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:13:27,058	[INFO]	23	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:13:28,424	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:13:29,616	[INFO]	25	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:13:30,995	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:13:32,417	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:13:32,419	[INFO]	28	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:13:32,420	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:13:32,420	[INFO]	29	SUCCESS	+4.0	
2020-12-17 17:13:32,421	[DEBUG]	
2020-12-17 17:13:33,610	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:13:34,978	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:13:40,129	[INFO]	32	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:13:40,131	[INFO]	33	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:13:40,132	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:13:40,134	[INFO]	35	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:13:40,135	[INFO]	36	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:13:40,136	[DEBUG]	
2020-12-17 17:13:41,590	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:13:41,592	[INFO]	38	SUCCESS	+4.0	
2020-12-17 17:13:41,592	[DEBUG]	
2020-12-17 17:13:41,593	[INFO]	39	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:13:46,424	[INFO]	40	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:13:47,861	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:13:47,863	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:13:49,285	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:13:49,287	[INFO]	44	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:13:50,813	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:13:50,815	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:13:52,240	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:13:52,241	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:13:53,691	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:13:58,563	[INFO]	50	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:13:58,565	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:13:58,566	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:14:14,423	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:14:15,924	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:14:15,926	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:14:15,927	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:14:15,929	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:14:15,931	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:14:22,944	[INFO]	59	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:14:22,946	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:14:24,728	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:14:31,405	[INFO]	61	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:14:31,406	[INFO]	62	SUCCESS	+4.0	
2020-12-17 17:14:31,406	[DEBUG]	
2020-12-17 17:14:31,408	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:14:32,874	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:14:32,876	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:14:32,878	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:14:37,739	[INFO]	67	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:14:38,966	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:14:38,968	[INFO]	69	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:14:38,969	[DEBUG]	
2020-12-17 17:14:45,398	[INFO]	70	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:14:45,399	[INFO]	71	SUCCESS	+4.0	
2020-12-17 17:14:45,400	[DEBUG]	
2020-12-17 17:14:46,787	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:14:48,235	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:14:49,722	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:14:49,724	[INFO]	75	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:14:51,175	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:14:52,622	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:14:54,027	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:14:55,520	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:14:56,987	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:15:02,163	[INFO]	81	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:15:07,170	[INFO]	82	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:15:07,171	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:15:12,138	[INFO]	83	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:15:12,139	[INFO]	84	SUCCESS	+4.0	
2020-12-17 17:15:12,140	[DEBUG]	
2020-12-17 17:15:13,526	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:15:13,528	[INFO]	86	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:15:13,529	[INFO]	87	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:15:13,530	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:15:13,531	[INFO]	89	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:15:13,532	[DEBUG]	
2020-12-17 17:15:13,533	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:15:13,534	[INFO]	91	SUCCESS	+4.0	
2020-12-17 17:15:13,534	[DEBUG]	
2020-12-17 17:15:13,536	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:15:18,638	[INFO]	93	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:15:18,640	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:15:18,641	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:15:18,642	[INFO]	96	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:15:18,643	[DEBUG]	
2020-12-17 17:15:27,611	[INFO]	97	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:15:27,612	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:15:27,613	[INFO]	98	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:15:27,614	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:15:27,615	[INFO]	99	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:15:27,615	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:15:27,616	[INFO]	100	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:15:28,840	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:15:28,843	[INFO]	102	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:15:28,844	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:15:30,297	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:15:30,299	[INFO]	104	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:15:30,300	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:15:30,301	[INFO]	105	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:15:30,302	[DEBUG]	
2020-12-17 17:15:30,303	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:15:37,595	[INFO]	107	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:15:42,485	[INFO]	108	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:15:42,487	[INFO]	109	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:15:42,488	[INFO]	110	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:15:42,489	[INFO]	111	SUCCESS	+4.0	
2020-12-17 17:15:42,489	[DEBUG]	
2020-12-17 17:15:42,491	[INFO]	112	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:15:43,975	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:15:49,083	[INFO]	114	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:15:53,958	[INFO]	115	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:15:58,739	[INFO]	116	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:15:59,847	[INFO]	117	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:15:59,849	[INFO]	118	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:15:59,850	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:16:00,925	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:16:00,927	[INFO]	121	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:16:00,928	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:16:00,930	[INFO]	123	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:16:00,931	[INFO]	124	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:16:00,932	[INFO]	125	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:16:02,356	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:16:03,729	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:16:03,731	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:16:05,146	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:16:06,673	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:16:08,067	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:16:08,069	[INFO]	132	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:16:13,019	[INFO]	133	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:16:13,020	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:16:14,153	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:16:15,266	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:16:15,268	[INFO]	136	SUCCESS	+4.0	
2020-12-17 17:16:15,269	[DEBUG]	
2020-12-17 17:16:20,250	[INFO]	137	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:16:20,252	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:16:20,253	[INFO]	138	SUCCESS	+4.0	
2020-12-17 17:16:20,255	[DEBUG]	
2020-12-17 17:16:20,256	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:16:20,257	[INFO]	140	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:16:20,258	[DEBUG]	
2020-12-17 17:16:20,259	[INFO]	141	SUCCESS	+4.0	
2020-12-17 17:16:20,259	[DEBUG]	
2020-12-17 17:16:21,788	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:16:21,790	[INFO]	143	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:16:22,995	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:16:26,990	[INFO]	145	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:16:28,122	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:16:32,287	[INFO]	147	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:16:33,497	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:16:37,760	[INFO]	149	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:16:38,987	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:16:38,989	[INFO]	151	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:16:38,989	[INFO]	152	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:16:43,811	[INFO]	153	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:16:43,811	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:16:43,812	[INFO]	154	SUCCESS	+4.0	
2020-12-17 17:16:43,813	[DEBUG]	
2020-12-17 17:16:48,595	[INFO]	155	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:16:48,597	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:16:49,967	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:16:49,968	[INFO]	158	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:16:51,276	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:16:52,792	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:16:52,793	[INFO]	161	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:16:52,794	[DEBUG]	
2020-12-17 17:16:52,795	[INFO]	162	SUCCESS	+4.0	
2020-12-17 17:16:52,795	[DEBUG]	
2020-12-17 17:16:58,037	[INFO]	163	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:16:58,039	[INFO]	164	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:16:58,040	[DEBUG]	
2020-12-17 17:16:58,041	[INFO]	165	SUCCESS	+4.0	
2020-12-17 17:16:58,042	[DEBUG]	
2020-12-17 17:16:59,215	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:16:59,217	[INFO]	167	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:16:59,219	[INFO]	168	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:17:04,173	[INFO]	169	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:17:04,174	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:17:10,795	[INFO]	170	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:17:10,797	[INFO]	171	SUCCESS	+4.0	
2020-12-17 17:17:10,797	[DEBUG]	
2020-12-17 17:17:12,536	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:17:12,538	[INFO]	173	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:17:12,540	[INFO]	174	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:17:14,612	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:17:14,615	[INFO]	176	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:17:16,759	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:17:16,762	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:17:18,284	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:17:18,285	[INFO]	180	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:17:18,286	[DEBUG]	
2020-12-17 17:17:18,287	[INFO]	181	SUCCESS	+4.0	
2020-12-17 17:17:18,287	[DEBUG]	
2020-12-17 17:17:19,473	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:17:20,901	[INFO]	183	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:17:36,180	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:17:37,273	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:17:37,275	[INFO]	186	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:17:37,276	[INFO]	187	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:17:37,277	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:17:37,278	[INFO]	188	SUCCESS	+4.0	
2020-12-17 17:17:37,278	[DEBUG]	
2020-12-17 17:17:37,279	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:17:42,446	[INFO]	190	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:17:42,447	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:17:42,449	[INFO]	191	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:17:42,449	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:17:43,931	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:17:49,086	[INFO]	193	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:17:54,045	[INFO]	194	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:17:54,046	[INFO]	195	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:17:54,047	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:17:54,048	[INFO]	196	SUCCESS	+4.0	
2020-12-17 17:17:54,048	[DEBUG]	
2020-12-17 17:17:55,451	[INFO]	197	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:17:55,453	[INFO]	198	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:17:56,562	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:17:57,703	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:17:59,127	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:18:00,326	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:18:00,328	[INFO]	203	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:18:01,765	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:18:01,767	[INFO]	205	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:18:03,200	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:18:03,201	[INFO]	207	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:18:08,101	[INFO]	208	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:18:08,103	[INFO]	209	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:08,105	[INFO]	210	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:18:08,107	[INFO]	211	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:18:09,287	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:18:14,835	[INFO]	213	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:18:14,837	[INFO]	214	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:18:14,838	[INFO]	215	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:18:14,839	[INFO]	216	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:18:14,840	[DEBUG]	
2020-12-17 17:18:14,841	[INFO]	217	SUCCESS	+4.0	
2020-12-17 17:18:14,841	[DEBUG]	
2020-12-17 17:18:14,842	[INFO]	218	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:18:14,843	[INFO]	219	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:18:14,843	[DEBUG]	
2020-12-17 17:18:14,844	[INFO]	220	SUCCESS	+4.0	
2020-12-17 17:18:14,844	[DEBUG]	
2020-12-17 17:18:14,845	[INFO]	221	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:18:14,845	[DEBUG]	
2020-12-17 17:18:15,971	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:18:15,972	[INFO]	223	SUCCESS	+4.0	
2020-12-17 17:18:15,973	[DEBUG]	
2020-12-17 17:18:15,974	[INFO]	224	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:18:17,298	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:18:17,299	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:18:17,300	[INFO]	227	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:18:23,024	[INFO]	228	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:18:23,026	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:18:23,027	[INFO]	230	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:18:23,028	[INFO]	231	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:18:23,029	[DEBUG]	
2020-12-17 17:18:23,030	[INFO]	232	SUCCESS	+4.0	
2020-12-17 17:18:23,030	[DEBUG]	
2020-12-17 17:18:23,031	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:18:24,148	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:18:24,150	[INFO]	235	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:18:24,151	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:25,535	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:18:25,538	[INFO]	238	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:18:25,539	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:18:26,862	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:18:26,864	[INFO]	241	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:18:26,865	[INFO]	242	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:18:27,977	[INFO]	243	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:27,979	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:18:29,323	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:29,325	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:18:30,424	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:31,799	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:18:32,883	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:18:32,886	[INFO]	250	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:18:32,887	[DEBUG]	
2020-12-17 17:18:32,888	[INFO]	251	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:18:32,890	[INFO]	252	SUCCESS	+4.0	
2020-12-17 17:18:32,890	[DEBUG]	
2020-12-17 17:18:34,226	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:18:34,229	[INFO]	254	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:18:34,231	[INFO]	255	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:18:39,023	[INFO]	256	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:18:39,025	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:18:40,115	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:18:41,414	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:18:47,504	[INFO]	259	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:18:47,505	[INFO]	260	SUCCESS	+4.0	
2020-12-17 17:18:47,505	[DEBUG]	
2020-12-17 17:18:47,506	[INFO]	261	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:18:48,569	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:18:49,901	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:18:49,903	[INFO]	264	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:18:49,903	[INFO]	265	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:49,905	[INFO]	266	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:18:51,211	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:51,213	[INFO]	268	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:18:51,215	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:18:51,216	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:18:51,217	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:18:52,376	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:18:53,813	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:18:55,461	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:18:55,466	[INFO]	275	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:18:55,467	[INFO]	276	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:19:00,014	[INFO]	277	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:19:01,185	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:19:02,446	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:19:02,447	[INFO]	280	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:19:03,590	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:19:03,592	[INFO]	282	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:19:04,934	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:19:06,061	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:19:07,470	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:19:08,864	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:19:10,270	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:19:15,087	[INFO]	288	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:19:16,429	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:19:16,430	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:19:21,105	[INFO]	291	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:19:21,107	[INFO]	292	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:19:22,527	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:19:22,528	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:19:27,543	[INFO]	295	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:19:27,546	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:19:28,687	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:19:28,689	[INFO]	298	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:19:30,098	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:19:31,608	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:19:31,610	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:19:33,053	[INFO]	302	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:19:34,472	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:19:34,474	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:19:34,476	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:19:35,594	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:19:35,596	[INFO]	307	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:19:35,596	[INFO]	308	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:19:36,741	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:19:36,742	[INFO]	310	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:19:36,743	[DEBUG]	
2020-12-17 17:19:36,744	[INFO]	311	SUCCESS	+4.0	
2020-12-17 17:19:36,744	[DEBUG]	
2020-12-17 17:19:36,745	[INFO]	312	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:19:41,722	[INFO]	313	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:19:46,435	[INFO]	314	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:19:47,814	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:19:49,186	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:19:49,189	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:19:50,350	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:19:50,352	[INFO]	319	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:19:50,353	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:19:50,355	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:19:50,356	[INFO]	322	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:19:50,358	[INFO]	323	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:19:57,877	[INFO]	324	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:19:57,880	[INFO]	325	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:19:57,882	[INFO]	326	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:19:57,883	[DEBUG]	
2020-12-17 17:19:57,884	[INFO]	327	SUCCESS	+4.0	
2020-12-17 17:19:57,885	[DEBUG]	
2020-12-17 17:19:57,887	[INFO]	328	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:19:57,888	[DEBUG]	
2020-12-17 17:19:59,830	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:19:59,832	[INFO]	330	SUCCESS	+4.0	
2020-12-17 17:19:59,832	[DEBUG]	
2020-12-17 17:20:15,192	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:20:16,625	[INFO]	332	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:20:18,051	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:20:18,053	[INFO]	334	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:20:19,527	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:20:19,529	[INFO]	336	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:20:19,529	[DEBUG]	
2020-12-17 17:20:19,531	[INFO]	337	SUCCESS	+4.0	
2020-12-17 17:20:19,531	[DEBUG]	
2020-12-17 17:20:20,947	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:20:20,949	[INFO]	339	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:20:20,949	[DEBUG]	
2020-12-17 17:20:20,950	[INFO]	340	SUCCESS	+4.0	
2020-12-17 17:20:20,950	[DEBUG]	
2020-12-17 17:20:22,346	[INFO]	341	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:20:27,466	[INFO]	342	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:20:28,910	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:20:30,150	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:20:30,152	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:20:30,154	[INFO]	346	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:20:31,707	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:20:31,709	[INFO]	348	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:20:31,709	[INFO]	349	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:20:31,710	[INFO]	350	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:20:31,711	[DEBUG]	
2020-12-17 17:20:33,113	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:20:33,116	[INFO]	352	SUCCESS	+4.0	
2020-12-17 17:20:33,117	[DEBUG]	
2020-12-17 17:20:35,061	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:20:35,064	[INFO]	354	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:20:36,589	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:20:36,592	[INFO]	356	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:20:36,594	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:20:45,394	[INFO]	358	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:20:47,224	[INFO]	359	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:20:49,711	[INFO]	360	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:20:49,714	[INFO]	361	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:20:57,471	[INFO]	362	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:21:04,233	[INFO]	363	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:21:04,234	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:21:05,680	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:21:05,681	[INFO]	365	SUCCESS	+4.0	
2020-12-17 17:21:05,682	[DEBUG]	
2020-12-17 17:21:05,685	[INFO]	366	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:21:07,499	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:21:15,029	[INFO]	368	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:21:15,031	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:21:15,033	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:21:15,034	[INFO]	371	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:21:15,036	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:21:16,551	[INFO]	373	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:21:18,562	[INFO]	374	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:21:20,428	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:21:20,431	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:21:20,433	[INFO]	377	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:21:20,434	[INFO]	378	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:21:21,903	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:21:21,906	[INFO]	380	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:21:21,907	[DEBUG]	
2020-12-17 17:21:21,908	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:21:21,909	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:21:23,170	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:21:23,171	[INFO]	384	SUCCESS	+4.0	
2020-12-17 17:21:23,172	[DEBUG]	
2020-12-17 17:21:27,209	[INFO]	385	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:21:27,210	[INFO]	386	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:21:27,212	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:21:31,401	[INFO]	388	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:21:32,621	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:21:32,622	[INFO]	390	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:21:32,623	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:21:32,623	[INFO]	391	SUCCESS	+4.0	
2020-12-17 17:21:32,624	[DEBUG]	
2020-12-17 17:21:32,624	[INFO]	392	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:21:34,296	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:21:34,297	[INFO]	394	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:21:41,695	[INFO]	395	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:21:41,696	[INFO]	396	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:21:41,697	[INFO]	397	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:21:41,697	[DEBUG]	
2020-12-17 17:21:41,698	[INFO]	398	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:21:41,698	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:21:41,699	[INFO]	399	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:21:41,700	[DEBUG]	
2020-12-17 17:21:41,700	[INFO]	400	SUCCESS	+4.0	
2020-12-17 17:21:41,700	[DEBUG]	
2020-12-17 17:21:41,701	[INFO]	401	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:21:41,702	[DEBUG]	
2020-12-17 17:21:41,702	[INFO]	402	SUCCESS	+4.0	
2020-12-17 17:21:41,703	[DEBUG]	
2020-12-17 17:21:41,703	[INFO]	403	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:21:47,370	[INFO]	404	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:21:52,075	[INFO]	405	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:21:52,077	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:21:52,078	[INFO]	407	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:21:52,078	[INFO]	408	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:21:56,290	[INFO]	409	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:21:56,292	[INFO]	410	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:21:56,293	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:21:56,294	[INFO]	412	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:21:56,295	[INFO]	413	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:21:57,547	[INFO]	414	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:21:57,548	[INFO]	415	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:21:57,549	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:21:57,549	[INFO]	417	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:21:57,551	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:21:57,551	[INFO]	419	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:21:57,552	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:21:58,547	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:22:05,138	[INFO]	422	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:22:05,141	[INFO]	423	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:22:09,886	[INFO]	424	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:22:14,886	[INFO]	425	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:22:17,199	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:22:18,774	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:22:20,008	[INFO]	428	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:22:21,387	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:22:21,389	[INFO]	430	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:22:28,029	[INFO]	431	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:22:28,031	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:22:29,337	[INFO]	433	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:22:29,338	[INFO]	434	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:22:29,339	[INFO]	435	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:22:30,333	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:22:31,578	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:22:32,804	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:22:33,833	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:22:33,834	[INFO]	440	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:22:33,835	[DEBUG]	
2020-12-17 17:22:33,836	[INFO]	441	SUCCESS	+4.0	
2020-12-17 17:22:33,836	[DEBUG]	
2020-12-17 17:22:33,837	[INFO]	442	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:22:33,837	[DEBUG]	
2020-12-17 17:22:33,838	[INFO]	443	SUCCESS	+4.0	
2020-12-17 17:22:33,838	[DEBUG]	
2020-12-17 17:22:34,783	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:22:34,784	[INFO]	445	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:22:34,785	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:38,873	[INFO]	446	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:22:43,071	[INFO]	447	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:22:48,095	[INFO]	448	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:22:48,097	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,28 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:49,275	[INFO]	449	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:22:49,278	[INFO]	450	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:22:49,279	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,28 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:49,282	[INFO]	451	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:22:49,283	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,28 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:49,284	[INFO]	452	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:22:49,285	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,28 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:50,329	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:22:54,977	[INFO]	454	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:22:56,046	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:22:57,309	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:22:57,311	[INFO]	457	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:22:57,311	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,28 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:57,312	[INFO]	458	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:22:57,313	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,28 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:57,314	[INFO]	459	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:22:57,314	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:57,315	[INFO]	460	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:22:57,317	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:22:59,216	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:23:07,736	[INFO]	462	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:23:07,738	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:23:12,709	[INFO]	463	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:23:12,711	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:23:12,712	[INFO]	464	SUCCESS	+4.0	
2020-12-17 17:23:12,712	[DEBUG]	
2020-12-17 17:23:14,167	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:23:15,545	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:23:15,546	[INFO]	467	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:23:16,782	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:23:21,165	[INFO]	469	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:23:21,167	[INFO]	470	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:23:21,169	[INFO]	471	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:23:21,170	[INFO]	472	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:23:21,171	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:23:23,501	[INFO]	473	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:23:38,909	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:23:39,860	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:23:39,862	[INFO]	476	SUCCESS	+4.0	
2020-12-17 17:23:39,862	[DEBUG]	
2020-12-17 17:23:39,863	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:23:45,894	[INFO]	478	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:23:50,258	[INFO]	479	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:23:54,546	[INFO]	480	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:23:55,759	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:24:01,542	[INFO]	482	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:24:03,606	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:24:04,883	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:24:08,898	[INFO]	485	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:24:08,900	[INFO]	486	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:24:10,498	[INFO]	487	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:24:10,500	[INFO]	488	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:24:16,610	[INFO]	489	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:24:16,611	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:24:18,029	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:24:19,266	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:24:24,605	[INFO]	492	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:24:24,606	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:24:24,608	[INFO]	493	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:24:24,608	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:24:26,172	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:24:26,173	[INFO]	495	SUCCESS	+4.0	
2020-12-17 17:24:26,174	[DEBUG]	
2020-12-17 17:24:26,175	[INFO]	496	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:24:26,176	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:24:27,934	[INFO]	498	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:24:29,534	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:24:29,536	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:24:29,537	[INFO]	==== END ====
2020-12-17 17:24:29,537	[INFO]	Reason: step budget
2020-12-17 17:24:29,538	[INFO]	
2020-12-17 17:24:29,538	[INFO]	========== EPOCH 18 ==========
2020-12-17 17:24:29,538	[INFO]	==== WARMUP ====
2020-12-17 17:24:34,634	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:24:34,634	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:24:39,044	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:24:39,044	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:24:43,851	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:24:43,851	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:24:50,712	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 17:24:50,712	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:24:50,713	[INFO]	==== START ====
2020-12-17 17:24:59,630	[INFO]	1	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:24:59,631	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:25:01,017	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:25:02,447	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:25:02,449	[INFO]	4	SUCCESS	+4.0	
2020-12-17 17:25:02,449	[DEBUG]	
2020-12-17 17:25:04,708	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:25:09,170	[INFO]	6	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:25:09,172	[INFO]	7	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:25:09,172	[DEBUG]	
2020-12-17 17:25:09,173	[INFO]	8	SUCCESS	+4.0	
2020-12-17 17:25:09,173	[DEBUG]	
2020-12-17 17:25:10,366	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:25:17,018	[INFO]	10	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:25:18,368	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:25:24,623	[INFO]	12	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:25:24,624	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:25:25,931	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:25:27,320	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:25:27,322	[INFO]	15	SUCCESS	+4.0	
2020-12-17 17:25:27,322	[DEBUG]	
2020-12-17 17:25:28,767	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:25:30,116	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:25:31,167	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:25:36,354	[INFO]	19	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:25:36,355	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:25:40,805	[INFO]	20	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:25:40,807	[INFO]	21	SUCCESS	+4.0	
2020-12-17 17:25:40,807	[DEBUG]	
2020-12-17 17:25:41,895	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:25:43,206	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:25:44,307	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:25:45,714	[INFO]	25	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:25:47,094	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:25:48,410	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:25:49,543	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:25:49,544	[INFO]	29	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:25:49,545	[DEBUG]	
2020-12-17 17:25:49,546	[INFO]	30	SUCCESS	+4.0	
2020-12-17 17:25:49,546	[DEBUG]	
2020-12-17 17:25:50,745	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:25:55,329	[INFO]	32	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:25:55,331	[INFO]	33	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:25:55,332	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:25:56,627	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:25:57,911	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:25:57,912	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:26:02,596	[INFO]	38	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:26:02,597	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 17:26:03,650	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:26:04,873	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:26:04,874	[INFO]	41	SUCCESS	+4.0	
2020-12-17 17:26:04,875	[DEBUG]	
2020-12-17 17:26:05,924	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:26:06,928	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:26:06,929	[INFO]	44	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:26:08,135	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:26:08,137	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:26:12,461	[INFO]	47	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:26:12,462	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:26:16,829	[INFO]	48	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:26:18,085	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:26:18,087	[INFO]	50	SUCCESS	+4.0	
2020-12-17 17:26:18,087	[DEBUG]	
2020-12-17 17:26:22,217	[INFO]	51	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:26:27,788	[INFO]	52	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:26:32,070	[INFO]	53	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:26:33,289	[INFO]	54	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:26:34,254	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:26:34,256	[INFO]	56	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:26:38,883	[INFO]	57	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:26:38,884	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:26:39,993	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:26:39,994	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:26:39,995	[INFO]	60	SUCCESS	+4.0	
2020-12-17 17:26:39,995	[DEBUG]	
2020-12-17 17:26:41,322	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:26:42,693	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:26:49,124	[INFO]	63	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:26:49,125	[INFO]	64	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:26:49,126	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:26:49,127	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:26:50,472	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:26:51,608	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:26:52,997	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:26:54,392	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:26:55,545	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:26:56,927	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:27:01,593	[INFO]	73	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:27:01,594	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:27:08,167	[INFO]	75	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:27:08,168	[INFO]	76	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:27:10,092	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:27:11,231	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:27:11,232	[INFO]	79	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:27:16,888	[INFO]	80	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:27:16,890	[INFO]	81	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:27:17,964	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:27:17,966	[INFO]	83	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:27:19,013	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:27:19,015	[INFO]	85	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:27:19,015	[DEBUG]	
2020-12-17 17:27:19,017	[INFO]	86	SUCCESS	+4.0	
2020-12-17 17:27:19,017	[DEBUG]	
2020-12-17 17:27:19,018	[INFO]	87	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:27:20,890	[INFO]	88	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:27:22,933	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:27:22,935	[INFO]	90	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:27:22,936	[DEBUG]	
2020-12-17 17:27:24,649	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:27:25,936	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:27:25,938	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:27:25,940	[INFO]	94	SUCCESS	+4.0	
2020-12-17 17:27:25,941	[DEBUG]	
2020-12-17 17:27:25,942	[INFO]	95	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:27:25,944	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:27:25,945	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:27:27,886	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:27:27,888	[INFO]	99	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:27:27,889	[INFO]	100	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:27:27,890	[INFO]	101	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:27:27,891	[DEBUG]	
2020-12-17 17:27:29,787	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:27:29,790	[INFO]	103	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:27:29,791	[DEBUG]	
2020-12-17 17:27:29,793	[INFO]	104	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:27:29,793	[DEBUG]	
2020-12-17 17:27:29,795	[INFO]	105	SUCCESS	+4.0	
2020-12-17 17:27:29,795	[DEBUG]	
2020-12-17 17:27:29,798	[INFO]	106	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:27:29,800	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:27:29,801	[INFO]	108	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:27:29,802	[DEBUG]	
2020-12-17 17:27:29,804	[INFO]	109	SUCCESS	+4.0	
2020-12-17 17:27:29,804	[DEBUG]	
2020-12-17 17:27:29,806	[INFO]	110	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:27:29,808	[INFO]	111	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:27:36,304	[INFO]	112	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:27:41,364	[INFO]	113	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:27:41,367	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:27:43,125	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:27:47,727	[INFO]	116	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:27:49,018	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:27:50,461	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:27:50,463	[INFO]	119	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:27:51,915	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:27:53,397	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:27:53,399	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:27:54,873	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:27:54,875	[INFO]	124	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:27:56,458	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:27:57,642	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:27:58,940	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:27:58,941	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:28:03,435	[INFO]	129	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:28:05,006	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:28:07,046	[INFO]	131	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:28:07,047	[INFO]	132	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:28:12,352	[INFO]	133	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:28:16,992	[INFO]	134	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:28:21,915	[INFO]	135	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:28:21,916	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:28:23,150	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:28:23,152	[INFO]	137	SUCCESS	+4.0	
2020-12-17 17:28:23,152	[DEBUG]	
2020-12-17 17:28:23,154	[INFO]	138	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:28:24,210	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:28:24,212	[INFO]	140	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:28:24,212	[DEBUG]	
2020-12-17 17:28:24,213	[INFO]	141	SUCCESS	+4.0	
2020-12-17 17:28:24,214	[DEBUG]	
2020-12-17 17:28:25,460	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:28:31,003	[INFO]	143	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:28:31,004	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:28:31,005	[INFO]	144	SUCCESS	+4.0	
2020-12-17 17:28:31,006	[DEBUG]	
2020-12-17 17:28:32,048	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:28:34,094	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:28:35,436	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:28:36,884	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:28:38,250	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:28:38,252	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:28:38,254	[INFO]	151	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:28:38,255	[DEBUG]	
2020-12-17 17:28:38,256	[INFO]	152	SUCCESS	+4.0	
2020-12-17 17:28:38,257	[DEBUG]	
2020-12-17 17:28:38,259	[INFO]	153	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:28:43,521	[INFO]	154	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:28:43,523	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:28:43,524	[INFO]	155	SUCCESS	+4.0	
2020-12-17 17:28:43,524	[DEBUG]	
2020-12-17 17:28:43,525	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:28:43,526	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:28:43,527	[INFO]	158	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:28:43,528	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:28:59,035	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:28:59,037	[INFO]	161	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:28:59,037	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:28:59,038	[INFO]	162	SUCCESS	+4.0	
2020-12-17 17:28:59,038	[DEBUG]	
2020-12-17 17:29:00,188	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:29:05,946	[INFO]	164	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:29:12,247	[INFO]	165	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:29:12,248	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:29:13,290	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:29:14,520	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:29:18,885	[INFO]	168	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:29:18,887	[INFO]	169	SUCCESS	+4.0	
2020-12-17 17:29:18,887	[DEBUG]	
2020-12-17 17:29:18,889	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:29:18,891	[INFO]	171	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:29:18,891	[DEBUG]	
2020-12-17 17:29:18,892	[INFO]	172	SUCCESS	+4.0	
2020-12-17 17:29:18,893	[DEBUG]	
2020-12-17 17:29:19,940	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:29:21,257	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:29:21,259	[INFO]	175	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:29:26,508	[INFO]	176	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:29:26,509	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:29:27,742	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:29:27,744	[INFO]	179	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:29:29,008	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:29:30,206	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:29:31,186	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:29:31,188	[INFO]	183	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:29:31,188	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:29:32,445	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:29:32,447	[INFO]	185	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:29:32,448	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:29:32,449	[INFO]	186	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:29:32,450	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:29:32,451	[INFO]	187	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:29:32,452	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:29:33,635	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:29:37,766	[INFO]	189	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:29:38,845	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:29:38,847	[INFO]	191	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:29:38,847	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:29:39,886	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:29:41,193	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:29:41,195	[INFO]	194	SUCCESS	+4.0	
2020-12-17 17:29:41,195	[DEBUG]	
2020-12-17 17:29:42,553	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:29:43,957	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:29:43,959	[INFO]	197	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:29:45,026	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:29:45,028	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:29:45,029	[INFO]	200	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:29:45,030	[DEBUG]	
2020-12-17 17:29:49,498	[INFO]	201	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:29:49,499	[INFO]	202	SUCCESS	+4.0	
2020-12-17 17:29:49,500	[DEBUG]	
2020-12-17 17:29:50,523	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:29:56,152	[INFO]	204	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:29:57,376	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:30:01,908	[INFO]	206	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:30:06,607	[INFO]	207	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:30:06,609	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:30:07,743	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:30:07,744	[INFO]	210	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:30:08,819	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:30:10,071	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:30:25,857	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:30:27,042	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:30:28,373	[INFO]	215	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:30:28,374	[INFO]	216	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:30:28,375	[DEBUG]	
2020-12-17 17:30:28,375	[INFO]	217	SUCCESS	+4.0	
2020-12-17 17:30:28,376	[DEBUG]	
2020-12-17 17:30:29,616	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:30:29,617	[INFO]	219	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:30:29,618	[INFO]	220	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:30:29,619	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:30:34,191	[INFO]	222	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:30:34,192	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:30:34,193	[INFO]	224	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:30:40,338	[INFO]	225	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:30:40,340	[INFO]	226	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:30:42,241	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:30:42,243	[INFO]	228	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:30:47,479	[INFO]	229	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:30:48,487	[INFO]	230	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:30:48,488	[INFO]	231	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:30:48,489	[INFO]	232	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:30:49,710	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:30:50,970	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:30:50,971	[INFO]	235	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:30:55,202	[INFO]	236	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:30:56,162	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:30:57,153	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:30:58,352	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:31:02,520	[INFO]	240	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:31:03,497	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:31:03,499	[INFO]	242	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:31:07,873	[INFO]	243	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:31:08,970	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:31:08,972	[INFO]	245	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:31:08,973	[DEBUG]	
2020-12-17 17:31:13,318	[INFO]	246	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:31:13,319	[INFO]	247	SUCCESS	+4.0	
2020-12-17 17:31:13,320	[DEBUG]	
2020-12-17 17:31:14,647	[INFO]	248	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:31:15,719	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:31:15,720	[INFO]	250	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:31:15,721	[INFO]	251	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:31:15,722	[DEBUG]	
2020-12-17 17:31:16,978	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:31:16,979	[INFO]	253	SUCCESS	+4.0	
2020-12-17 17:31:16,979	[DEBUG]	
2020-12-17 17:31:18,027	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:31:19,226	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:31:19,227	[INFO]	256	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:31:19,227	[DEBUG]	
2020-12-17 17:31:19,228	[INFO]	257	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:31:20,469	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:31:20,472	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:31:20,473	[INFO]	260	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:31:20,475	[INFO]	261	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:31:21,704	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:31:22,912	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:31:22,914	[INFO]	264	SUCCESS	+4.0	
2020-12-17 17:31:22,914	[DEBUG]	
2020-12-17 17:31:24,665	[INFO]	265	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:31:24,667	[INFO]	266	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:31:26,332	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:31:26,334	[INFO]	268	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:31:28,078	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:31:34,459	[INFO]	270	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:31:36,037	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:31:37,609	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:31:42,365	[INFO]	273	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:31:47,317	[INFO]	274	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:31:48,705	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:31:48,707	[INFO]	276	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:31:48,708	[INFO]	277	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:31:48,709	[INFO]	278	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:31:48,710	[DEBUG]	
2020-12-17 17:31:48,711	[INFO]	279	SUCCESS	+4.0	
2020-12-17 17:31:48,712	[DEBUG]	
2020-12-17 17:31:48,713	[INFO]	280	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:31:50,091	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:31:50,092	[INFO]	282	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:31:51,305	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:31:51,307	[INFO]	284	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:31:51,308	[INFO]	285	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:31:51,308	[DEBUG]	
2020-12-17 17:31:51,309	[INFO]	286	SUCCESS	+4.0	
2020-12-17 17:31:51,310	[DEBUG]	
2020-12-17 17:31:51,311	[INFO]	287	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:31:52,577	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:31:52,579	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:31:52,580	[INFO]	290	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:31:52,581	[INFO]	291	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:31:53,745	[INFO]	292	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:31:54,936	[INFO]	293	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:31:56,250	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:31:56,252	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:31:56,253	[INFO]	296	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:31:56,255	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:31:57,467	[INFO]	298	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:32:02,215	[INFO]	299	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:32:02,216	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:32:02,218	[INFO]	300	SUCCESS	+4.0	
2020-12-17 17:32:02,218	[DEBUG]	
2020-12-17 17:32:02,220	[INFO]	301	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:32:02,221	[DEBUG]	
2020-12-17 17:32:02,222	[INFO]	302	SUCCESS	+4.0	
2020-12-17 17:32:02,222	[DEBUG]	
2020-12-17 17:32:04,135	[INFO]	303	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:32:04,137	[INFO]	304	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:32:08,644	[INFO]	305	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:32:08,646	[INFO]	306	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:32:09,992	[INFO]	307	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:32:11,251	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:32:11,252	[INFO]	309	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:32:15,302	[INFO]	310	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:32:19,548	[INFO]	311	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:32:19,549	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 17:32:20,796	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:32:20,798	[INFO]	313	SUCCESS	+4.0	
2020-12-17 17:32:20,798	[DEBUG]	
2020-12-17 17:32:20,799	[INFO]	314	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:32:20,799	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:32:20,800	[INFO]	315	SUCCESS	+4.0	
2020-12-17 17:32:20,801	[DEBUG]	
2020-12-17 17:32:22,006	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:32:22,007	[INFO]	317	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:32:22,008	[DEBUG]	
2020-12-17 17:32:22,009	[INFO]	318	SUCCESS	+4.0	
2020-12-17 17:32:22,009	[DEBUG]	
2020-12-17 17:32:26,345	[INFO]	319	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:32:32,200	[INFO]	320	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:32:32,200	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:32:32,201	[INFO]	321	SUCCESS	+4.0	
2020-12-17 17:32:32,201	[DEBUG]	
2020-12-17 17:32:33,354	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:32:33,356	[INFO]	323	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:32:34,556	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:32:35,523	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:32:35,525	[INFO]	326	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:32:36,741	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:32:36,742	[INFO]	328	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:32:42,461	[INFO]	329	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:32:46,697	[INFO]	330	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:32:50,961	[INFO]	331	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:32:57,219	[INFO]	332	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:32:57,220	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:32:59,161	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:32:59,163	[INFO]	334	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:32:59,164	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:33:00,493	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:33:04,966	[INFO]	336	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:33:04,968	[INFO]	337	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:33:04,968	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:33:04,969	[INFO]	338	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:33:04,969	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:33:09,912	[INFO]	339	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:33:11,216	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:33:11,218	[INFO]	341	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:33:11,218	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:33:12,205	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:33:13,465	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:33:13,467	[INFO]	344	SUCCESS	+4.0	
2020-12-17 17:33:13,468	[DEBUG]	
2020-12-17 17:33:19,110	[INFO]	345	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:33:19,112	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:33:19,113	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:33:20,791	[INFO]	348	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:33:20,793	[INFO]	349	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:33:22,163	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:33:23,228	[INFO]	351	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:33:23,230	[INFO]	352	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:33:24,877	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:33:24,879	[INFO]	354	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:33:24,881	[INFO]	355	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:33:24,881	[DEBUG]	
2020-12-17 17:33:26,865	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:33:26,867	[INFO]	357	SUCCESS	+4.0	
2020-12-17 17:33:26,868	[DEBUG]	
2020-12-17 17:33:26,870	[INFO]	358	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:33:32,680	[INFO]	359	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:33:32,682	[INFO]	360	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:33:32,683	[INFO]	361	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:33:32,684	[DEBUG]	
2020-12-17 17:33:32,685	[INFO]	362	SUCCESS	+4.0	
2020-12-17 17:33:32,685	[DEBUG]	
2020-12-17 17:33:32,686	[INFO]	363	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:33:37,142	[INFO]	364	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:33:38,400	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:33:38,401	[INFO]	366	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:33:38,402	[DEBUG]	
2020-12-17 17:33:39,668	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:33:43,702	[INFO]	368	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:33:43,703	[INFO]	369	SUCCESS	+4.0	
2020-12-17 17:33:43,704	[DEBUG]	
2020-12-17 17:33:44,909	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:33:46,101	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:33:46,102	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:33:47,054	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:33:51,416	[INFO]	374	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:33:51,418	[INFO]	375	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:33:52,668	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:33:52,670	[INFO]	377	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:33:53,910	[INFO]	378	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:33:57,985	[INFO]	379	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:33:57,986	[INFO]	380	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:33:57,987	[DEBUG]	
2020-12-17 17:33:57,988	[INFO]	381	SUCCESS	+4.0	
2020-12-17 17:33:57,988	[DEBUG]	
2020-12-17 17:33:59,261	[INFO]	382	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:33:59,263	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:33:59,264	[INFO]	384	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:34:05,083	[INFO]	385	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:34:06,645	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:34:06,647	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:34:06,649	[INFO]	388	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:34:06,651	[INFO]	389	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:34:06,654	[DEBUG]	
2020-12-17 17:34:06,656	[INFO]	390	SUCCESS	+4.0	
2020-12-17 17:34:06,657	[DEBUG]	
2020-12-17 17:34:13,014	[INFO]	391	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:34:18,857	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:34:19,927	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:34:19,929	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:34:19,931	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:34:21,139	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:34:27,435	[INFO]	397	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:34:27,436	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:34:32,885	[INFO]	398	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:34:34,131	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:34:35,326	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:34:36,581	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:34:36,583	[INFO]	402	SUCCESS	+4.0	
2020-12-17 17:34:36,583	[DEBUG]	
2020-12-17 17:34:36,584	[INFO]	403	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:34:36,586	[INFO]	404	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:34:36,587	[INFO]	405	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:34:37,815	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:34:37,817	[INFO]	407	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:34:37,817	[INFO]	408	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:34:37,818	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:34:38,843	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:34:38,844	[INFO]	411	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:34:39,851	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:34:39,853	[INFO]	413	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:34:39,853	[DEBUG]	
2020-12-17 17:34:40,804	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:34:40,806	[INFO]	415	SUCCESS	+4.0	
2020-12-17 17:34:40,806	[DEBUG]	
2020-12-17 17:34:40,807	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:34:40,808	[INFO]	417	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:34:40,809	[INFO]	418	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:34:40,809	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:34:42,011	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:34:43,181	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:34:43,182	[INFO]	421	SUCCESS	+4.0	
2020-12-17 17:34:43,183	[DEBUG]	
2020-12-17 17:34:44,365	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:34:45,608	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:34:46,594	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:34:47,835	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:34:47,837	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:34:51,914	[INFO]	427	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:34:51,915	[INFO]	428	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:34:53,092	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:34:57,568	[INFO]	430	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:34:57,569	[INFO]	431	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:34:58,861	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:35:03,661	[INFO]	433	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:35:03,663	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:35:03,665	[INFO]	434	SUCCESS	+4.0	
2020-12-17 17:35:03,665	[DEBUG]	
2020-12-17 17:35:03,667	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:35:03,669	[INFO]	436	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:35:05,618	[INFO]	437	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:35:06,939	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:35:06,940	[INFO]	439	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:35:07,951	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:35:07,953	[INFO]	441	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:35:09,172	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:35:10,427	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:35:11,642	[INFO]	444	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:35:16,751	[INFO]	445	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:35:16,753	[INFO]	446	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:35:16,754	[DEBUG]	
2020-12-17 17:35:16,755	[INFO]	447	SUCCESS	+4.0	
2020-12-17 17:35:16,755	[DEBUG]	
2020-12-17 17:35:16,757	[INFO]	448	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:35:16,758	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:35:18,146	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:35:19,314	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:35:19,315	[INFO]	452	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:35:19,316	[DEBUG]	
2020-12-17 17:35:19,316	[INFO]	453	SUCCESS	+4.0	
2020-12-17 17:35:19,317	[DEBUG]	
2020-12-17 17:35:20,543	[INFO]	454	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:35:20,546	[INFO]	455	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:35:20,547	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:35:20,548	[INFO]	457	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:35:20,550	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:35:24,752	[INFO]	459	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:35:24,753	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:35:24,754	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:35:25,790	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:35:25,791	[INFO]	463	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:35:26,995	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:35:28,249	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:35:28,251	[INFO]	466	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:35:28,251	[INFO]	467	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:35:29,489	[INFO]	468	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:35:30,480	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:35:30,481	[INFO]	470	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:35:30,482	[INFO]	471	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:35:30,483	[INFO]	472	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:35:30,484	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:35:30,485	[INFO]	473	SUCCESS	+4.0	
2020-12-17 17:35:30,485	[DEBUG]	
2020-12-17 17:35:34,933	[INFO]	474	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:35:34,934	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:35:34,935	[INFO]	475	SUCCESS	+4.0	
2020-12-17 17:35:34,936	[DEBUG]	
2020-12-17 17:35:34,937	[INFO]	476	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:35:36,070	[INFO]	477	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:35:36,071	[INFO]	478	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:35:37,449	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:35:37,452	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:35:39,670	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:35:55,641	[INFO]	482	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:35:56,585	[INFO]	483	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:36:00,699	[INFO]	484	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:36:00,701	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:36:01,945	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:36:06,182	[INFO]	487	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:36:07,456	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:36:07,458	[INFO]	489	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:36:11,747	[INFO]	490	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:36:11,749	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:36:12,748	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:36:13,752	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:36:14,976	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:36:14,977	[INFO]	495	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:36:14,977	[DEBUG]	
2020-12-17 17:36:14,978	[INFO]	496	SUCCESS	+4.0	
2020-12-17 17:36:14,978	[DEBUG]	
2020-12-17 17:36:15,978	[INFO]	497	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:36:15,981	[INFO]	498	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:36:17,194	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:36:18,207	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:36:18,208	[INFO]	==== END ====
2020-12-17 17:36:18,208	[INFO]	Reason: step budget
2020-12-17 17:36:18,208	[INFO]	
2020-12-17 17:36:18,208	[INFO]	========== EPOCH 19 ==========
2020-12-17 17:36:18,209	[INFO]	==== WARMUP ====
2020-12-17 17:36:23,659	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:36:23,659	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:36:29,423	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:36:29,423	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:36:33,867	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:36:33,868	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:36:38,416	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 17:36:38,416	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:36:38,416	[INFO]	==== START ====
2020-12-17 17:36:39,701	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:36:40,813	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:36:47,074	[INFO]	3	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:36:47,074	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:36:48,462	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:36:48,464	[INFO]	5	SUCCESS	+4.0	
2020-12-17 17:36:48,464	[DEBUG]	
2020-12-17 17:36:49,855	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:36:49,857	[INFO]	7	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:36:49,858	[DEBUG]	
2020-12-17 17:36:55,748	[INFO]	8	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:36:56,721	[INFO]	9	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:36:57,971	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:37:03,285	[INFO]	11	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:37:03,287	[INFO]	12	SUCCESS	+4.0	
2020-12-17 17:37:03,288	[DEBUG]	
2020-12-17 17:37:08,463	[INFO]	13	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:37:08,465	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:37:10,408	[INFO]	14	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:37:10,409	[INFO]	15	SUCCESS	+4.0	
2020-12-17 17:37:10,409	[DEBUG]	
2020-12-17 17:37:10,410	[INFO]	16	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:37:10,411	[DEBUG]	
2020-12-17 17:37:10,412	[INFO]	17	SUCCESS	+4.0	
2020-12-17 17:37:10,412	[DEBUG]	
2020-12-17 17:37:11,822	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:37:12,905	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:37:12,907	[INFO]	20	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:37:14,298	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:37:15,641	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:37:15,643	[INFO]	23	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:37:16,878	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:37:18,184	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:37:20,053	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:37:20,055	[INFO]	27	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:37:20,056	[DEBUG]	
2020-12-17 17:37:21,593	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:37:21,595	[INFO]	29	SUCCESS	+4.0	
2020-12-17 17:37:21,596	[DEBUG]	
2020-12-17 17:37:21,597	[INFO]	30	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:37:26,597	[INFO]	31	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:37:26,598	[INFO]	32	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:37:26,598	[DEBUG]	
2020-12-17 17:37:26,599	[INFO]	33	SUCCESS	+4.0	
2020-12-17 17:37:26,599	[DEBUG]	
2020-12-17 17:37:27,846	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:37:32,253	[INFO]	35	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:37:32,254	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:37:32,255	[INFO]	36	SUCCESS	+4.0	
2020-12-17 17:37:32,255	[DEBUG]	
2020-12-17 17:37:36,491	[INFO]	37	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:37:37,693	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:37:38,813	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:37:38,815	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:37:40,067	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:37:44,214	[INFO]	42	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:37:45,415	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:37:49,539	[INFO]	44	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:37:50,588	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:37:50,590	[INFO]	46	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:37:50,591	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:37:51,621	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:37:51,623	[INFO]	49	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:37:51,624	[DEBUG]	
2020-12-17 17:37:51,625	[INFO]	50	SUCCESS	+4.0	
2020-12-17 17:37:51,625	[DEBUG]	
2020-12-17 17:37:57,496	[INFO]	51	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:37:59,221	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:37:59,223	[INFO]	53	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:37:59,224	[DEBUG]	
2020-12-17 17:37:59,225	[INFO]	54	SUCCESS	+4.0	
2020-12-17 17:37:59,225	[DEBUG]	
2020-12-17 17:37:59,227	[INFO]	55	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:37:59,227	[DEBUG]	
2020-12-17 17:37:59,229	[INFO]	56	SUCCESS	+4.0	
2020-12-17 17:37:59,229	[DEBUG]	
2020-12-17 17:38:00,618	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:38:00,621	[INFO]	58	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:38:00,623	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:38:00,624	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:38:01,986	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:38:03,196	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:38:04,184	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:38:04,185	[INFO]	64	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:38:04,186	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:38:04,186	[INFO]	65	SUCCESS	+4.0	
2020-12-17 17:38:04,187	[DEBUG]	
2020-12-17 17:38:04,188	[INFO]	66	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:38:04,188	[DEBUG]	
2020-12-17 17:38:04,189	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:38:04,190	[INFO]	68	SUCCESS	+4.0	
2020-12-17 17:38:04,190	[DEBUG]	
2020-12-17 17:38:04,191	[INFO]	69	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:38:04,192	[INFO]	70	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:38:04,193	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:38:04,194	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:38:05,344	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:38:06,614	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:38:06,615	[INFO]	74	SUCCESS	+4.0	
2020-12-17 17:38:06,616	[DEBUG]	
2020-12-17 17:38:07,900	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:38:09,192	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:38:15,479	[INFO]	77	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:38:15,481	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:38:15,483	[INFO]	78	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:38:15,484	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:38:15,489	[INFO]	79	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:38:15,490	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:38:16,547	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:38:16,549	[INFO]	81	SUCCESS	+4.0	
2020-12-17 17:38:16,549	[DEBUG]	
2020-12-17 17:38:20,983	[INFO]	82	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:38:22,838	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:38:28,712	[INFO]	84	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:38:33,126	[INFO]	85	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:38:33,127	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 17:38:34,106	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:38:38,888	[INFO]	87	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:38:38,889	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,22 ****
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
--- 16,23 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
!         }
!  else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:38:38,890	[INFO]	88	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:38:38,891	[INFO]	89	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:38:38,892	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 17:38:38,893	[INFO]	90	SUCCESS	+4.0	
2020-12-17 17:38:38,893	[DEBUG]	
2020-12-17 17:38:44,180	[INFO]	91	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:38:44,181	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:38:44,182	[INFO]	92	SUCCESS	+4.0	
2020-12-17 17:38:44,182	[DEBUG]	
2020-12-17 17:38:44,183	[INFO]	93	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:38:44,183	[DEBUG]	
2020-12-17 17:38:44,184	[INFO]	94	SUCCESS	+4.0	
2020-12-17 17:38:44,184	[DEBUG]	
2020-12-17 17:38:45,508	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:38:47,298	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:38:47,301	[INFO]	97	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:38:47,302	[INFO]	98	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:38:49,326	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:38:55,137	[INFO]	100	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:38:56,533	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:38:57,855	[INFO]	102	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:38:57,857	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:38:58,890	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:38:59,870	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:39:03,933	[INFO]	106	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:39:04,897	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:39:06,157	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:39:07,359	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:39:08,375	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:39:08,377	[INFO]	111	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:39:09,371	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:39:10,579	[INFO]	113	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:39:11,550	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:39:26,950	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:39:31,368	[INFO]	116	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:39:31,370	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:39:31,371	[INFO]	117	SUCCESS	+4.0	
2020-12-17 17:39:31,372	[DEBUG]	
2020-12-17 17:39:31,373	[INFO]	118	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:39:32,679	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:39:32,681	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:39:32,682	[INFO]	121	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:39:32,682	[DEBUG]	
2020-12-17 17:39:36,842	[INFO]	122	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:39:36,844	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:39:36,845	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:39:36,845	[INFO]	125	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:39:36,846	[INFO]	126	SUCCESS	+4.0	
2020-12-17 17:39:36,846	[DEBUG]	
2020-12-17 17:39:38,073	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:39:38,075	[INFO]	128	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:39:38,075	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:39:38,076	[INFO]	129	SUCCESS	+4.0	
2020-12-17 17:39:38,076	[DEBUG]	
2020-12-17 17:39:38,077	[INFO]	130	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:39:38,078	[DEBUG]	
2020-12-17 17:39:38,079	[INFO]	131	SUCCESS	+4.0	
2020-12-17 17:39:38,079	[DEBUG]	
2020-12-17 17:39:38,080	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:39:42,700	[INFO]	133	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:39:42,701	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:39:42,703	[INFO]	134	SUCCESS	+4.0	
2020-12-17 17:39:42,703	[DEBUG]	
2020-12-17 17:39:43,716	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:39:48,320	[INFO]	136	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:39:49,626	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:39:50,901	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:39:52,455	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:39:53,751	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:39:53,754	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:39:55,180	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:39:55,182	[INFO]	143	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:39:55,183	[INFO]	144	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:39:56,597	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:40:01,662	[INFO]	146	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:40:04,147	[INFO]	147	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:40:04,150	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:40:04,152	[INFO]	149	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:40:04,154	[INFO]	150	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:40:04,155	[DEBUG]	
2020-12-17 17:40:04,156	[INFO]	151	SUCCESS	+4.0	
2020-12-17 17:40:04,157	[DEBUG]	
2020-12-17 17:40:04,159	[INFO]	152	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:40:04,164	[DEBUG]	
2020-12-17 17:40:04,165	[INFO]	153	SUCCESS	+4.0	
2020-12-17 17:40:04,166	[DEBUG]	
2020-12-17 17:40:14,204	[INFO]	154	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:40:14,208	[INFO]	155	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:40:22,562	[INFO]	156	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:40:22,564	[INFO]	157	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:40:22,564	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:40:22,565	[INFO]	158	SUCCESS	+4.0	
2020-12-17 17:40:22,566	[DEBUG]	
2020-12-17 17:40:23,981	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:40:23,983	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:40:25,262	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:40:25,267	[INFO]	162	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:40:27,397	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:40:34,952	[INFO]	164	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:40:34,955	[INFO]	165	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:40:36,724	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:40:38,073	[INFO]	167	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:40:39,573	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:40:45,759	[INFO]	169	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:40:45,760	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:40:51,227	[INFO]	170	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:40:51,228	[INFO]	171	SUCCESS	+4.0	
2020-12-17 17:40:51,229	[DEBUG]	
2020-12-17 17:40:52,579	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:40:53,889	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:40:58,276	[INFO]	174	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:40:58,279	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:40:58,280	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:40:59,340	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:41:00,768	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:41:00,770	[INFO]	179	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:41:00,770	[DEBUG]	
2020-12-17 17:41:00,771	[INFO]	180	SUCCESS	+4.0	
2020-12-17 17:41:00,771	[DEBUG]	
2020-12-17 17:41:02,208	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:41:02,210	[INFO]	182	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:41:03,580	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:41:03,581	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:41:03,582	[INFO]	185	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:41:03,582	[DEBUG]	
2020-12-17 17:41:03,583	[INFO]	186	SUCCESS	+4.0	
2020-12-17 17:41:03,583	[DEBUG]	
2020-12-17 17:41:04,662	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:41:04,664	[INFO]	188	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:41:04,664	[INFO]	189	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:41:04,665	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:41:04,666	[INFO]	190	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:41:04,666	[INFO]	191	SUCCESS	+4.0	
2020-12-17 17:41:04,666	[DEBUG]	
2020-12-17 17:41:09,172	[INFO]	192	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:41:09,173	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:41:13,789	[INFO]	193	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:41:15,169	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:41:15,170	[INFO]	195	SUCCESS	+4.0	
2020-12-17 17:41:15,170	[DEBUG]	
2020-12-17 17:41:15,171	[INFO]	196	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:41:15,172	[INFO]	197	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:41:15,172	[DEBUG]	
2020-12-17 17:41:15,174	[INFO]	198	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:41:15,174	[INFO]	199	SUCCESS	+4.0	
2020-12-17 17:41:15,175	[DEBUG]	
2020-12-17 17:41:16,598	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:41:21,250	[INFO]	201	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:41:22,853	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:41:29,818	[INFO]	203	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:41:29,822	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:41:29,824	[INFO]	204	SUCCESS	+4.0	
2020-12-17 17:41:29,825	[DEBUG]	
2020-12-17 17:41:31,675	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:41:38,015	[INFO]	206	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:41:44,408	[INFO]	207	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:41:49,750	[INFO]	208	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:41:50,789	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:41:56,561	[INFO]	210	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:41:56,563	[INFO]	211	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:42:03,183	[INFO]	212	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:42:03,185	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
+         }
+ else if (a.charAt(0) == b.charAt(0)) {
+             return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);

2020-12-17 17:42:03,186	[INFO]	213	SUCCESS	+4.0	
2020-12-17 17:42:03,186	[DEBUG]	
2020-12-17 17:42:04,236	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:42:04,238	[INFO]	215	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:42:10,488	[INFO]	216	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:42:10,490	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:42:10,491	[INFO]	218	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:42:10,492	[DEBUG]	
2020-12-17 17:42:11,773	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:42:11,775	[INFO]	220	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:42:11,776	[INFO]	221	SUCCESS	+4.0	
2020-12-17 17:42:11,776	[DEBUG]	
2020-12-17 17:42:13,054	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:42:19,539	[INFO]	223	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:42:19,540	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:42:26,517	[INFO]	224	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:42:26,518	[INFO]	225	SUCCESS	+4.0	
2020-12-17 17:42:26,519	[DEBUG]	
2020-12-17 17:42:26,520	[INFO]	226	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:42:26,521	[DEBUG]	
2020-12-17 17:42:26,522	[INFO]	227	SUCCESS	+4.0	
2020-12-17 17:42:26,522	[DEBUG]	
2020-12-17 17:42:27,857	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:42:29,211	[INFO]	229	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:42:29,213	[INFO]	230	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:42:29,214	[INFO]	231	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:42:35,924	[INFO]	232	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:42:37,235	[INFO]	233	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:42:37,237	[INFO]	234	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:42:39,442	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:42:41,191	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:42:41,195	[INFO]	237	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:42:41,197	[INFO]	238	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:42:41,198	[DEBUG]	
2020-12-17 17:42:41,200	[INFO]	239	SUCCESS	+4.0	
2020-12-17 17:42:41,200	[DEBUG]	
2020-12-17 17:42:43,131	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:42:43,133	[INFO]	241	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:42:48,848	[INFO]	242	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:42:48,849	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:42:48,850	[INFO]	243	SUCCESS	+4.0	
2020-12-17 17:42:48,850	[DEBUG]	
2020-12-17 17:42:50,199	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:42:50,201	[INFO]	245	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:42:50,202	[INFO]	246	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:42:50,203	[INFO]	247	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:42:50,204	[INFO]	248	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:42:50,206	[INFO]	249	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:42:50,207	[INFO]	250	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:42:50,208	[INFO]	251	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:42:51,602	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:42:52,743	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:42:52,746	[INFO]	254	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:42:57,527	[INFO]	255	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:42:58,630	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:42:59,988	[INFO]	257	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:42:59,990	[INFO]	258	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:42:59,991	[DEBUG]	
2020-12-17 17:42:59,992	[INFO]	259	SUCCESS	+4.0	
2020-12-17 17:42:59,993	[DEBUG]	
2020-12-17 17:42:59,994	[INFO]	260	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:43:01,096	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:43:01,097	[INFO]	262	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:43:06,050	[INFO]	263	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:43:06,051	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:43:06,053	[INFO]	264	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:43:06,053	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:43:07,390	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:43:07,391	[INFO]	266	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:43:07,392	[DEBUG]	
2020-12-17 17:43:07,392	[INFO]	267	SUCCESS	+4.0	
2020-12-17 17:43:07,393	[DEBUG]	
2020-12-17 17:43:12,327	[INFO]	268	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:43:12,328	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:43:19,377	[INFO]	269	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:43:27,345	[INFO]	270	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:43:29,211	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:43:29,212	[INFO]	272	SUCCESS	+4.0	
2020-12-17 17:43:29,212	[DEBUG]	
2020-12-17 17:43:29,214	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:43:29,215	[INFO]	274	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:43:29,216	[INFO]	275	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:43:29,217	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:43:29,218	[INFO]	276	SUCCESS	+4.0	
2020-12-17 17:43:29,219	[DEBUG]	
2020-12-17 17:43:30,641	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:43:32,027	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:43:32,029	[INFO]	279	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:43:32,030	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:43:33,101	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:43:34,435	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:43:34,436	[INFO]	282	SUCCESS	+4.0	
2020-12-17 17:43:34,437	[DEBUG]	
2020-12-17 17:43:35,711	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:43:36,827	[INFO]	284	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:43:36,828	[INFO]	285	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:43:36,829	[DEBUG]	
2020-12-17 17:43:36,829	[INFO]	286	SUCCESS	+4.0	
2020-12-17 17:43:36,830	[DEBUG]	
2020-12-17 17:43:36,831	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:43:36,832	[INFO]	288	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:43:41,862	[INFO]	289	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:43:41,863	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:43:41,864	[INFO]	290	SUCCESS	+4.0	
2020-12-17 17:43:41,865	[DEBUG]	
2020-12-17 17:43:43,170	[INFO]	291	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:43:44,533	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:43:45,917	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:43:47,223	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:43:47,224	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:43:48,670	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:43:48,673	[INFO]	297	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:43:48,674	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:43:48,676	[INFO]	298	SUCCESS	+4.0	
2020-12-17 17:43:48,677	[DEBUG]	
2020-12-17 17:43:49,933	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:43:49,936	[INFO]	300	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:43:49,937	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:43:51,295	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:43:52,660	[INFO]	303	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:43:53,779	[INFO]	304	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:43:53,781	[INFO]	305	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:43:53,782	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:43:53,783	[INFO]	306	SUCCESS	+4.0	
2020-12-17 17:43:53,784	[DEBUG]	
2020-12-17 17:43:54,981	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:43:56,358	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:44:01,286	[INFO]	309	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:44:01,287	[INFO]	310	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:44:06,033	[INFO]	311	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:44:12,083	[INFO]	312	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:44:12,085	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:44:12,086	[INFO]	314	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:44:12,087	[INFO]	315	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:44:13,091	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:44:18,000	[INFO]	317	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:44:18,002	[INFO]	318	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:44:19,097	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:44:20,450	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:44:20,452	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:44:20,453	[INFO]	322	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:44:25,103	[INFO]	323	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:44:25,105	[INFO]	324	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:44:26,149	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:44:26,151	[INFO]	326	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:44:27,178	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:44:28,541	[INFO]	328	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:44:34,110	[INFO]	329	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:44:34,111	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:44:34,112	[INFO]	330	SUCCESS	+4.0	
2020-12-17 17:44:34,112	[DEBUG]	
2020-12-17 17:44:34,113	[INFO]	331	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:44:35,163	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:44:35,164	[INFO]	333	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:44:35,165	[DEBUG]	
2020-12-17 17:44:36,631	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:44:41,651	[INFO]	335	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:44:41,653	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:44:41,654	[INFO]	336	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:44:41,655	[DEBUG]	
2020-12-17 17:44:41,656	[INFO]	337	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:44:41,657	[DEBUG]	
2020-12-17 17:44:41,658	[INFO]	338	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:44:41,658	[DEBUG]	
2020-12-17 17:44:43,015	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:44:43,021	[INFO]	340	SUCCESS	+4.0	
2020-12-17 17:44:43,021	[DEBUG]	
2020-12-17 17:44:44,130	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:44:44,132	[INFO]	342	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:44:45,553	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:44:45,556	[INFO]	344	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:44:45,556	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:44:50,375	[INFO]	345	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:44:50,377	[INFO]	346	SUCCESS	+4.0	
2020-12-17 17:44:50,377	[DEBUG]	
2020-12-17 17:44:51,468	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:44:52,844	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:44:52,846	[INFO]	349	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:44:52,847	[INFO]	350	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:44:54,158	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:44:54,160	[INFO]	352	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:44:54,162	[INFO]	353	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:44:54,162	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:44:54,163	[INFO]	354	SUCCESS	+4.0	
2020-12-17 17:44:54,163	[DEBUG]	
2020-12-17 17:44:58,687	[INFO]	355	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:45:00,040	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:45:01,361	[INFO]	357	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:45:01,363	[INFO]	358	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:45:01,364	[INFO]	359	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:45:01,364	[DEBUG]	
2020-12-17 17:45:01,365	[INFO]	360	SUCCESS	+4.0	
2020-12-17 17:45:01,366	[DEBUG]	
2020-12-17 17:45:01,366	[INFO]	361	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:45:01,367	[DEBUG]	
2020-12-17 17:45:01,367	[INFO]	362	SUCCESS	+4.0	
2020-12-17 17:45:01,368	[DEBUG]	
2020-12-17 17:45:02,724	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:45:08,978	[INFO]	364	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:45:10,312	[INFO]	365	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:45:10,313	[INFO]	366	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:45:10,313	[DEBUG]	
2020-12-17 17:45:15,221	[INFO]	367	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:45:15,222	[INFO]	368	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:45:15,223	[INFO]	369	SUCCESS	+4.0	
2020-12-17 17:45:15,224	[DEBUG]	
2020-12-17 17:45:16,802	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:45:16,807	[INFO]	371	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:45:19,139	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:45:19,143	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:45:24,677	[INFO]	374	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:45:29,724	[INFO]	375	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:45:37,125	[INFO]	376	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:45:37,127	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:45:37,129	[INFO]	378	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:45:37,130	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 17,22 ****
--- 17,25 ----
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;

2020-12-17 17:45:37,132	[INFO]	379	SUCCESS	+4.0	
2020-12-17 17:45:37,133	[DEBUG]	
2020-12-17 17:45:45,929	[INFO]	380	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:45:50,133	[INFO]	381	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:45:50,135	[INFO]	382	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:45:50,135	[INFO]	383	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:45:51,455	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:45:52,531	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:45:52,532	[INFO]	386	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:45:52,533	[INFO]	387	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:45:54,462	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:45:56,569	[INFO]	389	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:45:56,571	[INFO]	390	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:45:56,572	[INFO]	391	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:45:56,572	[INFO]	392	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:45:56,573	[DEBUG]	
2020-12-17 17:45:56,574	[INFO]	393	SUCCESS	+4.0	
2020-12-17 17:45:56,574	[DEBUG]	
2020-12-17 17:45:56,575	[INFO]	394	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:45:57,645	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:45:57,647	[INFO]	396	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:45:57,648	[INFO]	397	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:45:57,648	[DEBUG]	
2020-12-17 17:45:58,945	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:46:00,212	[INFO]	399	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:46:00,213	[INFO]	400	SUCCESS	+4.0	
2020-12-17 17:46:00,214	[DEBUG]	
2020-12-17 17:46:00,215	[INFO]	401	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:46:04,757	[INFO]	402	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:46:06,011	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:46:14,539	[INFO]	404	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:46:15,858	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:46:21,856	[INFO]	406	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:46:22,875	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:46:22,880	[INFO]	408	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:46:22,881	[DEBUG]	
2020-12-17 17:46:22,885	[INFO]	409	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:46:23,918	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:46:23,919	[INFO]	411	SUCCESS	+4.0	
2020-12-17 17:46:23,920	[DEBUG]	
2020-12-17 17:46:27,307	[INFO]	412	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:46:27,309	[INFO]	413	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:46:27,309	[DEBUG]	
2020-12-17 17:46:27,310	[INFO]	414	SUCCESS	+4.0	
2020-12-17 17:46:27,310	[DEBUG]	
2020-12-17 17:46:27,311	[INFO]	415	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:46:27,311	[DEBUG]	
2020-12-17 17:46:28,080	[INFO]	416	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:46:29,070	[INFO]	417	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:46:29,071	[INFO]	418	SUCCESS	+4.0	
2020-12-17 17:46:29,072	[DEBUG]	
2020-12-17 17:46:30,059	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:46:30,061	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:46:30,062	[INFO]	421	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:46:30,062	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:46:33,633	[INFO]	422	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:46:36,958	[INFO]	423	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:46:36,961	[INFO]	424	SUCCESS	+4.0	
2020-12-17 17:46:36,961	[DEBUG]	
2020-12-17 17:46:36,963	[INFO]	425	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:46:37,951	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:46:37,952	[INFO]	427	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:46:39,000	[INFO]	428	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:46:39,002	[INFO]	429	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:46:39,002	[DEBUG]	
2020-12-17 17:46:39,003	[INFO]	430	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:46:39,004	[INFO]	431	SUCCESS	+4.0	
2020-12-17 17:46:39,004	[DEBUG]	
2020-12-17 17:46:39,005	[INFO]	432	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:46:39,005	[DEBUG]	
2020-12-17 17:46:39,005	[INFO]	433	SUCCESS	+4.0	
2020-12-17 17:46:39,006	[DEBUG]	
2020-12-17 17:46:40,029	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:46:40,030	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:46:54,418	[INFO]	436	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:46:54,421	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:46:55,372	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:46:55,373	[INFO]	439	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:46:55,374	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:46:59,357	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:46:59,357	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:46:59,358	[INFO]	442	SUCCESS	+4.0	
2020-12-17 17:46:59,358	[DEBUG]	
2020-12-17 17:46:59,359	[INFO]	443	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:46:59,360	[INFO]	444	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:46:59,360	[DEBUG]	
2020-12-17 17:46:59,360	[INFO]	445	SUCCESS	+4.0	
2020-12-17 17:46:59,361	[DEBUG]	
2020-12-17 17:47:00,360	[INFO]	446	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:47:00,364	[INFO]	447	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:47:00,366	[INFO]	448	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:47:01,350	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:47:01,352	[INFO]	450	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:47:02,357	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:47:02,358	[INFO]	452	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:47:03,161	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:47:03,162	[INFO]	454	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:47:03,163	[INFO]	455	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:47:03,164	[DEBUG]	
2020-12-17 17:47:03,164	[INFO]	456	SUCCESS	+4.0	
2020-12-17 17:47:03,165	[DEBUG]	
2020-12-17 17:47:03,166	[INFO]	457	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:47:04,140	[INFO]	458	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:47:04,142	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:47:05,320	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:47:05,322	[INFO]	461	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:47:06,347	[INFO]	462	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:47:07,380	[INFO]	463	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:47:07,381	[INFO]	464	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:47:07,382	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:47:07,382	[INFO]	465	SUCCESS	+4.0	
2020-12-17 17:47:07,383	[DEBUG]	
2020-12-17 17:47:08,203	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:47:09,183	[INFO]	467	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:47:09,186	[INFO]	468	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:47:09,188	[INFO]	469	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:47:10,010	[INFO]	470	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:47:13,227	[INFO]	471	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:47:14,234	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:47:15,048	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:47:15,051	[INFO]	474	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:47:15,052	[DEBUG]	
2020-12-17 17:47:15,054	[INFO]	475	SUCCESS	+4.0	
2020-12-17 17:47:15,055	[DEBUG]	
2020-12-17 17:47:16,015	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:47:16,016	[INFO]	477	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:47:16,977	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:47:17,957	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:47:18,787	[INFO]	480	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:47:19,787	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:47:19,789	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:47:23,313	[INFO]	483	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:47:23,314	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:47:24,287	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:47:24,288	[INFO]	485	SUCCESS	+4.0	
2020-12-17 17:47:24,288	[DEBUG]	
2020-12-17 17:47:25,282	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:47:25,284	[INFO]	487	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:47:25,285	[DEBUG]	
2020-12-17 17:47:25,286	[INFO]	488	SUCCESS	+4.0	
2020-12-17 17:47:25,286	[DEBUG]	
2020-12-17 17:47:26,105	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:47:27,116	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:47:27,122	[INFO]	491	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:47:27,126	[INFO]	492	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:47:27,128	[DEBUG]	
2020-12-17 17:47:27,132	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:47:27,135	[INFO]	494	SUCCESS	+4.0	
2020-12-17 17:47:27,137	[DEBUG]	
2020-12-17 17:47:28,152	[INFO]	495	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:47:31,913	[INFO]	496	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:47:32,968	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:47:33,983	[INFO]	498	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:47:34,808	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:47:34,810	[INFO]	500	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:47:34,810	[DEBUG]	
2020-12-17 17:47:34,811	[INFO]	==== END ====
2020-12-17 17:47:34,811	[INFO]	Reason: step budget
2020-12-17 17:47:34,811	[INFO]	
2020-12-17 17:47:34,811	[INFO]	========== EPOCH 20 ==========
2020-12-17 17:47:34,812	[INFO]	==== WARMUP ====
2020-12-17 17:47:38,387	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:47:38,387	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:47:42,158	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:47:42,161	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:47:45,918	[INFO]	WARM	SUCCESS	 4.0	
2020-12-17 17:47:45,918	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:47:49,222	[INFO]	INITIAL	SUCCESS	 4.0	
2020-12-17 17:47:49,222	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 4.0>
2020-12-17 17:47:49,222	[INFO]	==== START ====
2020-12-17 17:47:49,223	[INFO]	1	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:47:49,223	[DEBUG]	
2020-12-17 17:47:49,224	[INFO]	2	SUCCESS	+4.0	
2020-12-17 17:47:49,224	[DEBUG]	
2020-12-17 17:47:50,166	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:47:51,093	[INFO]	4	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:47:54,401	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:47:54,404	[INFO]	6	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:47:54,405	[DEBUG]	
2020-12-17 17:47:54,407	[INFO]	7	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:47:54,408	[INFO]	8	SUCCESS	+4.0	
2020-12-17 17:47:54,409	[DEBUG]	
2020-12-17 17:47:55,203	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:47:59,491	[INFO]	10	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:02,878	[INFO]	11	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:48:03,840	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:48:04,593	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:48:05,507	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:48:06,480	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:48:07,482	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:48:07,484	[INFO]	17	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:48:08,312	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:48:08,313	[INFO]	19	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:48:08,314	[INFO]	20	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:09,295	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:48:09,297	[INFO]	22	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:09,297	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:48:09,298	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:48:09,298	[INFO]	25	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:48:09,299	[DEBUG]	
2020-12-17 17:48:09,299	[INFO]	26	SUCCESS	+4.0	
2020-12-17 17:48:09,300	[DEBUG]	
2020-12-17 17:48:09,300	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:48:09,301	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:48:10,308	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:48:11,284	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:48:12,292	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:48:15,681	[INFO]	32	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:48:15,686	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:48:15,689	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:48:16,661	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:48:16,663	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:48:16,664	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:48:17,689	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:48:17,691	[INFO]	39	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:48:17,692	[DEBUG]	
2020-12-17 17:48:17,694	[INFO]	40	SUCCESS	+4.0	
2020-12-17 17:48:17,694	[DEBUG]	
2020-12-17 17:48:21,112	[INFO]	41	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:48:21,113	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:48:24,582	[INFO]	42	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:48:27,763	[INFO]	43	SUCCESS	 9.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:48:27,764	[INFO]	44	SUCCESS	+4.0	
2020-12-17 17:48:27,764	[DEBUG]	
2020-12-17 17:48:28,729	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:48:32,223	[INFO]	46	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:48:32,987	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:32,990	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:48:33,916	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:48:33,919	[INFO]	50	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:48:33,920	[DEBUG]	
2020-12-17 17:48:33,922	[INFO]	51	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:48:33,923	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:48:33,925	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:48:37,337	[INFO]	53	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:48:37,338	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:48:37,340	[INFO]	54	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:48:37,340	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,25 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 13,28 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:48:40,824	[INFO]	55	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:48:40,825	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:48:45,257	[INFO]	56	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:45,258	[INFO]	57	SUCCESS	+4.0	
2020-12-17 17:48:45,258	[DEBUG]	
2020-12-17 17:48:48,597	[INFO]	58	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:48:48,598	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:48:48,599	[INFO]	60	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:48,600	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:48:49,413	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:48:49,416	[INFO]	63	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:50,354	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:48:50,357	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:48:50,358	[INFO]	66	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:49:04,824	[INFO]	67	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:49:05,755	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:49:05,758	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:49:09,277	[INFO]	70	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:49:12,806	[INFO]	71	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:49:12,810	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:49:13,558	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:49:13,559	[INFO]	73	SUCCESS	+4.0	
2020-12-17 17:49:13,560	[DEBUG]	
2020-12-17 17:49:13,560	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:49:14,494	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:49:14,499	[INFO]	76	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:49:14,500	[DEBUG]	
2020-12-17 17:49:14,502	[INFO]	77	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:49:14,505	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:49:14,507	[INFO]	79	SUCCESS	+4.0	
2020-12-17 17:49:14,508	[DEBUG]	
2020-12-17 17:49:17,710	[INFO]	80	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:49:17,711	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:49:17,711	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:49:18,483	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:49:18,486	[INFO]	84	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:49:18,488	[INFO]	85	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:49:18,490	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:49:18,491	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:49:19,440	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:49:22,882	[INFO]	89	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:49:22,883	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:49:22,883	[INFO]	90	SUCCESS	+4.0	
2020-12-17 17:49:22,884	[DEBUG]	
2020-12-17 17:49:22,884	[INFO]	91	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:49:26,105	[INFO]	92	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:49:27,097	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:49:28,131	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:49:29,042	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:49:29,043	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:49:32,883	[INFO]	97	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:49:32,887	[INFO]	98	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:49:33,727	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:49:34,557	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:49:34,561	[INFO]	101	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:49:35,348	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:49:39,348	[INFO]	103	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:49:43,329	[INFO]	104	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:49:43,333	[INFO]	105	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:49:43,334	[DEBUG]	
2020-12-17 17:49:43,336	[INFO]	106	SUCCESS	+4.0	
2020-12-17 17:49:43,337	[DEBUG]	
2020-12-17 17:49:43,340	[INFO]	107	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:49:43,342	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:49:43,345	[INFO]	109	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:49:43,348	[INFO]	110	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:49:46,798	[INFO]	111	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:49:51,729	[INFO]	112	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:49:51,730	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:49:52,723	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:49:52,724	[INFO]	114	SUCCESS	+4.0	
2020-12-17 17:49:52,724	[DEBUG]	
2020-12-17 17:49:53,955	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:49:55,136	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:49:56,166	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:49:56,167	[INFO]	118	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:50:00,184	[INFO]	119	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:50:00,185	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:50:01,120	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:50:01,122	[INFO]	121	SUCCESS	+4.0	
2020-12-17 17:50:01,122	[DEBUG]	
2020-12-17 17:50:02,205	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:50:06,455	[INFO]	123	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:50:06,457	[INFO]	124	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:50:06,458	[INFO]	125	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:50:06,458	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:50:06,460	[INFO]	126	SUCCESS	+4.0	
2020-12-17 17:50:06,460	[DEBUG]	
2020-12-17 17:50:06,461	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:50:07,669	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:50:08,626	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:50:09,567	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:50:09,568	[INFO]	131	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:50:09,569	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:50:10,782	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:50:11,741	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:50:15,424	[INFO]	134	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:50:15,426	[INFO]	135	SUCCESS	+4.0	
2020-12-17 17:50:15,427	[DEBUG]	
2020-12-17 17:50:15,429	[INFO]	136	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:50:15,431	[INFO]	137	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:50:15,432	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:50:15,433	[INFO]	138	SUCCESS	+4.0	
2020-12-17 17:50:15,433	[DEBUG]	
2020-12-17 17:50:15,434	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:50:16,628	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:50:16,631	[INFO]	141	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:50:16,632	[DEBUG]	
2020-12-17 17:50:20,241	[INFO]	142	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:50:20,243	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:50:20,244	[INFO]	144	SUCCESS	+4.0	
2020-12-17 17:50:20,244	[DEBUG]	
2020-12-17 17:50:21,267	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:50:22,281	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:50:23,085	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:50:24,106	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:50:25,092	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:50:26,085	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:50:26,087	[INFO]	151	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:50:26,087	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:50:26,935	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:50:26,939	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:50:27,926	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:50:27,928	[INFO]	155	SUCCESS	+4.0	
2020-12-17 17:50:27,928	[DEBUG]	
2020-12-17 17:50:28,748	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:50:32,780	[INFO]	157	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:50:37,919	[INFO]	158	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:50:39,651	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:50:43,879	[INFO]	160	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:50:43,882	[INFO]	161	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:50:43,882	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:50:48,746	[INFO]	162	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:50:48,748	[INFO]	163	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:50:48,748	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:50:50,022	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:50:51,436	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:50:52,612	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:50:57,147	[INFO]	167	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:50:57,148	[INFO]	168	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:50:57,148	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:51:01,189	[INFO]	169	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:51:05,537	[INFO]	170	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:51:05,538	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,25 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 14,28 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:51:09,577	[INFO]	171	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:51:09,578	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,19 ****
--- 14,22 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
+         }
+         if (a.isEmpty() || b.isEmpty()) {
+             return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {

2020-12-17 17:51:10,510	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:51:10,511	[INFO]	173	SUCCESS	+4.0	
2020-12-17 17:51:10,512	[DEBUG]	
2020-12-17 17:51:10,512	[INFO]	174	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:51:13,838	[INFO]	175	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:51:13,839	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:51:14,561	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:51:15,438	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:51:19,928	[INFO]	179	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:51:19,929	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:51:20,803	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:51:20,804	[INFO]	181	SUCCESS	+4.0	
2020-12-17 17:51:20,804	[DEBUG]	
2020-12-17 17:51:21,728	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:51:22,482	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:51:22,483	[INFO]	184	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:51:25,882	[INFO]	185	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:51:25,883	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:51:25,884	[INFO]	186	SUCCESS	+4.0	
2020-12-17 17:51:25,884	[DEBUG]	
2020-12-17 17:51:25,885	[INFO]	187	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:51:26,827	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:51:26,831	[INFO]	189	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:51:26,832	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:51:27,641	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:51:28,556	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:51:29,499	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:51:29,501	[INFO]	193	SUCCESS	+4.0	
2020-12-17 17:51:29,501	[DEBUG]	
2020-12-17 17:51:30,438	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:51:31,349	[INFO]	195	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:51:32,280	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:51:33,022	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:51:36,122	[INFO]	198	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:51:39,409	[INFO]	199	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:51:42,909	[INFO]	200	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:51:42,910	[INFO]	201	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:51:42,910	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:51:42,911	[INFO]	202	SUCCESS	+4.0	
2020-12-17 17:51:42,911	[DEBUG]	
2020-12-17 17:51:42,912	[INFO]	203	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:51:43,810	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:51:44,802	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:51:44,803	[INFO]	206	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:51:44,803	[DEBUG]	
2020-12-17 17:51:44,804	[INFO]	207	SUCCESS	+4.0	
2020-12-17 17:51:44,804	[DEBUG]	
2020-12-17 17:51:45,742	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:51:46,532	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:51:47,299	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:51:50,502	[INFO]	211	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:51:50,503	[INFO]	212	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:51:50,504	[INFO]	213	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:51:51,427	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:51:52,379	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:51:52,381	[INFO]	216	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:51:53,174	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:51:53,955	[INFO]	218	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:51:54,722	[INFO]	219	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:51:57,975	[INFO]	220	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:51:57,977	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:51:57,978	[INFO]	221	SUCCESS	+4.0	
2020-12-17 17:51:57,979	[DEBUG]	
2020-12-17 17:51:57,980	[INFO]	222	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:51:57,981	[DEBUG]	
2020-12-17 17:51:57,982	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:51:59,022	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:51:59,910	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:52:02,960	[INFO]	226	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:02,962	[INFO]	227	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:52:02,962	[DEBUG]	
2020-12-17 17:52:02,963	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:52:02,964	[INFO]	229	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:52:02,965	[DEBUG]	
2020-12-17 17:52:02,966	[INFO]	230	SUCCESS	+4.0	
2020-12-17 17:52:02,966	[DEBUG]	
2020-12-17 17:52:02,967	[INFO]	231	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:52:02,967	[DEBUG]	
2020-12-17 17:52:02,968	[INFO]	232	SUCCESS	+4.0	
2020-12-17 17:52:02,968	[DEBUG]	
2020-12-17 17:52:02,970	[INFO]	233	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:52:02,970	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:52:02,971	[INFO]	234	SUCCESS	+4.0	
2020-12-17 17:52:02,971	[DEBUG]	
2020-12-17 17:52:02,972	[INFO]	235	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:52:02,973	[DEBUG]	
2020-12-17 17:52:02,974	[INFO]	236	SUCCESS	+4.0	
2020-12-17 17:52:02,974	[DEBUG]	
2020-12-17 17:52:03,727	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:52:04,666	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:52:04,668	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:52:04,670	[INFO]	240	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:52:04,670	[DEBUG]	
2020-12-17 17:52:04,671	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:52:04,672	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:52:04,673	[INFO]	243	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:52:04,674	[INFO]	244	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:52:04,675	[DEBUG]	
2020-12-17 17:52:04,676	[INFO]	245	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:52:04,676	[DEBUG]	
2020-12-17 17:52:04,678	[INFO]	246	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:52:04,678	[DEBUG]	
2020-12-17 17:52:04,679	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:52:04,680	[INFO]	248	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:52:04,681	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:52:04,682	[INFO]	249	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:52:04,682	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:52:04,683	[INFO]	250	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:52:04,684	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:52:05,598	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:52:05,599	[INFO]	252	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:52:05,600	[DEBUG]	
2020-12-17 17:52:05,601	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:52:05,602	[INFO]	254	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:52:05,603	[DEBUG]	
2020-12-17 17:52:05,604	[INFO]	255	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:52:05,604	[DEBUG]	
2020-12-17 17:52:05,605	[INFO]	256	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:52:05,605	[DEBUG]	
2020-12-17 17:52:05,606	[INFO]	257	SUCCESS	+4.0	
2020-12-17 17:52:05,606	[DEBUG]	
2020-12-17 17:52:05,607	[INFO]	258	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:52:05,608	[INFO]	259	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:52:05,609	[INFO]	260	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:52:06,562	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:52:09,786	[INFO]	262	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:52:10,686	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:10,687	[INFO]	264	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:52:10,687	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:52:10,688	[INFO]	265	SUCCESS	+4.0	
2020-12-17 17:52:10,688	[DEBUG]	
2020-12-17 17:52:10,689	[INFO]	266	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:52:10,689	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:52:13,756	[INFO]	267	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:13,758	[INFO]	268	SUCCESS	+4.0	
2020-12-17 17:52:13,759	[DEBUG]	
2020-12-17 17:52:16,759	[INFO]	269	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:52:16,760	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:52:19,755	[INFO]	271	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:52:23,012	[INFO]	272	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:52:23,013	[INFO]	273	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:23,014	[INFO]	274	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:52:23,014	[DEBUG]	
2020-12-17 17:52:23,014	[INFO]	275	SUCCESS	+4.0	
2020-12-17 17:52:23,015	[DEBUG]	
2020-12-17 17:52:23,015	[INFO]	276	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:52:23,925	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:24,837	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:25,753	[INFO]	279	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:52:26,482	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:52:27,365	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:52:28,281	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:52:28,282	[INFO]	283	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:29,204	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:52:30,136	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:52:33,730	[INFO]	286	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:33,731	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:52:33,732	[INFO]	287	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:52:33,732	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:52:33,733	[INFO]	288	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:52:34,655	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:52:35,570	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:52:36,502	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:52:36,503	[INFO]	292	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:36,504	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:52:36,504	[INFO]	293	SUCCESS	+4.0	
2020-12-17 17:52:36,504	[DEBUG]	
2020-12-17 17:52:39,848	[INFO]	294	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:52:39,849	[INFO]	295	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:52:39,850	[INFO]	296	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:39,851	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:40,746	[INFO]	298	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:52:40,747	[INFO]	299	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:41,493	[INFO]	300	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:52:41,494	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:41,495	[INFO]	302	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:52:44,783	[INFO]	303	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:52:45,678	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:52:46,449	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:52:50,591	[INFO]	306	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:53,587	[INFO]	307	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:52:56,739	[INFO]	308	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:52:56,741	[INFO]	309	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:52:56,742	[INFO]	310	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:52:56,742	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:52:56,743	[INFO]	311	SUCCESS	+4.0	
2020-12-17 17:52:56,743	[DEBUG]	
2020-12-17 17:52:57,470	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:52:57,472	[INFO]	313	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:52:57,473	[INFO]	314	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:53:00,609	[INFO]	315	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:53:00,610	[INFO]	316	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:53:00,611	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:53:01,503	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:53:01,506	[INFO]	319	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:53:02,453	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:53:05,564	[INFO]	321	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:53:06,481	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:53:07,404	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:53:07,407	[INFO]	324	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:53:08,151	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:53:09,038	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:53:09,040	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:53:09,041	[INFO]	328	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:53:09,776	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:53:09,779	[INFO]	330	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:53:09,781	[INFO]	331	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:53:09,782	[INFO]	332	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'})
2020-12-17 17:53:09,783	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,25 ****
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() >= snd.length() ? fst : snd;
          }
  
      }
--- 19,25 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
!             return fst.length() > snd.length() ? fst : snd;
          }
  
      }

2020-12-17 17:53:10,678	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:53:10,681	[INFO]	334	SUCCESS	+4.0	
2020-12-17 17:53:10,682	[DEBUG]	
2020-12-17 17:53:10,684	[INFO]	335	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:53:10,686	[INFO]	336	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:53:10,688	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:53:10,690	[INFO]	338	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:53:11,449	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:53:12,364	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:53:12,367	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:53:16,624	[INFO]	342	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:53:19,698	[INFO]	343	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:53:19,699	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:53:22,928	[INFO]	344	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:53:22,929	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,24 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }
  
--- 14,30 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:53:26,128	[INFO]	345	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:53:26,129	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 19,24 ****
--- 19,27 ----
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return fst.length() >= snd.length() ? fst : snd;
          }
  

2020-12-17 17:53:26,130	[INFO]	346	SUCCESS	+4.0	
2020-12-17 17:53:26,130	[DEBUG]	
2020-12-17 17:53:26,131	[INFO]	347	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:53:27,028	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:53:30,131	[INFO]	349	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:53:31,010	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:53:31,012	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:53:34,155	[INFO]	352	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:53:34,156	[INFO]	353	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:53:34,157	[INFO]	354	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:53:34,158	[DEBUG]	
2020-12-17 17:53:34,158	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:53:34,159	[INFO]	356	SUCCESS	+4.0	
2020-12-17 17:53:34,159	[DEBUG]	
2020-12-17 17:53:34,160	[INFO]	357	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:53:37,325	[INFO]	358	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:53:38,072	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:53:41,179	[INFO]	360	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:53:42,062	[INFO]	361	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:53:42,063	[INFO]	362	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:53:42,064	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:53:42,064	[INFO]	364	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:53:42,065	[DEBUG]	
2020-12-17 17:53:42,065	[INFO]	365	SUCCESS	+4.0	
2020-12-17 17:53:42,065	[DEBUG]	
2020-12-17 17:53:42,066	[INFO]	366	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:53:42,814	[INFO]	367	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:53:43,733	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:53:43,736	[INFO]	369	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '!='})
2020-12-17 17:53:44,483	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:53:45,215	[INFO]	371	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:53:46,099	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:53:46,100	[INFO]	373	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:53:49,424	[INFO]	374	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:53:49,425	[INFO]	375	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:53:49,426	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:53:50,296	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:53:53,539	[INFO]	377	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:53:53,541	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,23 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }
--- 14,29 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:53:56,839	[INFO]	378	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:53:56,840	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,23 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }
--- 13,29 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             
+         } if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:53:57,711	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:54:00,998	[INFO]	380	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:00,999	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 13,23 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             
+         } if (a.isEmpty() || b.isEmpty()) {
              return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:54:01,000	[INFO]	381	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:54:01,001	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 14,20 ****
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
--- 14,23 ----
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
              return "";
!         } if (a.isEmpty() || b.isEmpty()) {
!             return "";
!         }
! else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:54:01,002	[INFO]	382	SUCCESS	+4.0	
2020-12-17 17:54:01,002	[DEBUG]	
2020-12-17 17:54:01,003	[INFO]	383	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:54:01,003	[DEBUG]	
2020-12-17 17:54:01,003	[INFO]	384	SUCCESS	+4.0	
2020-12-17 17:54:01,004	[DEBUG]	
2020-12-17 17:54:01,004	[INFO]	385	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:54:01,005	[INFO]	386	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:01,005	[DEBUG]	
2020-12-17 17:54:01,893	[INFO]	387	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:54:01,895	[INFO]	388	SUCCESS	+4.0	
2020-12-17 17:54:01,895	[DEBUG]	
2020-12-17 17:54:01,896	[INFO]	389	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:54:01,896	[DEBUG]	
2020-12-17 17:54:01,897	[INFO]	390	SUCCESS	+4.0	
2020-12-17 17:54:01,898	[DEBUG]	
2020-12-17 17:54:01,898	[INFO]	391	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:54:02,660	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:54:03,548	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:54:03,549	[INFO]	394	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:06,771	[INFO]	395	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:06,772	[INFO]	396	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:54:07,478	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:54:07,479	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:07,480	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:08,237	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:54:08,240	[INFO]	401	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:54:08,241	[DEBUG]	
2020-12-17 17:54:08,968	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:54:08,971	[INFO]	403	SUCCESS	+4.0	
2020-12-17 17:54:08,972	[DEBUG]	
2020-12-17 17:54:09,897	[INFO]	404	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:54:13,102	[INFO]	405	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:54:14,028	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:54:14,910	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:54:14,912	[INFO]	408	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:54:14,913	[INFO]	409	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:54:15,648	[INFO]	410	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:54:15,652	[INFO]	411	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:54:16,388	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:17,126	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:54:18,018	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:54:18,021	[INFO]	415	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:54:18,022	[DEBUG]	
2020-12-17 17:54:18,023	[INFO]	416	SUCCESS	+4.0	
2020-12-17 17:54:18,024	[DEBUG]	
2020-12-17 17:54:18,025	[INFO]	417	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:54:18,026	[DEBUG]	
2020-12-17 17:54:18,931	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:54:18,934	[INFO]	419	SUCCESS	+4.0	
2020-12-17 17:54:18,935	[DEBUG]	
2020-12-17 17:54:19,828	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:54:19,831	[INFO]	421	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:54:20,760	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:54:21,670	[INFO]	423	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:54:22,399	[INFO]	424	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:54:22,402	[INFO]	425	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:54:23,130	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:54:23,132	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:54:23,132	[INFO]	428	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:54:23,133	[DEBUG]	
2020-12-17 17:54:23,133	[INFO]	429	SUCCESS	+4.0	
2020-12-17 17:54:23,133	[DEBUG]	
2020-12-17 17:54:26,234	[INFO]	430	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:54:27,175	[INFO]	431	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:54:28,064	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0)})
2020-12-17 17:54:28,065	[INFO]	433	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:54:28,065	[DEBUG]	
2020-12-17 17:54:32,239	[INFO]	434	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:54:32,240	[INFO]	435	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:54:32,241	[DEBUG]	
2020-12-17 17:54:32,241	[INFO]	436	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:54:32,241	[DEBUG]	
2020-12-17 17:54:32,242	[INFO]	437	SUCCESS	+4.0	
2020-12-17 17:54:32,242	[DEBUG]	
2020-12-17 17:54:35,199	[INFO]	438	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:38,833	[INFO]	439	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:54:38,833	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:54:42,365	[INFO]	440	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:54:42,366	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,20 ****
--- 13,24 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:54:45,515	[INFO]	441	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:54:45,516	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 13,18 ****
--- 13,21 ----
  public class LONGEST_COMMON_SUBSEQUENCE {
      public static String longest_common_subsequence(String a, String b) {
          if (a.isEmpty() || b.isEmpty()) {
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);

2020-12-17 17:54:45,516	[INFO]	442	SUCCESS	+4.0	
2020-12-17 17:54:45,517	[DEBUG]	
2020-12-17 17:54:45,517	[INFO]	443	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:45,518	[DEBUG]	
2020-12-17 17:54:45,518	[INFO]	444	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:45,519	[INFO]	445	SUCCESS	+4.0	
2020-12-17 17:54:45,519	[DEBUG]	
2020-12-17 17:54:45,520	[INFO]	446	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='})
2020-12-17 17:54:45,520	[DEBUG]	
2020-12-17 17:54:46,260	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'direction': 'before'})
2020-12-17 17:54:46,261	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:46,262	[INFO]	449	SUCCESS	+4.0	
2020-12-17 17:54:46,262	[DEBUG]	
2020-12-17 17:54:49,561	[INFO]	450	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:54:49,562	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:54:50,284	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:54:50,288	[INFO]	453	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:54:50,290	[INFO]	454	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:50,292	[INFO]	455	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:54:50,294	[INFO]	456	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:50,296	[INFO]	457	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:50,297	[DEBUG]	
2020-12-17 17:54:50,298	[INFO]	458	SUCCESS	+4.0	
2020-12-17 17:54:50,299	[DEBUG]	
2020-12-17 17:54:53,499	[INFO]	459	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:54:53,500	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:56,714	[INFO]	461	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '=='})
2020-12-17 17:54:57,469	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'direction': 'before'})
2020-12-17 17:54:57,472	[INFO]	463	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:54:57,473	[INFO]	464	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:54:57,475	[INFO]	465	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:54:58,208	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:54:58,210	[INFO]	467	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:54:58,212	[INFO]	468	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:54:58,213	[INFO]	469	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:54:58,955	[INFO]	470	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:55:02,064	[INFO]	471	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>'})
2020-12-17 17:55:05,377	[INFO]	472	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'direction': 'before'})
2020-12-17 17:55:05,377	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 18,23 ****
--- 18,26 ----
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));
+             if (a.isEmpty() || b.isEmpty()) {
+             return "";
+         }
              String snd = longest_common_subsequence(a.substring(1), b);
              return fst.length() >= snd.length() ? fst : snd;
          }

2020-12-17 17:55:05,378	[INFO]	473	SUCCESS	+4.0	
2020-12-17 17:55:05,378	[DEBUG]	
2020-12-17 17:55:05,379	[INFO]	474	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<'})
2020-12-17 17:55:06,270	[INFO]	475	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:55:07,004	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:55:07,008	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:55:10,260	[INFO]	478	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '!='})
2020-12-17 17:55:13,335	[INFO]	479	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:55:14,066	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2)})
2020-12-17 17:55:18,436	[INFO]	481	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5), 'direction': 'before'})
2020-12-17 17:55:18,437	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String fst = longest_common_subsequence(a, b.substring(1));
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:55:18,438	[INFO]	482	SUCCESS	+4.0	
2020-12-17 17:55:18,438	[DEBUG]	
2020-12-17 17:55:18,439	[INFO]	483	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 8), 'value': '<='})
2020-12-17 17:55:18,440	[INFO]	484	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)})
2020-12-17 17:55:18,440	[DEBUG]	
2020-12-17 17:55:18,441	[INFO]	485	SUCCESS	+4.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:55:18,441	[DEBUG]	
2020-12-17 17:55:18,442	[INFO]	486	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<='})
2020-12-17 17:55:18,443	[INFO]	487	SUCCESS	+4.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='})
2020-12-17 17:55:18,444	[DEBUG]	
2020-12-17 17:55:19,130	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'direction': 'before'})
2020-12-17 17:55:19,132	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1)})
2020-12-17 17:55:19,134	[INFO]	490	SUCCESS	+4.0	
2020-12-17 17:55:19,134	[DEBUG]	
2020-12-17 17:55:22,187	[INFO]	491	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '<'})
2020-12-17 17:55:23,089	[INFO]	492	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:55:23,840	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 0), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4)})
2020-12-17 17:55:24,561	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 2), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 1), 'direction': 'before'})
2020-12-17 17:55:24,563	[INFO]	495	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 3), 'value': '>='})
2020-12-17 17:55:25,456	[INFO]	496	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:55:25,460	[INFO]	497	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 5)})
2020-12-17 17:55:29,013	[INFO]	498	SUCCESS	+4.0	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'})
2020-12-17 17:55:29,014	[DEBUG]	*** before: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
--- after: java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          if (a.isEmpty() || b.isEmpty()) {
              return "";
          } else if (a.charAt(0) == b.charAt(0)) {
+             String snd = longest_common_subsequence(a.substring(1), b);
              return a.charAt(0) + longest_common_subsequence(a.substring(1), b);
          } else {
              String fst = longest_common_subsequence(a, b.substring(1));

2020-12-17 17:55:29,893	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 4), 'ingredient': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LONGEST_COMMON_SUBSEQUENCE.java.xml', 7)})
2020-12-17 17:55:29,895	[INFO]	500	SUCCESS	+4.0	
2020-12-17 17:55:29,896	[DEBUG]	
2020-12-17 17:55:29,896	[INFO]	==== END ====
2020-12-17 17:55:29,896	[INFO]	Reason: step budget
2020-12-17 17:55:29,897	[INFO]	
2020-12-17 17:55:29,898	[INFO]	========== REPORT ==========
2020-12-17 17:55:29,898	[INFO]	==== Epoch 1 ====
2020-12-17 17:55:29,898	[INFO]	Termination: step budget
2020-12-17 17:55:29,898	[INFO]	Number of interations: 500
2020-12-17 17:55:29,898	[INFO]	==== Epoch 2 ====
2020-12-17 17:55:29,898	[INFO]	Termination: step budget
2020-12-17 17:55:29,898	[INFO]	Number of interations: 500
2020-12-17 17:55:29,899	[INFO]	==== Epoch 3 ====
2020-12-17 17:55:29,899	[INFO]	Termination: step budget
2020-12-17 17:55:29,899	[INFO]	Number of interations: 500
2020-12-17 17:55:29,899	[INFO]	==== Epoch 4 ====
2020-12-17 17:55:29,899	[INFO]	Termination: step budget
2020-12-17 17:55:29,899	[INFO]	Number of interations: 500
2020-12-17 17:55:29,899	[INFO]	==== Epoch 5 ====
2020-12-17 17:55:29,900	[INFO]	Termination: step budget
2020-12-17 17:55:29,900	[INFO]	Number of interations: 500
2020-12-17 17:55:29,900	[INFO]	==== Epoch 6 ====
2020-12-17 17:55:29,900	[INFO]	Termination: step budget
2020-12-17 17:55:29,900	[INFO]	Number of interations: 500
2020-12-17 17:55:29,900	[INFO]	==== Epoch 7 ====
2020-12-17 17:55:29,900	[INFO]	Termination: step budget
2020-12-17 17:55:29,900	[INFO]	Number of interations: 500
2020-12-17 17:55:29,901	[INFO]	==== Epoch 8 ====
2020-12-17 17:55:29,901	[INFO]	Termination: step budget
2020-12-17 17:55:29,901	[INFO]	Number of interations: 500
2020-12-17 17:55:29,901	[INFO]	==== Epoch 9 ====
2020-12-17 17:55:29,901	[INFO]	Termination: step budget
2020-12-17 17:55:29,901	[INFO]	Number of interations: 500
2020-12-17 17:55:29,902	[INFO]	==== Epoch 10 ====
2020-12-17 17:55:29,902	[INFO]	Termination: step budget
2020-12-17 17:55:29,902	[INFO]	Number of interations: 500
2020-12-17 17:55:29,902	[INFO]	==== Epoch 11 ====
2020-12-17 17:55:29,902	[INFO]	Termination: step budget
2020-12-17 17:55:29,902	[INFO]	Number of interations: 500
2020-12-17 17:55:29,903	[INFO]	==== Epoch 12 ====
2020-12-17 17:55:29,903	[INFO]	Termination: step budget
2020-12-17 17:55:29,903	[INFO]	Number of interations: 500
2020-12-17 17:55:29,903	[INFO]	==== Epoch 13 ====
2020-12-17 17:55:29,903	[INFO]	Termination: step budget
2020-12-17 17:55:29,903	[INFO]	Number of interations: 500
2020-12-17 17:55:29,903	[INFO]	==== Epoch 14 ====
2020-12-17 17:55:29,904	[INFO]	Termination: step budget
2020-12-17 17:55:29,904	[INFO]	Number of interations: 500
2020-12-17 17:55:29,904	[INFO]	==== Epoch 15 ====
2020-12-17 17:55:29,904	[INFO]	Termination: step budget
2020-12-17 17:55:29,904	[INFO]	Number of interations: 500
2020-12-17 17:55:29,904	[INFO]	==== Epoch 16 ====
2020-12-17 17:55:29,905	[INFO]	Termination: step budget
2020-12-17 17:55:29,905	[INFO]	Number of interations: 500
2020-12-17 17:55:29,905	[INFO]	==== Epoch 17 ====
2020-12-17 17:55:29,905	[INFO]	Termination: step budget
2020-12-17 17:55:29,905	[INFO]	Number of interations: 500
2020-12-17 17:55:29,906	[INFO]	==== Epoch 18 ====
2020-12-17 17:55:29,906	[INFO]	Termination: step budget
2020-12-17 17:55:29,906	[INFO]	Number of interations: 500
2020-12-17 17:55:29,906	[INFO]	==== Epoch 19 ====
2020-12-17 17:55:29,906	[INFO]	Termination: step budget
2020-12-17 17:55:29,906	[INFO]	Number of interations: 500
2020-12-17 17:55:29,907	[INFO]	==== Epoch 20 ====
2020-12-17 17:55:29,907	[INFO]	Termination: step budget
2020-12-17 17:55:29,907	[INFO]	Number of interations: 500
2020-12-17 17:55:29,921	[INFO]	Experiment duration: 11046.66310620308
