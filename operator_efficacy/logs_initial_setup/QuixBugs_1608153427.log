2020-12-16 22:17:07,701	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1608153427
2020-12-16 22:17:07,701	[INFO]	========== EXPERIMENT FOR ['java_programs/KNAPSACK.java.xml']  ==========
2020-12-16 22:17:07,702	[INFO]	modification points:
 ['./decl_stmt[1]', './decl_stmt[2]', './decl_stmt[3]', './for[1]', './for[1]/operator_comp[1]', './for[1]/if[1]', './for[1]/if[1]/operator_comp[1]', './for[1]/if[1]/expr_stmt[1]', './for[1]/if[1]/expr_stmt[2]', './for[1]/for[1]', './for[1]/for[1]/operator_comp[1]', './for[1]/for[1]/if[1]', './for[1]/for[1]/if[1]/operator_comp[1]', './for[1]/for[1]/if[1]/operator_comp[2]', './for[1]/for[1]/if[1]/expr_stmt[1]', './for[1]/for[1]/if[2]', './for[1]/for[1]/if[2]/operator_comp[1]', './for[1]/for[1]/if[2]/expr_stmt[1]', './for[1]/for[1]/expr_stmt[1]', './return[1]']
2020-12-16 22:17:07,702	[INFO]	number of statements and comparisons: 14, 6
2020-12-16 22:17:07,702	[INFO]	========== EPOCH 1 ==========
2020-12-16 22:17:07,702	[INFO]	==== WARMUP ====
2020-12-16 22:17:11,672	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:17:11,672	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:17:15,441	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:17:15,441	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:17:19,403	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:17:19,403	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:17:23,282	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 22:17:23,282	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:17:23,282	[INFO]	==== START ====
2020-12-16 22:17:24,071	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:17:24,073	[INFO]	2	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:17:24,073	[DEBUG]	
2020-12-16 22:17:27,170	[INFO]	3	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:17:30,408	[INFO]	4	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:17:35,088	[INFO]	5	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:17:35,089	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     value = items[i - 1][1];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:17:35,090	[INFO]	6	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:17:35,090	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     value = items[i - 1][1];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:17:39,304	[INFO]	7	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:17:39,305	[INFO]	8	SUCCESS	+6.0	
2020-12-16 22:17:39,305	[DEBUG]	
2020-12-16 22:17:40,299	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:17:41,254	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:17:41,255	[INFO]	11	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:17:41,256	[DEBUG]	
2020-12-16 22:17:41,256	[INFO]	12	SUCCESS	+6.0	
2020-12-16 22:17:41,256	[DEBUG]	
2020-12-16 22:17:45,453	[INFO]	13	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:17:50,146	[INFO]	14	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 22:17:50,147	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:17:50,147	[INFO]	==== END ====
2020-12-16 22:17:50,147	[INFO]	Reason: target fitness reached
2020-12-16 22:17:50,148	[INFO]	
2020-12-16 22:17:50,148	[INFO]	========== EPOCH 2 ==========
2020-12-16 22:17:50,148	[INFO]	==== WARMUP ====
2020-12-16 22:17:55,269	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:17:55,269	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:18:00,533	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:18:00,534	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:18:05,932	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:18:05,932	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:18:11,542	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 22:18:11,542	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:18:11,542	[INFO]	==== START ====
2020-12-16 22:18:11,543	[INFO]	1	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:18:11,544	[DEBUG]	
2020-12-16 22:18:11,545	[INFO]	2	SUCCESS	+6.0	
2020-12-16 22:18:11,545	[DEBUG]	
2020-12-16 22:18:16,025	[INFO]	3	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:18:17,550	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:18:22,272	[INFO]	5	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:18:23,370	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:18:28,307	[INFO]	7	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:18:29,396	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:18:30,555	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:18:31,802	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:18:36,807	[INFO]	11	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:18:36,810	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:18:37,896	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:18:43,662	[INFO]	14	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:18:44,984	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:18:46,276	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:18:50,497	[INFO]	17	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:18:51,357	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:18:52,200	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:18:56,816	[INFO]	20	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:19:01,625	[INFO]	21	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:19:05,917	[INFO]	22	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:19:07,288	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:19:13,615	[INFO]	24	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 22:19:13,616	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:19:17,159	[INFO]	25	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:19:17,160	[INFO]	26	SUCCESS	+6.0	
2020-12-16 22:19:17,160	[DEBUG]	
2020-12-16 22:19:20,788	[INFO]	27	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:19:24,458	[INFO]	28	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:19:25,360	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:19:29,713	[INFO]	30	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:19:29,713	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     weight = items[i - 1][0];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:19:29,714	[INFO]	31	SUCCESS	+6.0	
2020-12-16 22:19:29,714	[DEBUG]	
2020-12-16 22:19:29,715	[INFO]	32	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:19:29,715	[DEBUG]	
2020-12-16 22:19:29,716	[INFO]	33	SUCCESS	+6.0	
2020-12-16 22:19:29,716	[DEBUG]	
2020-12-16 22:19:29,717	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:19:33,767	[INFO]	35	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:19:34,449	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:19:34,450	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:19:34,451	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:19:35,191	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:19:36,071	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:19:36,076	[INFO]	41	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:19:36,081	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:19:40,369	[INFO]	43	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 22:19:40,369	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:19:40,370	[INFO]	==== END ====
2020-12-16 22:19:40,370	[INFO]	Reason: target fitness reached
2020-12-16 22:19:40,370	[INFO]	
2020-12-16 22:19:40,370	[INFO]	========== EPOCH 3 ==========
2020-12-16 22:19:40,371	[INFO]	==== WARMUP ====
2020-12-16 22:19:44,549	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:19:44,549	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:19:48,750	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:19:48,750	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:19:53,089	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:19:53,090	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:19:57,381	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 22:19:57,381	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:19:57,381	[INFO]	==== START ====
2020-12-16 22:20:00,815	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:20:01,650	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:20:05,884	[INFO]	3	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:20:06,713	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:20:11,199	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 22:20:11,917	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:20:12,797	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:20:17,082	[INFO]	8	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:20:20,550	[INFO]	9	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:20:20,551	[INFO]	10	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:20:21,414	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:20:24,992	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:20:25,760	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:20:25,761	[INFO]	14	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:20:26,656	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:20:27,572	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:20:28,492	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:20:28,494	[INFO]	18	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:20:28,495	[DEBUG]	
2020-12-16 22:20:28,496	[INFO]	19	SUCCESS	+6.0	
2020-12-16 22:20:28,497	[DEBUG]	
2020-12-16 22:20:33,008	[INFO]	20	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:20:33,009	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:20:33,859	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:20:34,762	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:20:34,763	[INFO]	23	SUCCESS	+6.0	
2020-12-16 22:20:34,764	[DEBUG]	
2020-12-16 22:20:34,765	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:20:35,936	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:20:37,207	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:20:42,028	[INFO]	27	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:20:42,029	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
--- 25,33 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                 }
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:20:42,739	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:20:42,740	[INFO]	29	SUCCESS	+6.0	
2020-12-16 22:20:42,741	[DEBUG]	
2020-12-16 22:20:42,742	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:20:46,181	[INFO]	31	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:20:49,686	[INFO]	32	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:20:50,484	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:20:54,468	[INFO]	34	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:20:55,267	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:20:56,101	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:20:56,104	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:20:56,876	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:20:57,655	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:20:57,656	[INFO]	40	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:20:57,657	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:20:58,575	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:20:58,576	[INFO]	42	SUCCESS	+6.0	
2020-12-16 22:20:58,576	[DEBUG]	
2020-12-16 22:21:02,989	[INFO]	43	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:21:02,990	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,34 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     if (i - 1 >= 0) {
!                 weight = items[i - 1][0];
!                 value = items[i - 1][1];
!             }
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:21:02,990	[INFO]	44	SUCCESS	+6.0	
2020-12-16 22:21:02,991	[DEBUG]	
2020-12-16 22:21:03,811	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:21:07,388	[INFO]	46	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:21:08,256	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:21:09,134	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:21:09,135	[INFO]	49	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:21:13,480	[INFO]	50	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:21:13,481	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     value = items[i - 1][1];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:21:13,481	[INFO]	51	SUCCESS	+6.0	
2020-12-16 22:21:13,482	[DEBUG]	
2020-12-16 22:21:14,175	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:21:14,177	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:21:15,004	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:21:15,916	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:21:16,787	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:21:16,789	[INFO]	57	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:21:20,330	[INFO]	58	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:21:23,654	[INFO]	59	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:21:23,656	[INFO]	60	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:21:23,656	[DEBUG]	
2020-12-16 22:21:27,510	[INFO]	61	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:21:27,511	[INFO]	62	SUCCESS	+6.0	
2020-12-16 22:21:27,511	[DEBUG]	
2020-12-16 22:21:31,551	[INFO]	63	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:21:32,374	[INFO]	64	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:21:33,090	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:21:37,440	[INFO]	66	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:21:37,441	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 22:21:41,857	[INFO]	67	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:21:41,857	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:21:41,858	[INFO]	68	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:21:41,859	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 22:21:41,859	[INFO]	69	SUCCESS	+6.0	
2020-12-16 22:21:41,860	[DEBUG]	
2020-12-16 22:21:42,662	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:21:42,663	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:21:47,042	[INFO]	72	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:21:47,043	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     weight = items[i - 1][0];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:21:50,277	[INFO]	73	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:21:53,624	[INFO]	74	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:21:53,625	[INFO]	75	SUCCESS	+6.0	
2020-12-16 22:21:53,625	[DEBUG]	
2020-12-16 22:21:56,895	[INFO]	76	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:22:00,968	[INFO]	77	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:22:00,969	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:22:05,241	[INFO]	78	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 22:22:05,242	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,36 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];
                  }
  
--- 24,40 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:22:05,243	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:22:05,244	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:22:06,090	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:22:06,093	[INFO]	81	SUCCESS	+6.0	
2020-12-16 22:22:06,094	[DEBUG]	
2020-12-16 22:22:10,093	[INFO]	82	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:22:14,082	[INFO]	83	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 22:22:14,083	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:22:14,897	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:22:15,781	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:22:15,782	[INFO]	86	SUCCESS	+6.0	
2020-12-16 22:22:15,782	[DEBUG]	
2020-12-16 22:22:16,649	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:22:21,691	[INFO]	88	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:22:21,692	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,38 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:22:22,522	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:22:22,523	[INFO]	90	SUCCESS	+6.0	
2020-12-16 22:22:22,524	[DEBUG]	
2020-12-16 22:22:26,667	[INFO]	91	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:22:27,457	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:22:27,459	[INFO]	93	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:22:31,010	[INFO]	94	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:22:31,835	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:22:31,837	[INFO]	96	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:22:32,713	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:22:37,721	[INFO]	98	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:22:38,387	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:22:39,226	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:22:40,252	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:22:40,253	[INFO]	102	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:22:40,254	[DEBUG]	
2020-12-16 22:22:41,158	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:22:41,159	[INFO]	104	SUCCESS	+6.0	
2020-12-16 22:22:41,160	[DEBUG]	
2020-12-16 22:22:42,031	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:22:45,565	[INFO]	106	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:22:48,889	[INFO]	107	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:22:49,680	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:22:49,681	[INFO]	109	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:22:53,065	[INFO]	110	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:22:56,381	[INFO]	111	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:22:59,720	[INFO]	112	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:23:03,852	[INFO]	113	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:23:03,853	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:23:03,854	[INFO]	114	SUCCESS	+6.0	
2020-12-16 22:23:03,854	[DEBUG]	
2020-12-16 22:23:03,855	[INFO]	115	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:23:03,855	[INFO]	116	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:23:03,856	[DEBUG]	
2020-12-16 22:23:07,888	[INFO]	117	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:23:07,888	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:23:07,889	[INFO]	118	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:23:07,890	[DEBUG]	
2020-12-16 22:23:07,890	[INFO]	119	SUCCESS	+6.0	
2020-12-16 22:23:07,890	[DEBUG]	
2020-12-16 22:23:08,585	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:23:09,452	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:23:10,333	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:23:14,171	[INFO]	123	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:23:17,438	[INFO]	124	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:23:21,624	[INFO]	125	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:23:21,624	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
--- 25,33 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                 }
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:23:25,785	[INFO]	126	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:23:25,786	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,36 ****
--- 25,39 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                 }
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     weight = items[i - 1][0];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:23:29,982	[INFO]	127	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:23:29,983	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     weight = items[i - 1][0];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:23:30,833	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:23:30,834	[INFO]	129	SUCCESS	+6.0	
2020-12-16 22:23:30,834	[DEBUG]	
2020-12-16 22:23:31,568	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:23:34,992	[INFO]	131	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:23:38,365	[INFO]	132	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:23:41,705	[INFO]	133	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:23:45,829	[INFO]	134	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 22:23:46,672	[INFO]	135	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:23:47,588	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:23:48,373	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:23:49,258	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:23:52,861	[INFO]	139	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 22:23:53,766	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:23:53,769	[INFO]	141	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:23:54,693	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:23:54,694	[INFO]	143	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:23:54,695	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:23:55,626	[INFO]	145	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:23:56,404	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:23:57,335	[INFO]	147	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:24:00,929	[INFO]	148	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:24:01,619	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:24:05,034	[INFO]	150	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:24:05,839	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:24:10,016	[INFO]	152	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:24:10,689	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:24:11,558	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:24:11,560	[INFO]	155	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:24:11,560	[DEBUG]	
2020-12-16 22:24:11,561	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:24:14,959	[INFO]	157	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:24:15,749	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:24:20,024	[INFO]	159	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:24:20,024	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:24:23,362	[INFO]	160	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:24:23,364	[INFO]	161	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:24:23,364	[DEBUG]	
2020-12-16 22:24:27,433	[INFO]	162	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:24:28,129	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:24:28,978	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:24:33,208	[INFO]	165	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:24:33,209	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:24:33,210	[INFO]	166	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:24:33,210	[DEBUG]	
2020-12-16 22:24:33,900	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:24:33,901	[INFO]	168	SUCCESS	+6.0	
2020-12-16 22:24:33,901	[DEBUG]	
2020-12-16 22:24:37,369	[INFO]	169	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:24:42,725	[INFO]	170	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:24:42,726	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,62 ----
  
              }
          }
+ 
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 22:24:43,552	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:24:43,553	[INFO]	172	SUCCESS	+6.0	
2020-12-16 22:24:43,553	[DEBUG]	
2020-12-16 22:24:46,887	[INFO]	173	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:24:50,930	[INFO]	174	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:24:54,499	[INFO]	175	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:24:54,500	[INFO]	176	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:24:58,730	[INFO]	177	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:24:59,542	[INFO]	178	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:24:59,544	[INFO]	179	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:25:00,407	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:25:01,163	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:25:05,155	[INFO]	182	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:25:05,156	[INFO]	183	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:25:05,850	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:25:05,853	[INFO]	185	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:25:05,854	[DEBUG]	
2020-12-16 22:25:05,856	[INFO]	186	SUCCESS	+6.0	
2020-12-16 22:25:05,857	[DEBUG]	
2020-12-16 22:25:10,131	[INFO]	187	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:25:13,394	[INFO]	188	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:25:17,402	[INFO]	189	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:25:18,187	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:25:22,382	[INFO]	191	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:25:22,383	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:25:23,190	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:25:26,524	[INFO]	193	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:25:26,525	[INFO]	194	SUCCESS	+6.0	
2020-12-16 22:25:26,526	[DEBUG]	
2020-12-16 22:25:26,526	[INFO]	195	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:25:26,527	[DEBUG]	
2020-12-16 22:25:26,527	[INFO]	196	SUCCESS	+6.0	
2020-12-16 22:25:26,527	[DEBUG]	
2020-12-16 22:25:27,216	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:25:28,068	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:25:28,916	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:25:28,917	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:25:33,322	[INFO]	201	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:25:34,633	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:25:36,218	[INFO]	203	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:25:37,600	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:25:37,602	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:25:43,011	[INFO]	206	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:25:51,563	[INFO]	207	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:25:51,565	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 30,35 ****
--- 30,38 ----
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
                  else {
                      memo[i][j] = memo [i-1][j];
                  }

2020-12-16 22:25:52,752	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:25:52,754	[INFO]	209	SUCCESS	+6.0	
2020-12-16 22:25:52,755	[DEBUG]	
2020-12-16 22:25:54,250	[INFO]	210	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:25:55,695	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:25:55,698	[INFO]	212	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:26:02,155	[INFO]	213	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:26:09,189	[INFO]	214	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:26:18,517	[INFO]	215	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:26:18,520	[INFO]	216	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:26:20,858	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:26:23,093	[INFO]	218	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:26:33,688	[INFO]	219	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:26:33,690	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,36 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:26:36,319	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:26:46,391	[INFO]	221	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:26:46,392	[INFO]	222	SUCCESS	+6.0	
2020-12-16 22:26:46,393	[DEBUG]	
2020-12-16 22:26:46,395	[INFO]	223	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:26:46,398	[INFO]	224	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:26:46,399	[INFO]	225	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:26:46,400	[DEBUG]	
2020-12-16 22:26:53,286	[INFO]	226	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:26:53,288	[INFO]	227	SUCCESS	+6.0	
2020-12-16 22:26:53,288	[DEBUG]	
2020-12-16 22:26:55,130	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:26:56,685	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:26:57,906	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:27:01,768	[INFO]	231	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:27:02,551	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:27:03,410	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:27:04,159	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:27:05,028	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:27:05,742	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:27:10,192	[INFO]	237	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:27:10,193	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:27:10,194	[INFO]	238	SUCCESS	+6.0	
2020-12-16 22:27:10,194	[DEBUG]	
2020-12-16 22:27:10,195	[INFO]	239	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:27:11,022	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:27:15,549	[INFO]	241	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:27:15,550	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:27:16,378	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:27:22,317	[INFO]	243	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:27:22,318	[INFO]	244	SUCCESS	+6.0	
2020-12-16 22:27:22,319	[DEBUG]	
2020-12-16 22:27:23,695	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:27:27,750	[INFO]	246	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:27:28,591	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:27:29,469	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:27:33,033	[INFO]	249	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:27:33,034	[INFO]	250	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:27:33,035	[DEBUG]	
2020-12-16 22:27:34,248	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:27:34,249	[INFO]	252	SUCCESS	+6.0	
2020-12-16 22:27:34,249	[DEBUG]	
2020-12-16 22:27:38,670	[INFO]	253	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:27:39,990	[INFO]	254	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:27:41,286	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:27:45,957	[INFO]	256	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:27:46,965	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:27:48,116	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:27:49,144	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:27:49,149	[INFO]	260	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:27:49,150	[DEBUG]	
2020-12-16 22:27:53,361	[INFO]	261	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:27:54,440	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:27:54,441	[INFO]	263	SUCCESS	+6.0	
2020-12-16 22:27:54,442	[DEBUG]	
2020-12-16 22:27:58,317	[INFO]	264	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:27:58,318	[INFO]	265	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:27:59,336	[INFO]	266	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:28:03,003	[INFO]	267	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:28:03,005	[INFO]	268	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:28:03,852	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:28:04,692	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:28:09,164	[INFO]	271	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:28:10,109	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:28:11,457	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:28:16,281	[INFO]	274	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 22:28:20,134	[INFO]	275	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:28:20,135	[INFO]	276	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:28:21,074	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:28:22,211	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:28:23,137	[INFO]	279	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:28:24,080	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:28:24,859	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:28:25,687	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:28:26,614	[INFO]	283	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:28:26,615	[INFO]	284	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:28:26,615	[DEBUG]	
2020-12-16 22:28:31,969	[INFO]	285	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:28:31,970	[INFO]	286	SUCCESS	+6.0	
2020-12-16 22:28:31,971	[DEBUG]	
2020-12-16 22:28:32,836	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:28:37,508	[INFO]	288	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:28:37,509	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:28:38,574	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:28:38,577	[INFO]	290	SUCCESS	+6.0	
2020-12-16 22:28:38,578	[DEBUG]	
2020-12-16 22:28:40,000	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:28:44,364	[INFO]	292	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:28:44,365	[INFO]	293	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:28:44,366	[INFO]	294	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:28:44,367	[DEBUG]	
2020-12-16 22:28:44,367	[INFO]	295	SUCCESS	+6.0	
2020-12-16 22:28:44,368	[DEBUG]	
2020-12-16 22:28:45,337	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:28:46,265	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:28:46,266	[INFO]	298	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:28:46,267	[INFO]	299	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:28:49,857	[INFO]	300	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:28:50,884	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:28:50,885	[INFO]	302	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:28:54,421	[INFO]	303	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:28:55,260	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:28:59,649	[INFO]	305	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:28:59,650	[INFO]	306	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:28:59,650	[DEBUG]	
2020-12-16 22:29:00,531	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:29:00,532	[INFO]	308	SUCCESS	+6.0	
2020-12-16 22:29:00,533	[DEBUG]	
2020-12-16 22:29:01,324	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:29:06,351	[INFO]	310	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:29:06,352	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:29:06,353	[INFO]	311	SUCCESS	+6.0	
2020-12-16 22:29:06,353	[DEBUG]	
2020-12-16 22:29:11,154	[INFO]	312	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:29:11,155	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];

2020-12-16 22:29:12,124	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:29:12,125	[INFO]	314	SUCCESS	+6.0	
2020-12-16 22:29:12,125	[DEBUG]	
2020-12-16 22:29:13,198	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:29:13,200	[INFO]	316	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:29:14,262	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:29:15,217	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:29:15,219	[INFO]	319	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:29:16,163	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:29:17,074	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:29:17,076	[INFO]	322	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:29:20,709	[INFO]	323	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:29:20,710	[INFO]	324	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:29:21,704	[INFO]	325	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:29:21,706	[INFO]	326	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:29:21,708	[INFO]	327	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:29:21,708	[DEBUG]	
2020-12-16 22:29:21,710	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:29:22,909	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:29:22,910	[INFO]	330	SUCCESS	+6.0	
2020-12-16 22:29:22,911	[DEBUG]	
2020-12-16 22:29:23,796	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:29:24,634	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:29:25,380	[INFO]	333	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:29:26,210	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:29:30,686	[INFO]	335	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:29:30,688	[INFO]	336	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:29:30,688	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:29:34,632	[INFO]	338	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:29:35,470	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:29:39,889	[INFO]	340	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:29:43,659	[INFO]	341	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:29:43,660	[INFO]	342	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:29:48,547	[INFO]	343	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:29:48,548	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 22:29:48,549	[INFO]	344	SUCCESS	+6.0	
2020-12-16 22:29:48,549	[DEBUG]	
2020-12-16 22:29:52,305	[INFO]	345	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:29:52,307	[INFO]	346	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:29:56,230	[INFO]	347	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:30:00,819	[INFO]	348	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:30:01,731	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:30:02,628	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:30:06,619	[INFO]	351	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:30:11,236	[INFO]	352	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:30:11,237	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:30:12,283	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:30:13,131	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:30:14,187	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:30:15,768	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:30:17,576	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:30:22,530	[INFO]	358	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:30:23,433	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:30:23,437	[INFO]	360	SUCCESS	+6.0	
2020-12-16 22:30:23,438	[DEBUG]	
2020-12-16 22:30:28,238	[INFO]	361	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:30:31,629	[INFO]	362	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:30:31,630	[INFO]	363	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:30:32,437	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:30:37,317	[INFO]	365	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 22:30:37,318	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:30:37,318	[INFO]	366	SUCCESS	+6.0	
2020-12-16 22:30:37,319	[DEBUG]	
2020-12-16 22:30:37,320	[INFO]	367	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:30:37,321	[INFO]	368	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:30:37,323	[INFO]	369	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:30:37,324	[INFO]	370	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:30:38,486	[INFO]	371	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:30:43,750	[INFO]	372	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:30:44,622	[INFO]	373	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:30:46,141	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:30:51,088	[INFO]	375	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:30:51,804	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:30:51,808	[INFO]	377	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:30:52,683	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:30:53,748	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:30:58,547	[INFO]	380	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:30:59,374	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:31:00,586	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:31:05,227	[INFO]	383	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:31:08,440	[INFO]	384	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:31:08,442	[INFO]	385	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:31:08,442	[DEBUG]	
2020-12-16 22:31:08,443	[INFO]	386	SUCCESS	+6.0	
2020-12-16 22:31:08,443	[DEBUG]	
2020-12-16 22:31:12,624	[INFO]	387	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:31:13,517	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:31:17,258	[INFO]	389	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:31:18,199	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:31:19,019	[INFO]	391	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:31:23,135	[INFO]	392	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:31:23,136	[INFO]	393	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:31:29,488	[INFO]	394	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:31:30,403	[INFO]	395	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:31:34,436	[INFO]	396	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:31:35,582	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:31:35,584	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:31:40,599	[INFO]	399	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:31:41,603	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:31:42,847	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:31:44,089	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:31:45,214	[INFO]	403	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:31:46,142	[INFO]	404	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:31:50,563	[INFO]	405	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:31:51,496	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:31:55,155	[INFO]	407	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:31:59,253	[INFO]	408	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:31:59,255	[INFO]	409	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:31:59,255	[DEBUG]	
2020-12-16 22:31:59,256	[INFO]	410	SUCCESS	+6.0	
2020-12-16 22:31:59,256	[DEBUG]	
2020-12-16 22:32:00,056	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:32:00,945	[INFO]	412	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:32:05,008	[INFO]	413	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:32:05,009	[INFO]	414	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:32:08,370	[INFO]	415	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:32:13,271	[INFO]	416	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:32:13,272	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 22:32:13,273	[INFO]	417	SUCCESS	+6.0	
2020-12-16 22:32:13,273	[DEBUG]	
2020-12-16 22:32:17,566	[INFO]	418	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:32:22,256	[INFO]	419	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:32:23,163	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:32:23,945	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:32:24,914	[INFO]	422	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:32:25,933	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:32:26,762	[INFO]	424	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:32:26,765	[INFO]	425	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:32:31,065	[INFO]	426	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:32:35,089	[INFO]	427	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:32:39,481	[INFO]	428	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:32:39,482	[INFO]	429	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:32:40,422	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:32:40,425	[INFO]	431	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:32:40,426	[DEBUG]	
2020-12-16 22:32:40,428	[INFO]	432	SUCCESS	+6.0	
2020-12-16 22:32:40,429	[DEBUG]	
2020-12-16 22:32:45,273	[INFO]	433	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:32:45,274	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,37 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:32:45,275	[INFO]	434	SUCCESS	+6.0	
2020-12-16 22:32:45,275	[DEBUG]	
2020-12-16 22:32:45,276	[INFO]	435	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:32:49,094	[INFO]	436	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:32:53,513	[INFO]	437	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:32:53,514	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
--- 25,33 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                 }
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:32:54,283	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:32:54,284	[INFO]	439	SUCCESS	+6.0	
2020-12-16 22:32:54,285	[DEBUG]	
2020-12-16 22:32:54,285	[INFO]	440	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:32:58,511	[INFO]	441	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:33:02,521	[INFO]	442	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:33:02,522	[INFO]	443	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:33:03,375	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:33:04,151	[INFO]	445	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:33:04,152	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:33:05,022	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:33:05,793	[INFO]	448	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:33:06,685	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:33:06,686	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:33:10,288	[INFO]	451	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:33:13,523	[INFO]	452	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:33:16,986	[INFO]	453	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:33:21,269	[INFO]	454	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:33:21,270	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:33:22,042	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:33:22,043	[INFO]	456	SUCCESS	+6.0	
2020-12-16 22:33:22,044	[DEBUG]	
2020-12-16 22:33:22,938	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:33:23,720	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:33:23,723	[INFO]	459	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:33:24,602	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:33:25,482	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:33:30,223	[INFO]	462	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:33:30,224	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:33:30,225	[INFO]	463	SUCCESS	+6.0	
2020-12-16 22:33:30,225	[DEBUG]	
2020-12-16 22:33:34,253	[INFO]	464	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:33:34,948	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:33:35,795	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:33:39,429	[INFO]	467	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:33:40,272	[INFO]	468	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:33:41,178	[INFO]	469	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:33:45,526	[INFO]	470	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:33:45,527	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:33:48,646	[INFO]	471	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:33:49,430	[INFO]	472	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:33:50,277	[INFO]	473	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:33:50,279	[INFO]	474	SUCCESS	+6.0	
2020-12-16 22:33:50,280	[DEBUG]	
2020-12-16 22:33:50,281	[INFO]	475	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:33:51,106	[INFO]	476	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:33:54,443	[INFO]	477	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:33:55,271	[INFO]	478	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:33:56,143	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:33:59,947	[INFO]	480	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:34:00,752	[INFO]	481	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:34:01,582	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:34:04,880	[INFO]	483	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:34:05,699	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:34:09,762	[INFO]	485	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:34:13,728	[INFO]	486	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:34:14,490	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:34:17,783	[INFO]	488	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:34:18,571	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:34:21,910	[INFO]	490	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:34:22,716	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:34:23,551	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:34:24,418	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:34:25,277	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:34:29,615	[INFO]	495	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:34:29,616	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];

2020-12-16 22:34:30,392	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:34:33,789	[INFO]	497	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:34:33,791	[INFO]	498	SUCCESS	+6.0	
2020-12-16 22:34:33,791	[DEBUG]	
2020-12-16 22:34:34,602	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:34:35,451	[INFO]	500	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:34:35,452	[INFO]	==== END ====
2020-12-16 22:34:35,452	[INFO]	Reason: step budget
2020-12-16 22:34:35,453	[INFO]	
2020-12-16 22:34:35,454	[INFO]	========== EPOCH 4 ==========
2020-12-16 22:34:35,454	[INFO]	==== WARMUP ====
2020-12-16 22:34:39,661	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:34:39,661	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:34:43,724	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:34:43,725	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:34:47,709	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:34:47,710	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:34:51,807	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 22:34:51,807	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:34:51,808	[INFO]	==== START ====
2020-12-16 22:34:52,616	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:34:53,420	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:34:57,534	[INFO]	3	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:34:58,343	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:34:59,185	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:34:59,187	[INFO]	6	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:35:00,021	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:35:04,196	[INFO]	8	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:35:07,379	[INFO]	9	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:35:07,380	[INFO]	10	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:35:07,381	[INFO]	11	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:35:07,381	[DEBUG]	
2020-12-16 22:35:10,638	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>='})
2020-12-16 22:35:14,763	[INFO]	13	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:35:14,764	[INFO]	14	SUCCESS	+6.0	
2020-12-16 22:35:14,764	[DEBUG]	
2020-12-16 22:35:18,249	[INFO]	15	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:35:19,056	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:35:19,879	[INFO]	17	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:35:23,932	[INFO]	18	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:35:23,933	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:35:23,933	[INFO]	19	SUCCESS	+6.0	
2020-12-16 22:35:23,934	[DEBUG]	
2020-12-16 22:35:24,739	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:35:28,898	[INFO]	21	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:35:29,682	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:35:33,814	[INFO]	23	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:35:34,470	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:35:34,471	[INFO]	25	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:35:34,471	[DEBUG]	
2020-12-16 22:35:34,472	[INFO]	26	SUCCESS	+6.0	
2020-12-16 22:35:34,472	[DEBUG]	
2020-12-16 22:35:38,658	[INFO]	27	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:35:43,628	[INFO]	28	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:35:43,629	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 22:35:48,565	[INFO]	29	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:35:48,566	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,47 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             for (int j = 0; j != capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 22:35:52,587	[INFO]	30	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:35:52,588	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 16,21 ****
--- 16,41 ----
          int n = items.length;
          int memo[][] = new int[n + 1][capacity + 1];
  
+         for (int i = 0; i > n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j != capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {

2020-12-16 22:35:52,589	[INFO]	31	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:35:52,589	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,47 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             for (int j = 0; j != capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 22:35:52,590	[INFO]	32	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:35:52,591	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,47 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             for (int j = 0; j != capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 22:35:53,399	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:35:53,401	[INFO]	34	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:35:53,401	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 22:35:53,402	[INFO]	35	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:35:53,402	[DEBUG]	
2020-12-16 22:35:53,403	[INFO]	36	SUCCESS	+6.0	
2020-12-16 22:35:53,403	[DEBUG]	
2020-12-16 22:35:53,404	[INFO]	37	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:35:57,322	[INFO]	38	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:35:57,323	[INFO]	39	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:35:57,324	[DEBUG]	
2020-12-16 22:35:57,324	[INFO]	40	SUCCESS	+6.0	
2020-12-16 22:35:57,324	[DEBUG]	
2020-12-16 22:35:58,119	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:36:01,453	[INFO]	42	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:36:05,774	[INFO]	43	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:36:05,775	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,33 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:36:05,775	[INFO]	44	SUCCESS	+6.0	
2020-12-16 22:36:05,776	[DEBUG]	
2020-12-16 22:36:09,780	[INFO]	45	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:36:09,781	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:36:09,782	[INFO]	46	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:36:09,783	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:36:09,783	[INFO]	47	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:36:09,784	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:36:13,011	[INFO]	48	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:36:13,730	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:36:13,733	[INFO]	50	SUCCESS	+6.0	
2020-12-16 22:36:13,734	[DEBUG]	
2020-12-16 22:36:14,479	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:36:18,512	[INFO]	52	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 22:36:18,513	[INFO]	53	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:36:18,513	[DEBUG]	
2020-12-16 22:36:22,282	[INFO]	54	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:36:22,283	[INFO]	55	SUCCESS	+6.0	
2020-12-16 22:36:22,284	[DEBUG]	
2020-12-16 22:36:25,559	[INFO]	56	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 22:36:26,311	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:36:30,071	[INFO]	58	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:36:30,750	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:36:30,752	[INFO]	60	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:36:31,598	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:36:35,688	[INFO]	62	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:36:35,689	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     value = items[i - 1][1];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:36:38,936	[INFO]	63	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:36:38,937	[INFO]	64	SUCCESS	+6.0	
2020-12-16 22:36:38,937	[DEBUG]	
2020-12-16 22:36:42,684	[INFO]	65	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:36:43,469	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:36:44,292	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:36:48,388	[INFO]	68	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:36:48,388	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,36 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:36:48,389	[INFO]	69	SUCCESS	+6.0	
2020-12-16 22:36:48,389	[DEBUG]	
2020-12-16 22:36:49,178	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:36:50,016	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:36:54,296	[INFO]	72	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:36:54,296	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:36:55,054	[INFO]	73	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:36:55,055	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:36:55,056	[INFO]	75	SUCCESS	+6.0	
2020-12-16 22:36:55,056	[DEBUG]	
2020-12-16 22:36:55,872	[INFO]	76	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:36:59,234	[INFO]	77	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:36:59,235	[INFO]	78	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:37:00,014	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:37:00,884	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:37:04,924	[INFO]	81	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:37:04,925	[INFO]	82	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:37:09,831	[INFO]	83	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:37:09,832	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,38 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:37:09,833	[INFO]	84	SUCCESS	+6.0	
2020-12-16 22:37:09,834	[DEBUG]	
2020-12-16 22:37:13,009	[INFO]	85	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:37:16,824	[INFO]	86	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:37:20,666	[INFO]	87	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:37:21,436	[INFO]	88	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:37:21,437	[INFO]	89	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:37:21,437	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:37:21,438	[INFO]	90	SUCCESS	+6.0	
2020-12-16 22:37:21,438	[DEBUG]	
2020-12-16 22:37:22,309	[INFO]	91	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:37:23,186	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:37:24,074	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:37:24,925	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:37:24,926	[INFO]	95	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:37:24,927	[DEBUG]	
2020-12-16 22:37:24,927	[INFO]	96	SUCCESS	+6.0	
2020-12-16 22:37:24,928	[DEBUG]	
2020-12-16 22:37:25,786	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:37:29,972	[INFO]	98	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:37:30,796	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:37:31,647	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:37:34,947	[INFO]	101	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:37:35,621	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:37:35,622	[INFO]	103	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:37:35,623	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:37:36,346	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:37:40,695	[INFO]	106	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:37:40,696	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,37 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:37:41,358	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:37:42,171	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:37:42,173	[INFO]	109	SUCCESS	+6.0	
2020-12-16 22:37:42,173	[DEBUG]	
2020-12-16 22:37:42,986	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:37:43,839	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:37:47,524	[INFO]	112	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:37:50,758	[INFO]	113	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:37:54,515	[INFO]	114	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:37:55,272	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:37:59,583	[INFO]	116	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:37:59,584	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:37:59,585	[INFO]	117	SUCCESS	+6.0	
2020-12-16 22:37:59,586	[DEBUG]	
2020-12-16 22:38:00,378	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:38:01,047	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:38:05,188	[INFO]	120	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:38:05,189	[INFO]	121	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:38:05,189	[DEBUG]	
2020-12-16 22:38:05,972	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:38:06,838	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:38:06,841	[INFO]	124	SUCCESS	+6.0	
2020-12-16 22:38:06,842	[DEBUG]	
2020-12-16 22:38:07,721	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:38:11,953	[INFO]	126	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:38:15,131	[INFO]	127	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:38:15,944	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:38:15,947	[INFO]	129	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:38:15,948	[DEBUG]	
2020-12-16 22:38:15,950	[INFO]	130	SUCCESS	+6.0	
2020-12-16 22:38:15,950	[DEBUG]	
2020-12-16 22:38:15,952	[INFO]	131	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:38:15,953	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:38:16,666	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:38:17,495	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:38:20,838	[INFO]	134	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:38:21,640	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:38:22,466	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:38:22,467	[INFO]	137	SUCCESS	+6.0	
2020-12-16 22:38:22,467	[DEBUG]	
2020-12-16 22:38:23,345	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:38:24,210	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:38:28,472	[INFO]	140	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:38:28,473	[INFO]	141	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:38:29,261	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:38:30,072	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:38:34,080	[INFO]	144	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:38:37,271	[INFO]	145	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:38:38,065	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:38:38,879	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:38:38,880	[INFO]	148	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:38:38,881	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:38:39,745	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:38:43,069	[INFO]	151	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:38:43,888	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:38:47,962	[INFO]	153	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:38:47,963	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:38:47,964	[INFO]	154	SUCCESS	+6.0	
2020-12-16 22:38:47,964	[DEBUG]	
2020-12-16 22:38:48,802	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:38:49,566	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:38:53,610	[INFO]	157	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:38:57,640	[INFO]	158	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 22:39:01,741	[INFO]	159	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 22:39:02,533	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:39:03,355	[INFO]	161	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:39:04,227	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:39:08,355	[INFO]	163	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:39:08,356	[INFO]	164	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:39:08,356	[DEBUG]	
2020-12-16 22:39:08,357	[INFO]	165	SUCCESS	+6.0	
2020-12-16 22:39:08,357	[DEBUG]	
2020-12-16 22:39:11,631	[INFO]	166	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:39:15,662	[INFO]	167	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:39:19,048	[INFO]	168	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:39:19,050	[INFO]	169	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:39:19,050	[DEBUG]	
2020-12-16 22:39:19,051	[INFO]	170	SUCCESS	+6.0	
2020-12-16 22:39:19,051	[DEBUG]	
2020-12-16 22:39:19,052	[INFO]	171	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:39:23,162	[INFO]	172	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:39:23,163	[INFO]	173	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:39:23,819	[INFO]	174	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:39:28,270	[INFO]	175	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:39:29,066	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:39:32,891	[INFO]	177	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:39:37,075	[INFO]	178	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:39:40,191	[INFO]	179	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:39:41,000	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:39:41,829	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:39:42,695	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:39:43,553	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:39:44,358	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:39:45,088	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:39:45,958	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:39:49,326	[INFO]	187	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:39:49,327	[INFO]	188	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:39:50,149	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:39:51,017	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:39:51,887	[INFO]	191	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:39:55,670	[INFO]	192	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:39:56,462	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:39:56,463	[INFO]	194	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:39:57,279	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:39:57,281	[INFO]	196	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:40:00,599	[INFO]	197	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:40:04,800	[INFO]	198	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:40:04,800	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:40:04,801	[INFO]	199	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:40:04,802	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:40:04,802	[INFO]	200	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:40:04,803	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:40:08,952	[INFO]	201	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:40:08,953	[INFO]	202	SUCCESS	+6.0	
2020-12-16 22:40:08,953	[DEBUG]	
2020-12-16 22:40:09,736	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:40:09,737	[INFO]	204	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:40:09,738	[DEBUG]	
2020-12-16 22:40:09,738	[INFO]	205	SUCCESS	+6.0	
2020-12-16 22:40:09,738	[DEBUG]	
2020-12-16 22:40:10,414	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:40:13,779	[INFO]	207	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:40:14,581	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:40:15,418	[INFO]	209	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:40:19,759	[INFO]	210	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:40:20,436	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:40:25,272	[INFO]	212	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:40:25,273	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,53 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 22:40:25,274	[INFO]	213	SUCCESS	+6.0	
2020-12-16 22:40:25,274	[DEBUG]	
2020-12-16 22:40:29,233	[INFO]	214	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:40:33,454	[INFO]	215	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:40:33,455	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:40:37,018	[INFO]	216	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:40:40,869	[INFO]	217	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:40:40,870	[INFO]	218	SUCCESS	+6.0	
2020-12-16 22:40:40,870	[DEBUG]	
2020-12-16 22:40:44,216	[INFO]	219	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:40:48,494	[INFO]	220	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:40:49,284	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:40:50,123	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:40:50,125	[INFO]	223	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:40:50,911	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:40:51,762	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:40:55,848	[INFO]	226	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:40:55,849	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:40:59,136	[INFO]	227	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:40:59,137	[INFO]	228	SUCCESS	+6.0	
2020-12-16 22:40:59,137	[DEBUG]	
2020-12-16 22:40:59,138	[INFO]	229	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:40:59,798	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:40:59,799	[INFO]	231	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:41:00,611	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:41:01,335	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:41:02,199	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:41:05,531	[INFO]	235	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:41:08,831	[INFO]	236	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:41:09,606	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:41:10,433	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:41:11,272	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:41:11,273	[INFO]	240	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:41:11,274	[DEBUG]	
2020-12-16 22:41:11,274	[INFO]	241	SUCCESS	+6.0	
2020-12-16 22:41:11,275	[DEBUG]	
2020-12-16 22:41:14,624	[INFO]	242	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:41:15,425	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:41:16,253	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:41:17,133	[INFO]	245	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:41:17,949	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:41:21,448	[INFO]	247	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:41:22,261	[INFO]	248	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:41:23,105	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:41:23,970	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:41:27,285	[INFO]	251	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:41:27,286	[INFO]	252	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:41:30,603	[INFO]	253	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:41:33,810	[INFO]	254	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:41:33,812	[INFO]	255	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:41:34,593	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:41:37,891	[INFO]	257	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:41:41,509	[INFO]	258	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:41:42,169	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:41:42,977	[INFO]	260	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:41:46,363	[INFO]	261	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:41:46,364	[INFO]	262	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:41:46,365	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:41:50,511	[INFO]	264	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:41:50,512	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
--- 25,33 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                 }
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:41:50,513	[INFO]	265	SUCCESS	+6.0	
2020-12-16 22:41:50,513	[DEBUG]	
2020-12-16 22:41:51,307	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:41:54,732	[INFO]	267	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:41:55,421	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:41:56,166	[INFO]	269	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:41:59,598	[INFO]	270	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:41:59,599	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:42:03,765	[INFO]	272	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:42:03,766	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:42:03,767	[INFO]	273	SUCCESS	+6.0	
2020-12-16 22:42:03,767	[DEBUG]	
2020-12-16 22:42:04,582	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:42:05,459	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:42:06,248	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:42:06,252	[INFO]	277	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:42:07,105	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:42:07,996	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:42:08,877	[INFO]	280	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:42:08,878	[INFO]	281	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:42:08,879	[DEBUG]	
2020-12-16 22:42:08,879	[INFO]	282	SUCCESS	+6.0	
2020-12-16 22:42:08,879	[DEBUG]	
2020-12-16 22:42:09,808	[INFO]	283	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:42:10,707	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:42:11,609	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:42:12,449	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:42:15,739	[INFO]	287	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:42:18,998	[INFO]	288	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:42:22,786	[INFO]	289	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:42:26,835	[INFO]	290	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:42:26,836	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:42:29,989	[INFO]	291	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:42:29,990	[INFO]	292	SUCCESS	+6.0	
2020-12-16 22:42:29,990	[DEBUG]	
2020-12-16 22:42:34,653	[INFO]	293	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:42:34,654	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 22:42:34,655	[INFO]	294	SUCCESS	+6.0	
2020-12-16 22:42:34,655	[DEBUG]	
2020-12-16 22:42:38,365	[INFO]	295	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:42:41,580	[INFO]	296	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:42:42,393	[INFO]	297	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:42:45,938	[INFO]	298	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:42:49,796	[INFO]	299	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:42:49,798	[INFO]	300	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:42:50,626	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:42:54,987	[INFO]	302	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:42:58,109	[INFO]	303	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:42:58,870	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:42:59,603	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:43:04,352	[INFO]	306	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:43:05,116	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:43:05,911	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:43:05,914	[INFO]	309	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:43:06,696	[INFO]	310	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:43:06,698	[INFO]	311	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:43:06,699	[INFO]	312	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:43:06,700	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:43:07,539	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:43:07,541	[INFO]	315	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:43:07,541	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:43:10,818	[INFO]	317	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:43:11,602	[INFO]	318	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:43:15,416	[INFO]	319	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:43:15,418	[INFO]	320	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:43:15,419	[DEBUG]	
2020-12-16 22:43:15,419	[INFO]	321	SUCCESS	+6.0	
2020-12-16 22:43:15,420	[DEBUG]	
2020-12-16 22:43:18,594	[INFO]	322	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:43:21,865	[INFO]	323	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:43:22,687	[INFO]	324	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:43:23,612	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:43:24,508	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:43:27,969	[INFO]	327	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:43:28,665	[INFO]	328	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:43:28,666	[INFO]	329	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:43:29,538	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:43:33,982	[INFO]	331	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:43:38,037	[INFO]	332	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 22:43:38,815	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:43:39,608	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:43:40,440	[INFO]	335	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:43:40,441	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:43:41,304	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:43:44,574	[INFO]	338	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:43:48,613	[INFO]	339	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:43:49,391	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:43:53,448	[INFO]	341	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:43:54,247	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:43:58,354	[INFO]	343	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:43:59,124	[INFO]	344	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:44:02,368	[INFO]	345	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:44:03,172	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:44:07,472	[INFO]	347	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:44:07,474	[INFO]	348	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:44:07,474	[DEBUG]	
2020-12-16 22:44:07,474	[INFO]	349	SUCCESS	+6.0	
2020-12-16 22:44:07,475	[DEBUG]	
2020-12-16 22:44:08,260	[INFO]	350	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:44:11,898	[INFO]	351	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:44:12,591	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:44:13,432	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:44:17,704	[INFO]	354	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:44:20,823	[INFO]	355	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:44:20,824	[INFO]	356	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:44:24,031	[INFO]	357	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:44:24,795	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:44:24,796	[INFO]	359	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:44:24,797	[INFO]	360	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:44:24,798	[INFO]	361	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:44:25,634	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:44:26,360	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:44:31,243	[INFO]	364	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:44:31,244	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 22:44:31,245	[INFO]	365	SUCCESS	+6.0	
2020-12-16 22:44:31,246	[DEBUG]	
2020-12-16 22:44:31,248	[INFO]	366	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:44:31,248	[DEBUG]	
2020-12-16 22:44:31,249	[INFO]	367	SUCCESS	+6.0	
2020-12-16 22:44:31,249	[DEBUG]	
2020-12-16 22:44:32,035	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:44:32,881	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:44:32,882	[INFO]	370	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:44:32,883	[DEBUG]	
2020-12-16 22:44:32,884	[INFO]	371	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:44:32,884	[DEBUG]	
2020-12-16 22:44:32,885	[INFO]	372	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:44:32,885	[DEBUG]	
2020-12-16 22:44:32,886	[INFO]	373	SUCCESS	+6.0	
2020-12-16 22:44:32,886	[DEBUG]	
2020-12-16 22:44:37,925	[INFO]	374	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:44:37,926	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 22:44:41,034	[INFO]	375	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 22:44:41,035	[INFO]	376	SUCCESS	+6.0	
2020-12-16 22:44:41,036	[DEBUG]	
2020-12-16 22:44:41,825	[INFO]	377	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:44:41,826	[INFO]	378	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:44:45,247	[INFO]	379	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:44:49,378	[INFO]	380	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:44:49,380	[INFO]	381	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:44:49,380	[DEBUG]	
2020-12-16 22:44:49,380	[INFO]	382	SUCCESS	+6.0	
2020-12-16 22:44:49,381	[DEBUG]	
2020-12-16 22:44:52,709	[INFO]	383	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:44:53,542	[INFO]	384	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:44:54,450	[INFO]	385	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:44:55,325	[INFO]	386	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:44:59,576	[INFO]	387	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 22:45:02,740	[INFO]	388	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:45:06,647	[INFO]	389	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:45:06,648	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:45:10,363	[INFO]	390	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:45:10,364	[INFO]	391	SUCCESS	+6.0	
2020-12-16 22:45:10,364	[DEBUG]	
2020-12-16 22:45:11,176	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:45:11,177	[INFO]	393	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:45:15,327	[INFO]	394	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:45:15,328	[INFO]	395	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:45:15,329	[DEBUG]	
2020-12-16 22:45:15,329	[INFO]	396	SUCCESS	+6.0	
2020-12-16 22:45:15,330	[DEBUG]	
2020-12-16 22:45:15,331	[INFO]	397	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:45:16,009	[INFO]	398	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:45:16,011	[INFO]	399	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:45:16,011	[DEBUG]	
2020-12-16 22:45:16,012	[INFO]	400	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:45:16,012	[DEBUG]	
2020-12-16 22:45:16,013	[INFO]	401	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:45:19,722	[INFO]	402	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:45:19,723	[INFO]	403	SUCCESS	 7.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:45:19,724	[INFO]	404	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:45:19,725	[DEBUG]	
2020-12-16 22:45:19,725	[INFO]	405	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:45:19,726	[DEBUG]	
2020-12-16 22:45:19,726	[INFO]	406	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:45:19,726	[DEBUG]	
2020-12-16 22:45:20,520	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:45:20,521	[INFO]	408	SUCCESS	+6.0	
2020-12-16 22:45:20,521	[DEBUG]	
2020-12-16 22:45:20,522	[INFO]	409	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:45:24,422	[INFO]	410	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:45:24,423	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:45:24,424	[INFO]	411	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:45:24,424	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:45:28,358	[INFO]	412	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:45:31,681	[INFO]	413	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:45:35,080	[INFO]	414	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:45:39,579	[INFO]	415	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:45:39,580	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,33 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 24,34 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:45:39,581	[INFO]	416	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:45:39,581	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,33 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 24,34 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:45:39,582	[INFO]	417	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:45:39,582	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:45:39,583	[INFO]	418	SUCCESS	+6.0	
2020-12-16 22:45:39,583	[DEBUG]	
2020-12-16 22:45:40,364	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:45:40,367	[INFO]	420	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:45:41,034	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:45:41,035	[INFO]	422	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:45:41,830	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:45:41,831	[INFO]	424	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:45:41,832	[INFO]	425	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:45:42,671	[INFO]	426	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:45:42,674	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:45:46,796	[INFO]	428	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:45:47,456	[INFO]	429	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:45:51,956	[INFO]	430	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:45:55,882	[INFO]	431	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:45:59,084	[INFO]	432	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:45:59,085	[INFO]	433	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:45:59,890	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:46:03,885	[INFO]	435	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:46:04,640	[INFO]	436	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:46:09,449	[INFO]	437	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:46:09,450	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,53 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 22:46:09,450	[INFO]	438	SUCCESS	+6.0	
2020-12-16 22:46:09,451	[DEBUG]	
2020-12-16 22:46:10,265	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:46:14,605	[INFO]	440	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:46:14,606	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:46:14,607	[INFO]	441	SUCCESS	+6.0	
2020-12-16 22:46:14,607	[DEBUG]	
2020-12-16 22:46:15,256	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:46:19,320	[INFO]	443	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:46:19,321	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:46:19,322	[INFO]	444	SUCCESS	+6.0	
2020-12-16 22:46:19,322	[DEBUG]	
2020-12-16 22:46:19,323	[INFO]	445	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:46:19,324	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:46:19,324	[INFO]	446	SUCCESS	+6.0	
2020-12-16 22:46:19,324	[DEBUG]	
2020-12-16 22:46:23,500	[INFO]	447	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 22:46:24,270	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:46:24,271	[INFO]	449	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:46:25,046	[INFO]	450	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:46:25,047	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:46:25,861	[INFO]	452	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:46:26,691	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:46:30,034	[INFO]	454	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:46:30,722	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:46:31,563	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:46:32,398	[INFO]	457	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:46:32,400	[INFO]	458	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:46:36,231	[INFO]	459	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:46:37,034	[INFO]	460	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:46:41,034	[INFO]	461	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:46:41,035	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:46:41,036	[INFO]	462	SUCCESS	+6.0	
2020-12-16 22:46:41,036	[DEBUG]	
2020-12-16 22:46:41,037	[INFO]	463	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:46:41,038	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:46:41,039	[INFO]	465	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:46:41,039	[DEBUG]	
2020-12-16 22:46:41,821	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:46:41,824	[INFO]	467	SUCCESS	+6.0	
2020-12-16 22:46:41,825	[DEBUG]	
2020-12-16 22:46:45,134	[INFO]	468	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:46:45,136	[INFO]	469	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:46:45,136	[DEBUG]	
2020-12-16 22:46:45,938	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:46:45,940	[INFO]	471	SUCCESS	+6.0	
2020-12-16 22:46:45,940	[DEBUG]	
2020-12-16 22:46:46,774	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:46:47,598	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:46:47,600	[INFO]	474	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:46:47,600	[DEBUG]	
2020-12-16 22:46:47,601	[INFO]	475	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:46:47,601	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:46:51,060	[INFO]	476	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:46:51,745	[INFO]	477	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:46:52,454	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:46:52,455	[INFO]	479	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:46:52,456	[DEBUG]	
2020-12-16 22:46:52,456	[INFO]	480	SUCCESS	+6.0	
2020-12-16 22:46:52,456	[DEBUG]	
2020-12-16 22:46:52,457	[INFO]	481	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:46:52,458	[INFO]	482	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:46:53,342	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:46:57,253	[INFO]	484	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:46:57,255	[INFO]	485	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:46:57,973	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:46:57,976	[INFO]	487	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:46:57,978	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:46:58,859	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:47:02,144	[INFO]	490	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:47:06,211	[INFO]	491	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:47:06,874	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:47:07,539	[INFO]	493	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:47:08,356	[INFO]	494	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:47:12,558	[INFO]	495	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 22:47:12,559	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:47:12,559	[INFO]	==== END ====
2020-12-16 22:47:12,559	[INFO]	Reason: target fitness reached
2020-12-16 22:47:12,560	[INFO]	
2020-12-16 22:47:12,560	[INFO]	========== EPOCH 5 ==========
2020-12-16 22:47:12,561	[INFO]	==== WARMUP ====
2020-12-16 22:47:16,575	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:47:16,575	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:20,488	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:47:20,488	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:24,497	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:47:24,497	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:28,613	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 22:47:28,613	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:28,613	[INFO]	==== START ====
2020-12-16 22:47:29,369	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:47:30,247	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:47:34,531	[INFO]	3	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:47:34,532	[INFO]	4	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:47:34,533	[DEBUG]	
2020-12-16 22:47:34,533	[INFO]	5	SUCCESS	+6.0	
2020-12-16 22:47:34,534	[DEBUG]	
2020-12-16 22:47:38,749	[INFO]	6	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 22:47:38,749	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:47:38,750	[INFO]	==== END ====
2020-12-16 22:47:38,750	[INFO]	Reason: target fitness reached
2020-12-16 22:47:38,750	[INFO]	
2020-12-16 22:47:38,750	[INFO]	========== EPOCH 6 ==========
2020-12-16 22:47:38,751	[INFO]	==== WARMUP ====
2020-12-16 22:47:42,867	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:47:42,867	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:46,863	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:47:46,864	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:50,826	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 22:47:50,826	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:54,902	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 22:47:54,903	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 22:47:54,903	[INFO]	==== START ====
2020-12-16 22:47:58,524	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:47:58,526	[INFO]	2	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:47:58,526	[DEBUG]	
2020-12-16 22:47:59,332	[INFO]	3	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:48:00,161	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:48:00,162	[INFO]	5	SUCCESS	+6.0	
2020-12-16 22:48:00,162	[DEBUG]	
2020-12-16 22:48:04,347	[INFO]	6	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:48:05,148	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:48:09,277	[INFO]	8	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:48:09,277	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                  }
                  else {
                      memo[i][j] = memo [i-1][j];
+                     memo[i][j] = memo [i-1][j];
                  }
  
              }

2020-12-16 22:48:09,278	[INFO]	9	SUCCESS	+6.0	
2020-12-16 22:48:09,278	[DEBUG]	
2020-12-16 22:48:10,060	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:48:14,122	[INFO]	11	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:48:14,123	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,36 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:48:14,124	[INFO]	12	SUCCESS	+6.0	
2020-12-16 22:48:14,124	[DEBUG]	
2020-12-16 22:48:17,500	[INFO]	13	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:48:21,038	[INFO]	14	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:48:21,039	[INFO]	15	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:48:21,039	[DEBUG]	
2020-12-16 22:48:24,356	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:48:24,357	[INFO]	17	SUCCESS	+6.0	
2020-12-16 22:48:24,357	[DEBUG]	
2020-12-16 22:48:25,164	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:48:25,876	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:48:29,092	[INFO]	20	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:48:29,094	[INFO]	21	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:48:29,094	[DEBUG]	
2020-12-16 22:48:29,094	[INFO]	22	SUCCESS	+6.0	
2020-12-16 22:48:29,095	[DEBUG]	
2020-12-16 22:48:29,767	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:48:33,977	[INFO]	24	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:48:33,978	[INFO]	25	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:48:33,979	[DEBUG]	
2020-12-16 22:48:34,759	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:48:38,922	[INFO]	27	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:48:38,923	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:48:39,588	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:48:39,591	[INFO]	29	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:48:39,592	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:48:39,594	[INFO]	30	SUCCESS	+6.0	
2020-12-16 22:48:39,595	[DEBUG]	
2020-12-16 22:48:43,525	[INFO]	31	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:48:44,294	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:48:48,292	[INFO]	33	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:48:49,039	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:48:49,805	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:48:50,698	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:48:51,428	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:48:52,287	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:48:56,264	[INFO]	39	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:49:00,529	[INFO]	40	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 22:49:00,529	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:49:00,530	[INFO]	41	SUCCESS	+6.0	
2020-12-16 22:49:00,531	[DEBUG]	
2020-12-16 22:49:01,334	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:49:01,337	[INFO]	43	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:49:01,337	[DEBUG]	
2020-12-16 22:49:02,205	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:49:02,206	[INFO]	45	SUCCESS	+6.0	
2020-12-16 22:49:02,207	[DEBUG]	
2020-12-16 22:49:05,961	[INFO]	46	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:49:06,751	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:49:07,577	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:49:11,641	[INFO]	49	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:49:12,433	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:49:15,734	[INFO]	51	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:49:18,998	[INFO]	52	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:49:22,198	[INFO]	53	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:49:22,989	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:49:23,813	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:49:24,648	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:49:24,650	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:49:24,651	[INFO]	58	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:49:24,651	[DEBUG]	
2020-12-16 22:49:24,652	[INFO]	59	SUCCESS	+6.0	
2020-12-16 22:49:24,653	[DEBUG]	
2020-12-16 22:49:25,467	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:49:26,310	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:49:29,636	[INFO]	62	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:49:29,637	[INFO]	63	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:49:29,638	[DEBUG]	
2020-12-16 22:49:30,449	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:49:30,451	[INFO]	65	SUCCESS	+6.0	
2020-12-16 22:49:30,453	[DEBUG]	
2020-12-16 22:49:31,294	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:49:32,041	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:49:32,044	[INFO]	68	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:49:32,045	[DEBUG]	
2020-12-16 22:49:36,269	[INFO]	69	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:49:36,271	[INFO]	70	SUCCESS	+6.0	
2020-12-16 22:49:36,272	[DEBUG]	
2020-12-16 22:49:37,060	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:49:40,920	[INFO]	72	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:49:41,725	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:49:42,565	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:49:46,259	[INFO]	75	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:49:47,056	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:49:47,885	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:49:51,955	[INFO]	78	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:49:52,718	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:49:53,368	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:49:54,195	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:49:54,197	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:49:57,459	[INFO]	83	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:50:01,455	[INFO]	84	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:50:01,457	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 22:50:02,133	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:50:02,134	[INFO]	86	SUCCESS	+6.0	
2020-12-16 22:50:02,135	[DEBUG]	
2020-12-16 22:50:02,135	[INFO]	87	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:50:02,136	[DEBUG]	
2020-12-16 22:50:02,136	[INFO]	88	SUCCESS	+6.0	
2020-12-16 22:50:02,136	[DEBUG]	
2020-12-16 22:50:02,950	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:50:03,766	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:50:04,624	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:50:05,367	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:50:09,495	[INFO]	93	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:50:09,496	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:50:09,497	[INFO]	94	SUCCESS	+6.0	
2020-12-16 22:50:09,497	[DEBUG]	
2020-12-16 22:50:10,293	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:50:13,500	[INFO]	96	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:50:16,870	[INFO]	97	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:50:20,715	[INFO]	98	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:50:20,716	[INFO]	99	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:50:21,582	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:50:24,997	[INFO]	101	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:50:28,364	[INFO]	102	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:50:32,451	[INFO]	103	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:50:33,195	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:50:34,009	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:50:34,867	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:50:35,846	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:50:36,986	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:50:41,753	[INFO]	109	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:50:41,755	[INFO]	110	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:50:41,755	[INFO]	111	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:50:41,756	[DEBUG]	
2020-12-16 22:50:42,748	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:50:42,751	[INFO]	113	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:50:43,751	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:50:44,665	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:50:44,666	[INFO]	116	SUCCESS	+6.0	
2020-12-16 22:50:44,667	[DEBUG]	
2020-12-16 22:50:45,789	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:50:46,806	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:50:46,808	[INFO]	119	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:50:51,121	[INFO]	120	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:50:51,122	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:50:51,124	[INFO]	121	SUCCESS	+6.0	
2020-12-16 22:50:51,124	[DEBUG]	
2020-12-16 22:50:54,657	[INFO]	122	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:50:55,479	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:50:58,913	[INFO]	124	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:50:59,725	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:51:03,192	[INFO]	126	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:51:03,998	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:51:08,431	[INFO]	128	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:51:08,434	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];

2020-12-16 22:51:11,637	[INFO]	129	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:51:11,638	[INFO]	130	SUCCESS	+6.0	
2020-12-16 22:51:11,638	[DEBUG]	
2020-12-16 22:51:12,458	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:51:15,655	[INFO]	132	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:51:18,863	[INFO]	133	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:51:19,628	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:51:22,919	[INFO]	135	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:51:22,921	[INFO]	136	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:51:23,568	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:51:24,395	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:51:24,399	[INFO]	139	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:51:25,099	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:51:25,833	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:51:29,895	[INFO]	142	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:51:30,708	[INFO]	143	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:51:34,653	[INFO]	144	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:51:34,654	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:51:34,655	[INFO]	145	SUCCESS	+6.0	
2020-12-16 22:51:34,655	[DEBUG]	
2020-12-16 22:51:38,790	[INFO]	146	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:51:38,791	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     memo[i][j] = 0;
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 22:51:39,573	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:51:39,575	[INFO]	148	SUCCESS	+6.0	
2020-12-16 22:51:39,575	[DEBUG]	
2020-12-16 22:51:40,412	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:51:41,300	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:51:46,545	[INFO]	151	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:51:46,547	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,62 ----
  
              }
          }
+ 
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 22:51:46,548	[INFO]	152	SUCCESS	+6.0	
2020-12-16 22:51:46,549	[DEBUG]	
2020-12-16 22:51:49,763	[INFO]	153	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:51:49,764	[INFO]	154	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:51:53,514	[INFO]	155	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:51:57,454	[INFO]	156	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:51:57,455	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,34 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     if (i - 1 >= 0) {
!                 weight = items[i - 1][0];
!                 value = items[i - 1][1];
!             }
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:52:00,707	[INFO]	157	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:52:01,554	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:52:01,555	[INFO]	159	SUCCESS	+6.0	
2020-12-16 22:52:01,556	[DEBUG]	
2020-12-16 22:52:06,203	[INFO]	160	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:52:06,960	[INFO]	161	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:52:10,180	[INFO]	162	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:52:10,965	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:52:11,782	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:52:15,047	[INFO]	165	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:52:15,818	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:52:16,532	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:52:17,376	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:52:21,690	[INFO]	169	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 22:52:21,690	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:52:21,691	[INFO]	170	SUCCESS	+6.0	
2020-12-16 22:52:21,692	[DEBUG]	
2020-12-16 22:52:25,761	[INFO]	171	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:52:26,439	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:52:27,326	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:52:27,327	[INFO]	174	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:52:27,327	[DEBUG]	
2020-12-16 22:52:28,064	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:52:28,065	[INFO]	176	SUCCESS	+6.0	
2020-12-16 22:52:28,066	[DEBUG]	
2020-12-16 22:52:28,066	[INFO]	177	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:52:32,309	[INFO]	178	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:52:32,310	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:52:36,322	[INFO]	179	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:52:36,323	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,29 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:52:36,324	[INFO]	180	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:52:36,325	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:52:37,097	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:52:40,286	[INFO]	182	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 22:52:44,286	[INFO]	183	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:52:44,287	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,31 ****
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 20,35 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:52:48,234	[INFO]	184	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:52:48,235	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:52:48,983	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:52:48,985	[INFO]	186	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:52:48,985	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,31 ****
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 20,35 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:52:48,986	[INFO]	187	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:52:48,986	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 22:52:48,987	[INFO]	188	SUCCESS	+6.0	
2020-12-16 22:52:48,987	[DEBUG]	
2020-12-16 22:52:49,787	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:52:50,760	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:52:51,621	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:52:52,476	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:52:56,504	[INFO]	193	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:52:56,506	[INFO]	194	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 22:52:56,506	[DEBUG]	
2020-12-16 22:53:00,763	[INFO]	195	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:53:00,764	[INFO]	196	SUCCESS	+6.0	
2020-12-16 22:53:00,765	[DEBUG]	
2020-12-16 22:53:05,436	[INFO]	197	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:53:09,686	[INFO]	198	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:53:13,790	[INFO]	199	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:53:16,891	[INFO]	200	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 22:53:16,892	[INFO]	201	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:53:17,685	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:53:17,688	[INFO]	203	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:53:17,690	[INFO]	204	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:53:17,691	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:53:17,693	[INFO]	205	SUCCESS	+6.0	
2020-12-16 22:53:17,693	[DEBUG]	
2020-12-16 22:53:17,695	[INFO]	206	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 22:53:17,696	[DEBUG]	
2020-12-16 22:53:22,686	[INFO]	207	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:53:26,574	[INFO]	208	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 22:53:26,575	[INFO]	209	SUCCESS	+6.0	
2020-12-16 22:53:26,575	[DEBUG]	
2020-12-16 22:53:30,643	[INFO]	210	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 22:53:30,644	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:53:30,645	[INFO]	211	SUCCESS	+6.0	
2020-12-16 22:53:30,645	[DEBUG]	
2020-12-16 22:53:33,852	[INFO]	212	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:53:34,629	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:53:37,933	[INFO]	214	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:53:38,710	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:53:42,035	[INFO]	216	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:53:42,037	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:53:42,895	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:53:46,321	[INFO]	219	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:53:47,167	[INFO]	220	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:53:47,170	[INFO]	221	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:53:47,926	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:53:51,888	[INFO]	223	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:53:55,542	[INFO]	224	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 22:53:56,325	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:53:56,327	[INFO]	226	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:53:59,652	[INFO]	227	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:54:03,625	[INFO]	228	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:54:03,626	[INFO]	229	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:54:06,798	[INFO]	230	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:54:07,571	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:54:11,505	[INFO]	232	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:54:11,506	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     memo[i][j] = 0;
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:54:15,049	[INFO]	233	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:54:15,847	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:54:19,197	[INFO]	235	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:54:20,000	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:54:20,805	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:54:20,807	[INFO]	238	SUCCESS	+6.0	
2020-12-16 22:54:20,808	[DEBUG]	
2020-12-16 22:54:21,640	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:54:22,503	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:54:23,399	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:54:27,846	[INFO]	242	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:54:27,847	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
+                 value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {

2020-12-16 22:54:27,847	[INFO]	243	SUCCESS	+6.0	
2020-12-16 22:54:27,848	[DEBUG]	
2020-12-16 22:54:28,629	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:54:32,068	[INFO]	245	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:54:32,900	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:54:33,747	[INFO]	247	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:54:34,610	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:54:35,472	[INFO]	249	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:54:36,292	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:54:37,112	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:54:40,870	[INFO]	252	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:54:44,050	[INFO]	253	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:54:48,092	[INFO]	254	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:54:48,093	[INFO]	255	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:54:48,093	[DEBUG]	
2020-12-16 22:54:48,094	[INFO]	256	SUCCESS	+6.0	
2020-12-16 22:54:48,094	[DEBUG]	
2020-12-16 22:54:48,095	[INFO]	257	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:54:48,863	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:54:52,777	[INFO]	259	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:54:56,018	[INFO]	260	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:54:59,302	[INFO]	261	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:54:59,304	[INFO]	262	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:55:02,823	[INFO]	263	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:55:06,886	[INFO]	264	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:55:10,648	[INFO]	265	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:55:11,450	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:55:12,205	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:55:15,709	[INFO]	268	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 22:55:15,711	[INFO]	269	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:55:16,530	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:55:19,843	[INFO]	271	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:55:23,762	[INFO]	272	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:55:23,763	[INFO]	273	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:55:27,837	[INFO]	274	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:55:27,838	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 22:55:28,527	[INFO]	275	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:55:28,530	[INFO]	276	SUCCESS	+6.0	
2020-12-16 22:55:28,531	[DEBUG]	
2020-12-16 22:55:32,275	[INFO]	277	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:55:33,077	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:55:37,282	[INFO]	279	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:55:37,284	[INFO]	280	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:55:37,284	[DEBUG]	
2020-12-16 22:55:40,457	[INFO]	281	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:55:40,458	[INFO]	282	SUCCESS	+6.0	
2020-12-16 22:55:40,459	[DEBUG]	
2020-12-16 22:55:43,719	[INFO]	283	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:55:44,549	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:55:45,420	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:55:46,230	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:55:50,532	[INFO]	287	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:55:54,796	[INFO]	288	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:55:54,797	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:55:54,797	[INFO]	289	SUCCESS	+6.0	
2020-12-16 22:55:54,798	[DEBUG]	
2020-12-16 22:55:58,848	[INFO]	290	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:55:59,668	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:56:00,471	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:56:04,429	[INFO]	293	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:56:04,429	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:56:04,430	[INFO]	294	SUCCESS	+6.0	
2020-12-16 22:56:04,430	[DEBUG]	
2020-12-16 22:56:04,431	[INFO]	295	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:56:04,432	[INFO]	296	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:56:04,432	[DEBUG]	
2020-12-16 22:56:04,433	[INFO]	297	SUCCESS	+6.0	
2020-12-16 22:56:04,433	[DEBUG]	
2020-12-16 22:56:04,434	[INFO]	298	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:56:05,242	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:56:08,637	[INFO]	300	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 22:56:11,846	[INFO]	301	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 22:56:11,848	[INFO]	302	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:56:11,849	[INFO]	303	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:56:11,849	[DEBUG]	
2020-12-16 22:56:16,396	[INFO]	304	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:56:16,397	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 22:56:20,951	[INFO]	305	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 22:56:20,952	[INFO]	306	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:56:20,953	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 22:56:20,954	[INFO]	307	SUCCESS	+6.0	
2020-12-16 22:56:20,954	[DEBUG]	
2020-12-16 22:56:24,737	[INFO]	308	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 22:56:24,738	[INFO]	309	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 22:56:24,739	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:56:24,739	[INFO]	310	SUCCESS	+6.0	
2020-12-16 22:56:24,740	[DEBUG]	
2020-12-16 22:56:24,740	[INFO]	311	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:56:28,072	[INFO]	312	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 22:56:28,073	[INFO]	313	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 22:56:28,915	[INFO]	314	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:56:33,341	[INFO]	315	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:56:33,342	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:56:33,343	[INFO]	316	SUCCESS	+6.0	
2020-12-16 22:56:33,343	[DEBUG]	
2020-12-16 22:56:36,665	[INFO]	317	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:56:36,666	[INFO]	318	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:56:36,666	[DEBUG]	
2020-12-16 22:56:36,667	[INFO]	319	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:56:36,667	[DEBUG]	
2020-12-16 22:56:36,668	[INFO]	320	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 22:56:36,668	[DEBUG]	
2020-12-16 22:56:36,669	[INFO]	321	SUCCESS	+6.0	
2020-12-16 22:56:36,669	[DEBUG]	
2020-12-16 22:56:37,477	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 22:56:38,213	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:56:38,217	[INFO]	324	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:56:39,043	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:56:39,046	[INFO]	326	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:56:39,046	[DEBUG]	
2020-12-16 22:56:39,048	[INFO]	327	SUCCESS	+6.0	
2020-12-16 22:56:39,048	[DEBUG]	
2020-12-16 22:56:39,050	[INFO]	328	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:56:39,828	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:56:43,922	[INFO]	330	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:56:43,924	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     memo[i][j] = 0;
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:56:43,925	[INFO]	331	SUCCESS	+6.0	
2020-12-16 22:56:43,926	[DEBUG]	
2020-12-16 22:56:43,927	[INFO]	332	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:56:43,927	[DEBUG]	
2020-12-16 22:56:44,718	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:56:44,720	[INFO]	334	SUCCESS	+6.0	
2020-12-16 22:56:44,721	[DEBUG]	
2020-12-16 22:56:45,513	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:56:45,515	[INFO]	336	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:56:46,219	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:56:47,066	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:56:50,361	[INFO]	339	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:56:51,130	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:56:51,957	[INFO]	341	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:56:51,958	[INFO]	342	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:56:51,958	[DEBUG]	
2020-12-16 22:56:51,959	[INFO]	343	SUCCESS	+6.0	
2020-12-16 22:56:51,959	[DEBUG]	
2020-12-16 22:56:55,298	[INFO]	344	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:56:58,557	[INFO]	345	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:56:59,346	[INFO]	346	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:57:00,071	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:57:00,073	[INFO]	348	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:57:00,073	[DEBUG]	
2020-12-16 22:57:04,177	[INFO]	349	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 22:57:04,178	[INFO]	350	SUCCESS	+6.0	
2020-12-16 22:57:04,178	[DEBUG]	
2020-12-16 22:57:07,377	[INFO]	351	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 22:57:07,379	[INFO]	352	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:57:10,739	[INFO]	353	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:57:10,740	[INFO]	354	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:57:11,477	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:57:15,500	[INFO]	356	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:57:20,032	[INFO]	357	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:57:24,013	[INFO]	358	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:57:24,014	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:57:28,092	[INFO]	359	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:57:28,093	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,36 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];
                  }
  
--- 25,37 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     weight = items[i - 1][0];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 22:57:28,973	[INFO]	360	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:57:29,791	[INFO]	361	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:57:29,792	[INFO]	362	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:57:29,792	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:57:33,155	[INFO]	363	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:57:33,939	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:57:33,940	[INFO]	365	SUCCESS	+6.0	
2020-12-16 22:57:33,941	[DEBUG]	
2020-12-16 22:57:38,211	[INFO]	366	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 22:57:38,212	[INFO]	367	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 22:57:38,970	[INFO]	368	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:57:38,972	[INFO]	369	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:57:38,972	[DEBUG]	
2020-12-16 22:57:38,973	[INFO]	370	SUCCESS	+6.0	
2020-12-16 22:57:38,973	[DEBUG]	
2020-12-16 22:57:42,214	[INFO]	371	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 22:57:42,875	[INFO]	372	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:57:46,160	[INFO]	373	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:57:46,969	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:57:47,847	[INFO]	375	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:57:52,160	[INFO]	376	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:57:52,161	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:57:52,162	[INFO]	377	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 22:57:52,162	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:57:52,163	[INFO]	378	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 22:57:52,164	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:57:52,165	[INFO]	379	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:57:52,166	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:57:52,167	[INFO]	380	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:57:52,167	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:57:52,168	[INFO]	381	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:57:52,169	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:57:52,848	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:57:56,274	[INFO]	383	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:57:57,106	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:57:57,110	[INFO]	385	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:57:57,111	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:57:57,113	[INFO]	386	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:57:57,114	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:58:00,699	[INFO]	387	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>='})
2020-12-16 22:58:00,700	[INFO]	388	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:58:00,701	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:58:00,702	[INFO]	389	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:58:00,702	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:58:00,703	[INFO]	390	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:58:00,703	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:58:00,704	[INFO]	391	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:58:00,705	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:58:04,138	[INFO]	392	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 22:58:04,141	[INFO]	393	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:58:04,141	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 22:58:04,142	[INFO]	394	SUCCESS	+6.0	
2020-12-16 22:58:04,142	[DEBUG]	
2020-12-16 22:58:04,143	[INFO]	395	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:58:04,144	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 22:58:07,965	[INFO]	396	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:58:08,626	[INFO]	397	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:58:09,402	[INFO]	398	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:58:10,325	[INFO]	399	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:58:13,687	[INFO]	400	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:58:13,688	[INFO]	401	SUCCESS	+6.0	
2020-12-16 22:58:13,688	[DEBUG]	
2020-12-16 22:58:14,481	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:58:14,483	[INFO]	403	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:58:14,484	[INFO]	404	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:58:18,688	[INFO]	405	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:58:18,689	[INFO]	406	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:58:19,374	[INFO]	407	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 22:58:20,191	[INFO]	408	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:58:24,074	[INFO]	409	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 22:58:24,852	[INFO]	410	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:58:25,641	[INFO]	411	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:58:25,643	[INFO]	412	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:58:25,643	[INFO]	413	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:58:29,488	[INFO]	414	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:58:29,489	[INFO]	415	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 22:58:29,490	[DEBUG]	
2020-12-16 22:58:29,490	[INFO]	416	SUCCESS	+6.0	
2020-12-16 22:58:29,490	[DEBUG]	
2020-12-16 22:58:29,491	[INFO]	417	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:58:29,492	[DEBUG]	
2020-12-16 22:58:29,492	[INFO]	418	SUCCESS	+6.0	
2020-12-16 22:58:29,493	[DEBUG]	
2020-12-16 22:58:30,565	[INFO]	419	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:58:30,569	[INFO]	420	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:58:30,570	[DEBUG]	
2020-12-16 22:58:30,571	[INFO]	421	SUCCESS	+6.0	
2020-12-16 22:58:30,572	[DEBUG]	
2020-12-16 22:58:30,574	[INFO]	422	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:58:31,790	[INFO]	423	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 22:58:32,964	[INFO]	424	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:58:34,282	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:58:34,285	[INFO]	426	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:58:34,286	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:58:34,288	[INFO]	428	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 22:58:34,289	[INFO]	429	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:58:34,290	[INFO]	430	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 22:58:35,349	[INFO]	431	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:58:39,470	[INFO]	432	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:58:40,306	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:58:41,175	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:58:42,027	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:58:45,308	[INFO]	436	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:58:48,619	[INFO]	437	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:58:52,545	[INFO]	438	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 22:58:53,325	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 22:58:57,452	[INFO]	440	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 22:58:57,453	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,30 ****
--- 25,34 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 22:58:57,454	[INFO]	441	SUCCESS	+6.0	
2020-12-16 22:58:57,454	[DEBUG]	
2020-12-16 22:58:58,124	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 22:58:58,125	[INFO]	443	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:58:58,891	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:58:58,892	[INFO]	445	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 22:58:58,892	[DEBUG]	
2020-12-16 22:58:58,893	[INFO]	446	SUCCESS	+6.0	
2020-12-16 22:58:58,893	[DEBUG]	
2020-12-16 22:58:58,894	[INFO]	447	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:59:02,187	[INFO]	448	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 22:59:02,965	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:59:06,318	[INFO]	450	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 22:59:07,123	[INFO]	451	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:59:10,528	[INFO]	452	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 22:59:11,331	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 22:59:15,625	[INFO]	454	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 22:59:16,439	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:59:19,935	[INFO]	456	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 22:59:23,330	[INFO]	457	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:59:24,107	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 22:59:24,108	[INFO]	459	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:59:28,076	[INFO]	460	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:59:28,871	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:59:33,009	[INFO]	462	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 22:59:33,010	[INFO]	463	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 22:59:33,680	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 22:59:34,436	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 22:59:35,243	[INFO]	466	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 22:59:36,086	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:59:36,845	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 22:59:36,848	[INFO]	469	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:59:36,849	[DEBUG]	
2020-12-16 22:59:36,850	[INFO]	470	SUCCESS	+6.0	
2020-12-16 22:59:36,850	[DEBUG]	
2020-12-16 22:59:36,853	[INFO]	471	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 22:59:36,853	[DEBUG]	
2020-12-16 22:59:36,854	[INFO]	472	SUCCESS	+6.0	
2020-12-16 22:59:36,855	[DEBUG]	
2020-12-16 22:59:37,699	[INFO]	473	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 22:59:37,700	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 22:59:37,701	[INFO]	475	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:59:38,567	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 22:59:41,846	[INFO]	477	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 22:59:45,146	[INFO]	478	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 22:59:45,945	[INFO]	479	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 22:59:46,823	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 22:59:47,656	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 22:59:51,453	[INFO]	482	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 22:59:52,262	[INFO]	483	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 22:59:53,140	[INFO]	484	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 22:59:53,142	[INFO]	485	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 22:59:54,020	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 22:59:57,475	[INFO]	487	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:00:01,489	[INFO]	488	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:00:05,473	[INFO]	489	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:00:05,474	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:00:05,475	[INFO]	490	SUCCESS	+6.0	
2020-12-16 23:00:05,475	[DEBUG]	
2020-12-16 23:00:06,224	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:00:06,225	[INFO]	492	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:00:06,226	[DEBUG]	
2020-12-16 23:00:06,226	[INFO]	493	SUCCESS	+6.0	
2020-12-16 23:00:06,227	[DEBUG]	
2020-12-16 23:00:07,044	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:00:07,911	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:00:12,263	[INFO]	496	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:00:12,264	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:00:13,057	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:00:13,854	[INFO]	498	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:00:13,855	[INFO]	499	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:00:13,855	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:00:14,706	[INFO]	500	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:00:14,706	[INFO]	==== END ====
2020-12-16 23:00:14,706	[INFO]	Reason: step budget
2020-12-16 23:00:14,708	[INFO]	
2020-12-16 23:00:14,708	[INFO]	========== EPOCH 7 ==========
2020-12-16 23:00:14,708	[INFO]	==== WARMUP ====
2020-12-16 23:00:18,972	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:00:18,972	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:00:22,985	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:00:22,985	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:00:26,967	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:00:26,967	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:00:31,050	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:00:31,050	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:00:31,051	[INFO]	==== START ====
2020-12-16 23:00:34,411	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>='})
2020-12-16 23:00:38,981	[INFO]	2	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:00:39,914	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:00:43,436	[INFO]	4	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:00:44,323	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:00:48,081	[INFO]	6	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:00:48,890	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:00:52,973	[INFO]	8	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:00:56,571	[INFO]	9	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:00:57,346	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:00:57,347	[INFO]	11	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:00:57,347	[DEBUG]	
2020-12-16 23:01:01,472	[INFO]	12	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:01:04,767	[INFO]	13	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:01:08,693	[INFO]	14	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:01:08,694	[INFO]	15	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:01:08,695	[INFO]	16	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:01:08,696	[DEBUG]	
2020-12-16 23:01:08,696	[INFO]	17	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:01:08,696	[DEBUG]	
2020-12-16 23:01:08,697	[INFO]	18	SUCCESS	+6.0	
2020-12-16 23:01:08,697	[DEBUG]	
2020-12-16 23:01:09,523	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:01:12,834	[INFO]	20	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:01:13,639	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:01:14,462	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:01:15,238	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:01:16,087	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:01:16,088	[INFO]	25	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:01:17,000	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:01:17,003	[INFO]	27	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:01:21,469	[INFO]	28	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:01:21,470	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:01:21,471	[INFO]	29	SUCCESS	+6.0	
2020-12-16 23:01:21,471	[DEBUG]	
2020-12-16 23:01:22,253	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:01:23,088	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:01:23,089	[INFO]	32	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:01:23,090	[DEBUG]	
2020-12-16 23:01:23,941	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:01:23,942	[INFO]	34	SUCCESS	+6.0	
2020-12-16 23:01:23,942	[DEBUG]	
2020-12-16 23:01:27,959	[INFO]	35	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:01:31,784	[INFO]	36	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:01:35,725	[INFO]	37	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:01:35,726	[INFO]	38	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:01:36,493	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:01:37,296	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:01:38,127	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:01:38,129	[INFO]	42	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:01:38,130	[INFO]	43	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:01:38,987	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:01:43,227	[INFO]	45	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:01:44,028	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:01:44,925	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:01:44,926	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:01:44,927	[INFO]	49	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:01:44,928	[INFO]	50	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:01:45,814	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:01:46,754	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:01:46,758	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:01:50,820	[INFO]	54	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:01:50,821	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:01:50,822	[INFO]	55	SUCCESS	+6.0	
2020-12-16 23:01:50,822	[DEBUG]	
2020-12-16 23:01:51,618	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:01:51,622	[INFO]	57	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:01:51,623	[DEBUG]	
2020-12-16 23:01:52,429	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:01:52,430	[INFO]	59	SUCCESS	+6.0	
2020-12-16 23:01:52,431	[DEBUG]	
2020-12-16 23:01:55,775	[INFO]	60	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:01:55,776	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:01:59,150	[INFO]	62	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:02:02,516	[INFO]	63	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:02:06,600	[INFO]	64	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:02:07,414	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:02:11,463	[INFO]	66	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:02:12,143	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:02:15,372	[INFO]	68	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:02:19,168	[INFO]	69	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:02:19,936	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:02:20,795	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:02:20,796	[INFO]	72	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:02:24,914	[INFO]	73	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:02:24,915	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     weight = items[i - 1][0];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:02:24,916	[INFO]	74	SUCCESS	+6.0	
2020-12-16 23:02:24,916	[DEBUG]	
2020-12-16 23:02:28,931	[INFO]	75	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:02:32,500	[INFO]	76	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:02:32,501	[INFO]	77	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:02:35,637	[INFO]	78	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 23:02:36,312	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:02:37,201	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:02:38,106	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:02:38,108	[INFO]	82	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:02:42,359	[INFO]	83	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:02:42,360	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,26 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
+             }
              }
              for (int j = 0; j <= capacity; j++)
              {

2020-12-16 23:02:42,361	[INFO]	84	SUCCESS	+6.0	
2020-12-16 23:02:42,361	[DEBUG]	
2020-12-16 23:02:42,362	[INFO]	85	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:02:45,648	[INFO]	86	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:02:46,492	[INFO]	87	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:02:46,495	[INFO]	88	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:02:46,495	[DEBUG]	
2020-12-16 23:02:47,367	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:02:50,714	[INFO]	90	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:02:50,715	[INFO]	91	SUCCESS	+6.0	
2020-12-16 23:02:50,715	[DEBUG]	
2020-12-16 23:02:50,716	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:02:53,928	[INFO]	93	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:02:57,222	[INFO]	94	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:03:00,474	[INFO]	95	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:03:01,259	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:03:02,270	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:03:05,666	[INFO]	98	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:03:06,461	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:03:10,563	[INFO]	100	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:03:10,564	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:03:11,255	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:03:12,058	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:03:16,090	[INFO]	103	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:03:16,861	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:03:16,863	[INFO]	105	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:03:16,863	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:03:21,130	[INFO]	106	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:03:21,130	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,26 ****
--- 19,29 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
+             }
+                 weight = items[i - 1][0];
              }
              for (int j = 0; j <= capacity; j++)
              {

2020-12-16 23:03:21,131	[INFO]	107	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:03:21,132	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:03:21,945	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:03:22,785	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:03:26,278	[INFO]	110	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:03:27,117	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:03:30,569	[INFO]	112	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:03:31,359	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:03:31,362	[INFO]	114	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:03:31,364	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:03:34,635	[INFO]	115	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:03:35,442	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:03:39,542	[INFO]	117	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:03:39,543	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,26 ****
--- 19,29 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
+             }
+                 
              }
              for (int j = 0; j <= capacity; j++)
              {

2020-12-16 23:03:40,319	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:03:44,395	[INFO]	119	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:03:49,458	[INFO]	120	SUCCESS	 9.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:03:50,246	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:03:54,149	[INFO]	122	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:03:54,942	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:03:55,764	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:03:55,765	[INFO]	125	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:03:55,766	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:03:55,766	[INFO]	126	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:03:55,767	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:03:55,768	[INFO]	127	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:03:55,768	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:03:55,769	[INFO]	128	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:03:55,770	[INFO]	129	SUCCESS	+6.0	
2020-12-16 23:03:55,770	[DEBUG]	
2020-12-16 23:03:59,058	[INFO]	130	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:03:59,881	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:04:00,752	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:04:00,755	[INFO]	133	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:04:00,756	[DEBUG]	
2020-12-16 23:04:00,757	[INFO]	134	SUCCESS	+6.0	
2020-12-16 23:04:00,757	[DEBUG]	
2020-12-16 23:04:01,674	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:04:01,677	[INFO]	136	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:04:05,955	[INFO]	137	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:04:09,233	[INFO]	138	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:04:09,931	[INFO]	139	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:04:13,787	[INFO]	140	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:04:13,790	[INFO]	141	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:04:14,462	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:04:17,795	[INFO]	143	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:04:17,796	[INFO]	144	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:04:18,611	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:04:22,844	[INFO]	146	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:04:22,845	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:04:22,846	[INFO]	147	SUCCESS	+6.0	
2020-12-16 23:04:22,846	[DEBUG]	
2020-12-16 23:04:22,847	[INFO]	148	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:04:22,847	[DEBUG]	
2020-12-16 23:04:26,799	[INFO]	149	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:04:26,800	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:04:27,604	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:04:30,864	[INFO]	151	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:04:30,865	[INFO]	152	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:04:30,865	[DEBUG]	
2020-12-16 23:04:30,865	[INFO]	153	SUCCESS	+6.0	
2020-12-16 23:04:30,866	[DEBUG]	
2020-12-16 23:04:31,687	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:04:34,994	[INFO]	155	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:04:35,800	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:04:39,904	[INFO]	157	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:04:40,717	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:04:45,113	[INFO]	159	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:04:45,114	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:04:45,783	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:04:45,786	[INFO]	161	SUCCESS	+6.0	
2020-12-16 23:04:45,787	[DEBUG]	
2020-12-16 23:04:46,497	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:04:47,224	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:04:50,624	[INFO]	164	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:04:55,221	[INFO]	165	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:04:56,005	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:04:56,817	[INFO]	167	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:05:00,044	[INFO]	168	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 23:05:00,046	[INFO]	169	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:05:00,835	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:05:05,088	[INFO]	171	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:05:05,089	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                  }
                  else {
                      memo[i][j] = memo [i-1][j];
+                     memo[i][j] = memo [i-1][j];
                  }
  
              }

2020-12-16 23:05:05,090	[INFO]	172	SUCCESS	+6.0	
2020-12-16 23:05:05,090	[DEBUG]	
2020-12-16 23:05:05,091	[INFO]	173	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:05:05,091	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:05:05,774	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:05:05,777	[INFO]	175	SUCCESS	+6.0	
2020-12-16 23:05:05,778	[DEBUG]	
2020-12-16 23:05:09,712	[INFO]	176	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:05:10,477	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:05:11,161	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:05:11,983	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:05:12,818	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:05:16,934	[INFO]	181	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:05:17,677	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:05:18,447	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:05:22,652	[INFO]	184	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:05:22,653	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,25 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 value = items[i - 1][1];
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 23:05:22,654	[INFO]	185	SUCCESS	+6.0	
2020-12-16 23:05:22,654	[DEBUG]	
2020-12-16 23:05:23,476	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:05:28,412	[INFO]	187	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:05:28,413	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,53 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:05:28,415	[INFO]	188	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:05:28,415	[INFO]	189	SUCCESS	+6.0	
2020-12-16 23:05:28,416	[DEBUG]	
2020-12-16 23:05:28,416	[INFO]	190	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:05:28,417	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:05:28,417	[INFO]	191	SUCCESS	+6.0	
2020-12-16 23:05:28,418	[DEBUG]	
2020-12-16 23:05:29,182	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:05:30,044	[INFO]	193	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:05:30,982	[INFO]	194	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:05:34,897	[INFO]	195	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:05:35,681	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:05:36,485	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:05:37,299	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:05:37,300	[INFO]	199	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:05:37,301	[DEBUG]	
2020-12-16 23:05:38,009	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:05:38,010	[INFO]	201	SUCCESS	+6.0	
2020-12-16 23:05:38,011	[DEBUG]	
2020-12-16 23:05:38,869	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:05:39,599	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:05:42,886	[INFO]	204	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:05:46,082	[INFO]	205	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 23:05:46,866	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:05:50,911	[INFO]	207	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:05:51,653	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:05:55,602	[INFO]	209	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:05:59,611	[INFO]	210	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:05:59,612	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];

2020-12-16 23:05:59,613	[INFO]	211	SUCCESS	+6.0	
2020-12-16 23:05:59,613	[DEBUG]	
2020-12-16 23:06:00,401	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:06:04,627	[INFO]	213	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:06:04,628	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:06:08,140	[INFO]	214	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:06:08,141	[INFO]	215	SUCCESS	+6.0	
2020-12-16 23:06:08,141	[DEBUG]	
2020-12-16 23:06:08,142	[INFO]	216	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:06:08,999	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:06:13,391	[INFO]	218	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:06:13,392	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:06:14,183	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:06:18,243	[INFO]	220	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:06:18,244	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,29 ****
--- 20,33 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:06:18,245	[INFO]	221	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:06:18,246	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:06:18,247	[INFO]	222	SUCCESS	+6.0	
2020-12-16 23:06:18,247	[DEBUG]	
2020-12-16 23:06:21,796	[INFO]	223	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:06:22,968	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:06:26,729	[INFO]	225	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:06:27,759	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:06:28,728	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:06:28,730	[INFO]	228	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:06:28,730	[DEBUG]	
2020-12-16 23:06:28,731	[INFO]	229	SUCCESS	+6.0	
2020-12-16 23:06:28,731	[DEBUG]	
2020-12-16 23:06:29,660	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:06:29,661	[INFO]	231	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:06:30,484	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:06:33,946	[INFO]	233	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:06:33,947	[INFO]	234	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:06:33,948	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:06:33,949	[INFO]	235	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:06:33,949	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:06:33,950	[INFO]	236	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:06:33,950	[DEBUG]	
2020-12-16 23:06:33,951	[INFO]	237	SUCCESS	+6.0	
2020-12-16 23:06:33,951	[DEBUG]	
2020-12-16 23:06:37,863	[INFO]	238	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:06:38,646	[INFO]	239	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:06:41,813	[INFO]	240	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:06:42,467	[INFO]	241	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:06:42,469	[INFO]	242	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:06:42,470	[DEBUG]	
2020-12-16 23:06:42,471	[INFO]	243	SUCCESS	+6.0	
2020-12-16 23:06:42,471	[DEBUG]	
2020-12-16 23:06:45,718	[INFO]	244	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 23:06:45,719	[INFO]	245	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:06:45,720	[DEBUG]	
2020-12-16 23:06:46,526	[INFO]	246	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:06:46,529	[INFO]	247	SUCCESS	+6.0	
2020-12-16 23:06:46,530	[DEBUG]	
2020-12-16 23:06:50,615	[INFO]	248	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:06:50,616	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 23:06:51,287	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:06:51,288	[INFO]	250	SUCCESS	+6.0	
2020-12-16 23:06:51,289	[DEBUG]	
2020-12-16 23:06:55,036	[INFO]	251	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:06:55,038	[INFO]	252	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:06:55,038	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:06:58,267	[INFO]	253	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:07:01,728	[INFO]	254	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:07:01,730	[INFO]	255	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:07:01,730	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:07:05,180	[INFO]	256	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:07:05,181	[INFO]	257	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:07:05,182	[DEBUG]	
2020-12-16 23:07:05,182	[INFO]	258	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:07:05,183	[DEBUG]	
2020-12-16 23:07:05,183	[INFO]	259	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:07:05,184	[DEBUG]	
2020-12-16 23:07:05,184	[INFO]	260	SUCCESS	+6.0	
2020-12-16 23:07:05,184	[DEBUG]	
2020-12-16 23:07:06,029	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:07:06,771	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:07:10,584	[INFO]	263	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:07:14,747	[INFO]	264	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:07:14,748	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:07:14,748	[INFO]	==== END ====
2020-12-16 23:07:14,748	[INFO]	Reason: target fitness reached
2020-12-16 23:07:14,749	[INFO]	
2020-12-16 23:07:14,749	[INFO]	========== EPOCH 8 ==========
2020-12-16 23:07:14,749	[INFO]	==== WARMUP ====
2020-12-16 23:07:18,786	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:07:18,786	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:07:22,866	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:07:22,866	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:07:26,797	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:07:26,798	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:07:30,971	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:07:30,971	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:07:30,972	[INFO]	==== START ====
2020-12-16 23:07:35,005	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:07:39,011	[INFO]	2	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:07:39,821	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:07:40,632	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:07:41,490	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:07:42,247	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:07:45,616	[INFO]	7	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:07:49,752	[INFO]	8	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:07:54,136	[INFO]	9	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:07:58,313	[INFO]	10	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:08:01,530	[INFO]	11	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:08:02,304	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:08:02,305	[INFO]	13	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:08:02,306	[DEBUG]	
2020-12-16 23:08:05,698	[INFO]	14	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:08:06,460	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:08:07,264	[INFO]	16	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:08:08,128	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:08:08,983	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:08:09,721	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:08:13,085	[INFO]	20	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:08:13,086	[INFO]	21	SUCCESS	+6.0	
2020-12-16 23:08:13,086	[DEBUG]	
2020-12-16 23:08:16,401	[INFO]	22	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:08:17,194	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:08:21,421	[INFO]	24	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:08:21,422	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:08:21,422	[INFO]	==== END ====
2020-12-16 23:08:21,422	[INFO]	Reason: target fitness reached
2020-12-16 23:08:21,423	[INFO]	
2020-12-16 23:08:21,423	[INFO]	========== EPOCH 9 ==========
2020-12-16 23:08:21,423	[INFO]	==== WARMUP ====
2020-12-16 23:08:25,478	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:08:25,478	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:08:29,770	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:08:29,770	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:08:34,020	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:08:34,020	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:08:38,335	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:08:38,336	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:08:38,336	[INFO]	==== START ====
2020-12-16 23:08:42,460	[INFO]	1	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:08:42,462	[INFO]	2	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:08:42,462	[DEBUG]	
2020-12-16 23:08:42,463	[INFO]	3	SUCCESS	+6.0	
2020-12-16 23:08:42,463	[DEBUG]	
2020-12-16 23:08:43,245	[INFO]	4	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:08:47,439	[INFO]	5	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:08:47,440	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,32 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:08:47,441	[INFO]	6	SUCCESS	+6.0	
2020-12-16 23:08:47,441	[DEBUG]	
2020-12-16 23:08:48,237	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:08:49,050	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:08:49,901	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:08:50,749	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:08:54,049	[INFO]	11	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:08:58,839	[INFO]	12	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:08:58,840	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 18,23 ****
--- 18,36 ----
  
          for (int i = 0; i <= n ; i++)
          {
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];

2020-12-16 23:08:58,841	[INFO]	13	SUCCESS	+6.0	
2020-12-16 23:08:58,841	[DEBUG]	
2020-12-16 23:08:59,575	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:09:03,651	[INFO]	15	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:09:06,923	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:09:07,624	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:09:08,500	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:09:11,933	[INFO]	19	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:09:12,603	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:09:13,490	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:09:14,379	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:09:18,544	[INFO]	23	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:09:19,328	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:09:20,179	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:09:20,182	[INFO]	26	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:09:20,183	[DEBUG]	
2020-12-16 23:09:20,185	[INFO]	27	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:09:20,185	[DEBUG]	
2020-12-16 23:09:20,187	[INFO]	28	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:09:20,188	[DEBUG]	
2020-12-16 23:09:24,285	[INFO]	29	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 23:09:25,074	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:09:25,768	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:09:29,758	[INFO]	32	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:09:29,759	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:09:30,596	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:09:30,597	[INFO]	34	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:09:30,597	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:09:30,598	[INFO]	35	SUCCESS	+6.0	
2020-12-16 23:09:30,598	[DEBUG]	
2020-12-16 23:09:31,441	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:09:32,276	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:09:36,551	[INFO]	38	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:09:36,551	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:09:36,552	[INFO]	39	SUCCESS	+6.0	
2020-12-16 23:09:36,552	[DEBUG]	
2020-12-16 23:09:40,189	[INFO]	40	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:09:43,375	[INFO]	41	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:09:44,048	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:09:44,901	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:09:44,902	[INFO]	44	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:09:44,903	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:09:45,790	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:09:46,625	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:09:46,627	[INFO]	48	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:09:46,627	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:09:46,628	[INFO]	49	SUCCESS	+6.0	
2020-12-16 23:09:46,629	[DEBUG]	
2020-12-16 23:09:50,338	[INFO]	50	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:09:53,741	[INFO]	51	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:09:54,558	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:09:58,434	[INFO]	53	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:10:02,545	[INFO]	54	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:10:02,546	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 32,37 ****
--- 32,38 ----
                  }
                  else {
                      memo[i][j] = memo [i-1][j];
+                     memo[i][j] = memo [i-1][j];
                  }
  
              }

2020-12-16 23:10:02,547	[INFO]	55	SUCCESS	+6.0	
2020-12-16 23:10:02,547	[DEBUG]	
2020-12-16 23:10:06,555	[INFO]	56	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:10:06,555	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:10:06,556	[INFO]	==== END ====
2020-12-16 23:10:06,556	[INFO]	Reason: target fitness reached
2020-12-16 23:10:06,557	[INFO]	
2020-12-16 23:10:06,557	[INFO]	========== EPOCH 10 ==========
2020-12-16 23:10:06,557	[INFO]	==== WARMUP ====
2020-12-16 23:10:10,465	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:10:10,465	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:10:14,542	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:10:14,543	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:10:18,542	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:10:18,543	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:10:22,645	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:10:22,646	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:10:22,646	[INFO]	==== START ====
2020-12-16 23:10:25,791	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:10:29,118	[INFO]	2	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:10:29,119	[INFO]	3	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:10:29,120	[DEBUG]	
2020-12-16 23:10:33,468	[INFO]	4	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:10:33,469	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:10:37,808	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:10:42,275	[INFO]	6	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:10:42,277	[INFO]	7	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:10:42,278	[DEBUG]	
2020-12-16 23:10:42,279	[INFO]	8	SUCCESS	+6.0	
2020-12-16 23:10:42,279	[DEBUG]	
2020-12-16 23:10:43,384	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:10:47,924	[INFO]	10	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:10:51,966	[INFO]	11	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:10:52,747	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:10:53,426	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:10:54,262	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:10:57,576	[INFO]	15	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:10:58,247	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:11:02,283	[INFO]	17	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:11:03,051	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:11:06,380	[INFO]	19	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:11:06,382	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:11:10,377	[INFO]	21	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:11:10,379	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:11:11,170	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:11:14,595	[INFO]	24	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:11:14,597	[INFO]	25	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:11:14,597	[INFO]	26	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:11:15,420	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:11:16,328	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:11:16,331	[INFO]	29	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:11:16,334	[INFO]	30	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:11:20,689	[INFO]	31	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:11:20,690	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:11:20,691	[INFO]	32	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:11:20,691	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:11:20,692	[INFO]	33	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:11:21,454	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:11:22,177	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:11:26,184	[INFO]	36	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:11:26,186	[INFO]	37	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:11:26,186	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:11:27,009	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:11:27,010	[INFO]	39	SUCCESS	+6.0	
2020-12-16 23:11:27,011	[DEBUG]	
2020-12-16 23:11:27,824	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:11:28,675	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:11:28,678	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:11:32,026	[INFO]	43	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:11:32,027	[INFO]	44	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:11:32,028	[DEBUG]	
2020-12-16 23:11:36,196	[INFO]	45	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:11:36,196	[INFO]	46	SUCCESS	+6.0	
2020-12-16 23:11:36,197	[DEBUG]	
2020-12-16 23:11:36,198	[INFO]	47	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:11:36,198	[DEBUG]	
2020-12-16 23:11:36,888	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:11:36,891	[INFO]	49	SUCCESS	+6.0	
2020-12-16 23:11:36,892	[DEBUG]	
2020-12-16 23:11:40,093	[INFO]	50	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:11:40,918	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:11:41,634	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:11:44,932	[INFO]	53	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:11:45,724	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:11:46,440	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:11:47,271	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:11:48,126	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:11:48,127	[INFO]	58	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:11:48,127	[DEBUG]	
2020-12-16 23:11:48,128	[INFO]	59	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:11:48,129	[INFO]	60	SUCCESS	+6.0	
2020-12-16 23:11:48,129	[DEBUG]	
2020-12-16 23:11:48,950	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:11:49,665	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:11:53,040	[INFO]	63	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:11:56,924	[INFO]	64	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:12:01,061	[INFO]	65	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:12:01,062	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 23:12:01,063	[INFO]	66	SUCCESS	+6.0	
2020-12-16 23:12:01,063	[DEBUG]	
2020-12-16 23:12:01,901	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:12:02,746	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:12:05,989	[INFO]	69	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:12:06,789	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:12:07,589	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:12:07,591	[INFO]	72	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:12:07,591	[DEBUG]	
2020-12-16 23:12:11,797	[INFO]	73	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:12:11,798	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:12:12,592	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:12:12,595	[INFO]	75	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:12:12,595	[DEBUG]	
2020-12-16 23:12:13,372	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:12:16,652	[INFO]	77	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>='})
2020-12-16 23:12:16,653	[INFO]	78	SUCCESS	+6.0	
2020-12-16 23:12:16,653	[DEBUG]	
2020-12-16 23:12:16,654	[INFO]	79	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:12:16,654	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:12:20,053	[INFO]	80	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:12:20,054	[INFO]	81	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:12:20,055	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:12:24,231	[INFO]	82	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:12:24,232	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,30 ****
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 20,31 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:12:24,234	[INFO]	83	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:12:24,234	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,30 ****
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 20,31 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:12:24,235	[INFO]	84	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:12:24,236	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,30 ****
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 20,31 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:12:24,236	[INFO]	85	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:12:24,237	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,30 ****
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 20,31 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:12:28,252	[INFO]	86	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:12:28,253	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:12:31,479	[INFO]	87	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:12:35,000	[INFO]	88	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:12:35,846	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:12:35,848	[INFO]	90	SUCCESS	+6.0	
2020-12-16 23:12:35,849	[DEBUG]	
2020-12-16 23:12:36,732	[INFO]	91	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:12:36,734	[INFO]	92	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:12:36,735	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:12:37,658	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:12:37,659	[INFO]	95	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:12:38,539	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:12:39,279	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:12:42,993	[INFO]	98	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:12:43,806	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:12:44,658	[INFO]	100	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:12:48,575	[INFO]	101	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:12:49,300	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:12:49,974	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:12:50,787	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:12:51,643	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:12:51,645	[INFO]	106	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:12:52,480	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:12:53,318	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:12:57,375	[INFO]	109	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:13:00,606	[INFO]	110	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:13:01,389	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:13:05,053	[INFO]	112	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:13:05,706	[INFO]	113	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:13:06,520	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:13:07,341	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:13:08,193	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:13:09,061	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:13:12,312	[INFO]	118	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:13:15,734	[INFO]	119	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:13:19,860	[INFO]	120	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:13:23,190	[INFO]	121	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:13:27,073	[INFO]	122	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:13:27,074	[INFO]	123	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:13:31,113	[INFO]	124	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:13:31,114	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:13:34,309	[INFO]	125	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:13:34,310	[INFO]	126	SUCCESS	+6.0	
2020-12-16 23:13:34,311	[DEBUG]	
2020-12-16 23:13:37,620	[INFO]	127	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:13:38,391	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:13:39,229	[INFO]	129	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:13:40,114	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:13:40,979	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:13:41,742	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:13:44,959	[INFO]	133	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:13:48,249	[INFO]	134	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:13:49,039	[INFO]	135	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:13:52,919	[INFO]	136	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:13:52,920	[INFO]	137	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:13:53,576	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:13:56,907	[INFO]	139	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:13:57,760	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:13:57,763	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:13:58,509	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:14:02,106	[INFO]	143	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:14:02,108	[INFO]	144	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:14:02,934	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:14:03,834	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:14:07,164	[INFO]	147	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:14:11,153	[INFO]	148	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:14:11,959	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:14:12,644	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:14:15,895	[INFO]	151	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:14:16,669	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:14:20,428	[INFO]	153	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:14:21,197	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:14:22,032	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:14:22,747	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:14:23,593	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:14:27,715	[INFO]	158	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:14:28,493	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:14:31,711	[INFO]	160	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:14:35,689	[INFO]	161	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:14:35,690	[INFO]	162	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:14:40,036	[INFO]	163	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 23:14:43,390	[INFO]	164	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:14:44,223	[INFO]	165	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:14:45,074	[INFO]	166	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:14:45,963	[INFO]	167	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:14:50,201	[INFO]	168	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:14:54,882	[INFO]	169	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:14:54,885	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,53 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:15:00,259	[INFO]	170	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:15:00,260	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,66 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:15:01,064	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:15:01,907	[INFO]	172	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:15:01,909	[INFO]	173	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:15:01,910	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,66 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:15:08,077	[INFO]	174	SUCCESS	 7.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:15:08,742	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:15:09,521	[INFO]	176	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:15:09,522	[INFO]	177	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:15:09,523	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,66 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:15:09,524	[INFO]	178	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:15:09,524	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,53 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:15:10,190	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:15:10,191	[INFO]	180	SUCCESS	+6.0	
2020-12-16 23:15:10,192	[DEBUG]	
2020-12-16 23:15:10,192	[INFO]	181	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:15:13,474	[INFO]	182	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:15:14,263	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:15:18,393	[INFO]	184	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:15:19,229	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:15:22,663	[INFO]	186	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:15:23,510	[INFO]	187	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:15:27,264	[INFO]	188	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:15:30,572	[INFO]	189	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:15:33,806	[INFO]	190	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:15:37,896	[INFO]	191	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:15:41,899	[INFO]	192	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:15:41,901	[INFO]	193	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:15:42,688	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:15:43,556	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:15:44,392	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:15:49,210	[INFO]	197	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:15:49,211	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,38 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:15:49,212	[INFO]	198	SUCCESS	+6.0	
2020-12-16 23:15:49,212	[DEBUG]	
2020-12-16 23:15:52,411	[INFO]	199	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:15:53,087	[INFO]	200	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:15:53,778	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:15:53,779	[INFO]	202	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:15:57,937	[INFO]	203	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:15:58,741	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:15:59,605	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:15:59,606	[INFO]	206	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:16:00,386	[INFO]	207	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:16:01,258	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:16:05,082	[INFO]	209	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:16:05,083	[INFO]	210	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:16:05,084	[INFO]	211	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:16:05,084	[DEBUG]	
2020-12-16 23:16:09,100	[INFO]	212	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:16:09,101	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:16:09,102	[INFO]	213	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:16:09,102	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:16:12,359	[INFO]	214	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:16:12,360	[INFO]	215	SUCCESS	+6.0	
2020-12-16 23:16:12,360	[DEBUG]	
2020-12-16 23:16:12,361	[INFO]	216	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:16:12,361	[DEBUG]	
2020-12-16 23:16:13,166	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:16:16,863	[INFO]	218	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:16:16,864	[INFO]	219	SUCCESS	+6.0	
2020-12-16 23:16:16,864	[DEBUG]	
2020-12-16 23:16:16,865	[INFO]	220	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:16:16,865	[DEBUG]	
2020-12-16 23:16:16,866	[INFO]	221	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:16:16,866	[INFO]	222	SUCCESS	+6.0	
2020-12-16 23:16:16,867	[DEBUG]	
2020-12-16 23:16:16,867	[INFO]	223	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:16:20,077	[INFO]	224	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:16:20,894	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:16:21,756	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:16:22,605	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:16:22,606	[INFO]	228	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:16:23,407	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:16:23,408	[INFO]	230	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:16:24,255	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:16:24,257	[INFO]	232	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:16:24,258	[DEBUG]	
2020-12-16 23:16:27,524	[INFO]	233	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:16:27,525	[INFO]	234	SUCCESS	+6.0	
2020-12-16 23:16:27,525	[DEBUG]	
2020-12-16 23:16:28,305	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:16:32,576	[INFO]	236	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:16:32,577	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,32 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:16:32,577	[INFO]	237	SUCCESS	+6.0	
2020-12-16 23:16:32,578	[DEBUG]	
2020-12-16 23:16:33,340	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:16:33,341	[INFO]	239	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:16:33,342	[DEBUG]	
2020-12-16 23:16:33,342	[INFO]	240	SUCCESS	+6.0	
2020-12-16 23:16:33,342	[DEBUG]	
2020-12-16 23:16:37,356	[INFO]	241	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:16:38,116	[INFO]	242	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:16:42,172	[INFO]	243	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:16:42,989	[INFO]	244	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:16:43,833	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:16:47,309	[INFO]	246	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:16:51,361	[INFO]	247	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:16:51,362	[INFO]	248	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:16:52,062	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:16:52,826	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:16:53,644	[INFO]	251	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:16:54,475	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:16:57,779	[INFO]	253	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:16:58,571	[INFO]	254	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:16:59,395	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:17:03,256	[INFO]	256	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:17:06,533	[INFO]	257	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:17:06,534	[INFO]	258	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:17:07,300	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:17:11,395	[INFO]	260	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:17:11,396	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:17:15,247	[INFO]	261	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:17:15,247	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,30 ****
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 20,34 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:17:16,032	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:17:19,998	[INFO]	263	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:17:19,999	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:17:19,999	[INFO]	264	SUCCESS	+6.0	
2020-12-16 23:17:20,000	[DEBUG]	
2020-12-16 23:17:23,340	[INFO]	265	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:17:24,167	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:17:25,031	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:17:29,471	[INFO]	268	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:17:29,472	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:17:29,473	[INFO]	269	SUCCESS	+6.0	
2020-12-16 23:17:29,473	[DEBUG]	
2020-12-16 23:17:33,406	[INFO]	270	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:17:36,635	[INFO]	271	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:17:40,562	[INFO]	272	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:17:41,240	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:17:42,067	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:17:42,768	[INFO]	275	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:17:46,080	[INFO]	276	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:17:46,744	[INFO]	277	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:17:50,016	[INFO]	278	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:17:53,268	[INFO]	279	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:17:53,270	[INFO]	280	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:17:57,378	[INFO]	281	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 23:17:58,166	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:18:02,317	[INFO]	283	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:18:02,318	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:18:03,133	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:18:07,644	[INFO]	285	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:18:07,645	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,33 ****
--- 24,35 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:18:10,985	[INFO]	286	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:18:10,988	[INFO]	287	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:18:10,988	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 memo[i][j] = 0;
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:18:10,989	[INFO]	288	SUCCESS	+6.0	
2020-12-16 23:18:10,989	[DEBUG]	
2020-12-16 23:18:14,932	[INFO]	289	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:18:19,032	[INFO]	290	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:18:22,220	[INFO]	291	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:18:22,221	[INFO]	292	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:18:22,221	[DEBUG]	
2020-12-16 23:18:22,222	[INFO]	293	SUCCESS	+6.0	
2020-12-16 23:18:22,222	[DEBUG]	
2020-12-16 23:18:23,021	[INFO]	294	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:18:23,857	[INFO]	295	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:18:24,774	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:18:25,645	[INFO]	297	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:18:29,844	[INFO]	298	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:18:29,845	[INFO]	299	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:18:29,846	[DEBUG]	
2020-12-16 23:18:29,847	[INFO]	300	SUCCESS	+6.0	
2020-12-16 23:18:29,847	[DEBUG]	
2020-12-16 23:18:29,848	[INFO]	301	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:18:29,848	[DEBUG]	
2020-12-16 23:18:29,849	[INFO]	302	SUCCESS	+6.0	
2020-12-16 23:18:29,850	[DEBUG]	
2020-12-16 23:18:29,851	[INFO]	303	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:18:29,851	[DEBUG]	
2020-12-16 23:18:33,097	[INFO]	304	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:18:37,211	[INFO]	305	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:18:37,212	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:18:40,992	[INFO]	306	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:18:40,993	[INFO]	307	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:18:40,993	[DEBUG]	
2020-12-16 23:18:40,994	[INFO]	308	SUCCESS	+6.0	
2020-12-16 23:18:40,994	[DEBUG]	
2020-12-16 23:18:45,346	[INFO]	309	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:18:45,347	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,37 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:18:48,712	[INFO]	310	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:18:48,713	[INFO]	311	SUCCESS	+6.0	
2020-12-16 23:18:48,713	[DEBUG]	
2020-12-16 23:18:48,714	[INFO]	312	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:18:52,973	[INFO]	313	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:18:52,973	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:18:52,974	[INFO]	314	SUCCESS	+6.0	
2020-12-16 23:18:52,974	[DEBUG]	
2020-12-16 23:18:56,180	[INFO]	315	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:18:56,985	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:18:56,986	[INFO]	317	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:18:56,987	[DEBUG]	
2020-12-16 23:18:56,987	[INFO]	318	SUCCESS	+6.0	
2020-12-16 23:18:56,987	[DEBUG]	
2020-12-16 23:18:56,988	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:18:57,702	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:18:58,450	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:18:59,185	[INFO]	322	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:18:59,187	[INFO]	323	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:18:59,188	[DEBUG]	
2020-12-16 23:18:59,190	[INFO]	324	SUCCESS	+6.0	
2020-12-16 23:18:59,190	[DEBUG]	
2020-12-16 23:19:00,061	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:19:03,536	[INFO]	326	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:19:04,292	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:19:08,630	[INFO]	328	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:19:08,631	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:19:08,632	[INFO]	329	SUCCESS	+6.0	
2020-12-16 23:19:08,632	[DEBUG]	
2020-12-16 23:19:11,933	[INFO]	330	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:19:12,603	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:19:16,248	[INFO]	332	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:19:20,263	[INFO]	333	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 23:19:24,354	[INFO]	334	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:19:24,355	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:19:24,356	[INFO]	335	SUCCESS	+6.0	
2020-12-16 23:19:24,356	[DEBUG]	
2020-12-16 23:19:28,552	[INFO]	336	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:19:31,974	[INFO]	337	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:19:32,778	[INFO]	338	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:19:33,519	[INFO]	339	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:19:34,392	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:19:38,512	[INFO]	341	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:19:39,305	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:19:43,419	[INFO]	343	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:19:47,307	[INFO]	344	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:19:47,307	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:19:48,104	[INFO]	345	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:19:52,302	[INFO]	346	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:19:53,098	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:19:56,348	[INFO]	348	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:19:56,349	[INFO]	349	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:19:56,350	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:19:56,351	[INFO]	350	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:19:56,351	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:19:57,026	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:19:57,028	[INFO]	352	SUCCESS	+6.0	
2020-12-16 23:19:57,028	[DEBUG]	
2020-12-16 23:19:57,737	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:20:01,071	[INFO]	354	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:20:04,386	[INFO]	355	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:20:05,187	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:20:09,522	[INFO]	357	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:20:13,567	[INFO]	358	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:20:13,568	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,39 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:20:13,569	[INFO]	359	SUCCESS	+6.0	
2020-12-16 23:20:13,569	[DEBUG]	
2020-12-16 23:20:13,570	[INFO]	360	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:20:13,570	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:20:13,571	[INFO]	361	SUCCESS	+6.0	
2020-12-16 23:20:13,571	[DEBUG]	
2020-12-16 23:20:14,249	[INFO]	362	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:20:14,251	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:20:15,116	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:20:16,002	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:20:19,421	[INFO]	366	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:20:23,369	[INFO]	367	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:20:24,168	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:20:24,965	[INFO]	369	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:20:28,844	[INFO]	370	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:20:28,844	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:20:28,845	[INFO]	371	SUCCESS	+6.0	
2020-12-16 23:20:28,845	[DEBUG]	
2020-12-16 23:20:32,096	[INFO]	372	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:20:35,525	[INFO]	373	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:20:40,439	[INFO]	374	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:20:44,281	[INFO]	375	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:20:45,041	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:20:45,042	[INFO]	377	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:20:45,937	[INFO]	378	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:20:46,853	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:20:51,097	[INFO]	380	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:20:51,922	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:20:52,652	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:20:53,529	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:20:58,731	[INFO]	384	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:20:58,732	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 23:20:58,732	[INFO]	385	SUCCESS	+6.0	
2020-12-16 23:20:58,733	[DEBUG]	
2020-12-16 23:20:59,498	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:21:03,513	[INFO]	387	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:21:07,217	[INFO]	388	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:21:07,219	[INFO]	389	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:21:07,220	[INFO]	390	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:21:07,221	[INFO]	391	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:21:07,221	[DEBUG]	
2020-12-16 23:21:11,009	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:21:11,010	[INFO]	393	SUCCESS	+6.0	
2020-12-16 23:21:11,011	[DEBUG]	
2020-12-16 23:21:11,785	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:21:15,072	[INFO]	395	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:21:18,262	[INFO]	396	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:21:18,944	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:21:18,945	[INFO]	398	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:21:23,027	[INFO]	399	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:21:23,836	[INFO]	400	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:21:23,839	[INFO]	401	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:21:24,641	[INFO]	402	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:21:24,642	[INFO]	403	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:21:24,643	[DEBUG]	
2020-12-16 23:21:24,643	[INFO]	404	SUCCESS	+6.0	
2020-12-16 23:21:24,644	[DEBUG]	
2020-12-16 23:21:24,644	[INFO]	405	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:21:25,488	[INFO]	406	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:21:25,490	[INFO]	407	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:21:29,149	[INFO]	408	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:21:29,961	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:21:30,877	[INFO]	410	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:21:31,776	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:21:32,665	[INFO]	412	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:21:37,149	[INFO]	413	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:21:37,150	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:21:40,327	[INFO]	414	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:21:44,425	[INFO]	415	SUCCESS	 7.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:21:44,426	[INFO]	416	SUCCESS	+6.0	
2020-12-16 23:21:44,426	[DEBUG]	
2020-12-16 23:21:44,427	[INFO]	417	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:21:44,427	[DEBUG]	
2020-12-16 23:21:47,854	[INFO]	418	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:21:48,622	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:21:48,623	[INFO]	420	SUCCESS	+6.0	
2020-12-16 23:21:48,624	[DEBUG]	
2020-12-16 23:21:49,463	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:21:52,765	[INFO]	422	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:21:56,020	[INFO]	423	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:22:00,021	[INFO]	424	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:22:00,844	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:22:01,560	[INFO]	426	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:22:05,579	[INFO]	427	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:22:05,581	[INFO]	428	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:22:05,581	[DEBUG]	
2020-12-16 23:22:05,582	[INFO]	429	SUCCESS	+6.0	
2020-12-16 23:22:05,582	[DEBUG]	
2020-12-16 23:22:08,827	[INFO]	430	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:22:09,628	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:22:09,629	[INFO]	432	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:22:10,503	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:22:10,506	[INFO]	434	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:22:11,247	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:22:14,845	[INFO]	436	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:22:18,140	[INFO]	437	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:22:18,965	[INFO]	438	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:22:19,880	[INFO]	439	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:22:24,245	[INFO]	440	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:22:24,246	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     weight = items[i - 1][0];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:22:24,247	[INFO]	441	SUCCESS	+6.0	
2020-12-16 23:22:24,247	[DEBUG]	
2020-12-16 23:22:24,248	[INFO]	442	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:22:24,248	[DEBUG]	
2020-12-16 23:22:24,249	[INFO]	443	SUCCESS	+6.0	
2020-12-16 23:22:24,249	[DEBUG]	
2020-12-16 23:22:25,055	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:22:25,057	[INFO]	445	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:22:25,058	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:22:30,444	[INFO]	446	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:22:30,445	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,54 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     value = items[i - 1][1];
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:22:35,365	[INFO]	447	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:22:35,366	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 23:22:40,303	[INFO]	448	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:22:40,304	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 16,21 ****
--- 16,41 ----
          int n = items.length;
          int memo[][] = new int[n + 1][capacity + 1];
  
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {

2020-12-16 23:22:40,989	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:22:40,991	[INFO]	450	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:22:45,038	[INFO]	451	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:22:45,039	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 16,21 ****
--- 16,41 ----
          int n = items.length;
          int memo[][] = new int[n + 1][capacity + 1];
  
+         for (int i = 0; i > n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {

2020-12-16 23:22:45,040	[INFO]	452	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:22:45,041	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 16,21 ****
--- 16,41 ----
          int n = items.length;
          int memo[][] = new int[n + 1][capacity + 1];
  
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {

2020-12-16 23:22:45,041	[INFO]	453	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:22:45,042	[INFO]	454	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:22:45,043	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 16,21 ****
--- 16,41 ----
          int n = items.length;
          int memo[][] = new int[n + 1][capacity + 1];
  
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {

2020-12-16 23:22:45,837	[INFO]	455	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:22:46,663	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:22:47,543	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:22:48,267	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:22:53,432	[INFO]	459	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:22:53,433	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 23:22:58,174	[INFO]	460	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:22:58,175	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,50 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:22:58,970	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:22:58,971	[INFO]	462	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:22:58,972	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,50 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:22:58,973	[INFO]	463	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:22:58,973	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,50 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:22:59,888	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:22:59,893	[INFO]	465	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:22:59,895	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,50 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:23:03,855	[INFO]	466	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:23:04,518	[INFO]	467	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:23:09,084	[INFO]	468	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:23:09,085	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,50 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:09,881	[INFO]	469	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:23:14,887	[INFO]	470	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:23:14,888	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,52 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:19,613	[INFO]	471	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:23:19,614	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,52 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:19,615	[INFO]	472	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:23:19,616	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,52 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:19,617	[INFO]	473	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:23:19,618	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,52 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:20,430	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:23:23,711	[INFO]	475	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:23:23,712	[INFO]	476	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:23:23,713	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,52 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:28,197	[INFO]	477	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:23:28,198	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,50 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 
+                 else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:28,200	[INFO]	478	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:23:28,200	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,50 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
+                 }
+                 
+                 else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:23:32,754	[INFO]	479	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:23:32,754	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,50 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 
+                 else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:23:33,545	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:23:38,589	[INFO]	481	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:23:38,590	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,56 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:23:42,766	[INFO]	482	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:23:46,891	[INFO]	483	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:23:46,892	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 16,21 ****
--- 16,41 ----
          int n = items.length;
          int memo[][] = new int[n + 1][capacity + 1];
  
+         for (int i = 0; i > n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     
+                 }
+ 
+             }
+         }
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {

2020-12-16 23:23:51,002	[INFO]	484	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:23:51,003	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 16,21 ****
--- 16,41 ----
          int n = items.length;
          int memo[][] = new int[n + 1][capacity + 1];
  
+         for (int i = 0; i > n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {

2020-12-16 23:23:51,761	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:23:51,763	[INFO]	486	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:23:51,763	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 23:23:52,462	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:23:57,371	[INFO]	488	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:23:57,372	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,30 ****
--- 25,50 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:23:57,373	[INFO]	489	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:23:57,373	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 36,41 ****
--- 36,61 ----
  
              }
          }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
          return memo[n][capacity];
      }
  

2020-12-16 23:23:57,374	[INFO]	490	SUCCESS	+6.0	
2020-12-16 23:23:57,374	[DEBUG]	
2020-12-16 23:23:57,375	[INFO]	491	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:23:57,375	[DEBUG]	
2020-12-16 23:23:57,376	[INFO]	492	SUCCESS	+6.0	
2020-12-16 23:23:57,376	[DEBUG]	
2020-12-16 23:24:00,559	[INFO]	493	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:24:03,754	[INFO]	494	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:24:04,425	[INFO]	495	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:24:05,152	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:24:05,992	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:24:05,993	[INFO]	498	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:24:10,078	[INFO]	499	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:24:10,871	[INFO]	500	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:24:10,872	[INFO]	==== END ====
2020-12-16 23:24:10,872	[INFO]	Reason: step budget
2020-12-16 23:24:10,873	[INFO]	
2020-12-16 23:24:10,873	[INFO]	========== EPOCH 11 ==========
2020-12-16 23:24:10,873	[INFO]	==== WARMUP ====
2020-12-16 23:24:15,043	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:24:15,043	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:24:19,193	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:24:19,193	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:24:23,406	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:24:23,406	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:24:27,428	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:24:27,428	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:24:27,428	[INFO]	==== START ====
2020-12-16 23:24:31,647	[INFO]	1	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:24:31,648	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 29,34 ****
--- 29,35 ----
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];

2020-12-16 23:24:36,903	[INFO]	2	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:24:36,904	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 29,34 ****
--- 29,55 ----
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
                      memo[i][j] = memo [i-1][j];

2020-12-16 23:24:41,937	[INFO]	3	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:24:41,938	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,53 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 else if (weight <= j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
+         }
+         for (int i = 0; i <= n ; i++)
+         {
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:24:45,864	[INFO]	4	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:24:45,865	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,34 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
!                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:24:45,865	[INFO]	==== END ====
2020-12-16 23:24:45,865	[INFO]	Reason: target fitness reached
2020-12-16 23:24:45,866	[INFO]	
2020-12-16 23:24:45,866	[INFO]	========== EPOCH 12 ==========
2020-12-16 23:24:45,866	[INFO]	==== WARMUP ====
2020-12-16 23:24:49,932	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:24:49,932	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:24:54,126	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:24:54,126	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:24:58,260	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:24:58,260	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:25:02,455	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:25:02,455	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:25:02,455	[INFO]	==== START ====
2020-12-16 23:25:06,643	[INFO]	1	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:25:06,644	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:25:07,305	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:25:07,306	[INFO]	3	SUCCESS	+6.0	
2020-12-16 23:25:07,306	[DEBUG]	
2020-12-16 23:25:08,066	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:25:08,911	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:25:09,762	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:25:13,249	[INFO]	7	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:25:14,040	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:25:14,042	[INFO]	9	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:25:17,303	[INFO]	10	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:25:17,304	[INFO]	11	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:25:17,305	[DEBUG]	
2020-12-16 23:25:20,662	[INFO]	12	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:25:21,310	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:25:24,568	[INFO]	14	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 23:25:24,570	[INFO]	15	SUCCESS	+6.0	
2020-12-16 23:25:24,570	[DEBUG]	
2020-12-16 23:25:27,841	[INFO]	16	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:25:27,842	[INFO]	17	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:25:27,843	[DEBUG]	
2020-12-16 23:25:27,843	[INFO]	18	SUCCESS	+6.0	
2020-12-16 23:25:27,844	[DEBUG]	
2020-12-16 23:25:27,845	[INFO]	19	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:25:27,845	[DEBUG]	
2020-12-16 23:25:27,846	[INFO]	20	SUCCESS	+6.0	
2020-12-16 23:25:27,846	[DEBUG]	
2020-12-16 23:25:31,659	[INFO]	21	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:25:35,904	[INFO]	22	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:25:35,905	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:25:40,190	[INFO]	24	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:25:40,191	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     weight = items[i - 1][0];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:25:40,192	[INFO]	25	SUCCESS	+6.0	
2020-12-16 23:25:40,192	[DEBUG]	
2020-12-16 23:25:40,855	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:25:40,856	[INFO]	27	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:25:44,458	[INFO]	28	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:25:45,333	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:25:46,150	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:25:46,151	[INFO]	31	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:25:46,151	[DEBUG]	
2020-12-16 23:25:49,812	[INFO]	32	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:25:50,958	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:25:50,962	[INFO]	34	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:25:55,594	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:25:56,394	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:25:56,396	[INFO]	37	SUCCESS	+6.0	
2020-12-16 23:25:56,396	[DEBUG]	
2020-12-16 23:25:57,322	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:26:01,305	[INFO]	39	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:26:02,102	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:26:06,249	[INFO]	41	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:26:06,250	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:26:06,250	[INFO]	==== END ====
2020-12-16 23:26:06,250	[INFO]	Reason: target fitness reached
2020-12-16 23:26:06,251	[INFO]	
2020-12-16 23:26:06,251	[INFO]	========== EPOCH 13 ==========
2020-12-16 23:26:06,251	[INFO]	==== WARMUP ====
2020-12-16 23:26:10,285	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:26:10,285	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:26:14,366	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:26:14,366	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:26:18,592	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:26:18,592	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:26:22,752	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:26:22,752	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:26:22,752	[INFO]	==== START ====
2020-12-16 23:26:26,127	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:26:30,159	[INFO]	2	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:26:30,963	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:26:30,966	[INFO]	4	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:26:30,967	[DEBUG]	
2020-12-16 23:26:30,969	[INFO]	5	SUCCESS	+6.0	
2020-12-16 23:26:30,969	[DEBUG]	
2020-12-16 23:26:31,684	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:26:32,527	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:26:36,732	[INFO]	8	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:26:37,486	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:26:37,488	[INFO]	10	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:26:37,488	[DEBUG]	
2020-12-16 23:26:38,244	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:26:38,245	[INFO]	12	SUCCESS	+6.0	
2020-12-16 23:26:38,245	[DEBUG]	
2020-12-16 23:26:42,419	[INFO]	13	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:26:45,920	[INFO]	14	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:26:46,662	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:26:51,323	[INFO]	16	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:26:52,120	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:26:52,904	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:26:56,319	[INFO]	19	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:26:57,141	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:26:57,143	[INFO]	21	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:26:58,031	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:27:02,391	[INFO]	23	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:27:02,392	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:27:02,393	[INFO]	24	SUCCESS	+6.0	
2020-12-16 23:27:02,393	[DEBUG]	
2020-12-16 23:27:03,070	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:27:03,781	[INFO]	26	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:27:04,638	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:27:04,640	[INFO]	28	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:27:04,640	[DEBUG]	
2020-12-16 23:27:04,641	[INFO]	29	SUCCESS	+6.0	
2020-12-16 23:27:04,641	[DEBUG]	
2020-12-16 23:27:05,502	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:27:08,911	[INFO]	31	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:27:09,695	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:27:09,696	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:27:09,697	[INFO]	34	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:27:09,698	[DEBUG]	
2020-12-16 23:27:13,582	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:27:14,349	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:27:17,595	[INFO]	37	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:27:17,597	[INFO]	38	SUCCESS	+6.0	
2020-12-16 23:27:17,597	[DEBUG]	
2020-12-16 23:27:18,364	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:27:22,471	[INFO]	40	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:27:22,473	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:27:23,264	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:27:24,094	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:27:27,347	[INFO]	44	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:27:30,592	[INFO]	45	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:27:31,380	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:27:31,381	[INFO]	47	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:27:31,382	[DEBUG]	
2020-12-16 23:27:32,115	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:27:32,117	[INFO]	49	SUCCESS	+6.0	
2020-12-16 23:27:32,117	[DEBUG]	
2020-12-16 23:27:36,283	[INFO]	50	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:27:41,091	[INFO]	51	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:27:44,416	[INFO]	52	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:27:48,787	[INFO]	53	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:27:48,788	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,36 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:27:52,205	[INFO]	54	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:27:52,977	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:27:52,978	[INFO]	56	SUCCESS	+6.0	
2020-12-16 23:27:52,979	[DEBUG]	
2020-12-16 23:27:56,278	[INFO]	57	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 23:27:59,514	[INFO]	58	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:28:03,458	[INFO]	59	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:28:04,253	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:28:04,256	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:28:08,894	[INFO]	62	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:28:08,894	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 18,23 ****
--- 18,36 ----
  
          for (int i = 0; i <= n ; i++)
          {
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];

2020-12-16 23:28:08,895	[INFO]	63	SUCCESS	+6.0	
2020-12-16 23:28:08,895	[DEBUG]	
2020-12-16 23:28:12,086	[INFO]	64	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:28:16,314	[INFO]	65	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:28:16,315	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:28:16,315	[INFO]	66	SUCCESS	+6.0	
2020-12-16 23:28:16,316	[DEBUG]	
2020-12-16 23:28:17,085	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:28:20,497	[INFO]	68	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:28:21,221	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:28:22,082	[INFO]	70	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:28:23,000	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:28:26,455	[INFO]	72	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:28:30,624	[INFO]	73	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:28:30,625	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:28:30,626	[INFO]	74	SUCCESS	+6.0	
2020-12-16 23:28:30,626	[DEBUG]	
2020-12-16 23:28:31,397	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:28:34,654	[INFO]	76	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:28:35,450	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:28:35,451	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:28:35,452	[INFO]	79	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:28:35,453	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:28:39,668	[INFO]	81	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:28:39,668	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:28:43,508	[INFO]	82	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 23:28:43,509	[INFO]	83	SUCCESS	+6.0	
2020-12-16 23:28:43,510	[DEBUG]	
2020-12-16 23:28:46,752	[INFO]	84	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:28:50,508	[INFO]	85	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:28:53,674	[INFO]	86	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:28:53,676	[INFO]	87	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:28:57,741	[INFO]	88	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:28:58,518	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:28:58,519	[INFO]	90	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:28:58,520	[INFO]	91	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:29:02,314	[INFO]	92	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:29:02,316	[INFO]	93	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:29:03,134	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:29:04,012	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:29:07,955	[INFO]	96	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:29:07,957	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:29:11,327	[INFO]	98	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:29:12,141	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:29:12,864	[INFO]	100	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:29:12,868	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:29:16,331	[INFO]	102	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:29:16,332	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:29:17,108	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:29:20,339	[INFO]	105	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:29:21,030	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:29:24,310	[INFO]	107	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:29:25,106	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:29:29,148	[INFO]	109	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:29:33,145	[INFO]	110	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:29:33,823	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:29:37,504	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:29:37,506	[INFO]	113	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:29:41,600	[INFO]	114	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:29:41,601	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 23:29:42,350	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:29:42,352	[INFO]	116	SUCCESS	+6.0	
2020-12-16 23:29:42,352	[DEBUG]	
2020-12-16 23:29:43,221	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:29:44,127	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:29:48,295	[INFO]	119	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:29:48,296	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:29:49,116	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:29:49,117	[INFO]	121	SUCCESS	+6.0	
2020-12-16 23:29:49,117	[DEBUG]	
2020-12-16 23:29:49,119	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:29:53,365	[INFO]	123	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:29:56,556	[INFO]	124	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:29:57,319	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:29:57,321	[INFO]	126	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:30:01,395	[INFO]	127	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:30:02,180	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:30:02,183	[INFO]	129	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:30:02,865	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:30:02,866	[INFO]	131	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:30:02,867	[DEBUG]	
2020-12-16 23:30:06,992	[INFO]	132	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:30:06,993	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:30:06,994	[INFO]	133	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:30:06,994	[DEBUG]	
2020-12-16 23:30:06,995	[INFO]	134	SUCCESS	+6.0	
2020-12-16 23:30:06,995	[DEBUG]	
2020-12-16 23:30:10,802	[INFO]	135	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:30:13,936	[INFO]	136	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:30:13,937	[INFO]	137	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:30:17,138	[INFO]	138	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:30:20,328	[INFO]	139	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>='})
2020-12-16 23:30:20,329	[INFO]	140	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:30:24,574	[INFO]	141	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:30:24,575	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     value = items[i - 1][1];
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:30:28,682	[INFO]	142	SUCCESS	 8.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:30:32,964	[INFO]	143	SUCCESS	 7.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:30:32,965	[INFO]	144	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:30:32,966	[INFO]	145	SUCCESS	+6.0	
2020-12-16 23:30:32,966	[DEBUG]	
2020-12-16 23:30:33,764	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:30:34,476	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:30:35,425	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:30:35,427	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:30:36,569	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:30:40,848	[INFO]	151	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:30:45,653	[INFO]	152	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:30:45,654	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:30:45,655	[INFO]	153	SUCCESS	+6.0	
2020-12-16 23:30:45,655	[DEBUG]	
2020-12-16 23:30:45,656	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:30:46,384	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:30:47,215	[INFO]	156	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:30:48,099	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:30:52,064	[INFO]	158	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:30:52,065	[INFO]	159	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:30:52,065	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:30:52,847	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:30:52,849	[INFO]	161	SUCCESS	+6.0	
2020-12-16 23:30:52,850	[DEBUG]	
2020-12-16 23:30:53,672	[INFO]	162	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:30:54,503	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:30:57,755	[INFO]	164	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:31:01,768	[INFO]	165	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:31:01,769	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:31:01,769	[INFO]	166	SUCCESS	+6.0	
2020-12-16 23:31:01,769	[DEBUG]	
2020-12-16 23:31:02,569	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:31:06,786	[INFO]	168	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:31:06,788	[INFO]	169	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:31:06,788	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:31:10,843	[INFO]	170	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:31:11,687	[INFO]	171	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:31:11,688	[INFO]	172	SUCCESS	+6.0	
2020-12-16 23:31:11,688	[DEBUG]	
2020-12-16 23:31:12,402	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:31:16,691	[INFO]	174	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:31:16,692	[INFO]	175	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:31:19,911	[INFO]	176	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:31:23,928	[INFO]	177	SUCCESS	 7.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:31:24,688	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:31:27,933	[INFO]	179	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:31:28,633	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:31:28,634	[INFO]	181	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:31:31,930	[INFO]	182	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:31:32,704	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:31:32,705	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:31:32,706	[INFO]	185	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:31:35,966	[INFO]	186	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:31:35,967	[INFO]	187	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:31:39,162	[INFO]	188	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:31:43,271	[INFO]	189	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:31:43,271	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:31:44,077	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:31:47,793	[INFO]	191	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:31:51,176	[INFO]	192	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:31:51,177	[INFO]	193	SUCCESS	+6.0	
2020-12-16 23:31:51,177	[DEBUG]	
2020-12-16 23:31:55,329	[INFO]	194	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:31:58,580	[INFO]	195	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:31:59,383	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:32:00,080	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:32:00,915	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:32:05,057	[INFO]	199	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:32:05,058	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:32:05,059	[INFO]	200	SUCCESS	+6.0	
2020-12-16 23:32:05,060	[DEBUG]	
2020-12-16 23:32:05,061	[INFO]	201	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:32:05,061	[DEBUG]	
2020-12-16 23:32:05,062	[INFO]	202	SUCCESS	+6.0	
2020-12-16 23:32:05,062	[DEBUG]	
2020-12-16 23:32:05,820	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:32:05,821	[INFO]	204	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:32:05,822	[DEBUG]	
2020-12-16 23:32:09,031	[INFO]	205	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:32:09,032	[INFO]	206	SUCCESS	+6.0	
2020-12-16 23:32:09,032	[DEBUG]	
2020-12-16 23:32:13,050	[INFO]	207	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:32:13,051	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     memo[i][j] = memo [i-1][j];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:32:17,165	[INFO]	208	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:32:17,166	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,33 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 24,34 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     memo[i][j] = memo [i-1][j];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:32:21,274	[INFO]	209	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:32:21,275	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:32:25,293	[INFO]	210	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:32:25,294	[INFO]	211	SUCCESS	+6.0	
2020-12-16 23:32:25,294	[DEBUG]	
2020-12-16 23:32:26,088	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:32:26,977	[INFO]	213	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:32:30,400	[INFO]	214	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:32:31,266	[INFO]	215	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:32:31,268	[INFO]	216	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:32:31,268	[DEBUG]	
2020-12-16 23:32:32,012	[INFO]	217	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:32:36,020	[INFO]	218	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:32:36,844	[INFO]	219	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:32:36,845	[INFO]	220	SUCCESS	+6.0	
2020-12-16 23:32:36,845	[DEBUG]	
2020-12-16 23:32:40,159	[INFO]	221	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:32:40,160	[INFO]	222	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:32:40,161	[INFO]	223	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:32:40,844	[INFO]	224	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:32:40,847	[INFO]	225	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:32:40,848	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:32:44,080	[INFO]	226	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:32:44,081	[INFO]	227	SUCCESS	+6.0	
2020-12-16 23:32:44,081	[DEBUG]	
2020-12-16 23:32:44,883	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:32:48,252	[INFO]	229	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:32:48,253	[INFO]	230	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:32:52,837	[INFO]	231	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:32:52,837	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 23:32:53,505	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:32:53,506	[INFO]	233	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:32:53,507	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 23:32:53,508	[INFO]	234	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:32:53,508	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 23:32:53,509	[INFO]	235	SUCCESS	+6.0	
2020-12-16 23:32:53,509	[DEBUG]	
2020-12-16 23:32:54,319	[INFO]	236	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:32:55,135	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:32:55,966	[INFO]	238	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:32:55,968	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:32:56,796	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:32:56,798	[INFO]	241	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:32:56,798	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:32:57,669	[INFO]	242	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:32:58,504	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:32:58,505	[INFO]	244	SUCCESS	+6.0	
2020-12-16 23:32:58,506	[DEBUG]	
2020-12-16 23:32:58,506	[INFO]	245	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:33:02,327	[INFO]	246	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:33:03,100	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:33:06,963	[INFO]	248	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:33:10,350	[INFO]	249	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:33:10,352	[INFO]	250	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:33:10,352	[DEBUG]	
2020-12-16 23:33:10,352	[INFO]	251	SUCCESS	+6.0	
2020-12-16 23:33:10,353	[DEBUG]	
2020-12-16 23:33:11,173	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:33:12,039	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:33:12,921	[INFO]	254	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:33:17,194	[INFO]	255	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:33:17,195	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,25 ****
--- 19,28 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:33:20,355	[INFO]	256	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:33:20,356	[INFO]	257	SUCCESS	+6.0	
2020-12-16 23:33:20,356	[DEBUG]	
2020-12-16 23:33:21,165	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:33:24,472	[INFO]	259	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:33:28,233	[INFO]	260	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:33:28,988	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:33:32,274	[INFO]	262	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:33:33,069	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:33:33,070	[INFO]	264	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:33:33,907	[INFO]	265	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:33:38,068	[INFO]	266	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:33:38,860	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:33:42,057	[INFO]	268	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:33:45,585	[INFO]	269	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:33:46,370	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:33:47,245	[INFO]	271	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:33:47,248	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:33:48,141	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:33:48,999	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:33:52,597	[INFO]	275	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:33:52,599	[INFO]	276	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:33:56,787	[INFO]	277	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:33:56,788	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:33:56,788	[INFO]	==== END ====
2020-12-16 23:33:56,788	[INFO]	Reason: target fitness reached
2020-12-16 23:33:56,789	[INFO]	
2020-12-16 23:33:56,789	[INFO]	========== EPOCH 14 ==========
2020-12-16 23:33:56,789	[INFO]	==== WARMUP ====
2020-12-16 23:34:00,952	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:34:00,952	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:34:05,058	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:34:05,058	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:34:09,035	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:34:09,036	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:34:13,153	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:34:13,153	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:34:13,153	[INFO]	==== START ====
2020-12-16 23:34:13,154	[INFO]	1	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:34:13,154	[DEBUG]	
2020-12-16 23:34:13,841	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:34:13,844	[INFO]	3	SUCCESS	+6.0	
2020-12-16 23:34:13,845	[DEBUG]	
2020-12-16 23:34:14,529	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:34:15,345	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:34:16,191	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:34:20,255	[INFO]	7	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:34:20,256	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:34:21,073	[INFO]	8	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:34:24,927	[INFO]	9	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:34:24,928	[INFO]	10	SUCCESS	+6.0	
2020-12-16 23:34:24,928	[DEBUG]	
2020-12-16 23:34:25,716	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:34:26,639	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:34:27,482	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:34:31,707	[INFO]	14	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:34:31,708	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:34:31,710	[INFO]	15	SUCCESS	+6.0	
2020-12-16 23:34:31,710	[DEBUG]	
2020-12-16 23:34:32,510	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:34:36,831	[INFO]	17	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:34:36,832	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     memo[i][j] = memo [i-1][j];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:34:36,833	[INFO]	18	SUCCESS	+6.0	
2020-12-16 23:34:36,833	[DEBUG]	
2020-12-16 23:34:40,189	[INFO]	19	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:34:40,969	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:34:41,709	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:34:45,133	[INFO]	22	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:34:45,134	[INFO]	23	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:34:45,135	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:34:45,135	[INFO]	24	SUCCESS	+6.0	
2020-12-16 23:34:45,136	[DEBUG]	
2020-12-16 23:34:49,388	[INFO]	25	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:34:49,388	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,32 ****
--- 27,35 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }

2020-12-16 23:34:49,389	[INFO]	26	SUCCESS	+6.0	
2020-12-16 23:34:49,389	[DEBUG]	
2020-12-16 23:34:54,070	[INFO]	27	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:34:54,072	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,53 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:34:54,073	[INFO]	28	SUCCESS	+6.0	
2020-12-16 23:34:54,073	[DEBUG]	
2020-12-16 23:34:54,821	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:34:58,554	[INFO]	30	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:35:01,749	[INFO]	31	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:35:02,518	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:35:06,621	[INFO]	33	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:35:06,622	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
+             if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {

2020-12-16 23:35:07,402	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:35:07,403	[INFO]	35	SUCCESS	+6.0	
2020-12-16 23:35:07,404	[DEBUG]	
2020-12-16 23:35:08,252	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:35:11,673	[INFO]	37	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:35:11,675	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:35:11,677	[INFO]	39	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:35:11,679	[INFO]	40	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:35:15,820	[INFO]	41	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:35:19,966	[INFO]	42	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:35:19,967	[INFO]	43	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:35:19,968	[DEBUG]	
2020-12-16 23:35:19,968	[INFO]	44	SUCCESS	+6.0	
2020-12-16 23:35:19,968	[DEBUG]	
2020-12-16 23:35:23,323	[INFO]	45	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:35:24,107	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:35:24,914	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:35:25,757	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:35:26,630	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:35:27,470	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:35:28,321	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:35:29,028	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:35:32,966	[INFO]	53	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:35:36,274	[INFO]	54	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:35:36,275	[INFO]	55	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:35:39,591	[INFO]	56	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:35:42,852	[INFO]	57	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 23:35:46,516	[INFO]	58	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:35:46,517	[INFO]	59	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:35:47,332	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:35:48,135	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:35:48,136	[INFO]	62	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:35:52,321	[INFO]	63	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:35:52,321	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:35:52,322	[INFO]	64	SUCCESS	+6.0	
2020-12-16 23:35:52,322	[DEBUG]	
2020-12-16 23:35:53,135	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:35:54,023	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:35:58,274	[INFO]	67	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:35:59,076	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:35:59,079	[INFO]	69	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:35:59,080	[DEBUG]	
2020-12-16 23:36:03,174	[INFO]	70	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:36:03,175	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,26 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
+             }
              }
              for (int j = 0; j <= capacity; j++)
              {

2020-12-16 23:36:03,176	[INFO]	71	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:36:03,176	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,26 ****
--- 20,29 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
+             }
              }
              for (int j = 0; j <= capacity; j++)
              {

2020-12-16 23:36:03,177	[INFO]	72	SUCCESS	+6.0	
2020-12-16 23:36:03,177	[DEBUG]	
2020-12-16 23:36:07,279	[INFO]	73	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:36:07,280	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:36:11,163	[INFO]	75	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:36:15,381	[INFO]	76	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:36:15,382	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:36:15,382	[INFO]	==== END ====
2020-12-16 23:36:15,382	[INFO]	Reason: target fitness reached
2020-12-16 23:36:15,383	[INFO]	
2020-12-16 23:36:15,383	[INFO]	========== EPOCH 15 ==========
2020-12-16 23:36:15,384	[INFO]	==== WARMUP ====
2020-12-16 23:36:20,484	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:36:20,485	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:36:25,832	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:36:25,832	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:36:30,348	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:36:30,348	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:36:36,901	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:36:36,901	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:36:36,901	[INFO]	==== START ====
2020-12-16 23:36:38,312	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:36:43,607	[INFO]	2	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:36:48,677	[INFO]	3	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:36:48,678	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,32 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:36:48,678	[INFO]	4	SUCCESS	+6.0	
2020-12-16 23:36:48,679	[DEBUG]	
2020-12-16 23:36:52,195	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<'})
2020-12-16 23:36:52,999	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:36:57,228	[INFO]	7	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:36:58,011	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:36:58,893	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:36:59,960	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:37:01,190	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:37:05,948	[INFO]	12	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:37:05,949	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 28,33 ****
--- 28,34 ----
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
+                     memo[i][j] = memo [i-1][j];
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:37:10,252	[INFO]	13	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:37:14,815	[INFO]	14	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:37:14,817	[INFO]	15	SUCCESS	+6.0	
2020-12-16 23:37:14,817	[DEBUG]	
2020-12-16 23:37:16,842	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:37:18,233	[INFO]	17	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:37:18,976	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:37:24,223	[INFO]	19	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:37:25,144	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:37:26,302	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:37:30,743	[INFO]	22	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:37:30,744	[INFO]	23	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:37:30,745	[DEBUG]	
2020-12-16 23:37:31,825	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:37:35,684	[INFO]	25	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 23:37:35,685	[INFO]	26	SUCCESS	+6.0	
2020-12-16 23:37:35,686	[DEBUG]	
2020-12-16 23:37:40,553	[INFO]	27	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:37:40,553	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:37:40,554	[INFO]	28	SUCCESS	+6.0	
2020-12-16 23:37:40,554	[DEBUG]	
2020-12-16 23:37:41,358	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:37:46,033	[INFO]	30	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:37:49,758	[INFO]	31	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>='})
2020-12-16 23:37:54,118	[INFO]	32	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:37:54,974	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:37:59,238	[INFO]	34	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:37:59,239	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:37:59,239	[INFO]	35	SUCCESS	+6.0	
2020-12-16 23:37:59,240	[DEBUG]	
2020-12-16 23:38:00,008	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:38:00,009	[INFO]	37	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:38:00,716	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:38:04,161	[INFO]	39	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:38:04,937	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:38:05,771	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:38:10,039	[INFO]	42	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:38:10,040	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
+                 value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {

2020-12-16 23:38:14,457	[INFO]	43	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:38:14,458	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 21,29 ****
--- 21,34 ----
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
+                 value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:38:18,547	[INFO]	44	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:38:22,923	[INFO]	45	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:38:22,924	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 21,31 ****
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 21,36 ----
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
+                 value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:38:23,729	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:38:28,148	[INFO]	47	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:38:28,149	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,31 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 24,35 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:38:28,922	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:38:33,523	[INFO]	49	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:38:33,524	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,33 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:38:33,525	[INFO]	50	SUCCESS	+6.0	
2020-12-16 23:38:33,525	[DEBUG]	
2020-12-16 23:38:37,806	[INFO]	51	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:38:41,894	[INFO]	52	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 23:38:45,927	[INFO]	53	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:38:49,193	[INFO]	54	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:38:49,195	[INFO]	55	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<'})
2020-12-16 23:38:49,196	[DEBUG]	
2020-12-16 23:38:49,197	[INFO]	56	SUCCESS	+6.0	
2020-12-16 23:38:49,197	[DEBUG]	
2020-12-16 23:38:52,601	[INFO]	57	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:38:53,426	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:38:54,318	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:38:55,188	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:38:55,190	[INFO]	61	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '=='})
2020-12-16 23:38:55,191	[DEBUG]	
2020-12-16 23:38:55,192	[INFO]	62	SUCCESS	+6.0	
2020-12-16 23:38:55,192	[DEBUG]	
2020-12-16 23:38:55,193	[INFO]	63	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:38:55,193	[DEBUG]	
2020-12-16 23:38:55,194	[INFO]	64	SUCCESS	+6.0	
2020-12-16 23:38:55,194	[DEBUG]	
2020-12-16 23:38:55,952	[INFO]	65	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:38:56,757	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:39:00,765	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:39:04,997	[INFO]	68	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:39:04,997	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:39:04,998	[INFO]	69	SUCCESS	+6.0	
2020-12-16 23:39:04,999	[DEBUG]	
2020-12-16 23:39:05,789	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:39:09,512	[INFO]	71	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:39:13,517	[INFO]	72	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:39:13,517	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:39:13,518	[INFO]	==== END ====
2020-12-16 23:39:13,518	[INFO]	Reason: target fitness reached
2020-12-16 23:39:13,518	[INFO]	
2020-12-16 23:39:13,519	[INFO]	========== EPOCH 16 ==========
2020-12-16 23:39:13,519	[INFO]	==== WARMUP ====
2020-12-16 23:39:17,535	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:39:17,536	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:39:21,727	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:39:21,727	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:39:25,688	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:39:25,689	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:39:29,796	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:39:29,796	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:39:29,797	[INFO]	==== START ====
2020-12-16 23:39:30,596	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:39:31,477	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:39:32,343	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:39:36,687	[INFO]	4	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:39:40,839	[INFO]	5	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:39:41,783	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:39:42,716	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:39:42,718	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:39:43,710	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:39:49,448	[INFO]	10	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:39:54,186	[INFO]	11	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:39:55,238	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:39:56,386	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:40:00,549	[INFO]	14	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:40:01,421	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:40:05,955	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:40:07,119	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:40:07,121	[INFO]	18	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:40:08,387	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:40:09,320	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:40:12,749	[INFO]	21	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:40:13,436	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:40:14,264	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:40:15,149	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:40:16,050	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:40:20,259	[INFO]	26	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:40:21,079	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:40:24,468	[INFO]	28	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 23:40:25,250	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:40:26,068	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:40:30,690	[INFO]	31	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:40:31,451	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:40:32,263	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:40:33,109	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:40:33,111	[INFO]	35	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='})
2020-12-16 23:40:33,112	[DEBUG]	
2020-12-16 23:40:33,949	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:40:33,950	[INFO]	37	SUCCESS	+6.0	
2020-12-16 23:40:33,951	[DEBUG]	
2020-12-16 23:40:34,817	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:40:34,820	[INFO]	39	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:40:41,034	[INFO]	40	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:40:41,903	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:40:45,698	[INFO]	42	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:40:46,742	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:40:46,746	[INFO]	44	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:40:51,384	[INFO]	45	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:40:51,385	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,30 ****
--- 25,33 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
+                     if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:40:51,386	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:40:51,387	[INFO]	47	SUCCESS	+6.0	
2020-12-16 23:40:51,387	[DEBUG]	
2020-12-16 23:40:52,304	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:40:52,306	[INFO]	49	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:40:56,613	[INFO]	50	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:41:00,236	[INFO]	51	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:41:05,293	[INFO]	52	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:41:09,657	[INFO]	53	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '!='})
2020-12-16 23:41:13,604	[INFO]	54	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 23:41:14,682	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:41:18,904	[INFO]	56	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:41:19,830	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:41:20,624	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:41:24,849	[INFO]	59	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:41:25,728	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:41:29,096	[INFO]	61	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:41:29,783	[INFO]	62	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:41:29,787	[INFO]	63	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:41:29,788	[DEBUG]	
2020-12-16 23:41:33,101	[INFO]	64	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:41:33,102	[INFO]	65	SUCCESS	+6.0	
2020-12-16 23:41:33,102	[DEBUG]	
2020-12-16 23:41:37,386	[INFO]	66	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<='})
2020-12-16 23:41:37,387	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j <= 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:41:37,388	[INFO]	67	SUCCESS	+6.0	
2020-12-16 23:41:37,388	[DEBUG]	
2020-12-16 23:41:41,465	[INFO]	68	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:41:41,466	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:41:41,466	[INFO]	==== END ====
2020-12-16 23:41:41,466	[INFO]	Reason: target fitness reached
2020-12-16 23:41:41,467	[INFO]	
2020-12-16 23:41:41,468	[INFO]	========== EPOCH 17 ==========
2020-12-16 23:41:41,468	[INFO]	==== WARMUP ====
2020-12-16 23:41:45,626	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:41:45,626	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:41:49,571	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:41:49,572	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:41:53,613	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:41:53,613	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:41:57,603	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:41:57,603	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:41:57,603	[INFO]	==== START ====
2020-12-16 23:41:58,368	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:42:01,580	[INFO]	2	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:42:05,630	[INFO]	3	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:42:05,630	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:42:05,631	[INFO]	4	SUCCESS	+6.0	
2020-12-16 23:42:05,631	[DEBUG]	
2020-12-16 23:42:06,304	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:42:07,104	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:42:11,022	[INFO]	7	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:42:11,805	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:42:12,654	[INFO]	9	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:42:16,920	[INFO]	10	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:42:16,921	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:42:17,784	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:42:17,786	[INFO]	12	SUCCESS	+6.0	
2020-12-16 23:42:17,787	[DEBUG]	
2020-12-16 23:42:22,185	[INFO]	13	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:42:23,313	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:42:24,249	[INFO]	15	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:42:28,640	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:42:28,642	[INFO]	17	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:42:28,643	[DEBUG]	
2020-12-16 23:42:29,481	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:42:30,330	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:42:30,333	[INFO]	20	SUCCESS	+6.0	
2020-12-16 23:42:30,334	[DEBUG]	
2020-12-16 23:42:31,247	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:42:35,313	[INFO]	22	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:42:35,314	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:42:36,173	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:42:40,293	[INFO]	25	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:42:40,295	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:42:41,057	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:42:41,869	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:42:45,842	[INFO]	28	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:42:45,843	[INFO]	29	SUCCESS	+6.0	
2020-12-16 23:42:45,843	[DEBUG]	
2020-12-16 23:42:49,956	[INFO]	30	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:42:50,739	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:42:50,741	[INFO]	32	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:42:51,555	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:42:52,390	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:42:55,688	[INFO]	35	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:42:59,376	[INFO]	36	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:43:00,070	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:43:00,798	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:43:01,700	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:43:05,606	[INFO]	40	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:43:05,608	[INFO]	41	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:43:09,559	[INFO]	42	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:43:12,668	[INFO]	43	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:43:16,037	[INFO]	44	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:43:17,006	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:43:17,008	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:43:17,855	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:43:18,717	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:43:18,719	[INFO]	49	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:43:18,719	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:43:21,992	[INFO]	50	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>='})
2020-12-16 23:43:26,199	[INFO]	51	SUCCESS	*0.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:43:26,199	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,33 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 25,33 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:43:26,200	[INFO]	==== END ====
2020-12-16 23:43:26,200	[INFO]	Reason: target fitness reached
2020-12-16 23:43:26,200	[INFO]	
2020-12-16 23:43:26,200	[INFO]	========== EPOCH 18 ==========
2020-12-16 23:43:26,201	[INFO]	==== WARMUP ====
2020-12-16 23:43:30,086	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:43:30,086	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:43:34,173	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:43:34,173	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:43:38,209	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:43:38,210	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:43:42,486	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:43:42,486	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:43:42,486	[INFO]	==== START ====
2020-12-16 23:43:46,732	[INFO]	1	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:43:46,732	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:43:46,733	[INFO]	2	SUCCESS	+6.0	
2020-12-16 23:43:46,733	[DEBUG]	
2020-12-16 23:43:51,617	[INFO]	3	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:43:51,618	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 35,40 ****
--- 35,53 ----
                  }
  
              }
+             for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
          }
          return memo[n][capacity];
      }

2020-12-16 23:43:51,619	[INFO]	4	SUCCESS	+6.0	
2020-12-16 23:43:51,619	[DEBUG]	
2020-12-16 23:43:54,752	[INFO]	5	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:43:58,126	[INFO]	6	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:44:01,374	[INFO]	7	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '!='})
2020-12-16 23:44:05,359	[INFO]	8	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:44:06,158	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:44:06,159	[INFO]	10	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:44:09,891	[INFO]	11	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:44:13,139	[INFO]	12	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:44:16,465	[INFO]	13	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:44:19,790	[INFO]	14	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 23:44:23,983	[INFO]	15	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:44:23,984	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 20,25 ****
--- 20,26 ----
          {
              if (i - 1 >= 0) {
                  weight = items[i - 1][0];
+                 weight = items[i - 1][0];
                  value = items[i - 1][1];
              }
              for (int j = 0; j <= capacity; j++)

2020-12-16 23:44:23,985	[INFO]	16	SUCCESS	+6.0	
2020-12-16 23:44:23,985	[DEBUG]	
2020-12-16 23:44:23,986	[INFO]	17	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '=='})
2020-12-16 23:44:23,986	[DEBUG]	
2020-12-16 23:44:23,987	[INFO]	18	SUCCESS	+6.0	
2020-12-16 23:44:23,987	[DEBUG]	
2020-12-16 23:44:28,627	[INFO]	19	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:44:31,857	[INFO]	20	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:44:35,671	[INFO]	21	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:44:36,358	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:44:40,429	[INFO]	23	SUCCESS	 9.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '=='})
2020-12-16 23:44:41,206	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:44:45,458	[INFO]	25	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:44:45,459	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:44:48,596	[INFO]	26	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:44:52,900	[INFO]	27	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:44:52,900	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,33 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 24,33 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:44:52,901	[INFO]	==== END ====
2020-12-16 23:44:52,901	[INFO]	Reason: target fitness reached
2020-12-16 23:44:52,902	[INFO]	
2020-12-16 23:44:52,902	[INFO]	========== EPOCH 19 ==========
2020-12-16 23:44:52,902	[INFO]	==== WARMUP ====
2020-12-16 23:44:57,068	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:44:57,068	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:45:01,197	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:45:01,197	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:45:05,389	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:45:05,390	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:45:09,613	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:45:09,613	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:45:09,613	[INFO]	==== START ====
2020-12-16 23:45:12,990	[INFO]	1	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:45:13,795	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:45:17,036	[INFO]	3	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:45:20,237	[INFO]	4	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:45:24,341	[INFO]	5	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:45:24,342	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 26,31 ****
--- 26,32 ----
              {
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
+                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:45:25,309	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:45:25,311	[INFO]	7	SUCCESS	+6.0	
2020-12-16 23:45:25,311	[DEBUG]	
2020-12-16 23:45:26,129	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:45:29,766	[INFO]	9	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:45:30,446	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:45:31,273	[INFO]	11	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:45:34,552	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>='})
2020-12-16 23:45:35,433	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:45:36,257	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:45:40,379	[INFO]	15	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:45:40,380	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:45:40,381	[INFO]	16	SUCCESS	+6.0	
2020-12-16 23:45:40,381	[DEBUG]	
2020-12-16 23:45:41,179	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:45:41,919	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:45:46,186	[INFO]	19	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:45:46,187	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,25 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 value = items[i - 1][1];
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 23:45:46,188	[INFO]	20	SUCCESS	+6.0	
2020-12-16 23:45:46,188	[DEBUG]	
2020-12-16 23:45:50,209	[INFO]	21	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:45:53,532	[INFO]	22	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:45:54,195	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:45:55,007	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:45:59,049	[INFO]	25	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:45:59,821	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:46:03,859	[INFO]	27	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:46:03,860	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:46:03,860	[INFO]	28	SUCCESS	+6.0	
2020-12-16 23:46:03,861	[DEBUG]	
2020-12-16 23:46:07,802	[INFO]	29	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:46:12,183	[INFO]	30	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:46:12,184	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,33 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:46:12,185	[INFO]	31	SUCCESS	+6.0	
2020-12-16 23:46:12,185	[DEBUG]	
2020-12-16 23:46:12,955	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:46:12,956	[INFO]	33	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:46:16,196	[INFO]	34	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>'})
2020-12-16 23:46:16,197	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:46:20,062	[INFO]	36	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:46:20,064	[INFO]	37	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:46:20,835	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:46:21,689	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:46:21,691	[INFO]	40	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:46:26,147	[INFO]	41	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:46:26,148	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:46:26,148	[INFO]	42	SUCCESS	+6.0	
2020-12-16 23:46:26,149	[DEBUG]	
2020-12-16 23:46:29,520	[INFO]	43	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:46:29,521	[INFO]	44	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:46:29,521	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:46:29,522	[INFO]	45	SUCCESS	+6.0	
2020-12-16 23:46:29,522	[DEBUG]	
2020-12-16 23:46:30,312	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:46:30,313	[INFO]	47	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:46:31,212	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:46:32,138	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:46:32,884	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:46:32,886	[INFO]	51	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:46:33,792	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:46:33,793	[INFO]	53	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:46:33,794	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:46:34,619	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:46:38,506	[INFO]	55	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:46:38,507	[INFO]	56	SUCCESS	+6.0	
2020-12-16 23:46:38,508	[DEBUG]	
2020-12-16 23:46:38,508	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:46:42,202	[INFO]	58	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:46:42,979	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:46:43,760	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:46:44,587	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:46:44,589	[INFO]	62	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:46:44,590	[DEBUG]	
2020-12-16 23:46:48,755	[INFO]	63	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<'})
2020-12-16 23:46:52,224	[INFO]	64	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:46:52,225	[INFO]	65	SUCCESS	+6.0	
2020-12-16 23:46:52,225	[DEBUG]	
2020-12-16 23:46:53,001	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:46:53,844	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:46:57,121	[INFO]	68	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:47:00,896	[INFO]	69	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:47:01,673	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:47:05,023	[INFO]	71	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:47:08,439	[INFO]	72	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'})
2020-12-16 23:47:09,244	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:47:13,175	[INFO]	74	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:47:16,446	[INFO]	75	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '=='})
2020-12-16 23:47:20,746	[INFO]	76	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='})
2020-12-16 23:47:20,748	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:47:21,520	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:47:21,521	[INFO]	78	SUCCESS	+6.0	
2020-12-16 23:47:21,522	[DEBUG]	
2020-12-16 23:47:25,510	[INFO]	79	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:47:25,511	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,37 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     memo[i][j] = 0;
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:47:25,512	[INFO]	80	SUCCESS	+6.0	
2020-12-16 23:47:25,512	[DEBUG]	
2020-12-16 23:47:26,305	[INFO]	81	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:47:30,486	[INFO]	82	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:47:33,671	[INFO]	83	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:47:34,484	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:47:35,297	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:47:36,146	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:47:36,994	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:47:37,965	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:47:38,835	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:47:42,439	[INFO]	90	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:47:43,291	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11), 'direction': 'before'})
2020-12-16 23:47:47,823	[INFO]	92	SUCCESS	+6.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:47:47,823	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,31 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
--- 25,31 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
                  else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);

2020-12-16 23:47:47,824	[INFO]	93	SUCCESS	+6.0	
2020-12-16 23:47:47,825	[DEBUG]	
2020-12-16 23:47:51,800	[INFO]	94	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:47:51,803	[INFO]	95	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:47:52,608	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:47:53,475	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:47:54,351	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:47:54,353	[INFO]	99	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:47:57,755	[INFO]	100	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:47:57,756	[INFO]	101	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:47:57,756	[DEBUG]	
2020-12-16 23:48:01,876	[INFO]	102	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:48:01,877	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:48:01,878	[INFO]	==== END ====
2020-12-16 23:48:01,878	[INFO]	Reason: target fitness reached
2020-12-16 23:48:01,878	[INFO]	
2020-12-16 23:48:01,878	[INFO]	========== EPOCH 20 ==========
2020-12-16 23:48:01,879	[INFO]	==== WARMUP ====
2020-12-16 23:48:05,885	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:48:05,885	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:48:09,986	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:48:09,986	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:48:14,076	[INFO]	WARM	SUCCESS	 6.0	
2020-12-16 23:48:14,076	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:48:18,007	[INFO]	INITIAL	SUCCESS	 6.0	
2020-12-16 23:48:18,008	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 6.0>
2020-12-16 23:48:18,008	[INFO]	==== START ====
2020-12-16 23:48:21,185	[INFO]	1	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 23:48:24,765	[INFO]	2	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:48:24,766	[INFO]	3	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:48:24,767	[DEBUG]	
2020-12-16 23:48:25,565	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14)})
2020-12-16 23:48:26,464	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:48:27,371	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:48:27,372	[INFO]	7	SUCCESS	+6.0	
2020-12-16 23:48:27,373	[DEBUG]	
2020-12-16 23:48:28,301	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:48:31,817	[INFO]	9	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:48:36,010	[INFO]	10	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:48:36,806	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18), 'direction': 'before'})
2020-12-16 23:48:40,152	[INFO]	12	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:48:40,153	[INFO]	13	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:48:40,153	[DEBUG]	
2020-12-16 23:48:40,154	[INFO]	14	SUCCESS	+6.0	
2020-12-16 23:48:40,154	[DEBUG]	
2020-12-16 23:48:43,293	[INFO]	15	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '=='})
2020-12-16 23:48:43,294	[INFO]	16	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '<='})
2020-12-16 23:48:44,066	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:48:48,259	[INFO]	18	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '!='})
2020-12-16 23:48:48,260	[INFO]	19	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:48:52,173	[INFO]	20	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '<'})
2020-12-16 23:48:52,173	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,30 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {
--- 24,30 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j < 0) {
                      memo[i][j] = 0;
                  }
                  else if (weight < j) {

2020-12-16 23:48:52,174	[INFO]	21	SUCCESS	+6.0	
2020-12-16 23:48:52,174	[DEBUG]	
2020-12-16 23:48:52,846	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:48:56,451	[INFO]	23	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:48:57,242	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0), 'direction': 'before'})
2020-12-16 23:48:58,069	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:48:58,805	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:48:59,668	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:49:04,034	[INFO]	28	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:49:04,035	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,29 ****
--- 24,33 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
+                 if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }

2020-12-16 23:49:04,036	[INFO]	29	SUCCESS	+6.0	
2020-12-16 23:49:04,036	[DEBUG]	
2020-12-16 23:49:04,037	[INFO]	30	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:49:07,157	[INFO]	31	SUCCESS	 10.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 14), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:49:08,013	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:49:12,284	[INFO]	33	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:49:13,041	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:49:13,921	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:49:14,804	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1), 'direction': 'before'})
2020-12-16 23:49:14,806	[INFO]	37	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:49:15,566	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:49:18,984	[INFO]	39	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:49:19,787	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 5), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2), 'direction': 'before'})
2020-12-16 23:49:20,658	[INFO]	41	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:49:23,896	[INFO]	42	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:49:27,160	[INFO]	43	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '>'})
2020-12-16 23:49:27,161	[INFO]	44	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:49:27,162	[INFO]	45	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:49:27,163	[INFO]	46	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:49:27,163	[INFO]	47	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:49:27,964	[INFO]	48	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:49:28,802	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:49:32,119	[INFO]	50	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:49:32,121	[INFO]	51	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:49:35,493	[INFO]	52	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '>='})
2020-12-16 23:49:36,274	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:49:36,276	[INFO]	54	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:49:37,101	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:49:37,939	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:49:38,788	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:49:39,638	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 14), 'direction': 'before'})
2020-12-16 23:49:43,557	[INFO]	59	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:49:46,790	[INFO]	60	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>='})
2020-12-16 23:49:47,608	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:49:48,457	[INFO]	62	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:49:49,331	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 19), 'ingredient': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:49:52,845	[INFO]	64	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '>'})
2020-12-16 23:49:56,990	[INFO]	65	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:49:56,992	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:49:56,993	[INFO]	67	SUCCESS	+6.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:49:56,993	[DEBUG]	
2020-12-16 23:50:00,816	[INFO]	68	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:50:04,611	[INFO]	69	SUCCESS	 10.0	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>'})
2020-12-16 23:50:04,612	[INFO]	70	SUCCESS	+6.0	
2020-12-16 23:50:04,612	[DEBUG]	
2020-12-16 23:50:05,254	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:50:08,389	[INFO]	72	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '!='})
2020-12-16 23:50:08,390	[INFO]	73	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '=='})
2020-12-16 23:50:09,078	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:50:09,081	[INFO]	75	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 17)})
2020-12-16 23:50:12,777	[INFO]	76	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:50:15,992	[INFO]	77	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '>'})
2020-12-16 23:50:16,782	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 0)})
2020-12-16 23:50:17,616	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:50:17,618	[INFO]	80	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 9)})
2020-12-16 23:50:20,895	[INFO]	81	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:50:21,692	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:50:21,694	[INFO]	83	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:50:25,889	[INFO]	84	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:50:26,552	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:50:26,556	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:50:26,559	[INFO]	87	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:50:29,855	[INFO]	88	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '!='})
2020-12-16 23:50:29,856	[INFO]	89	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:50:29,856	[DEBUG]	
2020-12-16 23:50:34,743	[INFO]	90	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'})
2020-12-16 23:50:34,745	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,37 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 for (int j = 0; j <= capacity; j++)
+             {
+                 if (i == 0 || j == 0) {
+                     memo[i][j] = 0;
+                 }
+                 else if (weight < j) {
+                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
+                 }
+                 else {
+                     memo[i][j] = memo [i-1][j];
+                 }
+ 
+             }
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 23:50:35,754	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 1)})
2020-12-16 23:50:35,756	[INFO]	92	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:50:35,757	[INFO]	93	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:50:35,758	[DEBUG]	
2020-12-16 23:50:41,324	[INFO]	94	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 8), 'direction': 'before'})
2020-12-16 23:50:41,325	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 19,24 ****
--- 19,25 ----
          for (int i = 0; i <= n ; i++)
          {
              if (i - 1 >= 0) {
+                 value = items[i - 1][1];
                  weight = items[i - 1][0];
                  value = items[i - 1][1];
              }

2020-12-16 23:50:41,326	[INFO]	95	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='})
2020-12-16 23:50:41,327	[DEBUG]	
2020-12-16 23:50:42,699	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 11), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:50:42,701	[INFO]	97	SUCCESS	+6.0	
2020-12-16 23:50:42,701	[DEBUG]	
2020-12-16 23:50:42,703	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:50:44,143	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 2), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7), 'direction': 'before'})
2020-12-16 23:50:44,145	[INFO]	100	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 15)})
2020-12-16 23:50:44,147	[INFO]	101	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:50:45,517	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 1), 'ingredient': ('java_programs/KNAPSACK.java.xml', 19), 'direction': 'before'})
2020-12-16 23:50:46,529	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 3), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:50:46,532	[INFO]	104	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<'})
2020-12-16 23:50:46,533	[INFO]	105	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:50:46,535	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 7)})
2020-12-16 23:50:46,536	[INFO]	107	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:50:46,538	[INFO]	108	SUCCESS	+6.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='})
2020-12-16 23:50:46,538	[DEBUG]	
2020-12-16 23:50:47,537	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 10), 'value': '<='}) | StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 7), 'ingredient': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:50:47,539	[INFO]	110	SUCCESS	+6.0	
2020-12-16 23:50:47,540	[DEBUG]	
2020-12-16 23:50:48,398	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 15), 'ingredient': ('java_programs/KNAPSACK.java.xml', 2)})
2020-12-16 23:50:48,400	[INFO]	112	SUCCESS	 7.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 18)})
2020-12-16 23:50:53,544	[INFO]	113	SUCCESS	+6.0	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 18), 'ingredient': ('java_programs/KNAPSACK.java.xml', 5), 'direction': 'before'})
2020-12-16 23:50:53,545	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 31,36 ****
--- 31,40 ----
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
+                     if (i - 1 >= 0) {
+                 weight = items[i - 1][0];
+                 value = items[i - 1][1];
+             }
                      memo[i][j] = memo [i-1][j];
                  }
  

2020-12-16 23:50:53,546	[INFO]	114	SUCCESS	+6.0	
2020-12-16 23:50:53,546	[DEBUG]	
2020-12-16 23:50:57,882	[INFO]	115	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '>='})
2020-12-16 23:51:01,594	[INFO]	116	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 13), 'value': '!='})
2020-12-16 23:51:01,595	[INFO]	117	SUCCESS	 8.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 6), 'value': '>'})
2020-12-16 23:51:02,241	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 0), 'ingredient': ('java_programs/KNAPSACK.java.xml', 15), 'direction': 'before'})
2020-12-16 23:51:06,350	[INFO]	119	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 4), 'value': '<'})
2020-12-16 23:51:07,153	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 8), 'ingredient': ('java_programs/KNAPSACK.java.xml', 3), 'direction': 'before'})
2020-12-16 23:51:07,982	[INFO]	121	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 19)})
2020-12-16 23:51:08,699	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 11)})
2020-12-16 23:51:12,719	[INFO]	123	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 8)})
2020-12-16 23:51:12,720	[INFO]	124	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 3)})
2020-12-16 23:51:12,721	[INFO]	125	SUCCESS	 10.0	StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 5)})
2020-12-16 23:51:16,952	[INFO]	126	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,952	[DEBUG]	*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,953	[INFO]	==== END ====
2020-12-16 23:51:16,953	[INFO]	Reason: target fitness reached
2020-12-16 23:51:16,953	[INFO]	
2020-12-16 23:51:16,953	[INFO]	========== REPORT ==========
2020-12-16 23:51:16,954	[INFO]	==== Epoch 1 ====
2020-12-16 23:51:16,954	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,954	[INFO]	Number of interations: 14
2020-12-16 23:51:16,954	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,954	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,954	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,954	[INFO]	==== Epoch 2 ====
2020-12-16 23:51:16,954	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,954	[INFO]	Number of interations: 43
2020-12-16 23:51:16,954	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,954	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,954	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,954	[INFO]	==== Epoch 3 ====
2020-12-16 23:51:16,954	[INFO]	Termination: step budget
2020-12-16 23:51:16,954	[INFO]	Number of interations: 500
2020-12-16 23:51:16,955	[INFO]	==== Epoch 4 ====
2020-12-16 23:51:16,955	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,955	[INFO]	Number of interations: 495
2020-12-16 23:51:16,955	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,955	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,955	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,955	[INFO]	==== Epoch 5 ====
2020-12-16 23:51:16,955	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,955	[INFO]	Number of interations: 6
2020-12-16 23:51:16,956	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,956	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,956	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,956	[INFO]	==== Epoch 6 ====
2020-12-16 23:51:16,956	[INFO]	Termination: step budget
2020-12-16 23:51:16,956	[INFO]	Number of interations: 500
2020-12-16 23:51:16,956	[INFO]	==== Epoch 7 ====
2020-12-16 23:51:16,956	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,956	[INFO]	Number of interations: 264
2020-12-16 23:51:16,956	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,956	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,956	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,956	[INFO]	==== Epoch 8 ====
2020-12-16 23:51:16,957	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,957	[INFO]	Number of interations: 24
2020-12-16 23:51:16,957	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,957	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,957	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,957	[INFO]	==== Epoch 9 ====
2020-12-16 23:51:16,957	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,957	[INFO]	Number of interations: 56
2020-12-16 23:51:16,957	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,957	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,957	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,957	[INFO]	==== Epoch 10 ====
2020-12-16 23:51:16,957	[INFO]	Termination: step budget
2020-12-16 23:51:16,957	[INFO]	Number of interations: 500
2020-12-16 23:51:16,957	[INFO]	==== Epoch 11 ====
2020-12-16 23:51:16,958	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,958	[INFO]	Number of interations: 4
2020-12-16 23:51:16,958	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,958	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/KNAPSACK.java.xml', 17), 'ingredient': ('java_programs/KNAPSACK.java.xml', 17), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,958	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,34 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
!                     memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,958	[INFO]	==== Epoch 12 ====
2020-12-16 23:51:16,958	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,958	[INFO]	Number of interations: 41
2020-12-16 23:51:16,958	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,958	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,958	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,958	[INFO]	==== Epoch 13 ====
2020-12-16 23:51:16,958	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,958	[INFO]	Number of interations: 277
2020-12-16 23:51:16,959	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,959	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,959	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,959	[INFO]	==== Epoch 14 ====
2020-12-16 23:51:16,959	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,959	[INFO]	Number of interations: 76
2020-12-16 23:51:16,959	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,959	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,959	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,959	[INFO]	==== Epoch 15 ====
2020-12-16 23:51:16,959	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,959	[INFO]	Number of interations: 72
2020-12-16 23:51:16,959	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,960	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,960	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,960	[INFO]	==== Epoch 16 ====
2020-12-16 23:51:16,960	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,960	[INFO]	Number of interations: 68
2020-12-16 23:51:16,960	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,960	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,960	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,960	[INFO]	==== Epoch 17 ====
2020-12-16 23:51:16,960	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,960	[INFO]	Number of interations: 51
2020-12-16 23:51:16,960	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,960	[INFO]	Best patch: StmtDeletion({'target': ('java_programs/KNAPSACK.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,961	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 25,33 ****
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 25,33 ----
              for (int j = 0; j <= capacity; j++)
              {
                  if (i == 0 || j == 0) {
!                     
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,961	[INFO]	==== Epoch 18 ====
2020-12-16 23:51:16,961	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,961	[INFO]	Number of interations: 27
2020-12-16 23:51:16,961	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,961	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 12), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,961	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 24,33 ****
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 24,33 ----
              }
              for (int j = 0; j <= capacity; j++)
              {
!                 if (i <= 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,961	[INFO]	==== Epoch 19 ====
2020-12-16 23:51:16,961	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,961	[INFO]	Number of interations: 102
2020-12-16 23:51:16,961	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,961	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/KNAPSACK.java.xml', 9), 'ingredient': ('java_programs/KNAPSACK.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,961	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,962	[INFO]	==== Epoch 20 ====
2020-12-16 23:51:16,962	[INFO]	Termination: target fitness reached
2020-12-16 23:51:16,962	[INFO]	Number of interations: 126
2020-12-16 23:51:16,962	[INFO]	Best fitness: 0.0
2020-12-16 23:51:16,962	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/KNAPSACK.java.xml', 16), 'value': '<='})
2020-12-16 23:51:16,962	[INFO]	Diff:
*** before: java_programs/KNAPSACK.java.xml
--- after: java_programs/KNAPSACK.java.xml
***************
*** 27,33 ****
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight < j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {
--- 27,33 ----
                  if (i == 0 || j == 0) {
                      memo[i][j] = 0;
                  }
!                 else if (weight <= j) {
                      memo[i][j] = Math.max(memo[i - 1][j], value + memo[i - 1][j - weight]);
                  }
                  else {

2020-12-16 23:51:16,967	[INFO]	Experiment duration: 5649.265291452408
