2020-12-16 02:06:43,937	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1608080803
2020-12-16 02:06:43,937	[INFO]	========== EXPERIMENT FOR ['java_programs/DEPTH_FIRST_SEARCH.java.xml']  ==========
2020-12-16 02:06:43,937	[INFO]	modification points:
 ['./decl_stmt[1]', './if[1]', './if[1]/return[1]', './if[2]', './if[2]/operator_comp[1]', './if[2]/return[1]', './for[1]', './for[1]/if[1]', './for[1]/if[1]/return[1]', './return[1]', './decl_stmt[2]', './return[2]']
2020-12-16 02:06:43,937	[INFO]	number of statements and comparisons: 11, 1
2020-12-16 02:06:43,937	[INFO]	========== EPOCH 1 ==========
2020-12-16 02:06:43,938	[INFO]	==== WARMUP ====
2020-12-16 02:06:47,078	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:06:47,078	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:06:50,217	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:06:50,217	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:06:53,289	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:06:53,289	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:06:56,329	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:06:56,329	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:06:56,330	[INFO]	==== START ====
2020-12-16 02:06:59,457	[INFO]	1	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:06:59,460	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:06:59,461	[DEBUG]	
2020-12-16 02:07:00,337	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:07:01,208	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:07:02,088	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:07:02,981	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:07:02,982	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:07:02,982	[DEBUG]	
2020-12-16 02:07:02,983	[INFO]	8	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:07:02,983	[DEBUG]	
2020-12-16 02:07:02,984	[INFO]	9	SUCCESS	+1.0	
2020-12-16 02:07:02,984	[DEBUG]	
2020-12-16 02:07:03,879	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:07:04,790	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:07:05,558	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:07:06,427	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:07:07,314	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:07:10,544	[INFO]	15	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:07:10,546	[INFO]	16	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:07:10,547	[DEBUG]	
2020-12-16 02:07:10,548	[INFO]	17	SUCCESS	+1.0	
2020-12-16 02:07:10,548	[DEBUG]	
2020-12-16 02:07:13,612	[INFO]	18	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:07:13,614	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:07:16,759	[INFO]	20	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:07:16,760	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:07:19,821	[INFO]	21	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:07:19,823	[INFO]	22	SUCCESS	+1.0	
2020-12-16 02:07:19,823	[DEBUG]	
2020-12-16 02:07:22,945	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:07:22,946	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:07:26,064	[INFO]	24	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:07:26,915	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:07:26,917	[INFO]	26	SUCCESS	+1.0	
2020-12-16 02:07:26,917	[DEBUG]	
2020-12-16 02:07:27,806	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:07:28,705	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:07:31,787	[INFO]	29	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:07:32,548	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:07:33,257	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:07:34,127	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:07:34,995	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:07:38,185	[INFO]	34	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:07:39,041	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:07:39,044	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:07:42,197	[INFO]	37	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:07:42,198	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:07:42,199	[INFO]	39	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:07:42,200	[INFO]	40	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:07:42,201	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:07:42,892	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:07:46,369	[INFO]	43	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:07:46,372	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:07:49,453	[INFO]	45	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:07:49,454	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:07:49,455	[INFO]	46	SUCCESS	+1.0	
2020-12-16 02:07:49,456	[DEBUG]	
2020-12-16 02:07:49,458	[INFO]	47	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:07:50,308	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:07:50,309	[INFO]	49	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:07:50,310	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:07:50,311	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:07:50,312	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:07:53,685	[INFO]	53	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:07:53,688	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:07:53,689	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:07:53,690	[INFO]	56	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:07:53,691	[DEBUG]	
2020-12-16 02:07:53,692	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:07:53,693	[INFO]	58	SUCCESS	+1.0	
2020-12-16 02:07:53,694	[DEBUG]	
2020-12-16 02:07:54,549	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:07:54,550	[INFO]	60	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:07:54,551	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:07:54,551	[DEBUG]	
2020-12-16 02:07:54,552	[INFO]	62	SUCCESS	+1.0	
2020-12-16 02:07:54,552	[DEBUG]	
2020-12-16 02:07:55,436	[INFO]	63	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:07:56,184	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:07:59,387	[INFO]	65	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:08:02,381	[INFO]	66	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:08:02,382	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:08:03,251	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:08:03,252	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:08:03,253	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:08:03,253	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:08:03,254	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:08:03,254	[INFO]	70	SUCCESS	+1.0	
2020-12-16 02:08:03,254	[DEBUG]	
2020-12-16 02:08:06,427	[INFO]	71	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:08:07,317	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:08:10,420	[INFO]	73	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:08:11,150	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:08:12,022	[INFO]	75	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:08:15,150	[INFO]	76	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:08:15,152	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:08:15,997	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:08:16,742	[INFO]	79	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:08:16,745	[INFO]	80	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:08:16,745	[DEBUG]	
2020-12-16 02:08:16,747	[INFO]	81	SUCCESS	+1.0	
2020-12-16 02:08:16,747	[DEBUG]	
2020-12-16 02:08:16,749	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:08:17,594	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:08:18,342	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:08:18,343	[INFO]	85	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:08:18,343	[DEBUG]	
2020-12-16 02:08:18,344	[INFO]	86	SUCCESS	+1.0	
2020-12-16 02:08:18,344	[DEBUG]	
2020-12-16 02:08:18,345	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:08:18,346	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:08:18,346	[INFO]	89	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:08:18,347	[DEBUG]	
2020-12-16 02:08:18,348	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:08:18,348	[INFO]	91	SUCCESS	+1.0	
2020-12-16 02:08:18,348	[DEBUG]	
2020-12-16 02:08:19,084	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:08:19,949	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:08:19,950	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:08:19,951	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:08:20,677	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:08:20,678	[INFO]	97	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:08:21,584	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:08:22,479	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:08:22,481	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:08:23,237	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:08:23,240	[INFO]	102	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:08:24,094	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:08:24,997	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:08:24,998	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:08:28,128	[INFO]	106	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:08:28,833	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:08:31,914	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:08:31,916	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:08:31,918	[INFO]	109	SUCCESS	+1.0	
2020-12-16 02:08:31,918	[DEBUG]	
2020-12-16 02:08:32,780	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:08:32,781	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:08:35,975	[INFO]	112	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:08:35,977	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:08:36,859	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:08:36,861	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:08:37,756	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:08:37,760	[INFO]	117	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:08:37,764	[INFO]	118	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:08:37,765	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:08:40,803	[INFO]	120	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:08:40,804	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:08:41,660	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:08:41,661	[INFO]	122	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:08:41,662	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:08:41,662	[INFO]	123	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:08:41,663	[DEBUG]	
2020-12-16 02:08:41,663	[INFO]	124	SUCCESS	+1.0	
2020-12-16 02:08:41,663	[DEBUG]	
2020-12-16 02:08:44,722	[INFO]	125	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:08:44,725	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:08:44,726	[INFO]	127	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:08:44,728	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:08:45,468	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:08:45,471	[INFO]	130	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:08:45,472	[INFO]	131	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:08:46,336	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:08:47,203	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:08:47,204	[INFO]	134	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:08:47,205	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:08:47,965	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:08:47,969	[INFO]	137	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:08:47,971	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:08:47,973	[INFO]	139	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:08:47,973	[DEBUG]	
2020-12-16 02:08:48,870	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:08:48,871	[INFO]	141	SUCCESS	+1.0	
2020-12-16 02:08:48,871	[DEBUG]	
2020-12-16 02:08:52,031	[INFO]	142	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:08:52,034	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:08:52,036	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:08:52,038	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:08:52,039	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:08:52,040	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:08:52,774	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:08:55,841	[INFO]	149	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:08:59,028	[INFO]	150	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:08:59,029	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:08:59,030	[INFO]	151	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:08:59,030	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:08:59,855	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:09:02,962	[INFO]	153	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:09:02,964	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,25 ****
--- 16,29 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:02,966	[INFO]	154	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:09:02,966	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:03,808	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:09:06,876	[INFO]	156	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:09:06,877	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:10,082	[INFO]	157	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:09:10,084	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     
+                 } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
                      return false;
!                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:13,172	[INFO]	158	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:09:13,174	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,29 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:16,331	[INFO]	159	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:09:17,025	[INFO]	160	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:09:17,899	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:09:17,901	[INFO]	162	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:09:17,901	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,29 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:17,902	[INFO]	163	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:09:17,902	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,29 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:18,637	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:09:21,857	[INFO]	165	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:09:21,859	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:09:21,861	[INFO]	166	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:09:22,718	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:09:23,583	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:09:23,584	[INFO]	169	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:09:23,584	[DEBUG]	
2020-12-16 02:09:23,585	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:09:23,586	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:09:24,317	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:09:25,204	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:09:28,374	[INFO]	174	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:09:28,375	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:09:28,376	[INFO]	175	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:09:28,376	[DEBUG]	
2020-12-16 02:09:29,245	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:09:32,396	[INFO]	177	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:09:32,398	[INFO]	178	SUCCESS	+1.0	
2020-12-16 02:09:32,398	[DEBUG]	
2020-12-16 02:09:33,134	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:09:33,987	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:09:34,716	[INFO]	181	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:09:34,718	[INFO]	182	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:09:34,720	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:09:34,722	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:09:37,841	[INFO]	185	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:09:37,843	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:09:37,844	[INFO]	186	SUCCESS	+1.0	
2020-12-16 02:09:37,845	[DEBUG]	
2020-12-16 02:09:37,846	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:09:37,847	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:09:40,980	[INFO]	189	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:09:40,981	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:09:41,875	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:09:41,879	[INFO]	191	SUCCESS	+1.0	
2020-12-16 02:09:41,879	[DEBUG]	
2020-12-16 02:09:45,068	[INFO]	192	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:09:48,189	[INFO]	193	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:09:48,191	[INFO]	194	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:09:48,192	[DEBUG]	
2020-12-16 02:09:48,193	[INFO]	195	SUCCESS	+1.0	
2020-12-16 02:09:48,193	[DEBUG]	
2020-12-16 02:09:49,024	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:09:49,025	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:09:49,026	[INFO]	198	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:09:49,888	[INFO]	199	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:09:49,889	[INFO]	200	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:09:49,890	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:09:50,625	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:09:51,483	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:09:51,485	[INFO]	204	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:09:51,485	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:09:52,336	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:09:52,337	[INFO]	206	SUCCESS	+1.0	
2020-12-16 02:09:52,337	[DEBUG]	
2020-12-16 02:09:53,104	[INFO]	207	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:09:56,202	[INFO]	208	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:09:56,203	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:09:56,205	[INFO]	209	SUCCESS	+1.0	
2020-12-16 02:09:56,205	[DEBUG]	
2020-12-16 02:09:59,305	[INFO]	210	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:10:00,053	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:10:03,077	[INFO]	212	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:10:06,144	[INFO]	213	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:10:07,013	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:10:07,756	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:10:07,759	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:10:10,890	[INFO]	217	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:10:10,892	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:10:10,894	[INFO]	218	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:10:10,895	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:10:10,897	[INFO]	219	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:10:10,897	[DEBUG]	
2020-12-16 02:10:11,769	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:10:14,830	[INFO]	221	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:10:14,831	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:14,832	[INFO]	222	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:10:14,833	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:15,714	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:10:16,581	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:10:16,583	[INFO]	225	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:10:16,584	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:16,584	[INFO]	226	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:10:16,585	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:16,586	[INFO]	227	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:10:16,586	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:16,587	[INFO]	228	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:10:16,588	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:17,322	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:10:17,323	[INFO]	230	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:10:17,323	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:18,181	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:10:18,182	[INFO]	232	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:10:18,183	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:19,054	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:10:19,942	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:10:19,945	[INFO]	235	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:10:19,946	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:20,845	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:10:20,847	[INFO]	237	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:10:20,847	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:20,848	[INFO]	238	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:10:20,848	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:21,735	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:10:22,630	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:10:22,633	[INFO]	241	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:10:22,633	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:22,635	[INFO]	242	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:10:22,635	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:22,636	[INFO]	243	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:10:22,637	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:22,638	[INFO]	244	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:10:22,639	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:22,640	[INFO]	245	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:10:22,641	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:22,642	[INFO]	246	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:10:22,643	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:23,526	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:10:24,244	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:10:24,246	[INFO]	249	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:10:24,246	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:24,978	[INFO]	250	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:10:28,129	[INFO]	251	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:10:28,944	[INFO]	252	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:10:28,946	[INFO]	253	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:10:28,946	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:28,947	[INFO]	254	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:10:28,948	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:29,856	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:10:30,596	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:10:30,598	[INFO]	257	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:10:30,598	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:30,599	[INFO]	258	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:10:30,600	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:30,600	[INFO]	259	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:10:30,601	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:31,466	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:10:32,339	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:10:32,340	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:10:32,341	[INFO]	263	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:10:32,341	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:32,342	[INFO]	264	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:10:32,343	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:35,636	[INFO]	265	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:10:35,637	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:36,827	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:10:38,054	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:10:38,056	[INFO]	268	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:10:38,057	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:38,058	[INFO]	269	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:10:38,058	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:39,045	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:10:39,047	[INFO]	271	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:10:39,047	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:42,145	[INFO]	272	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:10:42,146	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
--- 16,31 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     Search s = new Search();
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:43,028	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:10:46,169	[INFO]	274	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:10:46,170	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
--- 16,34 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 else if (node == goalnode) {
+                     return true;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     Search s = new Search();
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:46,171	[INFO]	275	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:10:46,172	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
--- 16,34 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 else if (node == goalnode) {
+                     return true;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     Search s = new Search();
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:47,006	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:10:47,008	[INFO]	277	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:10:47,009	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
--- 16,31 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     Search s = new Search();
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:50,164	[INFO]	278	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:10:50,167	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
--- 16,30 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:53,238	[INFO]	279	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:10:56,293	[INFO]	280	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:10:56,294	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
--- 16,30 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:56,295	[INFO]	281	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:10:56,295	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:10:56,296	[INFO]	282	SUCCESS	+1.0	
2020-12-16 02:10:56,296	[DEBUG]	
2020-12-16 02:10:59,435	[INFO]	283	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:11:00,343	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:11:01,095	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:11:04,134	[INFO]	286	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:11:05,023	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:11:05,921	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:11:05,922	[INFO]	289	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:11:06,810	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:11:07,648	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:11:10,743	[INFO]	292	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:11:11,624	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:11:11,625	[INFO]	294	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:11:11,626	[DEBUG]	
2020-12-16 02:11:11,626	[INFO]	295	SUCCESS	+1.0	
2020-12-16 02:11:11,626	[DEBUG]	
2020-12-16 02:11:11,627	[INFO]	296	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:11:12,508	[INFO]	297	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:11:15,720	[INFO]	298	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:11:15,721	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:11:16,573	[INFO]	299	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:11:16,576	[INFO]	300	SUCCESS	+1.0	
2020-12-16 02:11:16,576	[DEBUG]	
2020-12-16 02:11:19,635	[INFO]	301	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:11:19,636	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:11:20,516	[INFO]	302	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:11:20,517	[INFO]	303	SUCCESS	+1.0	
2020-12-16 02:11:20,517	[DEBUG]	
2020-12-16 02:11:23,663	[INFO]	304	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:11:23,665	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:11:23,666	[INFO]	305	SUCCESS	+1.0	
2020-12-16 02:11:23,666	[DEBUG]	
2020-12-16 02:11:26,740	[INFO]	306	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:11:26,743	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:11:26,744	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:11:29,890	[INFO]	309	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:11:30,779	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:11:30,780	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:11:33,843	[INFO]	312	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:11:33,844	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:11:36,912	[INFO]	313	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:11:36,913	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    
+                     }
                  }
                  return false;
              }

2020-12-16 02:11:36,914	[INFO]	314	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:11:36,915	[INFO]	315	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:11:36,915	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    
+                     }
                  }
                  return false;
              }

2020-12-16 02:11:36,916	[INFO]	316	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:11:36,917	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:11:37,791	[INFO]	317	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:11:37,792	[INFO]	318	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:11:37,793	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:11:38,517	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:11:41,586	[INFO]	320	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:11:42,457	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:11:42,458	[INFO]	322	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:11:42,459	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:11:43,327	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:11:46,512	[INFO]	324	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:11:46,513	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,28 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     
                  }
                  return false;
              }

2020-12-16 02:11:47,322	[INFO]	325	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:11:48,179	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:11:48,180	[INFO]	327	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:11:48,181	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:11:48,181	[INFO]	328	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:11:48,182	[DEBUG]	
2020-12-16 02:11:48,182	[INFO]	329	SUCCESS	+1.0	
2020-12-16 02:11:48,182	[DEBUG]	
2020-12-16 02:11:49,078	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:11:49,956	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:11:49,959	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:11:50,851	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:11:51,726	[INFO]	334	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:11:52,607	[INFO]	335	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:11:53,477	[INFO]	336	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:11:54,217	[INFO]	337	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:11:57,343	[INFO]	338	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:12:00,395	[INFO]	339	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:12:00,398	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:12:03,536	[INFO]	341	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:12:03,537	[INFO]	342	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:12:03,538	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:12:03,538	[INFO]	344	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:12:03,539	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:12:03,540	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:12:03,541	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:12:04,381	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:12:07,719	[INFO]	349	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:12:07,721	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:12:08,470	[INFO]	350	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:12:09,333	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:12:09,334	[INFO]	352	SUCCESS	+1.0	
2020-12-16 02:12:09,334	[DEBUG]	
2020-12-16 02:12:10,208	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:12:13,350	[INFO]	354	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:12:14,208	[INFO]	355	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:12:14,209	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:12:14,210	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:12:14,211	[INFO]	358	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:12:14,211	[DEBUG]	
2020-12-16 02:12:17,359	[INFO]	359	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:12:20,514	[INFO]	360	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:12:20,515	[INFO]	361	SUCCESS	+1.0	
2020-12-16 02:12:20,515	[DEBUG]	
2020-12-16 02:12:21,371	[INFO]	362	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:12:21,373	[INFO]	363	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:12:21,373	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:12:21,374	[INFO]	365	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:12:21,374	[DEBUG]	
2020-12-16 02:12:24,476	[INFO]	366	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:12:24,477	[INFO]	367	SUCCESS	+1.0	
2020-12-16 02:12:24,477	[DEBUG]	
2020-12-16 02:12:27,620	[INFO]	368	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:12:28,362	[INFO]	369	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:12:29,291	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:12:29,294	[INFO]	371	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:12:29,295	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:12:30,020	[INFO]	373	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:12:30,021	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:12:33,161	[INFO]	375	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:12:33,162	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:12:36,307	[INFO]	376	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:12:39,413	[INFO]	377	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:12:39,416	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:12:39,418	[INFO]	378	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:12:39,418	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:12:39,420	[INFO]	379	SUCCESS	+1.0	
2020-12-16 02:12:39,420	[DEBUG]	
2020-12-16 02:12:40,300	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:12:40,301	[INFO]	381	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:12:40,301	[DEBUG]	
2020-12-16 02:12:40,302	[INFO]	382	SUCCESS	+1.0	
2020-12-16 02:12:40,302	[DEBUG]	
2020-12-16 02:12:40,303	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:12:40,303	[INFO]	384	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:12:40,304	[DEBUG]	
2020-12-16 02:12:40,304	[INFO]	385	SUCCESS	+1.0	
2020-12-16 02:12:40,304	[DEBUG]	
2020-12-16 02:12:43,409	[INFO]	386	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:12:43,410	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:12:43,412	[INFO]	387	SUCCESS	+1.0	
2020-12-16 02:12:43,412	[DEBUG]	
2020-12-16 02:12:44,284	[INFO]	388	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:12:44,287	[INFO]	389	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:12:44,287	[DEBUG]	
2020-12-16 02:12:44,289	[INFO]	390	SUCCESS	+1.0	
2020-12-16 02:12:44,289	[DEBUG]	
2020-12-16 02:12:45,149	[INFO]	391	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:12:46,021	[INFO]	392	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:12:46,023	[INFO]	393	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:12:46,023	[INFO]	394	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:12:46,024	[INFO]	395	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:12:46,024	[DEBUG]	
2020-12-16 02:12:46,025	[INFO]	396	SUCCESS	+1.0	
2020-12-16 02:12:46,025	[DEBUG]	
2020-12-16 02:12:46,928	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:12:50,026	[INFO]	398	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:12:50,028	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:12:50,030	[INFO]	399	SUCCESS	+1.0	
2020-12-16 02:12:50,030	[DEBUG]	
2020-12-16 02:12:53,127	[INFO]	400	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:12:53,129	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:12:53,130	[INFO]	401	SUCCESS	+1.0	
2020-12-16 02:12:53,130	[DEBUG]	
2020-12-16 02:12:53,992	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:12:53,993	[INFO]	403	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:12:57,195	[INFO]	404	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:12:58,054	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:12:58,911	[INFO]	406	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:12:59,795	[INFO]	407	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:13:00,679	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:13:00,681	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:13:03,801	[INFO]	410	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:13:06,920	[INFO]	411	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:13:06,922	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:13:06,923	[INFO]	412	SUCCESS	+1.0	
2020-12-16 02:13:06,924	[DEBUG]	
2020-12-16 02:13:10,084	[INFO]	413	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:13:10,085	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:13:10,085	[INFO]	414	SUCCESS	+1.0	
2020-12-16 02:13:10,085	[DEBUG]	
2020-12-16 02:13:13,130	[INFO]	415	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:13:16,173	[INFO]	416	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:13:19,225	[INFO]	417	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:13:19,228	[INFO]	418	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:13:20,159	[INFO]	419	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:13:20,160	[INFO]	420	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:13:20,160	[DEBUG]	
2020-12-16 02:13:20,161	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:13:20,162	[INFO]	422	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:13:20,162	[INFO]	423	SUCCESS	+1.0	
2020-12-16 02:13:20,162	[DEBUG]	
2020-12-16 02:13:20,163	[INFO]	424	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:13:20,950	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:13:20,952	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:13:20,954	[INFO]	427	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:13:20,955	[DEBUG]	
2020-12-16 02:13:21,818	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:13:24,975	[INFO]	429	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:13:24,977	[INFO]	430	SUCCESS	+1.0	
2020-12-16 02:13:24,978	[DEBUG]	
2020-12-16 02:13:24,979	[INFO]	431	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:13:25,835	[INFO]	432	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:13:29,042	[INFO]	433	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:13:29,043	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:13:29,045	[INFO]	434	SUCCESS	+1.0	
2020-12-16 02:13:29,045	[DEBUG]	
2020-12-16 02:13:29,048	[INFO]	435	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:13:29,049	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:13:29,051	[INFO]	437	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:13:32,119	[INFO]	438	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:13:32,122	[INFO]	439	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:13:32,123	[DEBUG]	
2020-12-16 02:13:32,125	[INFO]	440	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:13:32,126	[INFO]	441	SUCCESS	+1.0	
2020-12-16 02:13:32,127	[DEBUG]	
2020-12-16 02:13:32,988	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:13:33,725	[INFO]	443	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:13:34,630	[INFO]	444	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:13:34,632	[INFO]	445	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:13:34,633	[DEBUG]	
2020-12-16 02:13:35,514	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:13:35,515	[INFO]	447	SUCCESS	+1.0	
2020-12-16 02:13:35,516	[DEBUG]	
2020-12-16 02:13:38,693	[INFO]	448	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:13:38,695	[INFO]	449	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:13:39,532	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:13:40,374	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:13:41,111	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:13:42,029	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:13:42,032	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:13:45,104	[INFO]	455	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:13:45,105	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:13:45,106	[INFO]	457	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:13:45,977	[INFO]	458	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:13:46,859	[INFO]	459	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:13:47,755	[INFO]	460	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:13:47,756	[INFO]	461	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:13:50,875	[INFO]	462	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:13:54,076	[INFO]	463	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:13:54,077	[INFO]	464	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:13:54,078	[DEBUG]	
2020-12-16 02:13:54,766	[INFO]	465	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:13:54,769	[INFO]	466	SUCCESS	+1.0	
2020-12-16 02:13:54,769	[DEBUG]	
2020-12-16 02:13:57,903	[INFO]	467	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:14:00,972	[INFO]	468	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:14:00,973	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:14:00,974	[INFO]	469	SUCCESS	+1.0	
2020-12-16 02:14:00,974	[DEBUG]	
2020-12-16 02:14:00,975	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:14:01,698	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:14:01,699	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:14:02,578	[INFO]	473	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:14:02,579	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:14:02,580	[INFO]	475	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:14:02,581	[INFO]	476	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:14:02,581	[INFO]	477	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:14:03,464	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:14:06,574	[INFO]	479	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:14:06,576	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:14:09,696	[INFO]	480	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:14:09,699	[INFO]	481	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:14:09,700	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:14:10,587	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:14:10,588	[INFO]	483	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:14:10,589	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:14:10,590	[INFO]	484	SUCCESS	+1.0	
2020-12-16 02:14:10,590	[DEBUG]	
2020-12-16 02:14:11,334	[INFO]	485	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:14:11,336	[INFO]	486	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:14:12,230	[INFO]	487	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:14:12,231	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:14:12,232	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:14:13,087	[INFO]	490	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:14:13,088	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:14:13,089	[INFO]	492	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:14:14,013	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:14:17,112	[INFO]	494	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:14:17,113	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:14:17,115	[INFO]	495	SUCCESS	+1.0	
2020-12-16 02:14:17,115	[DEBUG]	
2020-12-16 02:14:17,117	[INFO]	496	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:14:18,001	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:14:18,003	[INFO]	498	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:14:18,725	[INFO]	499	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:14:21,757	[INFO]	500	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:14:21,758	[INFO]	==== END ====
2020-12-16 02:14:21,758	[INFO]	Reason: step budget
2020-12-16 02:14:21,758	[INFO]	
2020-12-16 02:14:21,758	[INFO]	========== EPOCH 2 ==========
2020-12-16 02:14:21,759	[INFO]	==== WARMUP ====
2020-12-16 02:14:24,814	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:14:24,815	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:14:27,903	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:14:27,904	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:14:31,052	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:14:31,052	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:14:34,088	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:14:34,088	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:14:34,089	[INFO]	==== START ====
2020-12-16 02:14:34,977	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:14:38,060	[INFO]	2	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:14:41,099	[INFO]	3	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:14:42,029	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:14:45,082	[INFO]	5	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:14:45,945	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:14:46,863	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:14:47,731	[INFO]	8	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:14:47,733	[INFO]	9	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:14:47,734	[DEBUG]	
2020-12-16 02:14:50,797	[INFO]	10	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:14:53,963	[INFO]	11	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:14:53,964	[INFO]	12	SUCCESS	+1.0	
2020-12-16 02:14:53,964	[DEBUG]	
2020-12-16 02:14:56,989	[INFO]	13	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:14:57,885	[INFO]	14	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:14:58,754	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:14:59,521	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:15:00,405	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:15:00,407	[INFO]	18	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:15:00,407	[DEBUG]	
2020-12-16 02:15:01,116	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:15:01,117	[INFO]	20	SUCCESS	+1.0	
2020-12-16 02:15:01,117	[DEBUG]	
2020-12-16 02:15:01,118	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:15:01,994	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:15:02,873	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:15:02,874	[INFO]	24	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:15:02,875	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:15:02,876	[INFO]	26	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:15:02,876	[DEBUG]	
2020-12-16 02:15:02,877	[INFO]	27	SUCCESS	+1.0	
2020-12-16 02:15:02,877	[DEBUG]	
2020-12-16 02:15:03,762	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:15:04,632	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:15:04,633	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:15:04,633	[DEBUG]	
2020-12-16 02:15:04,634	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:15:04,634	[INFO]	32	SUCCESS	+1.0	
2020-12-16 02:15:04,634	[DEBUG]	
2020-12-16 02:15:04,635	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:15:07,883	[INFO]	34	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:15:11,071	[INFO]	35	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:15:11,073	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:14,202	[INFO]	36	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:15:14,203	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node != goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:17,303	[INFO]	37	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:15:17,304	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,22 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
!                 } else if (node != goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:20,448	[INFO]	38	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:15:21,333	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:15:22,209	[INFO]	40	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:15:22,212	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:15:22,213	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node != goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:22,214	[INFO]	42	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:15:22,215	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:22,216	[INFO]	43	SUCCESS	+1.0	
2020-12-16 02:15:22,217	[DEBUG]	
2020-12-16 02:15:25,336	[INFO]	44	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:15:26,078	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:15:26,081	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:15:26,082	[INFO]	47	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:15:26,948	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:15:27,875	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:15:27,877	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:15:31,219	[INFO]	51	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:15:31,220	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:15:34,252	[INFO]	52	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:15:34,253	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:15:34,255	[INFO]	53	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:15:34,256	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:15:37,571	[INFO]	54	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:15:37,573	[INFO]	55	SUCCESS	+1.0	
2020-12-16 02:15:37,574	[DEBUG]	
2020-12-16 02:15:37,575	[INFO]	56	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:15:37,576	[DEBUG]	
2020-12-16 02:15:37,577	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:15:37,579	[INFO]	58	SUCCESS	+1.0	
2020-12-16 02:15:37,579	[DEBUG]	
2020-12-16 02:15:38,443	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:15:39,210	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:15:39,214	[INFO]	61	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:15:39,215	[DEBUG]	
2020-12-16 02:15:39,217	[INFO]	62	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:15:40,127	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:15:40,128	[INFO]	64	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:15:40,129	[DEBUG]	
2020-12-16 02:15:40,129	[INFO]	65	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:15:40,129	[DEBUG]	
2020-12-16 02:15:40,130	[INFO]	66	SUCCESS	+1.0	
2020-12-16 02:15:40,130	[DEBUG]	
2020-12-16 02:15:40,848	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:15:40,849	[INFO]	68	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:15:40,850	[DEBUG]	
2020-12-16 02:15:41,741	[INFO]	69	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:15:41,742	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:15:41,743	[INFO]	71	SUCCESS	+1.0	
2020-12-16 02:15:41,744	[DEBUG]	
2020-12-16 02:15:42,643	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:15:43,409	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:15:46,515	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:15:46,517	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:15:46,519	[INFO]	75	SUCCESS	+1.0	
2020-12-16 02:15:46,519	[DEBUG]	
2020-12-16 02:15:47,396	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:15:48,280	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:15:49,181	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:15:49,183	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:15:49,185	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:15:52,269	[INFO]	81	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:15:52,270	[INFO]	82	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:15:52,270	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:55,487	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:15:55,488	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 31,37 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:55,490	[INFO]	84	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:15:55,491	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:56,168	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:15:59,280	[INFO]	86	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:15:59,281	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
!                     return true;
!                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 }  else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 26,32 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:59,283	[INFO]	87	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:15:59,284	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:15:59,285	[INFO]	88	SUCCESS	+1.0	
2020-12-16 02:15:59,285	[DEBUG]	
2020-12-16 02:15:59,287	[INFO]	89	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:16:02,321	[INFO]	90	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:16:05,395	[INFO]	91	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:16:06,254	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:16:06,255	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:16:07,136	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:16:07,138	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:16:08,053	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:16:08,937	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:16:08,938	[INFO]	98	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:16:08,938	[DEBUG]	
2020-12-16 02:16:08,939	[INFO]	99	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:16:08,940	[INFO]	100	SUCCESS	+1.0	
2020-12-16 02:16:08,940	[DEBUG]	
2020-12-16 02:16:08,940	[INFO]	101	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:16:08,941	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:16:09,814	[INFO]	102	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:16:09,816	[INFO]	103	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:16:09,816	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node != goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:16:10,725	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:16:10,726	[INFO]	105	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:16:10,727	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:16:11,597	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:16:11,598	[INFO]	107	SUCCESS	+1.0	
2020-12-16 02:16:11,598	[DEBUG]	
2020-12-16 02:16:12,357	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:16:15,405	[INFO]	109	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:16:16,355	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:16:16,357	[INFO]	111	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:16:17,121	[INFO]	112	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:16:17,123	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:16:18,022	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:16:18,906	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:16:18,907	[INFO]	116	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:16:18,908	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:16:18,908	[INFO]	118	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:16:19,787	[INFO]	119	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:16:22,885	[INFO]	120	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:16:26,007	[INFO]	121	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:16:26,788	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:16:27,660	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:16:31,180	[INFO]	124	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:16:32,081	[INFO]	125	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:16:32,083	[INFO]	126	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:16:32,084	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:16:32,085	[INFO]	127	SUCCESS	+1.0	
2020-12-16 02:16:32,085	[DEBUG]	
2020-12-16 02:16:32,086	[INFO]	128	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:16:32,087	[INFO]	129	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:16:32,087	[DEBUG]	
2020-12-16 02:16:32,088	[INFO]	130	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:16:32,088	[INFO]	131	SUCCESS	+1.0	
2020-12-16 02:16:32,089	[DEBUG]	
2020-12-16 02:16:32,973	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:16:33,861	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:16:33,862	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:16:33,863	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:16:34,598	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:16:37,655	[INFO]	137	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:16:40,790	[INFO]	138	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:16:40,791	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:16:40,792	[INFO]	139	SUCCESS	+1.0	
2020-12-16 02:16:40,792	[DEBUG]	
2020-12-16 02:16:41,537	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:16:44,671	[INFO]	141	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:16:44,672	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:16:44,673	[INFO]	142	SUCCESS	+1.0	
2020-12-16 02:16:44,674	[DEBUG]	
2020-12-16 02:16:47,742	[INFO]	143	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:16:47,745	[INFO]	144	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:16:47,745	[DEBUG]	
2020-12-16 02:16:47,747	[INFO]	145	SUCCESS	+1.0	
2020-12-16 02:16:47,748	[DEBUG]	
2020-12-16 02:16:50,903	[INFO]	146	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:16:50,904	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:16:51,749	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:16:51,751	[INFO]	148	SUCCESS	+1.0	
2020-12-16 02:16:51,751	[DEBUG]	
2020-12-16 02:16:52,618	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:16:55,722	[INFO]	150	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:16:58,773	[INFO]	151	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:16:58,775	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:16:58,775	[INFO]	153	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:16:59,664	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:16:59,667	[INFO]	155	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:17:00,545	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:17:01,410	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:17:01,412	[INFO]	158	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:17:01,412	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:17:01,413	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:17:02,155	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:17:02,158	[INFO]	162	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:17:02,160	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:17:02,903	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:17:02,904	[INFO]	165	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:17:02,905	[DEBUG]	
2020-12-16 02:17:02,905	[INFO]	166	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:17:02,906	[INFO]	167	SUCCESS	+1.0	
2020-12-16 02:17:02,906	[DEBUG]	
2020-12-16 02:17:02,907	[INFO]	168	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:17:02,907	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:17:03,769	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:17:03,770	[INFO]	171	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:17:03,771	[INFO]	172	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:17:06,863	[INFO]	173	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:17:06,864	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:17:06,865	[INFO]	174	SUCCESS	+1.0	
2020-12-16 02:17:06,865	[DEBUG]	
2020-12-16 02:17:07,566	[INFO]	175	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:17:08,387	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:17:09,290	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:17:09,291	[INFO]	178	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:17:09,291	[DEBUG]	
2020-12-16 02:17:09,292	[INFO]	179	SUCCESS	+1.0	
2020-12-16 02:17:09,292	[DEBUG]	
2020-12-16 02:17:10,163	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:17:10,165	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:17:11,049	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:17:11,052	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:17:11,947	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:17:15,013	[INFO]	185	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:17:15,014	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:17:15,895	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:17:15,896	[INFO]	187	SUCCESS	+1.0	
2020-12-16 02:17:15,896	[DEBUG]	
2020-12-16 02:17:18,962	[INFO]	188	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:17:18,963	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 02:17:18,963	[INFO]	==== END ====
2020-12-16 02:17:18,963	[INFO]	Reason: target fitness reached
2020-12-16 02:17:18,964	[INFO]	
2020-12-16 02:17:18,964	[INFO]	========== EPOCH 3 ==========
2020-12-16 02:17:18,964	[INFO]	==== WARMUP ====
2020-12-16 02:17:22,115	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:17:22,115	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:17:25,212	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:17:25,212	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:17:28,254	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:17:28,255	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:17:31,405	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:17:31,406	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:17:31,406	[INFO]	==== START ====
2020-12-16 02:17:32,258	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:17:33,142	[INFO]	2	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:17:36,236	[INFO]	3	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:17:36,239	[INFO]	4	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:17:36,240	[DEBUG]	
2020-12-16 02:17:36,241	[INFO]	5	SUCCESS	+1.0	
2020-12-16 02:17:36,241	[DEBUG]	
2020-12-16 02:17:37,001	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:17:37,748	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:17:38,627	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:17:38,629	[INFO]	9	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:17:38,630	[DEBUG]	
2020-12-16 02:17:38,631	[INFO]	10	SUCCESS	+1.0	
2020-12-16 02:17:38,632	[DEBUG]	
2020-12-16 02:17:41,711	[INFO]	11	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:17:42,469	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:17:43,312	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:17:43,314	[INFO]	14	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:17:44,179	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:17:44,180	[INFO]	16	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:17:47,288	[INFO]	17	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:17:50,405	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:17:50,406	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:17:50,407	[INFO]	19	SUCCESS	+1.0	
2020-12-16 02:17:50,407	[DEBUG]	
2020-12-16 02:17:51,241	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:17:52,147	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:17:53,016	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:17:53,017	[INFO]	23	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:17:53,907	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:17:53,908	[INFO]	25	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:17:53,909	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:17:53,909	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:17:57,082	[INFO]	28	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:17:57,898	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:17:58,649	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:17:58,651	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:17:59,539	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:18:02,651	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:18:02,653	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:18:02,654	[INFO]	34	SUCCESS	+1.0	
2020-12-16 02:18:02,654	[DEBUG]	
2020-12-16 02:18:03,519	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:18:04,400	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:18:05,251	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:06,152	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:18:09,295	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:18:09,296	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:18:10,131	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:18:10,132	[INFO]	41	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:18:10,133	[DEBUG]	
2020-12-16 02:18:11,014	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:18:11,016	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:18:11,017	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:18:11,017	[DEBUG]	
2020-12-16 02:18:11,017	[INFO]	45	SUCCESS	+1.0	
2020-12-16 02:18:11,018	[DEBUG]	
2020-12-16 02:18:11,018	[INFO]	46	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:18:11,018	[DEBUG]	
2020-12-16 02:18:11,019	[INFO]	47	SUCCESS	+1.0	
2020-12-16 02:18:11,019	[DEBUG]	
2020-12-16 02:18:11,020	[INFO]	48	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:18:11,020	[INFO]	49	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:18:11,021	[DEBUG]	
2020-12-16 02:18:11,021	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:18:11,933	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:18:11,936	[INFO]	52	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:18:11,937	[DEBUG]	
2020-12-16 02:18:11,939	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:18:12,803	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:18:12,804	[INFO]	55	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:18:12,805	[DEBUG]	
2020-12-16 02:18:12,805	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:18:12,806	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:12,806	[INFO]	58	SUCCESS	+1.0	
2020-12-16 02:18:12,807	[DEBUG]	
2020-12-16 02:18:12,807	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:18:12,808	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:18:13,691	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:14,572	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:18:15,422	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:18:15,424	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:18:15,424	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:18:15,425	[INFO]	65	SUCCESS	+1.0	
2020-12-16 02:18:15,425	[DEBUG]	
2020-12-16 02:18:16,332	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:18:16,335	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:16,337	[INFO]	68	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:18:16,337	[DEBUG]	
2020-12-16 02:18:16,339	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:17,250	[INFO]	70	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:18:17,251	[INFO]	71	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:18:20,464	[INFO]	72	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:18:23,623	[INFO]	73	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:18:23,625	[INFO]	74	SUCCESS	+1.0	
2020-12-16 02:18:23,626	[DEBUG]	
2020-12-16 02:18:24,509	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:18:24,510	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:18:25,253	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:18:25,256	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:18:25,258	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:18:26,136	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:18:27,003	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:18:27,005	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:27,747	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:18:28,628	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:18:28,630	[INFO]	85	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:29,511	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:18:29,514	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:18:30,433	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:18:31,293	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:18:34,473	[INFO]	90	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:18:35,169	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:18:35,171	[INFO]	92	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:18:36,028	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:18:39,201	[INFO]	94	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:18:42,375	[INFO]	95	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:18:42,376	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:18:43,232	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:18:43,234	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:18:46,406	[INFO]	99	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:18:47,259	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:18:48,095	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:18:48,096	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:18:51,201	[INFO]	103	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:18:51,203	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:18:52,066	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:18:52,937	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:18:52,938	[INFO]	106	SUCCESS	+1.0	
2020-12-16 02:18:52,939	[DEBUG]	
2020-12-16 02:18:52,939	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:18:52,940	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:18:53,822	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:18:56,951	[INFO]	110	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:18:57,826	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:18:58,688	[INFO]	112	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:18:59,428	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:19:00,308	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:19:01,186	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:19:01,187	[INFO]	116	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:19:02,069	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:19:02,951	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:19:02,952	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:19:02,953	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:19:06,082	[INFO]	121	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:19:06,083	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:19:06,084	[INFO]	122	SUCCESS	+1.0	
2020-12-16 02:19:06,084	[DEBUG]	
2020-12-16 02:19:06,910	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:19:06,912	[INFO]	124	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:19:06,914	[INFO]	125	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:19:10,087	[INFO]	126	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:19:10,088	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:19:10,944	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:19:11,712	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:19:12,585	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:19:15,659	[INFO]	130	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:19:15,660	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    return false;
+                     }
                  }
                  return false;
              }

2020-12-16 02:19:18,796	[INFO]	131	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:19:21,819	[INFO]	132	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:19:21,821	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,34 ****
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 22,37 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    return false;
+                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:19:22,706	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:19:25,822	[INFO]	134	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:19:25,824	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,26 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    return false;
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 34,40 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:19:25,826	[INFO]	135	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:19:25,827	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,26 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    return false;
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 34,40 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:19:26,697	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:19:27,569	[INFO]	137	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:19:28,311	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:19:29,185	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:19:32,389	[INFO]	140	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:19:32,390	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,26 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    return false;
                      }
                  }
                  return false;

2020-12-16 02:19:35,529	[INFO]	141	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:19:35,530	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,26 ****
--- 17,33 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
+ return true; }
                      }
                  }
                  return false;

2020-12-16 02:19:38,622	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:19:38,624	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,26 ****
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:19:38,626	[INFO]	143	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:19:38,628	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,26 ****
--- 17,33 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+                     }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
+ return true; }
                      }
                  }
                  return false;

2020-12-16 02:19:41,766	[INFO]	144	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:19:41,768	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,31 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
+ return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:19:44,816	[INFO]	145	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:19:44,817	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:19:44,818	[INFO]	146	SUCCESS	+1.0	
2020-12-16 02:19:44,818	[DEBUG]	
2020-12-16 02:19:45,719	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:19:46,605	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:19:47,480	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:19:48,234	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:19:48,235	[INFO]	151	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:19:48,235	[DEBUG]	
2020-12-16 02:19:48,236	[INFO]	152	SUCCESS	+1.0	
2020-12-16 02:19:48,236	[DEBUG]	
2020-12-16 02:19:49,088	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:19:49,089	[INFO]	154	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:19:49,089	[DEBUG]	
2020-12-16 02:19:49,957	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:19:50,708	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:19:51,602	[INFO]	157	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:19:54,747	[INFO]	158	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:19:54,749	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:19:54,751	[INFO]	159	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:19:54,752	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:19:54,754	[INFO]	160	SUCCESS	+1.0	
2020-12-16 02:19:54,754	[DEBUG]	
2020-12-16 02:19:57,821	[INFO]	161	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:19:57,823	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:19:58,686	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:19:59,601	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:19:59,604	[INFO]	164	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:19:59,605	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:20:02,692	[INFO]	165	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:20:02,695	[INFO]	166	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:20:02,695	[DEBUG]	
2020-12-16 02:20:05,905	[INFO]	167	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:20:05,907	[INFO]	168	SUCCESS	+1.0	
2020-12-16 02:20:05,908	[DEBUG]	
2020-12-16 02:20:06,738	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:20:07,593	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:20:08,491	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:20:09,368	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:20:10,246	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:20:11,116	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:20:11,884	[INFO]	175	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:20:12,611	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:20:13,449	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:20:16,594	[INFO]	178	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:20:16,598	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:20:19,715	[INFO]	180	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:20:22,883	[INFO]	181	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:20:22,883	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:20:22,884	[INFO]	182	SUCCESS	+1.0	
2020-12-16 02:20:22,884	[DEBUG]	
2020-12-16 02:20:23,738	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:20:24,581	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:20:24,582	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:20:24,583	[INFO]	186	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:20:24,583	[DEBUG]	
2020-12-16 02:20:24,584	[INFO]	187	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:20:24,584	[DEBUG]	
2020-12-16 02:20:25,482	[INFO]	188	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:20:26,222	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:20:27,072	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:20:30,263	[INFO]	191	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:20:31,114	[INFO]	192	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:20:31,115	[INFO]	193	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:20:31,115	[DEBUG]	
2020-12-16 02:20:31,116	[INFO]	194	SUCCESS	+1.0	
2020-12-16 02:20:31,116	[DEBUG]	
2020-12-16 02:20:31,117	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:20:31,944	[INFO]	196	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:20:32,830	[INFO]	197	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:20:32,832	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:20:32,833	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:20:36,124	[INFO]	200	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:20:37,140	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:20:38,329	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:20:39,603	[INFO]	203	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:20:39,604	[INFO]	204	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:20:40,567	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:20:41,315	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:20:42,169	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:20:45,315	[INFO]	208	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:20:45,317	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:20:46,166	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:20:49,367	[INFO]	211	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:20:50,137	[INFO]	212	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:20:50,139	[INFO]	213	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:20:50,141	[INFO]	214	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:20:53,736	[INFO]	215	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:20:53,737	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:20:57,371	[INFO]	216	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:20:57,374	[INFO]	217	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:20:57,374	[DEBUG]	
2020-12-16 02:20:58,205	[INFO]	218	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:20:58,206	[INFO]	219	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:20:58,206	[DEBUG]	
2020-12-16 02:20:58,207	[INFO]	220	SUCCESS	+1.0	
2020-12-16 02:20:58,207	[DEBUG]	
2020-12-16 02:20:59,119	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:21:00,001	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:21:00,733	[INFO]	223	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:21:01,477	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:21:04,542	[INFO]	225	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:21:04,543	[INFO]	226	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:21:04,544	[DEBUG]	
2020-12-16 02:21:05,431	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:21:05,432	[INFO]	228	SUCCESS	+1.0	
2020-12-16 02:21:05,432	[DEBUG]	
2020-12-16 02:21:05,433	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:21:05,434	[INFO]	230	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:21:08,647	[INFO]	231	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:21:08,648	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:21:08,650	[INFO]	232	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:21:08,651	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:21:11,711	[INFO]	233	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:21:11,713	[INFO]	234	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:21:11,714	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:21:12,418	[INFO]	235	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:21:13,293	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:21:13,294	[INFO]	237	SUCCESS	+1.0	
2020-12-16 02:21:13,295	[DEBUG]	
2020-12-16 02:21:14,045	[INFO]	238	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:21:17,088	[INFO]	239	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:21:17,090	[INFO]	240	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:21:17,092	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:21:17,094	[INFO]	242	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:21:17,979	[INFO]	243	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:21:18,844	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:21:18,846	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:21:19,745	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:21:20,634	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:21:21,520	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:21:21,521	[INFO]	249	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:21:21,521	[DEBUG]	
2020-12-16 02:21:21,522	[INFO]	250	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:21:24,592	[INFO]	251	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:21:24,594	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:21:25,459	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:21:25,460	[INFO]	253	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:21:25,460	[DEBUG]	
2020-12-16 02:21:25,461	[INFO]	254	SUCCESS	+1.0	
2020-12-16 02:21:25,461	[DEBUG]	
2020-12-16 02:21:25,462	[INFO]	255	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:21:25,463	[DEBUG]	
2020-12-16 02:21:25,463	[INFO]	256	SUCCESS	+1.0	
2020-12-16 02:21:25,463	[DEBUG]	
2020-12-16 02:21:28,586	[INFO]	257	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:21:28,588	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:21:29,448	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:21:30,361	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:21:31,122	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:21:34,241	[INFO]	262	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:21:35,111	[INFO]	263	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:21:35,861	[INFO]	264	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:21:39,035	[INFO]	265	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:21:39,037	[INFO]	266	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:21:39,038	[DEBUG]	
2020-12-16 02:21:39,040	[INFO]	267	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:21:39,041	[INFO]	268	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:21:39,041	[DEBUG]	
2020-12-16 02:21:39,748	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:21:40,461	[INFO]	270	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:21:40,465	[INFO]	271	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:21:40,466	[DEBUG]	
2020-12-16 02:21:40,468	[INFO]	272	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:21:40,470	[INFO]	273	SUCCESS	+1.0	
2020-12-16 02:21:40,470	[DEBUG]	
2020-12-16 02:21:41,319	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:21:44,365	[INFO]	275	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:21:47,447	[INFO]	276	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:21:47,449	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:21:47,450	[INFO]	277	SUCCESS	+1.0	
2020-12-16 02:21:47,451	[DEBUG]	
2020-12-16 02:21:47,453	[INFO]	278	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:21:47,454	[INFO]	279	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:21:48,325	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:21:48,327	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:21:51,343	[INFO]	282	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:21:52,232	[INFO]	283	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:21:52,966	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:21:53,820	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:21:54,551	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:21:57,713	[INFO]	287	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:21:57,714	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:21:58,569	[INFO]	288	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:21:58,572	[INFO]	289	SUCCESS	+1.0	
2020-12-16 02:21:58,572	[DEBUG]	
2020-12-16 02:21:59,439	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:21:59,442	[INFO]	291	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:22:00,199	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:22:00,201	[INFO]	293	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:22:00,202	[DEBUG]	
2020-12-16 02:22:01,056	[INFO]	294	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:22:04,139	[INFO]	295	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:22:04,140	[INFO]	296	SUCCESS	+1.0	
2020-12-16 02:22:04,140	[DEBUG]	
2020-12-16 02:22:04,862	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:22:05,724	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:22:08,934	[INFO]	299	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:22:08,936	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:22:08,937	[INFO]	300	SUCCESS	+1.0	
2020-12-16 02:22:08,938	[DEBUG]	
2020-12-16 02:22:12,005	[INFO]	301	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:22:12,006	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:22:12,833	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:22:15,994	[INFO]	303	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:22:15,996	[INFO]	304	SUCCESS	+1.0	
2020-12-16 02:22:15,996	[DEBUG]	
2020-12-16 02:22:19,087	[INFO]	305	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:22:19,088	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:22:19,089	[INFO]	306	SUCCESS	+1.0	
2020-12-16 02:22:19,090	[DEBUG]	
2020-12-16 02:22:19,819	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:22:19,820	[INFO]	308	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:22:19,820	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:22:19,821	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:22:22,903	[INFO]	311	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:22:23,762	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:22:26,883	[INFO]	313	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:22:26,886	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:22:26,887	[INFO]	315	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:22:30,197	[INFO]	316	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:22:30,198	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:22:30,926	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:22:30,927	[INFO]	318	SUCCESS	+1.0	
2020-12-16 02:22:30,928	[DEBUG]	
2020-12-16 02:22:31,654	[INFO]	319	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:22:32,408	[INFO]	320	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:22:33,279	[INFO]	321	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:22:33,281	[INFO]	322	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:22:33,281	[DEBUG]	
2020-12-16 02:22:34,018	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:22:34,019	[INFO]	324	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:22:34,020	[DEBUG]	
2020-12-16 02:22:34,897	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:22:34,899	[INFO]	326	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:22:35,631	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:22:36,491	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:22:37,387	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:22:37,388	[INFO]	330	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:22:37,388	[DEBUG]	
2020-12-16 02:22:37,389	[INFO]	331	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:22:37,390	[INFO]	332	SUCCESS	+1.0	
2020-12-16 02:22:37,390	[DEBUG]	
2020-12-16 02:22:38,294	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:22:41,413	[INFO]	334	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:22:41,415	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:22:41,416	[INFO]	335	SUCCESS	+1.0	
2020-12-16 02:22:41,417	[DEBUG]	
2020-12-16 02:22:44,458	[INFO]	336	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:22:44,458	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:22:44,460	[INFO]	337	SUCCESS	+1.0	
2020-12-16 02:22:44,460	[DEBUG]	
2020-12-16 02:22:47,563	[INFO]	338	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:22:48,448	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:22:49,313	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:22:49,314	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:22:52,464	[INFO]	342	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:22:53,163	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:22:56,298	[INFO]	344	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:22:57,178	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:22:57,179	[INFO]	346	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:22:57,913	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:22:58,786	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:22:58,789	[INFO]	349	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:22:58,789	[DEBUG]	
2020-12-16 02:22:58,791	[INFO]	350	SUCCESS	+1.0	
2020-12-16 02:22:58,791	[DEBUG]	
2020-12-16 02:22:59,539	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:22:59,540	[INFO]	352	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:22:59,541	[INFO]	353	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:22:59,541	[DEBUG]	
2020-12-16 02:22:59,542	[INFO]	354	SUCCESS	+1.0	
2020-12-16 02:22:59,542	[DEBUG]	
2020-12-16 02:22:59,543	[INFO]	355	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:22:59,543	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:23:00,276	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:23:00,994	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:23:00,996	[INFO]	358	SUCCESS	+1.0	
2020-12-16 02:23:00,997	[DEBUG]	
2020-12-16 02:23:03,994	[INFO]	359	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:23:04,709	[INFO]	360	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:23:05,461	[INFO]	361	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:23:06,187	[INFO]	362	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:23:06,188	[INFO]	363	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:23:07,041	[INFO]	364	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:23:07,042	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:23:07,944	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:23:11,222	[INFO]	367	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:23:11,223	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:23:12,072	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:23:12,073	[INFO]	369	SUCCESS	+1.0	
2020-12-16 02:23:12,073	[DEBUG]	
2020-12-16 02:23:12,074	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:23:12,074	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:23:12,939	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:23:16,111	[INFO]	373	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:23:16,112	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:23:16,113	[INFO]	374	SUCCESS	+1.0	
2020-12-16 02:23:16,113	[DEBUG]	
2020-12-16 02:23:16,113	[INFO]	375	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:23:16,950	[INFO]	376	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:23:16,952	[INFO]	377	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:23:17,804	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:23:17,805	[INFO]	379	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:23:18,703	[INFO]	380	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:23:18,704	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:23:18,705	[INFO]	382	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:23:18,706	[INFO]	383	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:23:18,707	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:23:19,592	[INFO]	385	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:23:20,373	[INFO]	386	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:23:21,254	[INFO]	387	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:23:24,404	[INFO]	388	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:23:24,405	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:23:24,407	[INFO]	389	SUCCESS	+1.0	
2020-12-16 02:23:24,407	[DEBUG]	
2020-12-16 02:23:27,464	[INFO]	390	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:23:28,314	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:23:31,442	[INFO]	392	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:23:34,564	[INFO]	393	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:23:37,654	[INFO]	394	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:23:37,655	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:23:38,545	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:23:38,547	[INFO]	396	SUCCESS	+1.0	
2020-12-16 02:23:38,548	[DEBUG]	
2020-12-16 02:23:38,550	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:23:38,552	[INFO]	398	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:23:39,443	[INFO]	399	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:23:40,174	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:23:43,263	[INFO]	401	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:23:43,264	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:23:46,312	[INFO]	403	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:23:47,175	[INFO]	404	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:23:47,178	[INFO]	405	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:23:47,178	[DEBUG]	
2020-12-16 02:23:47,180	[INFO]	406	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:23:47,180	[DEBUG]	
2020-12-16 02:23:47,182	[INFO]	407	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:23:47,182	[DEBUG]	
2020-12-16 02:23:47,184	[INFO]	408	SUCCESS	+1.0	
2020-12-16 02:23:47,184	[DEBUG]	
2020-12-16 02:23:47,186	[INFO]	409	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:23:47,187	[DEBUG]	
2020-12-16 02:23:47,188	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:23:47,189	[INFO]	411	SUCCESS	+1.0	
2020-12-16 02:23:47,190	[DEBUG]	
2020-12-16 02:23:47,191	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:23:48,052	[INFO]	413	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:23:48,056	[INFO]	414	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:23:48,057	[DEBUG]	
2020-12-16 02:23:48,058	[INFO]	415	SUCCESS	+1.0	
2020-12-16 02:23:48,059	[DEBUG]	
2020-12-16 02:23:48,948	[INFO]	416	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:23:49,843	[INFO]	417	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:23:52,968	[INFO]	418	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:23:52,969	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:23:53,854	[INFO]	419	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:23:56,996	[INFO]	420	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:24:00,100	[INFO]	421	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:24:03,289	[INFO]	422	SUCCESS	 2.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:24:04,127	[INFO]	423	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:24:04,128	[INFO]	424	SUCCESS	+1.0	
2020-12-16 02:24:04,128	[DEBUG]	
2020-12-16 02:24:04,978	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:24:04,979	[INFO]	426	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:24:04,980	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:24:05,696	[INFO]	428	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:24:06,413	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:24:06,414	[INFO]	430	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:24:06,415	[INFO]	431	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:06,416	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:24:06,416	[INFO]	433	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:24:06,417	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:24:06,417	[INFO]	434	SUCCESS	+1.0	
2020-12-16 02:24:06,418	[DEBUG]	
2020-12-16 02:24:06,418	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:09,618	[INFO]	436	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:24:09,620	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:10,327	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:24:10,328	[INFO]	438	SUCCESS	+1.0	
2020-12-16 02:24:10,328	[DEBUG]	
2020-12-16 02:24:10,329	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:24:10,330	[INFO]	440	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:24:10,331	[INFO]	441	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:24:13,425	[INFO]	442	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:24:14,251	[INFO]	443	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:24:17,343	[INFO]	444	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:24:17,345	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:24:17,346	[INFO]	445	SUCCESS	+1.0	
2020-12-16 02:24:17,347	[DEBUG]	
2020-12-16 02:24:20,519	[INFO]	446	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:20,521	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:24:20,522	[INFO]	447	SUCCESS	+1.0	
2020-12-16 02:24:20,523	[DEBUG]	
2020-12-16 02:24:21,388	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:24:22,096	[INFO]	449	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:24:22,939	[INFO]	450	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:24:26,182	[INFO]	451	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:24:26,183	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:26,185	[INFO]	452	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:24:26,186	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:29,239	[INFO]	453	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:24:29,240	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:29,241	[INFO]	454	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:24:29,242	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:29,243	[INFO]	455	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:29,244	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:30,003	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:24:30,754	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:24:30,756	[INFO]	458	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:24:30,756	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:33,890	[INFO]	459	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:24:33,892	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:24:33,894	[INFO]	460	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:24:33,895	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:33,896	[INFO]	461	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:24:33,897	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:33,898	[INFO]	462	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:24:33,899	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:33,901	[INFO]	463	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:33,902	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:34,736	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:24:37,884	[INFO]	465	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:24:38,713	[INFO]	466	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:41,828	[INFO]	467	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:24:41,830	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:42,707	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:24:42,709	[INFO]	469	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:24:42,710	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:42,711	[INFO]	470	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:24:45,904	[INFO]	471	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:24:45,906	[INFO]	472	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:45,907	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:48,854	[INFO]	473	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:49,739	[INFO]	474	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:24:49,741	[INFO]	475	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:49,741	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:49,743	[INFO]	476	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:24:49,743	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:50,654	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:24:51,409	[INFO]	478	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:24:52,249	[INFO]	479	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:52,251	[INFO]	480	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:24:52,252	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:52,253	[INFO]	481	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:52,254	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:52,255	[INFO]	482	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:52,256	[INFO]	483	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:52,256	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:52,257	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:53,135	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:24:53,137	[INFO]	486	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:53,137	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:53,138	[INFO]	487	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:53,139	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:53,140	[INFO]	488	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:53,141	[INFO]	489	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:24:53,141	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:53,142	[INFO]	490	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:24:53,143	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:53,144	[INFO]	491	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:24:53,144	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:53,146	[INFO]	492	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:24:53,147	[INFO]	493	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:53,148	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,24 ****
--- 17,28 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:24:56,372	[INFO]	494	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:56,373	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:24:56,374	[INFO]	495	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:24:56,374	[DEBUG]	
2020-12-16 02:24:57,067	[INFO]	496	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:24:57,068	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:24:57,069	[INFO]	498	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:25:00,150	[INFO]	499	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:25:00,153	[INFO]	500	SUCCESS	+1.0	
2020-12-16 02:25:00,153	[DEBUG]	
2020-12-16 02:25:00,154	[INFO]	==== END ====
2020-12-16 02:25:00,154	[INFO]	Reason: step budget
2020-12-16 02:25:00,154	[INFO]	
2020-12-16 02:25:00,155	[INFO]	========== EPOCH 4 ==========
2020-12-16 02:25:00,155	[INFO]	==== WARMUP ====
2020-12-16 02:25:03,309	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:25:03,310	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:25:06,303	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:25:06,303	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:25:09,468	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:25:09,469	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:25:12,594	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:25:12,595	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:25:12,595	[INFO]	==== START ====
2020-12-16 02:25:13,458	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:25:16,490	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:25:19,610	[INFO]	3	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:25:19,612	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:25:19,614	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:25:19,615	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:25:19,617	[INFO]	5	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:25:19,618	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:25:19,619	[INFO]	6	SUCCESS	+1.0	
2020-12-16 02:25:19,619	[DEBUG]	
2020-12-16 02:25:19,620	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:25:20,517	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:25:23,588	[INFO]	9	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:25:24,450	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:25:25,316	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:25:26,038	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:25:26,039	[INFO]	13	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:25:26,039	[DEBUG]	
2020-12-16 02:25:29,210	[INFO]	14	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:25:29,211	[INFO]	15	SUCCESS	+1.0	
2020-12-16 02:25:29,212	[DEBUG]	
2020-12-16 02:25:30,070	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:25:30,942	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:25:31,817	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:25:34,969	[INFO]	19	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:25:34,970	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:25:38,173	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:25:38,175	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:25:39,056	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:25:42,177	[INFO]	22	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:25:42,178	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 27,34 ****
              }
          };
  
!         Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,35 ----
              }
          };
  
!         
!         return true;
      }
  
  }

2020-12-16 02:25:42,180	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:25:42,180	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:25:45,317	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:25:45,318	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:25:45,318	[INFO]	25	SUCCESS	+1.0	
2020-12-16 02:25:45,319	[DEBUG]	
2020-12-16 02:25:45,319	[INFO]	26	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:25:45,320	[DEBUG]	
2020-12-16 02:25:45,320	[INFO]	27	SUCCESS	+1.0	
2020-12-16 02:25:45,320	[DEBUG]	
2020-12-16 02:25:46,193	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:25:49,265	[INFO]	29	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:25:49,266	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:25:50,143	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:25:51,041	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:25:54,210	[INFO]	33	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:25:54,212	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:25:54,213	[INFO]	34	SUCCESS	+1.0	
2020-12-16 02:25:54,214	[DEBUG]	
2020-12-16 02:25:54,215	[INFO]	35	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:25:54,217	[INFO]	36	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:25:55,063	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:25:55,948	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:25:55,950	[INFO]	39	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:25:58,975	[INFO]	40	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:25:58,976	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:25:59,834	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:26:00,713	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:26:03,891	[INFO]	44	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:26:03,894	[INFO]	45	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:26:03,895	[DEBUG]	
2020-12-16 02:26:03,896	[INFO]	46	SUCCESS	+1.0	
2020-12-16 02:26:03,896	[DEBUG]	
2020-12-16 02:26:07,003	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:26:07,004	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:26:07,005	[INFO]	48	SUCCESS	+1.0	
2020-12-16 02:26:07,005	[DEBUG]	
2020-12-16 02:26:07,006	[INFO]	49	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:26:07,006	[DEBUG]	
2020-12-16 02:26:07,007	[INFO]	50	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:26:07,008	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:26:07,877	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:26:08,756	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:26:08,757	[INFO]	54	SUCCESS	+1.0	
2020-12-16 02:26:08,758	[DEBUG]	
2020-12-16 02:26:09,642	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:26:10,509	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:26:10,512	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:26:13,685	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:26:13,686	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 02:26:13,688	[INFO]	59	SUCCESS	+1.0	
2020-12-16 02:26:13,688	[DEBUG]	
2020-12-16 02:26:14,552	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:26:14,553	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:26:14,554	[INFO]	62	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:26:14,554	[DEBUG]	
2020-12-16 02:26:14,554	[INFO]	63	SUCCESS	+1.0	
2020-12-16 02:26:14,555	[DEBUG]	
2020-12-16 02:26:14,555	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:26:15,423	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:26:16,172	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:26:19,373	[INFO]	67	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:26:19,374	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 02:26:19,374	[INFO]	==== END ====
2020-12-16 02:26:19,374	[INFO]	Reason: target fitness reached
2020-12-16 02:26:19,375	[INFO]	
2020-12-16 02:26:19,375	[INFO]	========== EPOCH 5 ==========
2020-12-16 02:26:19,375	[INFO]	==== WARMUP ====
2020-12-16 02:26:22,394	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:26:22,395	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:26:25,401	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:26:25,402	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:26:28,528	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:26:28,529	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:26:31,660	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:26:31,661	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:26:31,661	[INFO]	==== START ====
2020-12-16 02:26:34,805	[INFO]	1	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:26:35,655	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:26:36,554	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:26:39,699	[INFO]	4	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:26:39,701	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:26:40,616	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:26:40,617	[INFO]	6	SUCCESS	+1.0	
2020-12-16 02:26:40,617	[DEBUG]	
2020-12-16 02:26:43,677	[INFO]	7	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:26:43,679	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:26:46,859	[INFO]	8	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:26:46,860	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,25 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:26:49,985	[INFO]	9	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:26:53,055	[INFO]	10	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:26:53,056	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     
+                 } if (nodesvisited.contains(node)) {
                      return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:26:56,087	[INFO]	11	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:26:56,090	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,24 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 16,28 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:26:59,264	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:26:59,265	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:26:59,266	[INFO]	13	SUCCESS	+1.0	
2020-12-16 02:26:59,266	[DEBUG]	
2020-12-16 02:27:00,111	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:27:03,217	[INFO]	15	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:27:06,441	[INFO]	16	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:27:09,566	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:27:09,568	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:27:09,571	[INFO]	18	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:27:09,572	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:27:09,574	[INFO]	19	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:27:09,575	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:27:12,690	[INFO]	20	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:27:13,521	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:27:13,523	[INFO]	22	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:27:13,523	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:27:16,657	[INFO]	23	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:27:16,660	[INFO]	24	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:27:16,661	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:27:16,663	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:27:16,664	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:27:16,666	[INFO]	26	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:27:17,568	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:27:18,439	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:27:18,440	[INFO]	29	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:27:18,440	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:27:18,441	[INFO]	30	SUCCESS	+1.0	
2020-12-16 02:27:18,441	[DEBUG]	
2020-12-16 02:27:19,342	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:27:19,343	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:27:20,234	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:27:21,112	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:27:24,278	[INFO]	35	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:27:24,995	[INFO]	36	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:27:25,886	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:27:25,888	[INFO]	38	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:27:25,888	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:27:25,889	[INFO]	39	SUCCESS	+1.0	
2020-12-16 02:27:25,889	[DEBUG]	
2020-12-16 02:27:26,618	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:27:27,496	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:27:28,377	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:27:29,125	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:27:29,126	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:27:30,022	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:27:30,926	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:27:34,094	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:27:34,095	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:27:37,115	[INFO]	48	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:27:37,117	[INFO]	49	SUCCESS	+1.0	
2020-12-16 02:27:37,118	[DEBUG]	
2020-12-16 02:27:37,974	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:27:38,860	[INFO]	51	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:27:39,793	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:27:39,797	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:27:39,799	[INFO]	54	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:27:39,801	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:27:42,890	[INFO]	56	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:27:42,893	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:27:43,641	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:27:44,389	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:27:44,392	[INFO]	60	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:27:44,394	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:27:47,440	[INFO]	62	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:27:47,443	[INFO]	63	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:27:47,444	[DEBUG]	
2020-12-16 02:27:47,445	[INFO]	64	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:27:47,446	[DEBUG]	
2020-12-16 02:27:47,447	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:27:47,449	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:27:47,450	[INFO]	67	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:27:47,451	[DEBUG]	
2020-12-16 02:27:48,356	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:27:49,221	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:27:49,223	[INFO]	70	SUCCESS	+1.0	
2020-12-16 02:27:49,224	[DEBUG]	
2020-12-16 02:27:50,109	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:27:50,110	[INFO]	72	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:27:53,197	[INFO]	73	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:27:56,310	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:27:56,311	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:27:57,220	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:27:58,119	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:27:59,008	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:27:59,009	[INFO]	78	SUCCESS	+1.0	
2020-12-16 02:27:59,009	[DEBUG]	
2020-12-16 02:27:59,010	[INFO]	79	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:27:59,010	[DEBUG]	
2020-12-16 02:27:59,010	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:28:02,201	[INFO]	81	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:28:02,203	[INFO]	82	SUCCESS	+1.0	
2020-12-16 02:28:02,203	[DEBUG]	
2020-12-16 02:28:02,205	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:28:03,040	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:28:03,041	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:28:03,923	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:28:04,817	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:28:04,819	[INFO]	88	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:28:04,819	[DEBUG]	
2020-12-16 02:28:04,820	[INFO]	89	SUCCESS	+1.0	
2020-12-16 02:28:04,820	[DEBUG]	
2020-12-16 02:28:05,691	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:28:08,827	[INFO]	91	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:28:08,830	[INFO]	92	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:28:08,832	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:28:08,833	[INFO]	94	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:28:12,263	[INFO]	95	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:28:13,132	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:28:16,229	[INFO]	97	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:28:16,991	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:28:17,867	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:28:21,023	[INFO]	100	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:28:24,216	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:28:24,218	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:28:25,100	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:28:25,102	[INFO]	103	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:28:25,102	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:28:26,015	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:28:26,016	[INFO]	105	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:28:26,017	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:28:26,017	[INFO]	106	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:28:26,018	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:28:26,019	[INFO]	107	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:28:26,019	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:28:26,912	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:28:26,915	[INFO]	109	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:28:26,916	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:28:27,808	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:28:27,809	[INFO]	111	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:28:27,810	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:28:27,810	[INFO]	112	SUCCESS	+1.0	
2020-12-16 02:28:27,811	[DEBUG]	
2020-12-16 02:28:28,707	[INFO]	113	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:28:29,428	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:28:30,354	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:28:30,356	[INFO]	116	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:28:30,356	[INFO]	117	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:28:30,357	[DEBUG]	
2020-12-16 02:28:30,357	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:28:31,230	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:28:31,231	[INFO]	120	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:28:31,232	[INFO]	121	SUCCESS	+1.0	
2020-12-16 02:28:31,232	[DEBUG]	
2020-12-16 02:28:34,390	[INFO]	122	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:28:34,392	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:28:37,443	[INFO]	123	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:28:37,445	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,28 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
!                     if (nodesvisited.contains(node)) {
!                     return false;
!                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:28:37,447	[INFO]	124	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:28:37,448	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:28:37,449	[INFO]	125	SUCCESS	+1.0	
2020-12-16 02:28:37,449	[DEBUG]	
2020-12-16 02:28:38,338	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:28:38,339	[INFO]	127	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:28:39,080	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:28:42,117	[INFO]	129	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:28:42,118	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:28:43,021	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:28:43,909	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:28:44,819	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:28:45,712	[INFO]	134	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:28:45,713	[INFO]	135	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:28:45,713	[DEBUG]	
2020-12-16 02:28:48,911	[INFO]	136	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:28:48,912	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 02:28:48,913	[INFO]	137	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:28:48,913	[DEBUG]	
2020-12-16 02:28:49,739	[INFO]	138	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:28:52,912	[INFO]	139	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:28:52,914	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:28:52,915	[INFO]	140	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:28:52,915	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:28:52,916	[INFO]	141	SUCCESS	+1.0	
2020-12-16 02:28:52,916	[DEBUG]	
2020-12-16 02:28:55,939	[INFO]	142	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:28:55,941	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:28:55,943	[INFO]	143	SUCCESS	+1.0	
2020-12-16 02:28:55,943	[DEBUG]	
2020-12-16 02:28:59,054	[INFO]	144	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:28:59,058	[INFO]	145	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:29:02,057	[INFO]	146	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:29:02,060	[INFO]	147	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:29:02,945	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:29:02,947	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:29:02,948	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:29:03,844	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:29:03,848	[INFO]	152	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:29:03,849	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:29:03,852	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:29:04,744	[INFO]	155	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:29:05,632	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:29:06,544	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:29:07,282	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:29:07,993	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:29:07,996	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:29:08,916	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:29:09,666	[INFO]	162	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:29:09,669	[INFO]	163	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:29:09,670	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:29:09,672	[INFO]	165	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:29:09,673	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:29:10,396	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:29:11,266	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:29:12,160	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:29:12,162	[INFO]	170	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:29:12,162	[DEBUG]	
2020-12-16 02:29:12,162	[INFO]	171	SUCCESS	+1.0	
2020-12-16 02:29:12,163	[DEBUG]	
2020-12-16 02:29:12,163	[INFO]	172	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:29:15,608	[INFO]	173	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:29:15,610	[INFO]	174	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:29:18,763	[INFO]	175	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:29:19,484	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:29:19,486	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:29:22,571	[INFO]	178	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:29:22,573	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:29:22,574	[INFO]	179	SUCCESS	+1.0	
2020-12-16 02:29:22,575	[DEBUG]	
2020-12-16 02:29:22,576	[INFO]	180	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:29:22,578	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:29:22,579	[INFO]	182	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:29:23,465	[INFO]	183	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:29:23,466	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:29:24,362	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:29:25,110	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:29:28,304	[INFO]	187	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:29:28,305	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:29:28,305	[INFO]	188	SUCCESS	+1.0	
2020-12-16 02:29:28,306	[DEBUG]	
2020-12-16 02:29:28,306	[INFO]	189	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:29:29,161	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:29:32,287	[INFO]	191	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:29:32,290	[INFO]	192	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:29:32,291	[DEBUG]	
2020-12-16 02:29:32,292	[INFO]	193	SUCCESS	+1.0	
2020-12-16 02:29:32,292	[DEBUG]	
2020-12-16 02:29:32,294	[INFO]	194	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:29:32,295	[INFO]	195	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:29:33,177	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:29:34,065	[INFO]	197	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:29:34,066	[INFO]	198	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:29:34,067	[INFO]	199	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:29:37,202	[INFO]	200	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:29:38,072	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:29:38,074	[INFO]	202	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:29:38,074	[DEBUG]	
2020-12-16 02:29:41,264	[INFO]	203	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:29:41,265	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:29:41,266	[INFO]	204	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:29:41,266	[DEBUG]	
2020-12-16 02:29:42,101	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:29:42,102	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:29:42,102	[INFO]	207	SUCCESS	+1.0	
2020-12-16 02:29:42,103	[DEBUG]	
2020-12-16 02:29:42,981	[INFO]	208	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:29:43,880	[INFO]	209	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:29:43,881	[INFO]	210	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:29:46,971	[INFO]	211	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:29:46,972	[INFO]	212	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:29:46,973	[DEBUG]	
2020-12-16 02:29:47,855	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:29:47,856	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:29:47,856	[INFO]	215	SUCCESS	+1.0	
2020-12-16 02:29:47,857	[DEBUG]	
2020-12-16 02:29:51,027	[INFO]	216	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:29:51,030	[INFO]	217	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:29:51,843	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:29:52,548	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:29:52,549	[INFO]	220	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:29:53,381	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:29:53,382	[INFO]	222	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:29:54,276	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:29:54,277	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:29:55,159	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:29:55,160	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:29:55,161	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:29:55,162	[INFO]	228	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:29:56,031	[INFO]	229	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:29:56,926	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:29:57,824	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:29:57,825	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:29:57,826	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:29:57,827	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:29:57,828	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:29:58,737	[INFO]	236	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:29:58,740	[INFO]	237	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:29:59,630	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:30:00,509	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:30:00,510	[INFO]	240	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:30:03,734	[INFO]	241	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:30:06,777	[INFO]	242	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:30:06,779	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:30:06,780	[INFO]	243	SUCCESS	+1.0	
2020-12-16 02:30:06,781	[DEBUG]	
2020-12-16 02:30:09,958	[INFO]	244	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:30:09,960	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:30:09,961	[INFO]	245	SUCCESS	+1.0	
2020-12-16 02:30:09,962	[DEBUG]	
2020-12-16 02:30:10,796	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:30:11,558	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:30:11,560	[INFO]	248	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:30:11,562	[INFO]	249	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:30:11,564	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:30:12,276	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:30:13,138	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:30:13,899	[INFO]	253	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:30:13,902	[INFO]	254	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:30:16,958	[INFO]	255	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:30:16,960	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:30:16,962	[INFO]	256	SUCCESS	+1.0	
2020-12-16 02:30:16,962	[DEBUG]	
2020-12-16 02:30:17,833	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:30:20,999	[INFO]	258	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:30:21,001	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:30:21,002	[INFO]	259	SUCCESS	+1.0	
2020-12-16 02:30:21,003	[DEBUG]	
2020-12-16 02:30:21,849	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:30:21,850	[INFO]	261	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:30:22,735	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:30:25,849	[INFO]	263	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:30:29,001	[INFO]	264	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:30:29,003	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:30:29,894	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:30:29,895	[INFO]	266	SUCCESS	+1.0	
2020-12-16 02:30:29,895	[DEBUG]	
2020-12-16 02:30:33,019	[INFO]	267	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:30:33,019	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:30:33,020	[INFO]	268	SUCCESS	+1.0	
2020-12-16 02:30:33,020	[DEBUG]	
2020-12-16 02:30:33,706	[INFO]	269	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:30:34,585	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:30:35,647	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:30:36,795	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:30:36,796	[INFO]	273	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:30:36,796	[DEBUG]	
2020-12-16 02:30:37,997	[INFO]	274	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:30:39,093	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:30:39,094	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:30:39,095	[INFO]	277	SUCCESS	+1.0	
2020-12-16 02:30:39,095	[DEBUG]	
2020-12-16 02:30:39,854	[INFO]	278	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:30:40,764	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:30:41,536	[INFO]	280	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:30:42,231	[INFO]	281	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:30:42,232	[INFO]	282	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:30:42,233	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:30:42,234	[INFO]	284	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:30:42,972	[INFO]	285	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:30:43,725	[INFO]	286	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:30:46,801	[INFO]	287	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:30:46,802	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:30:46,804	[INFO]	288	SUCCESS	+1.0	
2020-12-16 02:30:46,804	[DEBUG]	
2020-12-16 02:30:46,806	[INFO]	289	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:30:46,807	[INFO]	290	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:30:46,808	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:30:46,809	[INFO]	291	SUCCESS	+1.0	
2020-12-16 02:30:46,809	[DEBUG]	
2020-12-16 02:30:46,810	[INFO]	292	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:30:47,675	[INFO]	293	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:30:47,676	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:30:48,416	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:30:49,282	[INFO]	296	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:30:50,158	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:30:51,062	[INFO]	298	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:30:51,064	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:30:51,065	[INFO]	300	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:30:51,065	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:30:51,937	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:30:51,938	[INFO]	302	SUCCESS	+1.0	
2020-12-16 02:30:51,938	[DEBUG]	
2020-12-16 02:30:51,938	[INFO]	303	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:30:51,939	[DEBUG]	
2020-12-16 02:30:51,939	[INFO]	304	SUCCESS	+1.0	
2020-12-16 02:30:51,939	[DEBUG]	
2020-12-16 02:30:55,030	[INFO]	305	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:30:55,030	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:30:55,031	[INFO]	306	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:30:55,032	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:30:55,033	[INFO]	307	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:30:55,033	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:30:55,893	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:30:56,768	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:30:56,769	[INFO]	310	SUCCESS	+1.0	
2020-12-16 02:30:56,769	[DEBUG]	
2020-12-16 02:30:57,612	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:30:58,503	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:30:59,403	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:30:59,405	[INFO]	314	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:31:00,282	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:31:01,165	[INFO]	316	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:31:02,063	[INFO]	317	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:31:02,961	[INFO]	318	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:31:03,842	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:31:06,930	[INFO]	320	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:31:07,701	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:31:08,435	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:31:08,438	[INFO]	323	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:31:11,536	[INFO]	324	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:31:11,539	[INFO]	325	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:31:14,684	[INFO]	326	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:31:14,686	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:31:17,794	[INFO]	328	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:31:18,638	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:31:18,639	[INFO]	330	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:31:18,640	[DEBUG]	
2020-12-16 02:31:18,640	[INFO]	331	SUCCESS	+1.0	
2020-12-16 02:31:18,640	[DEBUG]	
2020-12-16 02:31:19,507	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:31:22,709	[INFO]	333	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:31:22,711	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 02:31:22,713	[INFO]	334	SUCCESS	+1.0	
2020-12-16 02:31:22,713	[DEBUG]	
2020-12-16 02:31:25,824	[INFO]	335	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:31:26,693	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:31:27,590	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:31:28,474	[INFO]	338	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:31:28,475	[INFO]	339	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:31:31,554	[INFO]	340	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:31:31,556	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:31:31,558	[INFO]	341	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:31:31,559	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:31:32,286	[INFO]	342	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:31:32,287	[INFO]	343	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:31:32,287	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:31:32,288	[INFO]	344	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:31:32,289	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:31:32,289	[INFO]	345	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:31:32,289	[DEBUG]	
2020-12-16 02:31:32,290	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:31:32,291	[INFO]	347	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:31:32,291	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:31:32,292	[INFO]	349	SUCCESS	+1.0	
2020-12-16 02:31:32,292	[DEBUG]	
2020-12-16 02:31:35,442	[INFO]	350	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:31:35,444	[INFO]	351	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:31:36,260	[INFO]	352	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:31:36,261	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:31:36,262	[INFO]	354	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:31:36,262	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:31:37,145	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:31:38,020	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:31:38,022	[INFO]	357	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:31:38,912	[INFO]	358	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:31:39,827	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:31:39,829	[INFO]	360	SUCCESS	+1.0	
2020-12-16 02:31:39,830	[DEBUG]	
2020-12-16 02:31:39,832	[INFO]	361	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:31:39,832	[DEBUG]	
2020-12-16 02:31:39,834	[INFO]	362	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:31:40,702	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:31:40,703	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:31:40,704	[INFO]	365	SUCCESS	+1.0	
2020-12-16 02:31:40,704	[DEBUG]	
2020-12-16 02:31:40,705	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:31:43,872	[INFO]	367	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:31:43,873	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:31:43,875	[INFO]	368	SUCCESS	+1.0	
2020-12-16 02:31:43,875	[DEBUG]	
2020-12-16 02:31:44,769	[INFO]	369	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:31:44,772	[INFO]	370	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:31:44,774	[INFO]	371	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:31:44,776	[INFO]	372	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:31:44,777	[INFO]	373	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:31:44,779	[INFO]	374	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:31:44,780	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:31:45,678	[INFO]	375	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:31:48,774	[INFO]	376	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:31:48,776	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 02:31:51,904	[INFO]	377	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:31:51,905	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 02:31:52,812	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:31:52,814	[INFO]	379	SUCCESS	+1.0	
2020-12-16 02:31:52,815	[DEBUG]	
2020-12-16 02:31:53,539	[INFO]	380	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:31:56,578	[INFO]	381	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:31:57,434	[INFO]	382	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:31:57,435	[INFO]	383	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:31:57,435	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 02:31:58,306	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:31:59,032	[INFO]	385	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:31:59,901	[INFO]	386	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:31:59,902	[INFO]	387	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:31:59,903	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 02:32:00,791	[INFO]	388	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:32:00,793	[INFO]	389	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:32:00,793	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 02:32:00,794	[INFO]	390	SUCCESS	+1.0	
2020-12-16 02:32:00,794	[DEBUG]	
2020-12-16 02:32:00,795	[INFO]	391	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:32:01,670	[INFO]	392	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:32:01,671	[INFO]	393	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:32:02,567	[INFO]	394	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:32:03,439	[INFO]	395	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:32:04,292	[INFO]	396	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:32:04,293	[INFO]	397	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:32:05,200	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:32:05,916	[INFO]	399	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:32:06,661	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:32:07,531	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:32:07,533	[INFO]	402	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:32:07,534	[INFO]	403	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:32:07,534	[DEBUG]	
2020-12-16 02:32:07,535	[INFO]	404	SUCCESS	+1.0	
2020-12-16 02:32:07,535	[DEBUG]	
2020-12-16 02:32:07,536	[INFO]	405	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:32:07,536	[INFO]	406	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:32:07,537	[INFO]	407	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:32:07,538	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:32:07,539	[INFO]	409	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:32:10,726	[INFO]	410	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:32:11,435	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:32:11,438	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:32:11,440	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:32:11,442	[INFO]	414	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:32:11,443	[INFO]	415	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:32:12,305	[INFO]	416	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:32:12,306	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:32:13,275	[INFO]	418	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:32:13,278	[INFO]	419	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:32:16,461	[INFO]	420	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:32:16,463	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:32:16,464	[INFO]	421	SUCCESS	+1.0	
2020-12-16 02:32:16,465	[DEBUG]	
2020-12-16 02:32:19,609	[INFO]	422	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:32:19,609	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:32:19,610	[INFO]	423	SUCCESS	+1.0	
2020-12-16 02:32:19,610	[DEBUG]	
2020-12-16 02:32:20,473	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:32:23,589	[INFO]	425	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:32:23,591	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:32:23,593	[INFO]	426	SUCCESS	+1.0	
2020-12-16 02:32:23,593	[DEBUG]	
2020-12-16 02:32:24,325	[INFO]	427	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:32:24,328	[INFO]	428	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:32:27,430	[INFO]	429	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:32:27,431	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:32:27,433	[INFO]	430	SUCCESS	+1.0	
2020-12-16 02:32:27,433	[DEBUG]	
2020-12-16 02:32:30,543	[INFO]	431	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:32:30,544	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:32:30,545	[INFO]	432	SUCCESS	+1.0	
2020-12-16 02:32:30,545	[DEBUG]	
2020-12-16 02:32:30,547	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:32:31,419	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:32:32,305	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:32:32,307	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:32:32,308	[INFO]	437	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:32:33,177	[INFO]	438	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:32:34,065	[INFO]	439	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:32:37,194	[INFO]	440	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:32:37,197	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:32:37,936	[INFO]	442	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:32:40,944	[INFO]	443	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:32:40,945	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:32:44,111	[INFO]	444	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:32:44,809	[INFO]	445	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:32:47,975	[INFO]	446	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:32:48,812	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:32:49,724	[INFO]	448	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:32:49,725	[INFO]	449	SUCCESS	+1.0	
2020-12-16 02:32:49,725	[DEBUG]	
2020-12-16 02:32:49,726	[INFO]	450	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:32:50,610	[INFO]	451	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:32:51,490	[INFO]	452	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:32:54,632	[INFO]	453	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:32:54,634	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:32:54,635	[INFO]	454	SUCCESS	+1.0	
2020-12-16 02:32:54,636	[DEBUG]	
2020-12-16 02:32:54,637	[INFO]	455	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:32:54,639	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:32:55,478	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:32:55,479	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:32:58,639	[INFO]	459	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:32:58,642	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:32:59,513	[INFO]	461	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:32:59,514	[INFO]	462	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:33:02,639	[INFO]	463	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:33:03,494	[INFO]	464	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:04,171	[INFO]	465	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:33:04,172	[INFO]	466	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:33:04,173	[INFO]	467	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:33:05,051	[INFO]	468	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:33:08,175	[INFO]	469	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:33:08,177	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:33:09,031	[INFO]	470	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:33:09,032	[INFO]	471	SUCCESS	+1.0	
2020-12-16 02:33:09,032	[DEBUG]	
2020-12-16 02:33:09,903	[INFO]	472	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:33:09,905	[INFO]	473	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:33:09,906	[DEBUG]	
2020-12-16 02:33:09,906	[INFO]	474	SUCCESS	+1.0	
2020-12-16 02:33:09,906	[DEBUG]	
2020-12-16 02:33:09,907	[INFO]	475	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:09,908	[INFO]	476	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:33:09,908	[DEBUG]	
2020-12-16 02:33:13,090	[INFO]	477	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:13,092	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:33:13,952	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:33:17,115	[INFO]	479	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:33:17,116	[INFO]	480	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:17,117	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:33:17,117	[INFO]	481	SUCCESS	+1.0	
2020-12-16 02:33:17,118	[DEBUG]	
2020-12-16 02:33:17,118	[INFO]	482	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:33:20,156	[INFO]	483	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:33:20,157	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:33:23,262	[INFO]	484	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:33:24,127	[INFO]	485	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:33:24,128	[INFO]	486	SUCCESS	+1.0	
2020-12-16 02:33:24,128	[DEBUG]	
2020-12-16 02:33:24,129	[INFO]	487	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:33:24,862	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:33:25,745	[INFO]	489	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:33:28,865	[INFO]	490	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:33:28,866	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:33:29,797	[INFO]	491	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:33:30,682	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:31,587	[INFO]	493	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:33:34,733	[INFO]	494	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:34,735	[INFO]	495	SUCCESS	+1.0	
2020-12-16 02:33:34,736	[DEBUG]	
2020-12-16 02:33:35,579	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:33:38,656	[INFO]	497	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:33:38,658	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:33:38,659	[INFO]	498	SUCCESS	+1.0	
2020-12-16 02:33:38,660	[DEBUG]	
2020-12-16 02:33:39,528	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:33:40,401	[INFO]	500	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:40,402	[INFO]	==== END ====
2020-12-16 02:33:40,402	[INFO]	Reason: step budget
2020-12-16 02:33:40,402	[INFO]	
2020-12-16 02:33:40,402	[INFO]	========== EPOCH 6 ==========
2020-12-16 02:33:40,403	[INFO]	==== WARMUP ====
2020-12-16 02:33:43,512	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:33:43,512	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:33:46,628	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:33:46,628	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:33:49,760	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:33:49,760	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:33:52,838	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:33:52,838	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:33:52,838	[INFO]	==== START ====
2020-12-16 02:33:53,703	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:56,857	[INFO]	2	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:33:57,711	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:33:58,595	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:33:59,495	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:34:00,354	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:34:01,102	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:34:04,206	[INFO]	8	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:34:04,207	[INFO]	9	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:34:04,207	[DEBUG]	
2020-12-16 02:34:04,208	[INFO]	10	SUCCESS	+1.0	
2020-12-16 02:34:04,208	[DEBUG]	
2020-12-16 02:34:05,075	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:34:08,131	[INFO]	12	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:34:08,134	[INFO]	13	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:34:09,030	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:34:12,101	[INFO]	15	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:34:12,103	[INFO]	16	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:34:12,966	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:34:16,071	[INFO]	18	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:34:16,072	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:34:16,072	[INFO]	19	SUCCESS	+1.0	
2020-12-16 02:34:16,072	[DEBUG]	
2020-12-16 02:34:16,073	[INFO]	20	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:34:19,194	[INFO]	21	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:34:22,317	[INFO]	22	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:34:22,320	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 02:34:22,320	[INFO]	==== END ====
2020-12-16 02:34:22,321	[INFO]	Reason: target fitness reached
2020-12-16 02:34:22,323	[INFO]	
2020-12-16 02:34:22,323	[INFO]	========== EPOCH 7 ==========
2020-12-16 02:34:22,324	[INFO]	==== WARMUP ====
2020-12-16 02:34:25,339	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:34:25,340	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:34:28,375	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:34:28,375	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:34:31,512	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:34:31,512	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:34:34,626	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:34:34,627	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:34:34,627	[INFO]	==== START ====
2020-12-16 02:34:35,319	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:34:36,200	[INFO]	2	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:34:36,945	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:34:36,948	[INFO]	4	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:34:36,949	[DEBUG]	
2020-12-16 02:34:36,950	[INFO]	5	SUCCESS	+1.0	
2020-12-16 02:34:36,951	[DEBUG]	
2020-12-16 02:34:37,828	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:34:37,829	[INFO]	7	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:34:37,830	[DEBUG]	
2020-12-16 02:34:37,830	[INFO]	8	SUCCESS	+1.0	
2020-12-16 02:34:37,830	[DEBUG]	
2020-12-16 02:34:40,979	[INFO]	9	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:34:44,070	[INFO]	10	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:34:44,071	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:34:44,783	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:34:47,867	[INFO]	12	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:34:47,868	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:34:50,963	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:34:50,965	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 02:34:50,966	[INFO]	14	SUCCESS	+1.0	
2020-12-16 02:34:50,967	[DEBUG]	
2020-12-16 02:34:51,831	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:34:52,707	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:34:52,708	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:34:52,708	[DEBUG]	
2020-12-16 02:34:55,850	[INFO]	18	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:34:56,699	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:34:59,783	[INFO]	20	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:34:59,785	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:34:59,786	[INFO]	21	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:34:59,787	[DEBUG]	
2020-12-16 02:34:59,788	[INFO]	22	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:35:00,703	[INFO]	23	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:35:00,705	[INFO]	24	SUCCESS	+1.0	
2020-12-16 02:35:00,706	[DEBUG]	
2020-12-16 02:35:01,444	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:35:01,446	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:35:04,601	[INFO]	27	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:35:05,445	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:35:06,341	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:35:07,214	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:35:10,299	[INFO]	31	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:35:11,162	[INFO]	32	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:35:12,031	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:35:12,034	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:35:12,935	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:35:16,125	[INFO]	36	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:35:16,128	[INFO]	37	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:35:16,128	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:35:16,129	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:35:16,130	[INFO]	39	SUCCESS	+1.0	
2020-12-16 02:35:16,130	[DEBUG]	
2020-12-16 02:35:16,976	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:35:16,979	[INFO]	41	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:35:16,981	[INFO]	42	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:35:16,983	[INFO]	43	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:35:16,984	[INFO]	44	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:35:16,985	[DEBUG]	
2020-12-16 02:35:16,986	[INFO]	45	SUCCESS	+1.0	
2020-12-16 02:35:16,987	[DEBUG]	
2020-12-16 02:35:16,988	[INFO]	46	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:35:17,852	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:35:18,715	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:35:18,716	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:35:19,607	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:35:19,608	[INFO]	51	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:35:20,369	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:35:21,250	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:35:21,251	[INFO]	54	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:35:21,252	[INFO]	55	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:35:21,252	[DEBUG]	
2020-12-16 02:35:21,253	[INFO]	56	SUCCESS	+1.0	
2020-12-16 02:35:21,253	[DEBUG]	
2020-12-16 02:35:22,120	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:35:23,016	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:35:23,017	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:35:23,018	[INFO]	60	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:35:23,018	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:35:23,018	[INFO]	61	SUCCESS	+1.0	
2020-12-16 02:35:23,019	[DEBUG]	
2020-12-16 02:35:23,020	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:35:23,917	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:35:24,813	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:35:24,814	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:35:24,815	[INFO]	66	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:35:25,679	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:35:25,681	[INFO]	68	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:35:26,553	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:35:26,555	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:35:29,597	[INFO]	71	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:35:29,598	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 02:35:29,598	[INFO]	72	SUCCESS	+1.0	
2020-12-16 02:35:29,599	[DEBUG]	
2020-12-16 02:35:32,685	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:35:32,687	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:35:32,689	[INFO]	74	SUCCESS	+1.0	
2020-12-16 02:35:32,689	[DEBUG]	
2020-12-16 02:35:33,412	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:35:34,268	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:35:37,540	[INFO]	77	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:35:37,541	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 02:35:40,602	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:35:40,604	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:35:43,741	[INFO]	79	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:35:43,743	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:35:44,477	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:35:47,591	[INFO]	81	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:35:48,500	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:35:49,386	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:35:50,275	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:35:50,276	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:35:53,439	[INFO]	86	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:35:54,294	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:35:54,295	[INFO]	88	SUCCESS	+1.0	
2020-12-16 02:35:54,295	[DEBUG]	
2020-12-16 02:35:55,174	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:35:56,071	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:35:56,937	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:35:56,938	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:35:56,939	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:35:57,690	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:35:57,693	[INFO]	95	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:35:58,550	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:36:01,685	[INFO]	97	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:36:01,687	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:36:01,689	[INFO]	98	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:36:01,690	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:36:04,801	[INFO]	99	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:36:07,955	[INFO]	100	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:36:08,830	[INFO]	101	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:36:12,014	[INFO]	102	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:36:12,017	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,26 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 16,30 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:36:15,174	[INFO]	103	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:36:15,176	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:36:18,259	[INFO]	104	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:36:19,155	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:36:22,328	[INFO]	106	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:36:22,330	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:36:25,440	[INFO]	107	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:36:25,442	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:36:26,335	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:36:26,336	[INFO]	109	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:36:26,337	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:36:29,408	[INFO]	110	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:36:30,319	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:36:30,320	[INFO]	112	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:36:30,321	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:36:30,322	[INFO]	113	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:36:30,322	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:36:33,467	[INFO]	114	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:36:33,468	[INFO]	115	SUCCESS	+1.0	
2020-12-16 02:36:33,468	[DEBUG]	
2020-12-16 02:36:36,533	[INFO]	116	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:36:36,535	[INFO]	117	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:36:36,536	[DEBUG]	
2020-12-16 02:36:37,440	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:36:37,441	[INFO]	119	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:36:37,442	[INFO]	120	SUCCESS	+1.0	
2020-12-16 02:36:37,442	[DEBUG]	
2020-12-16 02:36:38,308	[INFO]	121	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:36:39,057	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:36:39,949	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:36:39,951	[INFO]	124	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:36:40,789	[INFO]	125	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:36:41,670	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:36:42,555	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:36:42,556	[INFO]	128	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:36:43,455	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:36:44,331	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:36:47,431	[INFO]	131	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:36:48,165	[INFO]	132	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:36:48,166	[INFO]	133	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:36:48,167	[DEBUG]	
2020-12-16 02:36:48,167	[INFO]	134	SUCCESS	+1.0	
2020-12-16 02:36:48,167	[DEBUG]	
2020-12-16 02:36:48,168	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:36:49,033	[INFO]	136	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:36:49,034	[INFO]	137	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:36:52,110	[INFO]	138	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:36:52,112	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:36:52,113	[INFO]	139	SUCCESS	+1.0	
2020-12-16 02:36:52,114	[DEBUG]	
2020-12-16 02:36:52,115	[INFO]	140	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:36:52,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:36:52,117	[INFO]	141	SUCCESS	+1.0	
2020-12-16 02:36:52,118	[DEBUG]	
2020-12-16 02:36:53,002	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:36:53,850	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:36:56,988	[INFO]	144	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:36:56,989	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:36:56,989	[INFO]	145	SUCCESS	+1.0	
2020-12-16 02:36:56,990	[DEBUG]	
2020-12-16 02:36:56,990	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:36:57,899	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:37:01,042	[INFO]	148	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:37:01,043	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:37:04,161	[INFO]	150	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:37:04,162	[INFO]	151	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:04,163	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:05,024	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:05,025	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:37:05,874	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:37:06,624	[INFO]	156	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:37:06,627	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:37:06,629	[INFO]	158	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:37:06,629	[DEBUG]	
2020-12-16 02:37:06,631	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:37:06,632	[INFO]	160	SUCCESS	+1.0	
2020-12-16 02:37:06,633	[DEBUG]	
2020-12-16 02:37:06,634	[INFO]	161	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:37:07,386	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:37:08,259	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:37:09,117	[INFO]	164	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:37:09,120	[INFO]	165	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:37:10,022	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:37:10,024	[INFO]	167	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:37:10,791	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:37:10,793	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:37:11,668	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:37:11,670	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:37:14,810	[INFO]	172	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:37:17,972	[INFO]	173	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:37:17,974	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:37:18,806	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:18,808	[INFO]	175	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:37:18,808	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:37:18,809	[INFO]	176	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:37:18,810	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:37:18,810	[INFO]	177	SUCCESS	+1.0	
2020-12-16 02:37:18,810	[DEBUG]	
2020-12-16 02:37:18,811	[INFO]	178	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:37:18,812	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:37:19,556	[INFO]	180	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:37:19,559	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:37:22,697	[INFO]	182	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:37:22,699	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:37:25,817	[INFO]	183	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:37:26,669	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:26,672	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:26,674	[INFO]	186	SUCCESS	+1.0	
2020-12-16 02:37:26,674	[DEBUG]	
2020-12-16 02:37:27,534	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:37:28,421	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:37:31,583	[INFO]	189	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:37:32,413	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:37:35,549	[INFO]	191	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:37:36,400	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:37:36,401	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:37:37,304	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:37:38,039	[INFO]	195	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:38,788	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:37:38,793	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:37:38,794	[INFO]	198	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:37:38,795	[DEBUG]	
2020-12-16 02:37:41,942	[INFO]	199	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:37:41,943	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:37:41,945	[INFO]	200	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:37:41,945	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:37:41,947	[INFO]	201	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:37:41,948	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:37:42,793	[INFO]	202	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:37:43,664	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:37:43,665	[INFO]	204	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:37:43,666	[DEBUG]	
2020-12-16 02:37:43,666	[INFO]	205	SUCCESS	+1.0	
2020-12-16 02:37:43,667	[DEBUG]	
2020-12-16 02:37:44,403	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:37:44,404	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:37:45,120	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:37:45,121	[INFO]	209	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:37:45,122	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:37:45,995	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:37:46,898	[INFO]	212	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:37:47,777	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:37:47,778	[INFO]	214	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:37:48,703	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:37:48,705	[INFO]	216	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:48,707	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:37:52,139	[INFO]	218	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:37:52,140	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:37:55,255	[INFO]	220	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:37:55,257	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:37:55,258	[INFO]	222	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:37:55,259	[INFO]	223	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:37:55,260	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:37:56,149	[INFO]	225	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:37:57,019	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:37:57,920	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:37:58,833	[INFO]	228	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:37:58,834	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:37:58,835	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:37:58,836	[INFO]	231	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:37:58,836	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:37:58,837	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:37:59,727	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:38:00,604	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:38:01,677	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:38:01,680	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:38:02,498	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:38:02,500	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:38:03,411	[INFO]	240	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:38:03,414	[INFO]	241	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:38:03,415	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:38:04,158	[INFO]	242	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:38:04,158	[INFO]	243	SUCCESS	+1.0	
2020-12-16 02:38:04,159	[DEBUG]	
2020-12-16 02:38:04,159	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:38:04,981	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:38:08,018	[INFO]	246	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:38:08,020	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:38:08,022	[INFO]	247	SUCCESS	+1.0	
2020-12-16 02:38:08,022	[DEBUG]	
2020-12-16 02:38:08,024	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:38:08,757	[INFO]	249	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:38:08,761	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:38:08,762	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:38:08,764	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:38:09,657	[INFO]	253	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:38:10,388	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:38:10,391	[INFO]	255	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:38:10,393	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:38:10,396	[INFO]	257	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:38:10,397	[DEBUG]	
2020-12-16 02:38:10,398	[INFO]	258	SUCCESS	+1.0	
2020-12-16 02:38:10,398	[DEBUG]	
2020-12-16 02:38:13,608	[INFO]	259	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:38:14,459	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:38:14,460	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:38:17,535	[INFO]	262	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:38:20,743	[INFO]	263	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:38:20,744	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:38:20,745	[INFO]	264	SUCCESS	+1.0	
2020-12-16 02:38:20,746	[DEBUG]	
2020-12-16 02:38:20,748	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:38:23,760	[INFO]	266	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:38:23,761	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:38:24,669	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:38:25,556	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:38:26,439	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:38:26,440	[INFO]	270	SUCCESS	+1.0	
2020-12-16 02:38:26,441	[DEBUG]	
2020-12-16 02:38:29,598	[INFO]	271	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:38:29,600	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:38:29,601	[INFO]	272	SUCCESS	+1.0	
2020-12-16 02:38:29,602	[DEBUG]	
2020-12-16 02:38:29,603	[INFO]	273	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:38:32,754	[INFO]	274	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:38:32,756	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:38:35,796	[INFO]	275	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:38:35,797	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:38:35,798	[INFO]	276	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:38:35,798	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:38:35,799	[INFO]	277	SUCCESS	+1.0	
2020-12-16 02:38:35,799	[DEBUG]	
2020-12-16 02:38:36,702	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:38:36,704	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:38:36,705	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:38:37,583	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:38:37,584	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:38:40,668	[INFO]	283	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:38:40,669	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:38:43,832	[INFO]	284	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:38:46,891	[INFO]	285	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:38:46,893	[INFO]	286	SUCCESS	+1.0	
2020-12-16 02:38:46,893	[DEBUG]	
2020-12-16 02:38:49,997	[INFO]	287	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:38:49,998	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:38:49,999	[INFO]	288	SUCCESS	+1.0	
2020-12-16 02:38:49,999	[DEBUG]	
2020-12-16 02:38:50,871	[INFO]	289	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:38:51,734	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:38:51,735	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:38:51,736	[INFO]	292	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:38:51,736	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:38:51,736	[INFO]	293	SUCCESS	+1.0	
2020-12-16 02:38:51,737	[DEBUG]	
2020-12-16 02:38:51,737	[INFO]	294	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:38:52,618	[INFO]	295	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:38:52,620	[INFO]	296	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:38:52,621	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:38:53,510	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:38:53,511	[INFO]	298	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:38:53,512	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:38:53,513	[INFO]	299	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:38:53,513	[DEBUG]	
2020-12-16 02:38:56,650	[INFO]	300	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:38:56,651	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:38:56,653	[INFO]	301	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:38:56,653	[DEBUG]	
2020-12-16 02:38:56,654	[INFO]	302	SUCCESS	+1.0	
2020-12-16 02:38:56,654	[DEBUG]	
2020-12-16 02:38:56,655	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:38:56,656	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:38:56,657	[INFO]	305	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:38:57,508	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:38:58,400	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:38:59,264	[INFO]	308	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:39:00,015	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:39:00,016	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:39:03,153	[INFO]	311	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:39:03,154	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:39:03,155	[INFO]	312	SUCCESS	+1.0	
2020-12-16 02:39:03,155	[DEBUG]	
2020-12-16 02:39:03,990	[INFO]	313	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:39:03,991	[INFO]	314	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:39:03,991	[DEBUG]	
2020-12-16 02:39:04,863	[INFO]	315	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:39:04,864	[INFO]	316	SUCCESS	+1.0	
2020-12-16 02:39:04,865	[DEBUG]	
2020-12-16 02:39:08,062	[INFO]	317	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:39:08,063	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:39:08,064	[INFO]	318	SUCCESS	+1.0	
2020-12-16 02:39:08,065	[DEBUG]	
2020-12-16 02:39:08,066	[INFO]	319	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:39:08,067	[DEBUG]	
2020-12-16 02:39:08,069	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:39:08,071	[INFO]	321	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:39:08,071	[DEBUG]	
2020-12-16 02:39:08,072	[INFO]	322	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:39:08,073	[DEBUG]	
2020-12-16 02:39:08,926	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:39:08,927	[INFO]	324	SUCCESS	+1.0	
2020-12-16 02:39:08,927	[DEBUG]	
2020-12-16 02:39:08,927	[INFO]	325	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:39:08,928	[DEBUG]	
2020-12-16 02:39:08,928	[INFO]	326	SUCCESS	+1.0	
2020-12-16 02:39:08,928	[DEBUG]	
2020-12-16 02:39:08,929	[INFO]	327	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:39:08,929	[DEBUG]	
2020-12-16 02:39:08,930	[INFO]	328	SUCCESS	+1.0	
2020-12-16 02:39:08,930	[DEBUG]	
2020-12-16 02:39:08,931	[INFO]	329	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:39:08,931	[DEBUG]	
2020-12-16 02:39:08,931	[INFO]	330	SUCCESS	+1.0	
2020-12-16 02:39:08,931	[DEBUG]	
2020-12-16 02:39:09,819	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:39:12,929	[INFO]	332	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:39:12,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:39:12,933	[INFO]	333	SUCCESS	+1.0	
2020-12-16 02:39:12,933	[DEBUG]	
2020-12-16 02:39:12,935	[INFO]	334	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:39:12,936	[DEBUG]	
2020-12-16 02:39:12,937	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:39:13,838	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:39:14,713	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:39:14,714	[INFO]	338	SUCCESS	+1.0	
2020-12-16 02:39:14,714	[DEBUG]	
2020-12-16 02:39:14,715	[INFO]	339	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:39:14,716	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:39:15,609	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:39:16,473	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:39:17,360	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:39:17,363	[INFO]	344	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:39:17,364	[DEBUG]	
2020-12-16 02:39:17,365	[INFO]	345	SUCCESS	+1.0	
2020-12-16 02:39:17,366	[DEBUG]	
2020-12-16 02:39:20,484	[INFO]	346	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:39:20,485	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:39:21,322	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:39:24,401	[INFO]	348	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:39:24,402	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,25 ****
--- 17,29 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:39:27,476	[INFO]	349	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:39:27,478	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:39:30,628	[INFO]	350	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:39:30,630	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:39:31,526	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:39:31,528	[INFO]	352	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:39:31,528	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:39:34,627	[INFO]	353	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:39:35,510	[INFO]	354	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:39:35,511	[INFO]	355	SUCCESS	+1.0	
2020-12-16 02:39:35,511	[DEBUG]	
2020-12-16 02:39:36,388	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:39:39,506	[INFO]	357	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:39:42,590	[INFO]	358	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:39:42,593	[INFO]	359	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:39:42,593	[DEBUG]	
2020-12-16 02:39:42,595	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:39:43,473	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:39:43,474	[INFO]	362	SUCCESS	+1.0	
2020-12-16 02:39:43,474	[DEBUG]	
2020-12-16 02:39:43,475	[INFO]	363	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:39:43,476	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:39:43,476	[INFO]	365	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:39:43,477	[DEBUG]	
2020-12-16 02:39:43,477	[INFO]	366	SUCCESS	+1.0	
2020-12-16 02:39:43,477	[DEBUG]	
2020-12-16 02:39:44,213	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:39:47,289	[INFO]	368	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:39:47,290	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:39:50,345	[INFO]	370	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:39:50,346	[INFO]	371	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:39:51,223	[INFO]	372	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:39:51,224	[INFO]	373	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:39:51,224	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:39:52,119	[INFO]	374	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:39:52,122	[INFO]	375	SUCCESS	+1.0	
2020-12-16 02:39:52,122	[DEBUG]	
2020-12-16 02:39:52,124	[INFO]	376	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:39:52,124	[DEBUG]	
2020-12-16 02:39:52,126	[INFO]	377	SUCCESS	+1.0	
2020-12-16 02:39:52,126	[DEBUG]	
2020-12-16 02:39:53,044	[INFO]	378	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:39:53,920	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:39:57,003	[INFO]	380	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:39:57,004	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:40:00,114	[INFO]	382	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:40:00,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:40:03,183	[INFO]	383	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:40:03,184	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,23 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:40:04,071	[INFO]	384	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:40:07,207	[INFO]	385	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:40:10,259	[INFO]	386	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:40:10,260	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,34 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else {
!                     return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:40:10,261	[INFO]	387	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:40:10,262	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,23 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:40:13,407	[INFO]	388	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:40:13,408	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:40:13,409	[INFO]	389	SUCCESS	+1.0	
2020-12-16 02:40:13,409	[DEBUG]	
2020-12-16 02:40:14,262	[INFO]	390	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:40:17,360	[INFO]	391	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:40:20,402	[INFO]	392	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:40:23,548	[INFO]	393	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:40:23,548	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 02:40:23,548	[INFO]	==== END ====
2020-12-16 02:40:23,549	[INFO]	Reason: target fitness reached
2020-12-16 02:40:23,549	[INFO]	
2020-12-16 02:40:23,549	[INFO]	========== EPOCH 8 ==========
2020-12-16 02:40:23,550	[INFO]	==== WARMUP ====
2020-12-16 02:40:26,644	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:40:26,644	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:40:29,827	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:40:29,828	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:40:32,905	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:40:32,906	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:40:36,329	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:40:36,330	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:40:36,330	[INFO]	==== START ====
2020-12-16 02:40:37,567	[INFO]	1	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:40:37,569	[INFO]	2	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:40:37,569	[DEBUG]	
2020-12-16 02:40:38,843	[INFO]	3	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:40:38,844	[INFO]	4	SUCCESS	+1.0	
2020-12-16 02:40:38,845	[DEBUG]	
2020-12-16 02:40:40,023	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:40:43,776	[INFO]	6	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:40:44,687	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:40:48,192	[INFO]	8	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:40:51,279	[INFO]	9	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:40:51,280	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:40:54,409	[INFO]	10	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:40:54,411	[INFO]	11	SUCCESS	+1.0	
2020-12-16 02:40:54,412	[DEBUG]	
2020-12-16 02:40:54,413	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:40:54,415	[INFO]	13	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:40:54,416	[DEBUG]	
2020-12-16 02:40:54,418	[INFO]	14	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:40:55,285	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:40:55,286	[INFO]	16	SUCCESS	+1.0	
2020-12-16 02:40:55,286	[DEBUG]	
2020-12-16 02:40:55,287	[INFO]	17	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:40:55,287	[DEBUG]	
2020-12-16 02:40:56,008	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:40:56,009	[INFO]	19	SUCCESS	+1.0	
2020-12-16 02:40:56,009	[DEBUG]	
2020-12-16 02:40:56,894	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:40:57,786	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:40:58,654	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:40:59,549	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:41:00,431	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:41:01,335	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:41:01,336	[INFO]	26	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:41:01,337	[DEBUG]	
2020-12-16 02:41:04,352	[INFO]	27	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:41:04,353	[INFO]	28	SUCCESS	+1.0	
2020-12-16 02:41:04,354	[DEBUG]	
2020-12-16 02:41:05,098	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:41:05,100	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:05,101	[DEBUG]	
2020-12-16 02:41:05,102	[INFO]	31	SUCCESS	+1.0	
2020-12-16 02:41:05,103	[DEBUG]	
2020-12-16 02:41:05,104	[INFO]	32	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:41:05,105	[DEBUG]	
2020-12-16 02:41:05,106	[INFO]	33	SUCCESS	+1.0	
2020-12-16 02:41:05,106	[DEBUG]	
2020-12-16 02:41:05,998	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:41:06,879	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:41:07,631	[INFO]	36	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:41:07,634	[INFO]	37	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:41:10,786	[INFO]	38	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:11,643	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:41:11,644	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:41:11,645	[INFO]	41	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:11,645	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:12,392	[INFO]	42	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:41:12,395	[INFO]	43	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:41:12,396	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:12,398	[INFO]	44	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:12,398	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:12,400	[INFO]	45	SUCCESS	+1.0	
2020-12-16 02:41:12,400	[DEBUG]	
2020-12-16 02:41:15,508	[INFO]	46	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:41:15,509	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:16,396	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:41:16,398	[INFO]	48	SUCCESS	+1.0	
2020-12-16 02:41:16,399	[DEBUG]	
2020-12-16 02:41:17,262	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:41:17,263	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:41:17,993	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:41:18,814	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:41:18,816	[INFO]	53	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:41:19,709	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:41:20,455	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:41:21,343	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:41:22,251	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:41:22,252	[INFO]	58	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:41:25,295	[INFO]	59	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:41:25,298	[INFO]	60	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:41:26,151	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:41:26,152	[INFO]	62	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:41:26,153	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:41:27,050	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:41:27,052	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:41:27,935	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:41:28,825	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:41:28,827	[INFO]	68	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:28,827	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:31,952	[INFO]	69	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:41:31,953	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:35,102	[INFO]	70	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:35,104	[INFO]	71	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:35,105	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:35,990	[INFO]	72	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:41:36,852	[INFO]	73	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:41:39,972	[INFO]	74	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:41:39,974	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:41:39,976	[INFO]	75	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:39,977	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:41:39,979	[INFO]	76	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:41:39,980	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:41:40,846	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:41:43,991	[INFO]	78	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:41:43,992	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:41:43,992	[INFO]	79	SUCCESS	+1.0	
2020-12-16 02:41:43,993	[DEBUG]	
2020-12-16 02:41:44,840	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:41:45,606	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:41:46,454	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:41:47,190	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:41:48,049	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:41:48,790	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:41:49,522	[INFO]	86	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:41:52,581	[INFO]	87	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:41:52,584	[INFO]	88	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:41:52,584	[DEBUG]	
2020-12-16 02:41:53,466	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:41:53,467	[INFO]	90	SUCCESS	+1.0	
2020-12-16 02:41:53,467	[DEBUG]	
2020-12-16 02:41:53,468	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:41:53,469	[INFO]	92	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:41:56,689	[INFO]	93	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:41:56,691	[INFO]	94	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:41:56,692	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:41:57,492	[INFO]	95	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:41:57,493	[INFO]	96	SUCCESS	+1.0	
2020-12-16 02:41:57,493	[DEBUG]	
2020-12-16 02:41:58,210	[INFO]	97	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:41:58,211	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:41:58,212	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:42:01,372	[INFO]	100	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:42:01,372	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:42:01,373	[INFO]	101	SUCCESS	+1.0	
2020-12-16 02:42:01,373	[DEBUG]	
2020-12-16 02:42:04,439	[INFO]	102	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:42:05,338	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:42:06,483	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:42:07,418	[INFO]	105	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:42:08,291	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:42:09,160	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:42:12,288	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:42:12,290	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:42:12,292	[INFO]	109	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:42:12,293	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:42:12,294	[INFO]	110	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:42:12,295	[DEBUG]	
2020-12-16 02:42:13,165	[INFO]	111	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:42:13,166	[INFO]	112	SUCCESS	+1.0	
2020-12-16 02:42:13,166	[DEBUG]	
2020-12-16 02:42:13,167	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:42:13,883	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:42:17,016	[INFO]	115	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:42:17,018	[INFO]	116	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:42:17,867	[INFO]	117	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:42:18,584	[INFO]	118	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:42:18,586	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:42:19,461	[INFO]	120	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:42:19,462	[INFO]	121	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:42:19,463	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:42:20,348	[INFO]	123	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:42:20,349	[INFO]	124	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:42:20,349	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:42:20,350	[INFO]	125	SUCCESS	+1.0	
2020-12-16 02:42:20,350	[DEBUG]	
2020-12-16 02:42:21,269	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:42:21,993	[INFO]	127	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:42:22,737	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:42:23,483	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:42:24,330	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:42:27,447	[INFO]	131	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:42:28,192	[INFO]	132	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:42:29,048	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:42:29,051	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:42:32,216	[INFO]	135	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:42:33,072	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:42:36,223	[INFO]	137	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:42:39,256	[INFO]	138	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:42:39,257	[INFO]	139	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:42:39,257	[DEBUG]	
2020-12-16 02:42:39,258	[INFO]	140	SUCCESS	+1.0	
2020-12-16 02:42:39,258	[DEBUG]	
2020-12-16 02:42:40,137	[INFO]	141	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:42:41,023	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:42:41,923	[INFO]	143	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:42:45,026	[INFO]	144	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:42:45,029	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:42:45,917	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:42:45,918	[INFO]	147	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:42:45,919	[INFO]	148	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:42:49,057	[INFO]	149	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:42:49,059	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:42:49,060	[INFO]	150	SUCCESS	+1.0	
2020-12-16 02:42:49,061	[DEBUG]	
2020-12-16 02:42:52,100	[INFO]	151	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:42:52,964	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:42:52,965	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:42:52,966	[INFO]	154	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:42:52,966	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:42:53,868	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:42:57,073	[INFO]	156	SUCCESS	 2.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:42:57,076	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:42:57,077	[INFO]	158	SUCCESS	+1.0	
2020-12-16 02:42:57,077	[DEBUG]	
2020-12-16 02:42:57,918	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:42:57,919	[INFO]	160	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:42:57,920	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:42:57,920	[INFO]	161	SUCCESS	+1.0	
2020-12-16 02:42:57,920	[DEBUG]	
2020-12-16 02:42:58,790	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:42:58,792	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:43:01,957	[INFO]	164	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:43:02,684	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:43:02,687	[INFO]	166	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:43:02,688	[DEBUG]	
2020-12-16 02:43:02,689	[INFO]	167	SUCCESS	+1.0	
2020-12-16 02:43:02,689	[DEBUG]	
2020-12-16 02:43:03,546	[INFO]	168	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:43:03,547	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:43:03,547	[INFO]	170	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:43:03,548	[DEBUG]	
2020-12-16 02:43:03,548	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:43:03,549	[INFO]	172	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:43:03,549	[DEBUG]	
2020-12-16 02:43:06,742	[INFO]	173	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:43:06,743	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:43:06,744	[INFO]	174	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:43:06,745	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:43:07,594	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:43:07,595	[INFO]	176	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:43:07,596	[DEBUG]	
2020-12-16 02:43:08,441	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:43:08,442	[INFO]	178	SUCCESS	+1.0	
2020-12-16 02:43:08,443	[DEBUG]	
2020-12-16 02:43:08,443	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:43:11,582	[INFO]	180	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:43:11,583	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:43:12,438	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:43:13,184	[INFO]	182	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:43:13,186	[INFO]	183	SUCCESS	+1.0	
2020-12-16 02:43:13,186	[DEBUG]	
2020-12-16 02:43:14,059	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:43:17,165	[INFO]	185	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:43:17,168	[INFO]	186	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:43:20,427	[INFO]	187	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:43:21,147	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:43:24,278	[INFO]	189	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:43:25,105	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:43:28,230	[INFO]	191	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:43:28,232	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:43:28,233	[INFO]	193	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:43:28,234	[DEBUG]	
2020-12-16 02:43:28,234	[INFO]	194	SUCCESS	+1.0	
2020-12-16 02:43:28,235	[DEBUG]	
2020-12-16 02:43:28,972	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:43:28,973	[INFO]	196	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:43:28,974	[INFO]	197	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:43:28,975	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:43:28,975	[INFO]	199	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:43:28,976	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:43:29,878	[INFO]	200	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:43:29,879	[INFO]	201	SUCCESS	+1.0	
2020-12-16 02:43:29,879	[DEBUG]	
2020-12-16 02:43:29,880	[INFO]	202	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:43:29,880	[DEBUG]	
2020-12-16 02:43:29,880	[INFO]	203	SUCCESS	+1.0	
2020-12-16 02:43:29,881	[DEBUG]	
2020-12-16 02:43:29,881	[INFO]	204	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:43:30,783	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:43:31,551	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:43:31,554	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:43:34,605	[INFO]	208	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:43:34,607	[INFO]	209	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:43:34,607	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:43:34,608	[INFO]	210	SUCCESS	+1.0	
2020-12-16 02:43:34,608	[DEBUG]	
2020-12-16 02:43:37,701	[INFO]	211	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:43:37,703	[INFO]	212	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:43:38,592	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:43:39,465	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:43:39,470	[INFO]	215	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:43:40,357	[INFO]	216	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:43:41,221	[INFO]	217	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:43:41,975	[INFO]	218	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:43:45,053	[INFO]	219	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:43:45,056	[INFO]	220	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:43:45,900	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:43:49,009	[INFO]	222	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:43:52,173	[INFO]	223	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:43:52,174	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:43:53,028	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:43:56,161	[INFO]	225	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:43:56,162	[INFO]	226	SUCCESS	+1.0	
2020-12-16 02:43:56,162	[DEBUG]	
2020-12-16 02:43:56,163	[INFO]	227	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:43:57,030	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:43:57,031	[INFO]	229	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:43:57,911	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:43:57,912	[INFO]	231	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:43:57,913	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:43:58,678	[INFO]	233	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:43:58,681	[INFO]	234	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:43:58,682	[INFO]	235	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:43:58,683	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:44:01,805	[INFO]	236	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:44:02,639	[INFO]	237	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:44:02,640	[INFO]	238	SUCCESS	+1.0	
2020-12-16 02:44:02,640	[DEBUG]	
2020-12-16 02:44:03,521	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:44:03,522	[INFO]	240	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:44:03,523	[INFO]	241	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:44:03,523	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:44:06,761	[INFO]	242	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:44:07,619	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:44:07,620	[INFO]	244	SUCCESS	+1.0	
2020-12-16 02:44:07,620	[DEBUG]	
2020-12-16 02:44:10,707	[INFO]	245	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:44:13,847	[INFO]	246	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:44:13,848	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:44:13,849	[INFO]	247	SUCCESS	+1.0	
2020-12-16 02:44:13,849	[DEBUG]	
2020-12-16 02:44:16,947	[INFO]	248	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:44:16,948	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:44:16,948	[INFO]	249	SUCCESS	+1.0	
2020-12-16 02:44:16,949	[DEBUG]	
2020-12-16 02:44:16,949	[INFO]	250	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:44:16,949	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:44:20,068	[INFO]	251	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:44:20,070	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,22 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node != goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:44:20,802	[INFO]	252	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:44:20,803	[INFO]	253	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:44:21,656	[INFO]	254	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:44:24,819	[INFO]	255	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:44:24,820	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,22 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
!                 } else if (node != goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:44:25,651	[INFO]	256	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:44:28,790	[INFO]	257	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:44:28,792	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:44:31,895	[INFO]	258	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:44:31,896	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:44:32,773	[INFO]	259	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:44:35,901	[INFO]	260	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:44:35,901	[INFO]	261	SUCCESS	+1.0	
2020-12-16 02:44:35,902	[DEBUG]	
2020-12-16 02:44:39,040	[INFO]	262	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:44:39,042	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:44:39,912	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:44:39,917	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:44:39,919	[INFO]	265	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:44:39,920	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:44:40,658	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:44:41,522	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:44:42,392	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:44:45,479	[INFO]	269	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:44:45,483	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:44:45,484	[INFO]	271	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:44:45,485	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:44:45,486	[INFO]	272	SUCCESS	+1.0	
2020-12-16 02:44:45,487	[DEBUG]	
2020-12-16 02:44:46,364	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:44:46,365	[INFO]	274	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:44:46,366	[INFO]	275	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:44:47,298	[INFO]	276	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:44:50,456	[INFO]	277	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:44:51,181	[INFO]	278	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:44:51,895	[INFO]	279	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:44:52,753	[INFO]	280	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:44:55,889	[INFO]	281	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:44:56,648	[INFO]	282	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:44:57,544	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:44:58,436	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:45:01,635	[INFO]	285	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:45:01,636	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:45:01,638	[INFO]	286	SUCCESS	+1.0	
2020-12-16 02:45:01,638	[DEBUG]	
2020-12-16 02:45:01,640	[INFO]	287	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:45:01,640	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:02,472	[INFO]	288	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:45:02,474	[INFO]	289	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:45:02,474	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:05,592	[INFO]	290	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:45:05,593	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:06,441	[INFO]	291	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:45:09,580	[INFO]	292	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:45:09,581	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:09,582	[INFO]	293	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:45:09,583	[INFO]	294	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:45:09,583	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,24 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:12,644	[INFO]	295	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:45:12,646	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:45:13,587	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:45:13,590	[INFO]	297	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:45:13,591	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:45:13,593	[INFO]	298	SUCCESS	+1.0	
2020-12-16 02:45:13,593	[DEBUG]	
2020-12-16 02:45:14,308	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:45:15,195	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:45:15,931	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:45:15,934	[INFO]	302	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:45:16,681	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:45:19,751	[INFO]	304	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:45:22,842	[INFO]	305	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:45:22,844	[INFO]	306	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:45:23,704	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:45:24,588	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:45:25,463	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:45:28,637	[INFO]	310	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:45:28,638	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:28,641	[INFO]	311	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:45:28,641	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:28,643	[INFO]	312	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:45:28,643	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:29,354	[INFO]	313	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:45:29,357	[INFO]	314	SUCCESS	+1.0	
2020-12-16 02:45:29,357	[DEBUG]	
2020-12-16 02:45:29,359	[INFO]	315	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:45:30,104	[INFO]	316	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:45:30,983	[INFO]	317	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:45:30,984	[INFO]	318	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:45:30,985	[DEBUG]	
2020-12-16 02:45:30,985	[INFO]	319	SUCCESS	+1.0	
2020-12-16 02:45:30,985	[DEBUG]	
2020-12-16 02:45:30,986	[INFO]	320	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:45:30,986	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:45:32,178	[INFO]	321	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:45:32,948	[INFO]	322	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:45:32,950	[INFO]	323	SUCCESS	+1.0	
2020-12-16 02:45:32,951	[DEBUG]	
2020-12-16 02:45:33,842	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:45:37,088	[INFO]	325	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:45:40,205	[INFO]	326	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:45:43,262	[INFO]	327	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:45:44,124	[INFO]	328	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:45:44,840	[INFO]	329	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:45:45,724	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:45:46,607	[INFO]	331	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:45:49,742	[INFO]	332	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:45:49,743	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:45:50,628	[INFO]	333	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:45:50,629	[INFO]	334	SUCCESS	+1.0	
2020-12-16 02:45:50,630	[DEBUG]	
2020-12-16 02:45:50,630	[INFO]	335	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:45:50,631	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:45:50,632	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:45:51,529	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:45:52,258	[INFO]	339	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:45:52,259	[INFO]	340	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:45:52,260	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:45:53,141	[INFO]	342	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:45:54,019	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:45:54,021	[INFO]	344	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:45:54,021	[DEBUG]	
2020-12-16 02:45:54,885	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:45:55,789	[INFO]	346	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:45:55,790	[INFO]	347	SUCCESS	+1.0	
2020-12-16 02:45:55,791	[DEBUG]	
2020-12-16 02:45:56,559	[INFO]	348	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:45:57,275	[INFO]	349	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:45:58,123	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:45:59,021	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:46:02,088	[INFO]	352	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:46:02,089	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:46:02,090	[INFO]	353	SUCCESS	+1.0	
2020-12-16 02:46:02,090	[DEBUG]	
2020-12-16 02:46:02,969	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:46:03,860	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:46:04,771	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:46:07,897	[INFO]	357	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:46:07,898	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:46:07,899	[INFO]	358	SUCCESS	+1.0	
2020-12-16 02:46:07,899	[DEBUG]	
2020-12-16 02:46:08,740	[INFO]	359	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:46:08,741	[INFO]	360	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:46:08,741	[DEBUG]	
2020-12-16 02:46:08,742	[INFO]	361	SUCCESS	+1.0	
2020-12-16 02:46:08,742	[DEBUG]	
2020-12-16 02:46:08,743	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:46:11,892	[INFO]	363	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:46:14,932	[INFO]	364	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:46:14,933	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:46:14,934	[INFO]	365	SUCCESS	+1.0	
2020-12-16 02:46:14,934	[DEBUG]	
2020-12-16 02:46:15,827	[INFO]	366	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:46:16,707	[INFO]	367	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:46:17,576	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:46:20,782	[INFO]	369	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:46:20,782	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 02:46:20,783	[INFO]	370	SUCCESS	+1.0	
2020-12-16 02:46:20,783	[DEBUG]	
2020-12-16 02:46:20,784	[INFO]	371	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:46:20,785	[INFO]	372	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:46:20,785	[DEBUG]	
2020-12-16 02:46:23,817	[INFO]	373	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:46:23,819	[INFO]	374	SUCCESS	+1.0	
2020-12-16 02:46:23,820	[DEBUG]	
2020-12-16 02:46:23,822	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:46:24,699	[INFO]	376	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:46:24,700	[INFO]	377	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:46:25,593	[INFO]	378	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:46:26,536	[INFO]	379	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:46:26,538	[INFO]	380	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:46:26,540	[INFO]	381	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:46:27,408	[INFO]	382	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:46:28,287	[INFO]	383	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:46:28,289	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:46:31,548	[INFO]	385	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:46:31,552	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:46:31,554	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:46:34,567	[INFO]	388	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:46:34,568	[INFO]	389	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:46:35,286	[INFO]	390	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:46:36,114	[INFO]	391	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:46:39,327	[INFO]	392	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:46:40,216	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:46:43,358	[INFO]	394	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:46:43,361	[INFO]	395	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:46:43,362	[INFO]	396	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:46:43,363	[DEBUG]	
2020-12-16 02:46:44,112	[INFO]	397	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:46:44,115	[INFO]	398	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:46:44,116	[INFO]	399	SUCCESS	+1.0	
2020-12-16 02:46:44,117	[DEBUG]	
2020-12-16 02:46:47,214	[INFO]	400	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:46:47,915	[INFO]	401	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:46:47,916	[INFO]	402	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:46:47,917	[INFO]	403	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:46:47,917	[DEBUG]	
2020-12-16 02:46:47,918	[INFO]	404	SUCCESS	+1.0	
2020-12-16 02:46:47,918	[DEBUG]	
2020-12-16 02:46:48,758	[INFO]	405	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:46:51,928	[INFO]	406	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:46:51,929	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:46:55,073	[INFO]	407	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:46:55,074	[INFO]	408	SUCCESS	+1.0	
2020-12-16 02:46:55,074	[DEBUG]	
2020-12-16 02:46:55,933	[INFO]	409	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:46:59,028	[INFO]	410	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:46:59,783	[INFO]	411	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:47:02,889	[INFO]	412	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:47:03,714	[INFO]	413	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:47:04,572	[INFO]	414	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:47:05,478	[INFO]	415	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:47:05,479	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:47:05,479	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:05,480	[INFO]	418	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:47:08,566	[INFO]	419	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:47:09,456	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:47:10,421	[INFO]	421	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:47:11,502	[INFO]	422	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:47:11,503	[INFO]	423	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:47:11,504	[INFO]	424	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:47:11,504	[DEBUG]	
2020-12-16 02:47:12,379	[INFO]	425	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:47:12,380	[INFO]	426	SUCCESS	+1.0	
2020-12-16 02:47:12,380	[DEBUG]	
2020-12-16 02:47:12,381	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:47:12,382	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:13,279	[INFO]	429	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:47:13,280	[INFO]	430	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:47:14,147	[INFO]	431	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:47:15,002	[INFO]	432	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:47:18,098	[INFO]	433	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:47:18,100	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:47:18,981	[INFO]	434	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:47:18,982	[INFO]	435	SUCCESS	+1.0	
2020-12-16 02:47:18,983	[DEBUG]	
2020-12-16 02:47:18,984	[INFO]	436	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:47:18,984	[DEBUG]	
2020-12-16 02:47:18,984	[INFO]	437	SUCCESS	+1.0	
2020-12-16 02:47:18,985	[DEBUG]	
2020-12-16 02:47:18,985	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:22,128	[INFO]	439	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:47:22,131	[INFO]	440	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:47:22,132	[INFO]	441	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:47:22,879	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:47:22,882	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:47:22,883	[INFO]	444	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:47:22,885	[INFO]	445	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:47:25,953	[INFO]	446	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:47:25,954	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:47:26,846	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:26,847	[INFO]	448	SUCCESS	+1.0	
2020-12-16 02:47:26,847	[DEBUG]	
2020-12-16 02:47:26,848	[INFO]	449	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:47:26,849	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:29,996	[INFO]	451	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:47:29,998	[INFO]	452	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:47:29,999	[DEBUG]	
2020-12-16 02:47:30,866	[INFO]	453	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:47:30,868	[INFO]	454	SUCCESS	+1.0	
2020-12-16 02:47:30,868	[DEBUG]	
2020-12-16 02:47:31,608	[INFO]	455	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:47:31,609	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:47:32,333	[INFO]	457	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:47:32,335	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:47:32,337	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:47:35,436	[INFO]	460	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:47:36,137	[INFO]	461	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:47:36,138	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:39,202	[INFO]	463	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:47:40,132	[INFO]	464	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:47:40,994	[INFO]	465	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:47:41,769	[INFO]	466	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:47:41,772	[INFO]	467	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:41,773	[INFO]	468	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:47:44,930	[INFO]	469	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:47:44,932	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:47:44,933	[INFO]	470	SUCCESS	+1.0	
2020-12-16 02:47:44,934	[DEBUG]	
2020-12-16 02:47:48,037	[INFO]	471	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:47:48,038	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:47:48,040	[INFO]	472	SUCCESS	+1.0	
2020-12-16 02:47:48,040	[DEBUG]	
2020-12-16 02:47:48,041	[INFO]	473	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:47:48,896	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:47:48,898	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:47:49,791	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:47:50,669	[INFO]	477	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:47:50,671	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:50,672	[INFO]	479	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:47:51,414	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:47:51,415	[INFO]	481	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:47:51,415	[DEBUG]	
2020-12-16 02:47:51,416	[INFO]	482	SUCCESS	+1.0	
2020-12-16 02:47:51,416	[DEBUG]	
2020-12-16 02:47:54,513	[INFO]	483	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:47:54,515	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:47:54,516	[INFO]	484	SUCCESS	+1.0	
2020-12-16 02:47:54,517	[DEBUG]	
2020-12-16 02:47:57,603	[INFO]	485	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:47:58,320	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:47:59,193	[INFO]	487	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:48:00,078	[INFO]	488	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:48:00,946	[INFO]	489	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:48:00,947	[INFO]	490	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:48:01,688	[INFO]	491	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:48:04,814	[INFO]	492	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:48:04,815	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:48:04,816	[INFO]	493	SUCCESS	+1.0	
2020-12-16 02:48:04,816	[DEBUG]	
2020-12-16 02:48:07,954	[INFO]	494	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:48:08,805	[INFO]	495	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:48:08,806	[INFO]	496	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:48:11,885	[INFO]	497	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:48:12,605	[INFO]	498	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:48:13,455	[INFO]	499	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:48:13,456	[INFO]	500	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:48:13,457	[INFO]	==== END ====
2020-12-16 02:48:13,457	[INFO]	Reason: step budget
2020-12-16 02:48:13,457	[INFO]	
2020-12-16 02:48:13,457	[INFO]	========== EPOCH 9 ==========
2020-12-16 02:48:13,458	[INFO]	==== WARMUP ====
2020-12-16 02:48:16,579	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:48:16,579	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:48:19,671	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:48:19,671	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:48:22,847	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:48:22,847	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:48:25,964	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:48:25,964	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:48:25,964	[INFO]	==== START ====
2020-12-16 02:48:26,858	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:48:30,119	[INFO]	2	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:48:30,121	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:48:30,802	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:48:30,803	[INFO]	4	SUCCESS	+1.0	
2020-12-16 02:48:30,803	[DEBUG]	
2020-12-16 02:48:31,662	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:48:34,766	[INFO]	6	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:48:35,473	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:48:36,347	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:48:39,480	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:48:39,482	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:48:40,358	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:48:43,450	[INFO]	11	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:48:43,452	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>(); }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-16 02:48:43,454	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:48:43,455	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:48:46,572	[INFO]	13	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:48:46,574	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) {  }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-16 02:48:49,631	[INFO]	14	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:48:49,633	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,34 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 20,37 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) {  }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:48:49,635	[INFO]	15	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:48:49,636	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) {  }
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-16 02:48:49,638	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:48:49,639	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:48:50,551	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:48:50,552	[INFO]	18	SUCCESS	+1.0	
2020-12-16 02:48:50,552	[DEBUG]	
2020-12-16 02:48:51,292	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:48:52,173	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:48:53,024	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:48:56,171	[INFO]	22	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:48:59,295	[INFO]	23	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:49:00,137	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:49:00,139	[INFO]	25	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:49:00,139	[INFO]	26	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:49:00,140	[DEBUG]	
2020-12-16 02:49:00,140	[INFO]	27	SUCCESS	+1.0	
2020-12-16 02:49:00,140	[DEBUG]	
2020-12-16 02:49:01,033	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:49:01,933	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:49:02,661	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:49:03,517	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:49:04,421	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:49:05,306	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:49:08,423	[INFO]	34	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:49:09,273	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:49:10,141	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:49:10,886	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:49:11,756	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:49:12,649	[INFO]	39	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:49:15,897	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:49:15,898	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:49:15,900	[INFO]	41	SUCCESS	+1.0	
2020-12-16 02:49:15,900	[DEBUG]	
2020-12-16 02:49:16,727	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:49:17,579	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:49:17,581	[INFO]	44	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:49:18,331	[INFO]	45	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:49:18,333	[INFO]	46	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:49:18,333	[DEBUG]	
2020-12-16 02:49:18,334	[INFO]	47	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:49:18,335	[DEBUG]	
2020-12-16 02:49:18,336	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:49:18,337	[INFO]	49	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:49:18,338	[DEBUG]	
2020-12-16 02:49:19,196	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:49:22,396	[INFO]	51	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:49:22,398	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:49:22,400	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:49:22,401	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:49:23,259	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:49:23,261	[INFO]	54	SUCCESS	+1.0	
2020-12-16 02:49:23,261	[DEBUG]	
2020-12-16 02:49:26,388	[INFO]	55	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:49:26,391	[INFO]	56	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:49:29,484	[INFO]	57	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:49:32,632	[INFO]	58	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:49:33,516	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:49:36,635	[INFO]	60	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:49:36,637	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:49:37,502	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:49:38,385	[INFO]	62	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:49:38,386	[INFO]	63	SUCCESS	+1.0	
2020-12-16 02:49:38,386	[DEBUG]	
2020-12-16 02:49:39,278	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:49:40,157	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:49:41,045	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:49:41,916	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:49:42,791	[INFO]	68	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:49:42,792	[INFO]	69	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:49:43,688	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:49:44,564	[INFO]	71	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:49:45,489	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:49:46,357	[INFO]	73	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:49:46,360	[INFO]	74	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:49:47,261	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:49:48,144	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:49:48,145	[INFO]	77	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:49:51,270	[INFO]	78	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:49:51,271	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:49:51,273	[INFO]	79	SUCCESS	+1.0	
2020-12-16 02:49:51,273	[DEBUG]	
2020-12-16 02:49:52,120	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:49:55,275	[INFO]	81	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:49:55,277	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:49:55,278	[INFO]	82	SUCCESS	+1.0	
2020-12-16 02:49:55,279	[DEBUG]	
2020-12-16 02:49:55,280	[INFO]	83	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:49:55,281	[DEBUG]	
2020-12-16 02:49:55,282	[INFO]	84	SUCCESS	+1.0	
2020-12-16 02:49:55,283	[DEBUG]	
2020-12-16 02:49:56,008	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:49:56,011	[INFO]	86	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:49:56,013	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:49:56,015	[INFO]	88	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:49:56,017	[INFO]	89	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:49:56,018	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:49:56,020	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:49:56,870	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:49:57,603	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:50:00,666	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:50:00,668	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:50:00,670	[INFO]	95	SUCCESS	+1.0	
2020-12-16 02:50:00,670	[DEBUG]	
2020-12-16 02:50:01,544	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:50:01,546	[INFO]	97	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:50:01,547	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:50:01,547	[INFO]	98	SUCCESS	+1.0	
2020-12-16 02:50:01,548	[DEBUG]	
2020-12-16 02:50:04,684	[INFO]	99	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:50:05,387	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:50:05,390	[INFO]	101	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:50:05,391	[INFO]	102	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:50:08,440	[INFO]	103	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:50:08,441	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:50:09,349	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:50:12,501	[INFO]	105	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:50:15,667	[INFO]	106	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:50:18,677	[INFO]	107	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:50:18,679	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:50:19,564	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:50:20,471	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:50:23,547	[INFO]	110	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:50:23,548	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 02:50:23,548	[INFO]	==== END ====
2020-12-16 02:50:23,548	[INFO]	Reason: target fitness reached
2020-12-16 02:50:23,549	[INFO]	
2020-12-16 02:50:23,549	[INFO]	========== EPOCH 10 ==========
2020-12-16 02:50:23,549	[INFO]	==== WARMUP ====
2020-12-16 02:50:26,704	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:50:26,704	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:50:29,824	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:50:29,825	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:50:33,012	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:50:33,013	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:50:36,524	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:50:36,524	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:50:36,524	[INFO]	==== START ====
2020-12-16 02:50:37,743	[INFO]	1	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:50:41,241	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:50:41,244	[INFO]	3	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:50:41,245	[DEBUG]	
2020-12-16 02:50:42,005	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:50:42,897	[INFO]	5	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:50:42,898	[INFO]	6	SUCCESS	+1.0	
2020-12-16 02:50:42,898	[DEBUG]	
2020-12-16 02:50:43,755	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:50:46,835	[INFO]	8	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:50:49,995	[INFO]	9	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:50:50,823	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:50:53,914	[INFO]	11	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:50:54,777	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:50:54,778	[INFO]	13	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:50:54,778	[DEBUG]	
2020-12-16 02:50:54,779	[INFO]	14	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:50:54,780	[INFO]	15	SUCCESS	+1.0	
2020-12-16 02:50:54,780	[DEBUG]	
2020-12-16 02:50:57,846	[INFO]	16	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:50:57,847	[INFO]	17	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:50:57,848	[DEBUG]	
2020-12-16 02:50:57,849	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:50:57,849	[INFO]	19	SUCCESS	+1.0	
2020-12-16 02:50:57,849	[DEBUG]	
2020-12-16 02:50:58,685	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:50:59,575	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:50:59,576	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:51:02,737	[INFO]	23	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:51:02,738	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:51:03,616	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:03,618	[INFO]	25	SUCCESS	+1.0	
2020-12-16 02:51:03,619	[DEBUG]	
2020-12-16 02:51:04,502	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:05,376	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:51:08,581	[INFO]	28	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:51:09,470	[INFO]	29	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:51:09,472	[INFO]	30	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:51:09,473	[DEBUG]	
2020-12-16 02:51:09,475	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:09,476	[INFO]	32	SUCCESS	+1.0	
2020-12-16 02:51:09,477	[DEBUG]	
2020-12-16 02:51:10,369	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:51:10,371	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:51:11,115	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:51:12,002	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:51:12,003	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:51:12,003	[INFO]	38	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:51:15,067	[INFO]	39	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:51:15,810	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:51:15,813	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:51:16,555	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:51:16,557	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:51:16,559	[INFO]	44	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:16,559	[DEBUG]	
2020-12-16 02:51:16,561	[INFO]	45	SUCCESS	+1.0	
2020-12-16 02:51:16,561	[DEBUG]	
2020-12-16 02:51:17,270	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:51:17,272	[INFO]	47	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:51:17,272	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:51:17,273	[INFO]	49	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:51:17,273	[INFO]	50	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:17,274	[DEBUG]	
2020-12-16 02:51:17,274	[INFO]	51	SUCCESS	+1.0	
2020-12-16 02:51:17,274	[DEBUG]	
2020-12-16 02:51:18,099	[INFO]	52	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:51:21,259	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:51:21,260	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 02:51:21,953	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:51:21,954	[INFO]	55	SUCCESS	+1.0	
2020-12-16 02:51:21,954	[DEBUG]	
2020-12-16 02:51:22,800	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:51:22,801	[INFO]	57	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:22,802	[DEBUG]	
2020-12-16 02:51:22,802	[INFO]	58	SUCCESS	+1.0	
2020-12-16 02:51:22,802	[DEBUG]	
2020-12-16 02:51:22,803	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:51:22,804	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:51:22,805	[INFO]	61	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:51:22,805	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:22,806	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:23,518	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:51:24,400	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:51:24,402	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:25,289	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:51:28,388	[INFO]	68	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:51:28,389	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:51:28,391	[INFO]	69	SUCCESS	+1.0	
2020-12-16 02:51:28,391	[DEBUG]	
2020-12-16 02:51:28,394	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:51:29,259	[INFO]	71	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:51:29,261	[INFO]	72	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:51:30,173	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:51:30,176	[INFO]	74	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:51:33,299	[INFO]	75	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:51:33,301	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 02:51:34,159	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:51:34,160	[INFO]	77	SUCCESS	+1.0	
2020-12-16 02:51:34,160	[DEBUG]	
2020-12-16 02:51:35,049	[INFO]	78	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:51:35,933	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:51:36,674	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:51:36,675	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:51:37,546	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:51:37,547	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:51:37,548	[INFO]	84	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:37,548	[DEBUG]	
2020-12-16 02:51:40,659	[INFO]	85	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:51:40,662	[INFO]	86	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:40,663	[DEBUG]	
2020-12-16 02:51:40,664	[INFO]	87	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:40,665	[DEBUG]	
2020-12-16 02:51:41,555	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:51:41,556	[INFO]	89	SUCCESS	+1.0	
2020-12-16 02:51:41,557	[DEBUG]	
2020-12-16 02:51:42,423	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:51:42,424	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:51:42,425	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:51:42,425	[INFO]	93	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:51:42,426	[DEBUG]	
2020-12-16 02:51:42,426	[INFO]	94	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:51:42,427	[INFO]	95	SUCCESS	+1.0	
2020-12-16 02:51:42,427	[DEBUG]	
2020-12-16 02:51:42,428	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:51:42,429	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:51:42,429	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:51:45,531	[INFO]	99	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:51:45,534	[INFO]	100	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:45,535	[DEBUG]	
2020-12-16 02:51:45,537	[INFO]	101	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:45,537	[DEBUG]	
2020-12-16 02:51:46,268	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:51:47,128	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:51:47,130	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:47,130	[INFO]	105	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:51:47,131	[DEBUG]	
2020-12-16 02:51:47,131	[INFO]	106	SUCCESS	+1.0	
2020-12-16 02:51:47,131	[DEBUG]	
2020-12-16 02:51:50,277	[INFO]	107	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:51:50,279	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:51:50,280	[INFO]	108	SUCCESS	+1.0	
2020-12-16 02:51:50,280	[DEBUG]	
2020-12-16 02:51:50,282	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:51:51,133	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:51:51,996	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:51:55,092	[INFO]	112	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:51:55,093	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:51:55,095	[INFO]	113	SUCCESS	+1.0	
2020-12-16 02:51:55,095	[DEBUG]	
2020-12-16 02:51:55,973	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:51:59,113	[INFO]	115	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:51:59,115	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:51:59,116	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:59,117	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:51:59,119	[INFO]	119	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:51:59,120	[INFO]	120	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:52:02,169	[INFO]	121	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:52:02,169	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:52:02,882	[INFO]	122	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:52:02,884	[INFO]	123	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:52:02,884	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:52:03,787	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:52:04,679	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:52:04,683	[INFO]	126	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:52:04,684	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:52:04,686	[INFO]	127	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:52:04,687	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:52:04,688	[INFO]	128	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:52:04,689	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:52:04,691	[INFO]	129	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:52:04,692	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:52:05,595	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:52:06,461	[INFO]	131	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:52:09,605	[INFO]	132	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:52:09,607	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:52:10,349	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:52:10,351	[INFO]	134	SUCCESS	+1.0	
2020-12-16 02:52:10,351	[DEBUG]	
2020-12-16 02:52:11,226	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:52:11,228	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:52:11,228	[INFO]	137	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:52:11,229	[DEBUG]	
2020-12-16 02:52:11,229	[INFO]	138	SUCCESS	+1.0	
2020-12-16 02:52:11,229	[DEBUG]	
2020-12-16 02:52:11,230	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:52:11,941	[INFO]	140	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:52:12,813	[INFO]	141	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:52:12,814	[INFO]	142	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:52:15,843	[INFO]	143	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:52:15,845	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:52:18,944	[INFO]	144	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:52:18,945	[INFO]	145	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:52:18,946	[INFO]	146	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:52:19,818	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:52:19,819	[INFO]	148	SUCCESS	+1.0	
2020-12-16 02:52:19,820	[DEBUG]	
2020-12-16 02:52:23,051	[INFO]	149	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:52:23,872	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:52:23,874	[INFO]	151	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:52:23,874	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:52:23,875	[INFO]	152	SUCCESS	+1.0	
2020-12-16 02:52:23,875	[DEBUG]	
2020-12-16 02:52:24,742	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:52:24,744	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:52:25,505	[INFO]	155	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:52:25,508	[INFO]	156	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:52:25,510	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:52:25,512	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:52:26,219	[INFO]	159	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:52:29,266	[INFO]	160	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:52:29,268	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:52:32,401	[INFO]	161	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:52:33,251	[INFO]	162	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:52:33,252	[INFO]	163	SUCCESS	+1.0	
2020-12-16 02:52:33,252	[DEBUG]	
2020-12-16 02:52:33,253	[INFO]	164	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:52:34,135	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:52:37,264	[INFO]	166	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:52:38,133	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:52:38,134	[INFO]	168	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:52:38,134	[INFO]	169	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:52:38,135	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:52:39,008	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:52:39,776	[INFO]	172	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:52:40,660	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:52:43,761	[INFO]	174	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:52:43,762	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:52:43,764	[INFO]	175	SUCCESS	+1.0	
2020-12-16 02:52:43,764	[DEBUG]	
2020-12-16 02:52:44,610	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:52:45,501	[INFO]	177	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:52:46,391	[INFO]	178	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:52:46,392	[INFO]	179	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:52:47,264	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:52:47,265	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:52:50,340	[INFO]	182	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:52:50,342	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 02:52:50,343	[INFO]	183	SUCCESS	+1.0	
2020-12-16 02:52:50,344	[DEBUG]	
2020-12-16 02:52:51,077	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:52:51,970	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:52:51,973	[INFO]	186	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:52:52,847	[INFO]	187	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:52:52,850	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:52:55,943	[INFO]	189	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:52:55,944	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:52:55,944	[INFO]	190	SUCCESS	+1.0	
2020-12-16 02:52:55,945	[DEBUG]	
2020-12-16 02:52:55,946	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:52:55,946	[INFO]	192	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:52:55,946	[DEBUG]	
2020-12-16 02:52:56,795	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:52:56,796	[INFO]	194	SUCCESS	+1.0	
2020-12-16 02:52:56,796	[DEBUG]	
2020-12-16 02:52:56,797	[INFO]	195	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:52:57,684	[INFO]	196	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:52:58,577	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:52:59,475	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:53:02,604	[INFO]	199	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:53:05,652	[INFO]	200	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:05,654	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:53:05,655	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:53:05,656	[INFO]	203	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:05,656	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 02:53:05,657	[INFO]	204	SUCCESS	+1.0	
2020-12-16 02:53:05,657	[DEBUG]	
2020-12-16 02:53:06,530	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:06,532	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:53:06,532	[INFO]	207	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:06,533	[DEBUG]	
2020-12-16 02:53:06,533	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:53:09,659	[INFO]	209	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:53:09,661	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:53:09,663	[INFO]	210	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:53:09,663	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:53:09,664	[INFO]	211	SUCCESS	+1.0	
2020-12-16 02:53:09,665	[DEBUG]	
2020-12-16 02:53:12,768	[INFO]	212	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:53:12,771	[INFO]	213	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:53:12,772	[INFO]	214	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:12,774	[INFO]	215	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:53:12,774	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:53:12,775	[INFO]	216	SUCCESS	+1.0	
2020-12-16 02:53:12,776	[DEBUG]	
2020-12-16 02:53:13,634	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:53:13,635	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:53:13,636	[INFO]	219	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:53:13,637	[INFO]	220	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:53:13,637	[INFO]	221	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:13,638	[INFO]	222	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:13,638	[DEBUG]	
2020-12-16 02:53:13,639	[INFO]	223	SUCCESS	+1.0	
2020-12-16 02:53:13,639	[DEBUG]	
2020-12-16 02:53:13,640	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:53:14,530	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:53:14,532	[INFO]	226	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:53:14,532	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 02:53:15,405	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:53:18,622	[INFO]	228	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:18,624	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:19,379	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:53:22,389	[INFO]	230	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:22,390	[INFO]	231	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:53:22,391	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:23,132	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:53:23,983	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:53:23,984	[INFO]	234	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:23,985	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:24,877	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:53:24,879	[INFO]	236	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:24,879	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:25,757	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:53:26,643	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:53:29,861	[INFO]	239	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:29,862	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) {  }
                      }
                  }
                  return false;

2020-12-16 02:53:32,963	[INFO]	240	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:53:33,677	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:53:34,536	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:53:34,537	[INFO]	243	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:34,538	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:34,538	[INFO]	244	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:34,539	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:34,539	[INFO]	245	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:53:35,422	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:53:36,307	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:53:39,471	[INFO]	248	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:53:39,472	[INFO]	249	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:39,473	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:39,474	[INFO]	250	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:39,474	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:40,339	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:53:41,228	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:53:41,229	[INFO]	253	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:41,230	[INFO]	254	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:41,230	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    
                      }
                  }
                  return false;

2020-12-16 02:53:41,231	[INFO]	255	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:44,335	[INFO]	256	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:53:44,337	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 02:53:45,251	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:53:46,136	[INFO]	258	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:53:49,222	[INFO]	259	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:53:49,224	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:53:49,226	[INFO]	260	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:53:49,227	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:53:49,229	[INFO]	261	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:49,230	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:53:49,232	[INFO]	262	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:49,234	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:53:50,089	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:53:50,091	[INFO]	264	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:50,091	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:53:50,092	[INFO]	265	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:50,093	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:53:50,995	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:53:51,892	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:53:55,009	[INFO]	268	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:53:55,011	[INFO]	269	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:55,011	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:53:55,697	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:53:58,776	[INFO]	271	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:58,777	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:53:59,661	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:53:59,662	[INFO]	273	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:53:59,662	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:53:59,663	[INFO]	274	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:53:59,664	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:54:00,542	[INFO]	275	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:54:03,667	[INFO]	276	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:54:03,669	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:54:04,523	[INFO]	277	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:54:07,618	[INFO]	278	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:54:07,620	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:54:07,622	[INFO]	279	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:54:07,622	[DEBUG]	
2020-12-16 02:54:07,624	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:54:07,625	[INFO]	281	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:54:07,627	[INFO]	282	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:54:07,629	[INFO]	283	SUCCESS	+1.0	
2020-12-16 02:54:07,629	[DEBUG]	
2020-12-16 02:54:08,500	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:54:08,502	[INFO]	285	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:54:11,662	[INFO]	286	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:54:12,517	[INFO]	287	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:54:13,406	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:54:16,584	[INFO]	289	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:54:17,464	[INFO]	290	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:54:18,307	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:54:19,156	[INFO]	292	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:54:22,204	[INFO]	293	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:54:25,317	[INFO]	294	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:54:25,319	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:54:26,025	[INFO]	296	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:54:26,899	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:54:26,901	[INFO]	298	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:54:30,029	[INFO]	299	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:54:30,031	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:54:30,033	[INFO]	300	SUCCESS	+1.0	
2020-12-16 02:54:30,033	[DEBUG]	
2020-12-16 02:54:30,766	[INFO]	301	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:54:31,665	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:54:32,554	[INFO]	303	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:54:33,428	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:54:33,429	[INFO]	305	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:54:34,176	[INFO]	306	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:54:35,077	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:54:35,923	[INFO]	308	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:54:39,027	[INFO]	309	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:54:39,890	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:54:40,756	[INFO]	311	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:54:41,649	[INFO]	312	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:54:41,652	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:54:41,653	[INFO]	314	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:54:44,770	[INFO]	315	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:54:44,772	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:54:44,773	[INFO]	316	SUCCESS	+1.0	
2020-12-16 02:54:44,774	[DEBUG]	
2020-12-16 02:54:44,776	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:54:44,777	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:54:47,890	[INFO]	319	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:54:47,892	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 02:54:47,894	[INFO]	320	SUCCESS	+1.0	
2020-12-16 02:54:47,894	[DEBUG]	
2020-12-16 02:54:47,895	[INFO]	321	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:54:47,896	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:54:48,608	[INFO]	323	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:54:49,459	[INFO]	324	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:54:52,588	[INFO]	325	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:54:52,590	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:54:52,591	[INFO]	326	SUCCESS	+1.0	
2020-12-16 02:54:52,592	[DEBUG]	
2020-12-16 02:54:52,593	[INFO]	327	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:54:52,594	[INFO]	328	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:54:52,595	[DEBUG]	
2020-12-16 02:54:52,596	[INFO]	329	SUCCESS	+1.0	
2020-12-16 02:54:52,597	[DEBUG]	
2020-12-16 02:54:53,452	[INFO]	330	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:54:54,312	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:54:55,192	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:54:55,194	[INFO]	333	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:54:55,194	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:54:55,195	[INFO]	334	SUCCESS	+1.0	
2020-12-16 02:54:55,195	[DEBUG]	
2020-12-16 02:54:55,196	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:54:55,197	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:54:55,197	[INFO]	337	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:54:55,198	[INFO]	338	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:54:55,198	[DEBUG]	
2020-12-16 02:54:55,199	[INFO]	339	SUCCESS	+1.0	
2020-12-16 02:54:55,199	[DEBUG]	
2020-12-16 02:54:55,199	[INFO]	340	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:54:55,200	[DEBUG]	
2020-12-16 02:54:55,200	[INFO]	341	SUCCESS	+1.0	
2020-12-16 02:54:55,200	[DEBUG]	
2020-12-16 02:54:55,201	[INFO]	342	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:54:56,078	[INFO]	343	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:54:56,989	[INFO]	344	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:54:57,704	[INFO]	345	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:54:58,575	[INFO]	346	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 02:54:59,325	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:54:59,327	[INFO]	348	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:55:00,041	[INFO]	349	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:55:00,042	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:55:00,902	[INFO]	351	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:55:00,903	[INFO]	352	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:55:01,793	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:55:04,854	[INFO]	354	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:55:08,021	[INFO]	355	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:55:08,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 02:55:08,024	[INFO]	356	SUCCESS	+1.0	
2020-12-16 02:55:08,024	[DEBUG]	
2020-12-16 02:55:11,178	[INFO]	357	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:55:11,180	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:55:14,554	[INFO]	359	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:55:14,555	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 02:55:14,555	[INFO]	==== END ====
2020-12-16 02:55:14,555	[INFO]	Reason: target fitness reached
2020-12-16 02:55:14,556	[INFO]	
2020-12-16 02:55:14,556	[INFO]	========== EPOCH 11 ==========
2020-12-16 02:55:14,556	[INFO]	==== WARMUP ====
2020-12-16 02:55:17,672	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:55:17,673	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:55:20,756	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:55:20,756	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:55:23,799	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:55:23,800	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:55:26,882	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:55:26,882	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:55:26,882	[INFO]	==== START ====
2020-12-16 02:55:29,961	[INFO]	1	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:55:33,149	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:55:33,149	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:55:34,024	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:55:34,025	[INFO]	4	SUCCESS	+1.0	
2020-12-16 02:55:34,025	[DEBUG]	
2020-12-16 02:55:34,939	[INFO]	5	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:55:36,017	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:55:36,019	[INFO]	7	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:55:36,912	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:55:36,914	[INFO]	9	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:55:36,914	[DEBUG]	
2020-12-16 02:55:40,068	[INFO]	10	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:55:40,070	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:55:40,071	[INFO]	12	SUCCESS	+1.0	
2020-12-16 02:55:40,071	[DEBUG]	
2020-12-16 02:55:43,146	[INFO]	13	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:55:46,288	[INFO]	14	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:55:47,199	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:55:47,202	[INFO]	16	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:55:47,920	[INFO]	17	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:55:48,801	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:55:49,534	[INFO]	19	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:55:50,252	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:55:53,338	[INFO]	21	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:55:54,192	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:55:54,197	[INFO]	23	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:55:54,197	[DEBUG]	
2020-12-16 02:55:54,198	[INFO]	24	SUCCESS	+1.0	
2020-12-16 02:55:54,199	[DEBUG]	
2020-12-16 02:55:55,114	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:55:58,216	[INFO]	26	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:55:59,092	[INFO]	27	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:56:02,280	[INFO]	28	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:56:02,281	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:56:02,282	[INFO]	29	SUCCESS	+1.0	
2020-12-16 02:56:02,282	[DEBUG]	
2020-12-16 02:56:02,283	[INFO]	30	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:56:02,283	[DEBUG]	
2020-12-16 02:56:02,284	[INFO]	31	SUCCESS	+1.0	
2020-12-16 02:56:02,284	[DEBUG]	
2020-12-16 02:56:03,128	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:56:06,266	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:56:06,267	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:56:07,148	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:56:10,267	[INFO]	35	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:56:10,269	[INFO]	36	SUCCESS	+1.0	
2020-12-16 02:56:10,269	[DEBUG]	
2020-12-16 02:56:11,131	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:56:11,132	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:56:11,133	[INFO]	39	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:56:12,021	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:56:12,022	[INFO]	41	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:56:12,737	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:56:12,739	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:56:12,739	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:56:12,740	[DEBUG]	
2020-12-16 02:56:12,740	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:56:12,741	[INFO]	46	SUCCESS	+1.0	
2020-12-16 02:56:12,741	[DEBUG]	
2020-12-16 02:56:12,742	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:56:12,742	[DEBUG]	
2020-12-16 02:56:12,742	[INFO]	48	SUCCESS	+1.0	
2020-12-16 02:56:12,743	[DEBUG]	
2020-12-16 02:56:12,744	[INFO]	49	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:56:12,744	[DEBUG]	
2020-12-16 02:56:12,745	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:56:13,500	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:56:13,503	[INFO]	52	SUCCESS	+1.0	
2020-12-16 02:56:13,503	[DEBUG]	
2020-12-16 02:56:14,230	[INFO]	53	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:56:15,099	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:56:18,231	[INFO]	55	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:56:18,232	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:56:19,124	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:56:20,003	[INFO]	57	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:56:20,004	[INFO]	58	SUCCESS	+1.0	
2020-12-16 02:56:20,004	[DEBUG]	
2020-12-16 02:56:20,930	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:56:20,933	[INFO]	60	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:56:24,037	[INFO]	61	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:56:24,039	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:56:24,040	[INFO]	62	SUCCESS	+1.0	
2020-12-16 02:56:24,041	[DEBUG]	
2020-12-16 02:56:24,937	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:56:24,938	[INFO]	64	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:56:24,938	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:56:25,836	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:56:25,839	[INFO]	66	SUCCESS	+1.0	
2020-12-16 02:56:25,839	[DEBUG]	
2020-12-16 02:56:26,717	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:56:26,718	[INFO]	68	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:56:26,718	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:56:26,719	[INFO]	69	SUCCESS	+1.0	
2020-12-16 02:56:26,719	[DEBUG]	
2020-12-16 02:56:26,720	[INFO]	70	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:56:26,721	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:56:29,871	[INFO]	72	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:56:29,872	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:56:29,875	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:56:29,876	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:56:29,877	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:56:29,878	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:56:30,712	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:56:30,713	[INFO]	76	SUCCESS	+1.0	
2020-12-16 02:56:30,713	[DEBUG]	
2020-12-16 02:56:33,833	[INFO]	77	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:56:34,723	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:56:35,450	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:56:36,300	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:56:37,174	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:56:38,075	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:56:41,261	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:56:41,261	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:56:41,262	[INFO]	84	SUCCESS	+1.0	
2020-12-16 02:56:41,263	[DEBUG]	
2020-12-16 02:56:44,409	[INFO]	85	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:56:44,411	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:56:47,550	[INFO]	86	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:56:48,424	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:56:48,427	[INFO]	88	SUCCESS	+1.0	
2020-12-16 02:56:48,427	[DEBUG]	
2020-12-16 02:56:51,527	[INFO]	89	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:56:51,528	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:56:54,694	[INFO]	90	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:56:54,696	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,24 ****
--- 15,28 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:56:55,577	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:56:55,578	[INFO]	92	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:56:55,579	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:56:56,437	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 02:56:56,438	[INFO]	94	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:56:56,439	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:56:56,440	[INFO]	95	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:56:56,440	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 02:56:56,441	[INFO]	96	SUCCESS	+1.0	
2020-12-16 02:56:56,441	[DEBUG]	
2020-12-16 02:56:59,569	[INFO]	97	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:57:00,412	[INFO]	98	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:57:00,413	[INFO]	99	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:57:00,413	[DEBUG]	
2020-12-16 02:57:00,414	[INFO]	100	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:57:00,415	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:57:00,415	[INFO]	102	SUCCESS	+1.0	
2020-12-16 02:57:00,416	[DEBUG]	
2020-12-16 02:57:00,416	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:57:00,417	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:57:00,418	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:57:01,293	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:57:04,383	[INFO]	107	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:57:04,385	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:57:04,385	[INFO]	109	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:57:04,386	[DEBUG]	
2020-12-16 02:57:04,387	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:57:04,387	[INFO]	111	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:57:04,388	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:57:07,566	[INFO]	112	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:57:07,568	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:08,397	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:57:09,258	[INFO]	114	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:57:09,260	[INFO]	115	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:57:09,261	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:09,262	[INFO]	116	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:57:09,262	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:12,474	[INFO]	117	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:57:12,476	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,27 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) {  }
                      }
                  }
                  return false;
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 29,35 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:15,523	[INFO]	118	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:57:15,524	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:15,525	[INFO]	119	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:57:15,526	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:16,384	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:57:16,386	[INFO]	121	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:57:16,387	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:17,266	[INFO]	122	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:57:17,273	[INFO]	123	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:57:17,276	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:18,133	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:57:18,135	[INFO]	125	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:57:18,136	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:21,202	[INFO]	126	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:57:21,206	[INFO]	127	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:57:21,208	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:21,210	[INFO]	128	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:57:21,212	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:21,214	[INFO]	129	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:57:21,215	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,33 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:24,331	[INFO]	130	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:57:24,334	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,35 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:25,069	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:57:25,072	[INFO]	132	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:57:25,072	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,34 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 14,35 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:57:25,933	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:57:29,133	[INFO]	134	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:57:29,135	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:29,138	[INFO]	135	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:57:29,139	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:29,142	[INFO]	136	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:57:29,143	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:29,145	[INFO]	137	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:57:29,147	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:29,150	[INFO]	138	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:57:29,151	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
--- 14,28 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:32,300	[INFO]	139	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:32,302	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:32,303	[INFO]	140	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:32,304	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:35,435	[INFO]	141	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:35,439	[INFO]	142	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:35,440	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:35,443	[INFO]	143	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:35,444	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:35,446	[INFO]	144	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:35,448	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:35,450	[INFO]	145	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:35,452	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:35,454	[INFO]	146	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:57:35,455	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:35,456	[INFO]	147	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:57:35,457	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,27 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
-                     return true;
-                 } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     return true;
+                 } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                  }
                  return false;
              }

2020-12-16 02:57:38,537	[INFO]	148	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:57:38,539	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:57:41,631	[INFO]	149	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:57:42,531	[INFO]	150	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:57:42,533	[INFO]	151	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:57:42,534	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:57:43,407	[INFO]	152	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:57:43,408	[INFO]	153	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:57:43,409	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:57:43,410	[INFO]	154	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:57:43,411	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:57:43,411	[INFO]	155	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:57:43,412	[DEBUG]	
2020-12-16 02:57:46,593	[INFO]	156	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:57:49,681	[INFO]	157	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:57:49,684	[INFO]	158	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:57:49,685	[INFO]	159	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:57:49,686	[DEBUG]	
2020-12-16 02:57:49,687	[INFO]	160	SUCCESS	+1.0	
2020-12-16 02:57:49,687	[DEBUG]	
2020-12-16 02:57:52,877	[INFO]	161	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:57:52,877	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 02:57:52,878	[INFO]	==== END ====
2020-12-16 02:57:52,878	[INFO]	Reason: target fitness reached
2020-12-16 02:57:52,878	[INFO]	
2020-12-16 02:57:52,879	[INFO]	========== EPOCH 12 ==========
2020-12-16 02:57:52,879	[INFO]	==== WARMUP ====
2020-12-16 02:57:55,974	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:57:55,975	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:57:59,059	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:57:59,059	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:58:02,256	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 02:58:02,256	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:58:05,423	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 02:58:05,423	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 02:58:05,423	[INFO]	==== START ====
2020-12-16 02:58:06,227	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:58:07,112	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:58:08,031	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:58:08,925	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:58:12,142	[INFO]	5	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:58:12,143	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:58:15,319	[INFO]	6	SUCCESS	 2.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:58:16,215	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:58:19,329	[INFO]	8	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:58:20,192	[INFO]	9	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:58:20,193	[INFO]	10	SUCCESS	+1.0	
2020-12-16 02:58:20,193	[DEBUG]	
2020-12-16 02:58:20,194	[INFO]	11	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:58:20,194	[DEBUG]	
2020-12-16 02:58:21,083	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:58:22,018	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:58:22,020	[INFO]	14	SUCCESS	+1.0	
2020-12-16 02:58:22,021	[DEBUG]	
2020-12-16 02:58:22,022	[INFO]	15	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:58:22,023	[DEBUG]	
2020-12-16 02:58:25,182	[INFO]	16	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 02:58:25,184	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:58:25,185	[INFO]	17	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:58:25,186	[DEBUG]	
2020-12-16 02:58:25,187	[INFO]	18	SUCCESS	+1.0	
2020-12-16 02:58:25,187	[DEBUG]	
2020-12-16 02:58:26,076	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:58:29,986	[INFO]	20	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:58:31,282	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 02:58:31,284	[INFO]	22	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:58:31,284	[DEBUG]	
2020-12-16 02:58:32,455	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:58:32,456	[INFO]	24	SUCCESS	+1.0	
2020-12-16 02:58:32,456	[DEBUG]	
2020-12-16 02:58:32,457	[INFO]	25	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:58:32,457	[DEBUG]	
2020-12-16 02:58:32,458	[INFO]	26	SUCCESS	+1.0	
2020-12-16 02:58:32,458	[DEBUG]	
2020-12-16 02:58:33,652	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:58:33,654	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:58:34,641	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:58:34,643	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:58:34,644	[INFO]	31	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:58:34,644	[DEBUG]	
2020-12-16 02:58:37,758	[INFO]	32	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:58:37,760	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:58:37,762	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:58:37,763	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 02:58:38,649	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:58:38,651	[INFO]	35	SUCCESS	+1.0	
2020-12-16 02:58:38,651	[DEBUG]	
2020-12-16 02:58:41,713	[INFO]	36	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:58:44,900	[INFO]	37	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:58:48,034	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:58:48,036	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 02:58:48,037	[INFO]	39	SUCCESS	+1.0	
2020-12-16 02:58:48,038	[DEBUG]	
2020-12-16 02:58:48,918	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:58:52,131	[INFO]	41	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:58:52,950	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:58:52,951	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 02:58:52,952	[INFO]	44	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:58:52,952	[DEBUG]	
2020-12-16 02:58:52,953	[INFO]	45	SUCCESS	+1.0	
2020-12-16 02:58:52,953	[DEBUG]	
2020-12-16 02:58:56,125	[INFO]	46	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 02:58:56,129	[INFO]	47	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:58:56,995	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:58:57,730	[INFO]	49	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:58:58,620	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:58:59,480	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:59:00,369	[INFO]	52	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:59:00,371	[INFO]	53	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:59:00,371	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:59:03,531	[INFO]	54	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 02:59:03,532	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 02:59:06,648	[INFO]	55	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:59:06,650	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 15,31 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-16 02:59:07,535	[INFO]	56	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 02:59:10,596	[INFO]	57	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:59:10,597	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,27 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
--- 15,30 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  }
                  return false;
              }

2020-12-16 02:59:13,712	[INFO]	58	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:59:13,714	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 02:59:14,584	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:59:15,469	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 02:59:15,471	[INFO]	61	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:59:15,471	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 02:59:16,345	[INFO]	62	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:59:19,474	[INFO]	63	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:59:19,476	[INFO]	64	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:59:19,477	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 02:59:22,556	[INFO]	65	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:59:23,425	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:59:24,155	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 02:59:24,156	[INFO]	68	SUCCESS	+1.0	
2020-12-16 02:59:24,157	[DEBUG]	
2020-12-16 02:59:25,040	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 02:59:25,041	[INFO]	70	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:59:25,041	[DEBUG]	
2020-12-16 02:59:25,042	[INFO]	71	SUCCESS	+1.0	
2020-12-16 02:59:25,042	[DEBUG]	
2020-12-16 02:59:25,043	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:59:25,790	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 02:59:26,643	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:59:27,530	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:59:30,785	[INFO]	76	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:59:31,630	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 02:59:34,705	[INFO]	78	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 02:59:34,706	[INFO]	79	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:59:34,706	[DEBUG]	
2020-12-16 02:59:35,576	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:59:35,577	[INFO]	81	SUCCESS	+1.0	
2020-12-16 02:59:35,578	[DEBUG]	
2020-12-16 02:59:38,735	[INFO]	82	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:59:38,736	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 02:59:38,737	[INFO]	83	SUCCESS	+1.0	
2020-12-16 02:59:38,737	[DEBUG]	
2020-12-16 02:59:38,738	[INFO]	84	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 02:59:38,738	[DEBUG]	
2020-12-16 02:59:38,739	[INFO]	85	SUCCESS	+1.0	
2020-12-16 02:59:38,739	[DEBUG]	
2020-12-16 02:59:38,740	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:59:41,897	[INFO]	87	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:59:41,898	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 02:59:41,900	[INFO]	88	SUCCESS	+1.0	
2020-12-16 02:59:41,900	[DEBUG]	
2020-12-16 02:59:45,057	[INFO]	89	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:59:45,060	[INFO]	90	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:59:45,930	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 02:59:45,932	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:59:45,933	[INFO]	93	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:59:46,811	[INFO]	94	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:59:46,812	[INFO]	95	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:59:46,813	[DEBUG]	
2020-12-16 02:59:46,813	[INFO]	96	SUCCESS	+1.0	
2020-12-16 02:59:46,814	[DEBUG]	
2020-12-16 02:59:46,815	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 02:59:46,815	[INFO]	98	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 02:59:46,816	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 02:59:47,557	[INFO]	99	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 02:59:47,558	[INFO]	100	SUCCESS	+1.0	
2020-12-16 02:59:47,558	[DEBUG]	
2020-12-16 02:59:50,670	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:59:50,671	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:59:50,673	[INFO]	102	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:59:50,674	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:59:53,829	[INFO]	103	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 02:59:53,832	[INFO]	104	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 02:59:53,832	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 02:59:53,834	[INFO]	105	SUCCESS	+1.0	
2020-12-16 02:59:53,834	[DEBUG]	
2020-12-16 02:59:54,689	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 02:59:55,576	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:59:56,332	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 02:59:56,335	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 02:59:57,075	[INFO]	110	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 02:59:57,078	[INFO]	111	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 02:59:57,080	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 02:59:57,081	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 02:59:57,959	[INFO]	114	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:00:01,163	[INFO]	115	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:00:01,166	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:00:01,168	[INFO]	117	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:00:01,169	[INFO]	118	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:00:01,996	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:00:05,050	[INFO]	120	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:00:05,052	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:00:05,053	[INFO]	121	SUCCESS	+1.0	
2020-12-16 03:00:05,054	[DEBUG]	
2020-12-16 03:00:05,055	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:00:05,943	[INFO]	123	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:00:05,944	[INFO]	124	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:00:05,944	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:00:05,945	[INFO]	125	SUCCESS	+1.0	
2020-12-16 03:00:05,945	[DEBUG]	
2020-12-16 03:00:05,945	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:00:09,125	[INFO]	127	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:00:09,128	[INFO]	128	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:00:09,129	[INFO]	129	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:00:09,868	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:00:10,596	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:00:10,598	[INFO]	132	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:00:13,708	[INFO]	133	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:00:14,459	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:00:14,462	[INFO]	135	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:00:14,463	[DEBUG]	
2020-12-16 03:00:14,465	[INFO]	136	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:00:14,466	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:00:14,468	[INFO]	138	SUCCESS	+1.0	
2020-12-16 03:00:14,468	[DEBUG]	
2020-12-16 03:00:15,360	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:00:16,212	[INFO]	140	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:00:19,647	[INFO]	141	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:00:20,551	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:00:21,458	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:00:21,459	[INFO]	144	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:00:21,460	[DEBUG]	
2020-12-16 03:00:22,326	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:00:23,237	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:00:26,473	[INFO]	147	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:00:26,475	[INFO]	148	SUCCESS	+1.0	
2020-12-16 03:00:26,475	[DEBUG]	
2020-12-16 03:00:29,449	[INFO]	149	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:00:30,353	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:00:33,478	[INFO]	151	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:00:33,481	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:00:33,483	[INFO]	152	SUCCESS	+1.0	
2020-12-16 03:00:33,484	[DEBUG]	
2020-12-16 03:00:34,230	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:00:34,233	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:00:34,235	[INFO]	155	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:00:34,236	[DEBUG]	
2020-12-16 03:00:34,237	[INFO]	156	SUCCESS	+1.0	
2020-12-16 03:00:34,237	[DEBUG]	
2020-12-16 03:00:35,240	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:00:35,241	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:00:35,242	[INFO]	159	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:00:36,201	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:00:37,150	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:00:38,370	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:00:42,405	[INFO]	163	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:00:42,406	[INFO]	164	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:00:43,183	[INFO]	165	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:00:43,185	[INFO]	166	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:00:44,347	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:00:45,357	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:00:46,118	[INFO]	169	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:00:46,121	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:00:46,122	[INFO]	171	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:00:46,123	[DEBUG]	
2020-12-16 03:00:46,124	[INFO]	172	SUCCESS	+1.0	
2020-12-16 03:00:46,125	[DEBUG]	
2020-12-16 03:00:47,004	[INFO]	173	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:00:47,005	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:00:47,006	[INFO]	175	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:00:47,007	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:00:47,858	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:00:47,860	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:00:47,860	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:00:47,861	[INFO]	180	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:00:47,861	[DEBUG]	
2020-12-16 03:00:47,862	[INFO]	181	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:00:47,863	[INFO]	182	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:00:47,864	[INFO]	183	SUCCESS	+1.0	
2020-12-16 03:00:47,864	[DEBUG]	
2020-12-16 03:00:48,597	[INFO]	184	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:00:49,480	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:00:49,482	[INFO]	186	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:00:50,365	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:00:51,119	[INFO]	188	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:00:51,967	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:00:52,845	[INFO]	190	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:00:53,740	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:00:53,743	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:00:53,744	[INFO]	193	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:00:53,745	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:00:56,803	[INFO]	194	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:00:56,805	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,24 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:00:59,846	[INFO]	195	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:00:59,847	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:00:59,847	[INFO]	196	SUCCESS	+1.0	
2020-12-16 03:00:59,848	[DEBUG]	
2020-12-16 03:01:00,586	[INFO]	197	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:01:03,693	[INFO]	198	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:01:04,603	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:01:05,486	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:01:06,360	[INFO]	201	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:01:09,508	[INFO]	202	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:09,509	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:01:09,510	[INFO]	203	SUCCESS	+1.0	
2020-12-16 03:01:09,510	[DEBUG]	
2020-12-16 03:01:10,325	[INFO]	204	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:01:11,197	[INFO]	205	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:01:12,092	[INFO]	206	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:01:12,093	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:01:12,839	[INFO]	208	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:15,957	[INFO]	209	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:01:15,958	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:01:19,068	[INFO]	210	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:01:19,069	[INFO]	211	SUCCESS	+1.0	
2020-12-16 03:01:19,069	[DEBUG]	
2020-12-16 03:01:19,070	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:01:19,776	[INFO]	213	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:01:20,652	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:01:20,653	[INFO]	215	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:20,654	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:01:20,654	[INFO]	216	SUCCESS	+1.0	
2020-12-16 03:01:20,654	[DEBUG]	
2020-12-16 03:01:20,655	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:01:23,843	[INFO]	218	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:01:23,846	[INFO]	219	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:01:23,846	[DEBUG]	
2020-12-16 03:01:23,848	[INFO]	220	SUCCESS	+1.0	
2020-12-16 03:01:23,848	[DEBUG]	
2020-12-16 03:01:24,706	[INFO]	221	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:01:24,707	[INFO]	222	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:01:24,707	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:01:24,708	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:01:24,709	[INFO]	225	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:01:25,435	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:01:26,301	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:01:26,302	[INFO]	228	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:26,302	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:01:26,303	[INFO]	229	SUCCESS	+1.0	
2020-12-16 03:01:26,303	[DEBUG]	
2020-12-16 03:01:26,304	[INFO]	230	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:01:26,305	[INFO]	231	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:26,305	[DEBUG]	
2020-12-16 03:01:27,050	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:01:27,052	[INFO]	233	SUCCESS	+1.0	
2020-12-16 03:01:27,053	[DEBUG]	
2020-12-16 03:01:27,940	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:01:28,817	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:01:28,818	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:01:29,722	[INFO]	237	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:01:32,880	[INFO]	238	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:01:33,750	[INFO]	239	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:01:33,751	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:01:33,752	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:01:36,893	[INFO]	242	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:01:36,895	[INFO]	243	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:01:36,897	[INFO]	244	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:01:36,898	[INFO]	245	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:01:37,765	[INFO]	246	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:01:37,766	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:01:37,767	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:01:37,768	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:01:37,768	[INFO]	250	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:01:37,769	[DEBUG]	
2020-12-16 03:01:37,769	[INFO]	251	SUCCESS	+1.0	
2020-12-16 03:01:37,769	[DEBUG]	
2020-12-16 03:01:37,770	[INFO]	252	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:01:37,771	[INFO]	253	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:01:40,851	[INFO]	254	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:01:40,853	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:01:40,854	[INFO]	255	SUCCESS	+1.0	
2020-12-16 03:01:40,854	[DEBUG]	
2020-12-16 03:01:44,003	[INFO]	256	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:01:44,004	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:01:44,820	[INFO]	257	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:01:44,821	[INFO]	258	SUCCESS	+1.0	
2020-12-16 03:01:44,822	[DEBUG]	
2020-12-16 03:01:47,991	[INFO]	259	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:01:48,872	[INFO]	260	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:01:49,619	[INFO]	261	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:01:50,356	[INFO]	262	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:01:50,359	[INFO]	263	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:50,360	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:01:51,220	[INFO]	264	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:01:52,112	[INFO]	265	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:01:52,113	[INFO]	266	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:52,113	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:01:52,985	[INFO]	267	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:01:56,141	[INFO]	268	SUCCESS	 2.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:01:57,017	[INFO]	269	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:01:57,736	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:01:57,738	[INFO]	271	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:01:57,738	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:01:58,635	[INFO]	272	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:02:01,732	[INFO]	273	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:02:01,733	[INFO]	274	SUCCESS	+1.0	
2020-12-16 03:02:01,733	[DEBUG]	
2020-12-16 03:02:02,606	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:02:05,726	[INFO]	276	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:02:05,728	[INFO]	277	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:02:06,598	[INFO]	278	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:02:09,812	[INFO]	279	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:02:09,813	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:02:09,814	[INFO]	280	SUCCESS	+1.0	
2020-12-16 03:02:09,814	[DEBUG]	
2020-12-16 03:02:12,839	[INFO]	281	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:02:12,841	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 03:02:13,728	[INFO]	282	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:02:13,730	[INFO]	283	SUCCESS	+1.0	
2020-12-16 03:02:13,731	[DEBUG]	
2020-12-16 03:02:14,464	[INFO]	284	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:02:17,589	[INFO]	285	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:02:18,441	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:02:18,444	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:02:19,188	[INFO]	288	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:02:22,349	[INFO]	289	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:02:22,351	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:02:25,476	[INFO]	290	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:02:25,478	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:02:25,479	[INFO]	291	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:02:25,480	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:02:25,482	[INFO]	292	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:02:25,482	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:02:25,484	[INFO]	293	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:02:25,484	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:02:25,486	[INFO]	294	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:02:25,486	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:02:28,623	[INFO]	295	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:02:28,625	[INFO]	296	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:02:28,626	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:02:28,627	[INFO]	297	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:02:28,628	[INFO]	298	SUCCESS	+1.0	
2020-12-16 03:02:28,629	[DEBUG]	
2020-12-16 03:02:29,364	[INFO]	299	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:02:29,367	[INFO]	300	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:02:29,368	[DEBUG]	
2020-12-16 03:02:30,122	[INFO]	301	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:02:30,124	[INFO]	302	SUCCESS	+1.0	
2020-12-16 03:02:30,125	[DEBUG]	
2020-12-16 03:02:30,856	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:02:30,859	[INFO]	304	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:02:30,859	[DEBUG]	
2020-12-16 03:02:30,861	[INFO]	305	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:02:30,862	[INFO]	306	SUCCESS	+1.0	
2020-12-16 03:02:30,863	[DEBUG]	
2020-12-16 03:02:30,864	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:02:30,866	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:02:30,868	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:02:30,869	[INFO]	310	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:02:30,870	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:02:30,871	[INFO]	311	SUCCESS	+1.0	
2020-12-16 03:02:30,872	[DEBUG]	
2020-12-16 03:02:30,874	[INFO]	312	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:02:31,771	[INFO]	313	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:02:32,502	[INFO]	314	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:02:35,600	[INFO]	315	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:02:35,602	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 03:02:35,603	[INFO]	316	SUCCESS	+1.0	
2020-12-16 03:02:35,604	[DEBUG]	
2020-12-16 03:02:38,724	[INFO]	317	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:02:38,726	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 03:02:38,727	[INFO]	318	SUCCESS	+1.0	
2020-12-16 03:02:38,727	[DEBUG]	
2020-12-16 03:02:39,587	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:02:40,469	[INFO]	320	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:02:41,194	[INFO]	321	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:02:41,195	[INFO]	322	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:02:41,195	[DEBUG]	
2020-12-16 03:02:41,196	[INFO]	323	SUCCESS	+1.0	
2020-12-16 03:02:41,196	[DEBUG]	
2020-12-16 03:02:41,196	[INFO]	324	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:02:41,197	[DEBUG]	
2020-12-16 03:02:41,886	[INFO]	325	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:02:41,887	[INFO]	326	SUCCESS	+1.0	
2020-12-16 03:02:41,887	[DEBUG]	
2020-12-16 03:02:45,040	[INFO]	327	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:02:45,042	[INFO]	328	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:02:48,174	[INFO]	329	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:02:49,048	[INFO]	330	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:02:49,967	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:02:49,969	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:02:53,406	[INFO]	333	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:02:54,248	[INFO]	334	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:02:55,128	[INFO]	335	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:02:55,129	[INFO]	336	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:02:56,029	[INFO]	337	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:02:56,785	[INFO]	338	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:02:57,654	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:02:58,379	[INFO]	340	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:02:58,380	[INFO]	341	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:03:01,464	[INFO]	342	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:03:01,465	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:03:01,465	[INFO]	343	SUCCESS	+1.0	
2020-12-16 03:03:01,466	[DEBUG]	
2020-12-16 03:03:01,467	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:03:01,467	[INFO]	345	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:03:01,469	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:03:02,342	[INFO]	347	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:03:03,049	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:03:06,072	[INFO]	349	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:03:06,959	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:03:07,825	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:03:08,679	[INFO]	352	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:03:09,541	[INFO]	353	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:03:10,271	[INFO]	354	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:03:10,272	[INFO]	355	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:03:11,125	[INFO]	356	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:03:11,127	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:03:12,010	[INFO]	358	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:03:12,011	[INFO]	359	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:03:12,012	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:03:12,012	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:03:12,013	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:03:12,015	[INFO]	363	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:03:12,015	[DEBUG]	
2020-12-16 03:03:12,015	[INFO]	364	SUCCESS	+1.0	
2020-12-16 03:03:12,016	[DEBUG]	
2020-12-16 03:03:12,888	[INFO]	365	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:03:12,889	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:03:12,890	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:03:15,946	[INFO]	368	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:03:19,053	[INFO]	369	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:03:19,054	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:03:19,054	[INFO]	==== END ====
2020-12-16 03:03:19,054	[INFO]	Reason: target fitness reached
2020-12-16 03:03:19,055	[INFO]	
2020-12-16 03:03:19,055	[INFO]	========== EPOCH 13 ==========
2020-12-16 03:03:19,055	[INFO]	==== WARMUP ====
2020-12-16 03:03:22,201	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:03:22,201	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:03:25,260	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:03:25,261	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:03:28,323	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:03:28,324	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:03:31,397	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:03:31,397	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:03:31,398	[INFO]	==== START ====
2020-12-16 03:03:31,399	[INFO]	1	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:03:31,400	[DEBUG]	
2020-12-16 03:03:31,401	[INFO]	2	SUCCESS	+1.0	
2020-12-16 03:03:31,402	[DEBUG]	
2020-12-16 03:03:31,403	[INFO]	3	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:03:31,404	[DEBUG]	
2020-12-16 03:03:32,178	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:03:32,180	[INFO]	5	SUCCESS	+1.0	
2020-12-16 03:03:32,181	[DEBUG]	
2020-12-16 03:03:32,918	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:03:33,784	[INFO]	7	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:03:34,662	[INFO]	8	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:03:35,551	[INFO]	9	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:03:36,434	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:03:37,329	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:03:40,463	[INFO]	12	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:03:40,464	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:03:40,465	[INFO]	13	SUCCESS	+1.0	
2020-12-16 03:03:40,465	[DEBUG]	
2020-12-16 03:03:43,516	[INFO]	14	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:03:43,517	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:03:46,561	[INFO]	15	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:03:46,563	[INFO]	16	SUCCESS	+1.0	
2020-12-16 03:03:46,563	[DEBUG]	
2020-12-16 03:03:46,565	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:03:49,742	[INFO]	18	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:03:52,806	[INFO]	19	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:03:52,809	[INFO]	20	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:03:55,934	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:03:55,936	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:03:56,675	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:03:56,677	[INFO]	23	SUCCESS	+1.0	
2020-12-16 03:03:56,678	[DEBUG]	
2020-12-16 03:03:59,770	[INFO]	24	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:04:00,653	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:04:00,654	[INFO]	26	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:04:00,655	[INFO]	27	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:00,655	[DEBUG]	
2020-12-16 03:04:00,656	[INFO]	28	SUCCESS	+1.0	
2020-12-16 03:04:00,656	[DEBUG]	
2020-12-16 03:04:00,657	[INFO]	29	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:04:01,392	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:04:01,393	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:04:01,394	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:04:01,395	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:04:02,136	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:04:02,137	[INFO]	35	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:04:02,137	[DEBUG]	
2020-12-16 03:04:02,138	[INFO]	36	SUCCESS	+1.0	
2020-12-16 03:04:02,138	[DEBUG]	
2020-12-16 03:04:02,984	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:04:06,100	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:04:06,101	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:04:06,104	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:06,105	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:04:09,249	[INFO]	40	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:04:10,115	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:04:10,997	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:04:10,998	[INFO]	43	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:10,999	[DEBUG]	
2020-12-16 03:04:10,999	[INFO]	44	SUCCESS	+1.0	
2020-12-16 03:04:10,999	[DEBUG]	
2020-12-16 03:04:14,093	[INFO]	45	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:04:14,095	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:04:14,957	[INFO]	46	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:04:14,959	[INFO]	47	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:14,960	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:04:14,961	[INFO]	48	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:14,962	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:04:15,837	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:04:16,599	[INFO]	50	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:04:19,803	[INFO]	51	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:04:19,805	[INFO]	52	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:19,805	[DEBUG]	
2020-12-16 03:04:19,806	[INFO]	53	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:19,806	[DEBUG]	
2020-12-16 03:04:22,810	[INFO]	54	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:04:22,812	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 03:04:22,814	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:04:22,815	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 03:04:23,699	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:04:24,588	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:04:24,590	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:04:25,467	[INFO]	59	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:04:26,340	[INFO]	60	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:04:26,341	[INFO]	61	SUCCESS	+1.0	
2020-12-16 03:04:26,342	[DEBUG]	
2020-12-16 03:04:26,342	[INFO]	62	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:04:26,343	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:04:29,460	[INFO]	63	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:04:29,461	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:04:29,462	[INFO]	64	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:04:29,462	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:04:32,576	[INFO]	65	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:04:32,578	[INFO]	66	SUCCESS	+1.0	
2020-12-16 03:04:32,579	[DEBUG]	
2020-12-16 03:04:32,580	[INFO]	67	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:04:33,437	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:04:36,537	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:04:36,539	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:04:36,540	[INFO]	70	SUCCESS	+1.0	
2020-12-16 03:04:36,541	[DEBUG]	
2020-12-16 03:04:36,542	[INFO]	71	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:04:36,543	[DEBUG]	
2020-12-16 03:04:36,544	[INFO]	72	SUCCESS	+1.0	
2020-12-16 03:04:36,544	[DEBUG]	
2020-12-16 03:04:36,546	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:04:36,547	[INFO]	74	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:04:37,426	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:04:40,618	[INFO]	76	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:04:40,619	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Set<Node> nodesvisited = new HashSet<>();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:04:40,621	[INFO]	77	SUCCESS	+1.0	
2020-12-16 03:04:40,621	[DEBUG]	
2020-12-16 03:04:41,324	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:04:42,183	[INFO]	79	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:04:43,059	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:04:46,156	[INFO]	81	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:04:46,159	[INFO]	82	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:04:46,160	[DEBUG]	
2020-12-16 03:04:46,161	[INFO]	83	SUCCESS	+1.0	
2020-12-16 03:04:46,161	[DEBUG]	
2020-12-16 03:04:46,881	[INFO]	84	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:04:47,741	[INFO]	85	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:04:47,744	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:04:48,610	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:04:51,763	[INFO]	88	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:04:52,592	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:04:53,478	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:04:56,672	[INFO]	91	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:04:57,532	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:04:57,533	[INFO]	93	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:05:00,684	[INFO]	94	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:05:00,687	[INFO]	95	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:05:01,565	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:05:02,438	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:05:05,536	[INFO]	98	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:05:05,537	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:05:05,538	[INFO]	99	SUCCESS	+1.0	
2020-12-16 03:05:05,539	[DEBUG]	
2020-12-16 03:05:08,668	[INFO]	100	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:05:09,355	[INFO]	101	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:05:09,356	[INFO]	102	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:05:10,232	[INFO]	103	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:05:13,401	[INFO]	104	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:05:14,121	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:05:15,009	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:05:15,010	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:05:15,011	[INFO]	108	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:05:15,011	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,21 ****
--- 16,24 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
+                 }
+                 if (nodesvisited.contains(node)) {
+                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:05:15,707	[INFO]	109	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:05:15,708	[INFO]	110	SUCCESS	+1.0	
2020-12-16 03:05:15,708	[DEBUG]	
2020-12-16 03:05:15,709	[INFO]	111	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:05:16,425	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:05:16,426	[INFO]	113	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:05:19,635	[INFO]	114	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:05:19,636	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:05:19,638	[INFO]	115	SUCCESS	+1.0	
2020-12-16 03:05:19,639	[DEBUG]	
2020-12-16 03:05:19,640	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:05:19,642	[INFO]	117	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:05:19,643	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:05:20,498	[INFO]	118	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:05:21,367	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:05:21,368	[INFO]	120	SUCCESS	+1.0	
2020-12-16 03:05:21,368	[DEBUG]	
2020-12-16 03:05:24,530	[INFO]	121	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:05:24,533	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:05:24,534	[INFO]	123	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:05:24,536	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:05:24,537	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:05:25,376	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:05:26,230	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:05:27,105	[INFO]	128	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:05:27,106	[INFO]	129	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:05:27,106	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:05:27,107	[INFO]	131	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:05:27,108	[DEBUG]	
2020-12-16 03:05:27,109	[INFO]	132	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:05:27,109	[DEBUG]	
2020-12-16 03:05:27,109	[INFO]	133	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:05:27,110	[DEBUG]	
2020-12-16 03:05:27,110	[INFO]	134	SUCCESS	+1.0	
2020-12-16 03:05:27,110	[DEBUG]	
2020-12-16 03:05:27,983	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:05:28,867	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:05:29,625	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:05:32,741	[INFO]	138	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:05:35,915	[INFO]	139	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:05:39,064	[INFO]	140	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:05:39,065	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 03:05:39,067	[INFO]	141	SUCCESS	+1.0	
2020-12-16 03:05:39,067	[DEBUG]	
2020-12-16 03:05:42,190	[INFO]	142	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:05:43,042	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:05:43,937	[INFO]	144	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:05:47,121	[INFO]	145	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:05:47,123	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:05:47,125	[INFO]	146	SUCCESS	+1.0	
2020-12-16 03:05:47,125	[DEBUG]	
2020-12-16 03:05:47,127	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:05:47,956	[INFO]	148	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:05:47,957	[INFO]	149	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:05:47,958	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:05:50,996	[INFO]	151	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:05:50,997	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:05:51,886	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:05:51,887	[INFO]	153	SUCCESS	+1.0	
2020-12-16 03:05:51,887	[DEBUG]	
2020-12-16 03:05:55,012	[INFO]	154	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:05:55,013	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:05:55,774	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:05:58,912	[INFO]	156	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:05:58,913	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:05:59,772	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:06:02,878	[INFO]	158	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:06:02,880	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:06:03,750	[INFO]	159	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:06:04,624	[INFO]	160	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:06:04,625	[INFO]	161	SUCCESS	+1.0	
2020-12-16 03:06:04,625	[DEBUG]	
2020-12-16 03:06:04,626	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:06:04,627	[INFO]	163	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:06:07,732	[INFO]	164	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:06:10,825	[INFO]	165	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:06:13,869	[INFO]	166	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:06:13,871	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:06:14,744	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:06:15,475	[INFO]	169	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:06:16,342	[INFO]	170	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:06:17,226	[INFO]	171	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:06:17,227	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:06:17,228	[INFO]	173	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:06:17,228	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:06:20,363	[INFO]	174	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:06:20,364	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:06:23,532	[INFO]	175	SUCCESS	*0.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:06:23,533	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,28 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:06:23,534	[INFO]	==== END ====
2020-12-16 03:06:23,534	[INFO]	Reason: target fitness reached
2020-12-16 03:06:23,535	[INFO]	
2020-12-16 03:06:23,535	[INFO]	========== EPOCH 14 ==========
2020-12-16 03:06:23,535	[INFO]	==== WARMUP ====
2020-12-16 03:06:26,657	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:06:26,657	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:06:29,727	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:06:29,727	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:06:32,867	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:06:32,867	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:06:35,941	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:06:35,941	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:06:35,941	[INFO]	==== START ====
2020-12-16 03:06:39,087	[INFO]	1	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:06:39,979	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:06:40,710	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:06:41,591	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:06:44,712	[INFO]	5	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:06:47,757	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:06:47,759	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:06:47,761	[INFO]	7	SUCCESS	+1.0	
2020-12-16 03:06:47,761	[DEBUG]	
2020-12-16 03:06:50,886	[INFO]	8	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:06:51,771	[INFO]	9	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:06:52,678	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:06:52,679	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:06:53,566	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:06:53,567	[INFO]	13	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:06:53,568	[DEBUG]	
2020-12-16 03:06:53,568	[INFO]	14	SUCCESS	+1.0	
2020-12-16 03:06:53,568	[DEBUG]	
2020-12-16 03:06:53,569	[INFO]	15	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:06:54,454	[INFO]	16	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:06:57,511	[INFO]	17	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:06:57,514	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:06:57,516	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:06:57,518	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:06:58,390	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:06:59,275	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:06:59,277	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:07:00,178	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:07:00,179	[INFO]	25	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:07:00,179	[DEBUG]	
2020-12-16 03:07:00,180	[INFO]	26	SUCCESS	+1.0	
2020-12-16 03:07:00,180	[DEBUG]	
2020-12-16 03:07:03,409	[INFO]	27	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:07:03,410	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:07:04,251	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:07:05,102	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:07:08,318	[INFO]	30	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:07:08,319	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,22 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:07:11,456	[INFO]	31	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:07:11,457	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:07:11,458	[INFO]	32	SUCCESS	+1.0	
2020-12-16 03:07:11,458	[DEBUG]	
2020-12-16 03:07:12,295	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:07:12,296	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:07:13,140	[INFO]	35	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:07:16,350	[INFO]	36	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:07:16,353	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:07:17,215	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:07:20,320	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:07:20,322	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:07:20,324	[INFO]	40	SUCCESS	+1.0	
2020-12-16 03:07:20,324	[DEBUG]	
2020-12-16 03:07:23,400	[INFO]	41	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:07:26,498	[INFO]	42	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:07:26,499	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 03:07:27,251	[INFO]	43	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:07:27,253	[INFO]	44	SUCCESS	+1.0	
2020-12-16 03:07:27,254	[DEBUG]	
2020-12-16 03:07:27,255	[INFO]	45	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:07:30,374	[INFO]	46	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:07:30,375	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:07:31,256	[INFO]	47	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:07:31,974	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:07:31,975	[INFO]	49	SUCCESS	+1.0	
2020-12-16 03:07:31,975	[DEBUG]	
2020-12-16 03:07:32,842	[INFO]	50	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:07:33,769	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:07:36,848	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:07:36,849	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:07:36,850	[INFO]	53	SUCCESS	+1.0	
2020-12-16 03:07:36,850	[DEBUG]	
2020-12-16 03:07:36,851	[INFO]	54	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:07:37,719	[INFO]	55	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:07:38,601	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:07:39,482	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:07:40,355	[INFO]	58	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:07:40,357	[INFO]	59	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:07:41,117	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:07:41,859	[INFO]	61	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:07:41,862	[INFO]	62	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:07:41,864	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:07:42,604	[INFO]	64	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:07:42,606	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:07:42,609	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:07:43,302	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:07:43,304	[INFO]	68	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:07:43,304	[DEBUG]	
2020-12-16 03:07:46,421	[INFO]	69	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:07:46,422	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:07:46,422	[INFO]	==== END ====
2020-12-16 03:07:46,422	[INFO]	Reason: target fitness reached
2020-12-16 03:07:46,423	[INFO]	
2020-12-16 03:07:46,423	[INFO]	========== EPOCH 15 ==========
2020-12-16 03:07:46,423	[INFO]	==== WARMUP ====
2020-12-16 03:07:49,423	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:07:49,423	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:07:52,550	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:07:52,551	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:07:55,651	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:07:55,652	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:07:58,756	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:07:58,756	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:07:58,757	[INFO]	==== START ====
2020-12-16 03:07:59,663	[INFO]	1	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:08:02,781	[INFO]	2	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:08:05,834	[INFO]	3	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:08:06,692	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:08:07,427	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:08:10,786	[INFO]	6	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:08:10,787	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:08:10,787	[INFO]	7	SUCCESS	+1.0	
2020-12-16 03:08:10,788	[DEBUG]	
2020-12-16 03:08:10,788	[INFO]	8	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:08:13,951	[INFO]	9	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:08:14,658	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:08:17,794	[INFO]	11	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:08:18,640	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:08:19,351	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:08:20,104	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:08:21,000	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:08:21,001	[INFO]	16	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:08:21,001	[DEBUG]	
2020-12-16 03:08:21,002	[INFO]	17	SUCCESS	+1.0	
2020-12-16 03:08:21,002	[DEBUG]	
2020-12-16 03:08:21,874	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:08:21,876	[INFO]	19	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:08:21,876	[DEBUG]	
2020-12-16 03:08:21,877	[INFO]	20	SUCCESS	+1.0	
2020-12-16 03:08:21,877	[DEBUG]	
2020-12-16 03:08:21,878	[INFO]	21	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:08:21,878	[DEBUG]	
2020-12-16 03:08:21,879	[INFO]	22	SUCCESS	+1.0	
2020-12-16 03:08:21,879	[DEBUG]	
2020-12-16 03:08:21,879	[INFO]	23	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:08:21,880	[DEBUG]	
2020-12-16 03:08:21,880	[INFO]	24	SUCCESS	+1.0	
2020-12-16 03:08:21,880	[DEBUG]	
2020-12-16 03:08:22,624	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:08:22,625	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:08:23,357	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:08:23,360	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:08:23,362	[INFO]	29	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:08:23,363	[DEBUG]	
2020-12-16 03:08:23,364	[INFO]	30	SUCCESS	+1.0	
2020-12-16 03:08:23,364	[DEBUG]	
2020-12-16 03:08:24,239	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:08:27,358	[INFO]	32	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:08:28,201	[INFO]	33	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:08:28,926	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:08:28,928	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:08:28,929	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:08:28,930	[INFO]	37	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:08:29,696	[INFO]	38	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:08:30,572	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:08:33,761	[INFO]	40	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:08:33,763	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:08:33,764	[INFO]	41	SUCCESS	+1.0	
2020-12-16 03:08:33,765	[DEBUG]	
2020-12-16 03:08:33,768	[INFO]	42	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:08:33,768	[DEBUG]	
2020-12-16 03:08:33,769	[INFO]	43	SUCCESS	+1.0	
2020-12-16 03:08:33,769	[DEBUG]	
2020-12-16 03:08:34,599	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:08:34,600	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:08:34,601	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:08:34,601	[INFO]	47	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:08:35,451	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:08:35,454	[INFO]	49	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:08:38,591	[INFO]	50	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:08:38,593	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:08:38,594	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:08:41,653	[INFO]	52	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:08:41,655	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:08:44,851	[INFO]	53	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:08:47,824	[INFO]	54	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:08:51,010	[INFO]	55	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:08:51,012	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:08:51,870	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:08:51,873	[INFO]	57	SUCCESS	+1.0	
2020-12-16 03:08:51,873	[DEBUG]	
2020-12-16 03:08:51,875	[INFO]	58	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:08:51,876	[DEBUG]	
2020-12-16 03:08:52,611	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:08:52,614	[INFO]	60	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:08:52,616	[INFO]	61	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:08:55,758	[INFO]	62	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:08:55,760	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:08:56,604	[INFO]	63	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:08:56,606	[INFO]	64	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:08:56,606	[DEBUG]	
2020-12-16 03:08:59,769	[INFO]	65	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:08:59,770	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:09:02,785	[INFO]	66	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:09:03,665	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:09:03,666	[INFO]	68	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:09:03,666	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:09:03,667	[INFO]	69	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:09:06,812	[INFO]	70	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:09:06,814	[INFO]	71	SUCCESS	+1.0	
2020-12-16 03:09:06,815	[DEBUG]	
2020-12-16 03:09:06,816	[INFO]	72	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:09:07,669	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:09:07,670	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:09:08,551	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:09:11,675	[INFO]	76	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:09:11,677	[INFO]	77	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:09:12,379	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:09:12,382	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:09:13,238	[INFO]	80	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:09:14,124	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:09:15,010	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:09:15,013	[INFO]	83	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:09:15,014	[DEBUG]	
2020-12-16 03:09:15,015	[INFO]	84	SUCCESS	+1.0	
2020-12-16 03:09:15,015	[DEBUG]	
2020-12-16 03:09:15,891	[INFO]	85	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:09:18,992	[INFO]	86	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:09:18,993	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,28 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:09:19,707	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:09:20,615	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:09:21,460	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:09:22,339	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:09:22,340	[INFO]	91	SUCCESS	+1.0	
2020-12-16 03:09:22,341	[DEBUG]	
2020-12-16 03:09:23,084	[INFO]	92	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:09:26,187	[INFO]	93	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:09:26,189	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:09:26,190	[INFO]	94	SUCCESS	+1.0	
2020-12-16 03:09:26,191	[DEBUG]	
2020-12-16 03:09:27,046	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:09:30,161	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:09:30,162	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:09:30,163	[INFO]	97	SUCCESS	+1.0	
2020-12-16 03:09:30,163	[DEBUG]	
2020-12-16 03:09:33,307	[INFO]	98	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:09:33,309	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:09:33,311	[INFO]	99	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:09:33,312	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:09:33,313	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:09:33,314	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Search s = new Search();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:09:36,331	[INFO]	101	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:09:36,333	[INFO]	102	SUCCESS	+1.0	
2020-12-16 03:09:36,334	[DEBUG]	
2020-12-16 03:09:37,197	[INFO]	103	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:09:37,200	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:09:40,281	[INFO]	105	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:09:40,283	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:09:40,284	[INFO]	106	SUCCESS	+1.0	
2020-12-16 03:09:40,285	[DEBUG]	
2020-12-16 03:09:41,011	[INFO]	107	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:09:41,746	[INFO]	108	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:09:42,456	[INFO]	109	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:09:42,458	[INFO]	110	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:09:42,461	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:09:43,334	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:09:44,232	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:09:44,234	[INFO]	114	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:09:44,234	[INFO]	115	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:09:44,235	[INFO]	116	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:09:44,236	[INFO]	117	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:09:44,236	[INFO]	118	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:09:44,237	[INFO]	119	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:09:47,318	[INFO]	120	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:09:47,321	[INFO]	121	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:09:48,219	[INFO]	122	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:09:48,220	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:09:48,221	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:09:51,347	[INFO]	125	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:09:52,226	[INFO]	126	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:09:52,228	[INFO]	127	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:09:53,128	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:09:53,892	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:09:53,896	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:09:53,897	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:09:53,899	[INFO]	132	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:09:54,752	[INFO]	133	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:09:54,753	[INFO]	134	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:09:54,754	[INFO]	135	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:09:54,755	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:09:57,859	[INFO]	137	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:09:58,733	[INFO]	138	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:09:59,598	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:10:00,479	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:10:00,481	[INFO]	141	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:10:01,333	[INFO]	142	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:10:02,082	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:10:02,967	[INFO]	144	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:10:02,968	[INFO]	145	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:10:03,838	[INFO]	146	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:10:04,583	[INFO]	147	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:10:05,437	[INFO]	148	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:10:08,569	[INFO]	149	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:10:09,280	[INFO]	150	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:10:10,000	[INFO]	151	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:10:10,004	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:10:10,894	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:10:11,766	[INFO]	154	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:10:14,835	[INFO]	155	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:10:15,731	[INFO]	156	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:10:15,733	[INFO]	157	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:10:16,616	[INFO]	158	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:10:19,711	[INFO]	159	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:22,890	[INFO]	160	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:10:22,891	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:10:22,892	[INFO]	161	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:10:22,893	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:10:22,894	[INFO]	162	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:10:22,894	[DEBUG]	
2020-12-16 03:10:22,894	[INFO]	163	SUCCESS	+1.0	
2020-12-16 03:10:22,895	[DEBUG]	
2020-12-16 03:10:22,895	[INFO]	164	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:22,895	[DEBUG]	
2020-12-16 03:10:22,896	[INFO]	165	SUCCESS	+1.0	
2020-12-16 03:10:22,896	[DEBUG]	
2020-12-16 03:10:25,900	[INFO]	166	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:10:25,902	[INFO]	167	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:10:26,624	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:26,625	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:10:26,625	[INFO]	170	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:26,626	[DEBUG]	
2020-12-16 03:10:29,731	[INFO]	171	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:10:30,462	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:10:30,463	[INFO]	173	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:10:30,464	[INFO]	174	SUCCESS	+1.0	
2020-12-16 03:10:30,464	[DEBUG]	
2020-12-16 03:10:30,465	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:10:31,206	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:10:31,208	[INFO]	177	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:10:34,346	[INFO]	178	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:10:34,348	[INFO]	179	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:10:35,357	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:10:35,360	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:10:36,503	[INFO]	182	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:37,720	[INFO]	183	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:10:38,952	[INFO]	184	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:38,953	[INFO]	185	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:10:38,953	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:10:38,954	[INFO]	186	SUCCESS	+1.0	
2020-12-16 03:10:38,954	[DEBUG]	
2020-12-16 03:10:38,955	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:10:39,858	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:10:39,859	[INFO]	189	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:39,859	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:10:39,860	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:10:43,041	[INFO]	192	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:10:43,042	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:10:43,043	[INFO]	194	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:10:43,043	[INFO]	195	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:10:43,044	[INFO]	196	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:10:43,044	[DEBUG]	
2020-12-16 03:10:43,772	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:10:43,774	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:43,776	[INFO]	199	SUCCESS	+1.0	
2020-12-16 03:10:43,776	[DEBUG]	
2020-12-16 03:10:44,695	[INFO]	200	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:10:45,404	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:10:45,405	[INFO]	202	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:10:48,524	[INFO]	203	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:10:48,526	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:10:49,411	[INFO]	204	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:10:49,412	[INFO]	205	SUCCESS	+1.0	
2020-12-16 03:10:49,412	[DEBUG]	
2020-12-16 03:10:49,413	[INFO]	206	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:10:50,287	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:10:51,207	[INFO]	208	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:10:52,070	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:52,071	[INFO]	210	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:10:52,071	[DEBUG]	
2020-12-16 03:10:52,072	[INFO]	211	SUCCESS	+1.0	
2020-12-16 03:10:52,072	[DEBUG]	
2020-12-16 03:10:52,948	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:10:52,949	[INFO]	213	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:10:52,950	[INFO]	214	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:10:56,083	[INFO]	215	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:10:56,085	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:10:56,086	[INFO]	216	SUCCESS	+1.0	
2020-12-16 03:10:56,087	[DEBUG]	
2020-12-16 03:10:56,978	[INFO]	217	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:11:00,137	[INFO]	218	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:11:00,982	[INFO]	219	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:11:04,126	[INFO]	220	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:11:07,224	[INFO]	221	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:11:07,224	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:11:07,944	[INFO]	222	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:11:07,946	[INFO]	223	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:11:07,946	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:11:08,857	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:11:11,904	[INFO]	225	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:11:12,807	[INFO]	226	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:11:12,809	[INFO]	227	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:11:12,810	[DEBUG]	
2020-12-16 03:11:13,699	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:11:13,700	[INFO]	229	SUCCESS	+1.0	
2020-12-16 03:11:13,700	[DEBUG]	
2020-12-16 03:11:16,836	[INFO]	230	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:11:17,710	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:11:18,565	[INFO]	232	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:11:19,288	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:11:20,149	[INFO]	234	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:11:23,369	[INFO]	235	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:11:24,205	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:11:27,384	[INFO]	237	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:11:27,386	[INFO]	238	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:11:27,388	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:11:27,390	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:11:28,125	[INFO]	241	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:11:31,307	[INFO]	242	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:11:31,308	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:11:31,309	[INFO]	243	SUCCESS	+1.0	
2020-12-16 03:11:31,310	[DEBUG]	
2020-12-16 03:11:34,403	[INFO]	244	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:11:34,404	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 03:11:35,282	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:11:35,283	[INFO]	246	SUCCESS	+1.0	
2020-12-16 03:11:35,283	[DEBUG]	
2020-12-16 03:11:35,996	[INFO]	247	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:11:36,884	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:11:37,613	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:11:38,484	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:11:39,371	[INFO]	251	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:11:39,372	[INFO]	252	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:11:42,579	[INFO]	253	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:11:42,580	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:11:42,581	[INFO]	254	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:11:42,581	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:11:42,582	[INFO]	255	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:11:42,582	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:11:45,562	[INFO]	256	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:11:46,465	[INFO]	257	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:11:46,466	[INFO]	258	SUCCESS	+1.0	
2020-12-16 03:11:46,466	[DEBUG]	
2020-12-16 03:11:49,621	[INFO]	259	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:11:50,540	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:11:51,273	[INFO]	261	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:11:52,143	[INFO]	262	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:11:53,021	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:11:56,135	[INFO]	264	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:11:56,136	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:11:59,272	[INFO]	265	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:11:59,275	[INFO]	266	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:11:59,276	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:12:02,402	[INFO]	267	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:12:03,288	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:12:03,290	[INFO]	269	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:12:03,290	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:12:03,291	[INFO]	270	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:03,292	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:12:03,292	[INFO]	271	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:03,293	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:12:06,472	[INFO]	272	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:12:09,621	[INFO]	273	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:12:12,765	[INFO]	274	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:12:12,767	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:12:12,769	[INFO]	275	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:12:12,770	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:12:13,647	[INFO]	276	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:12:14,512	[INFO]	277	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:12:14,514	[INFO]	278	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:12:14,514	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:12:17,782	[INFO]	279	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:12:17,784	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 03:12:17,785	[INFO]	280	SUCCESS	+1.0	
2020-12-16 03:12:17,785	[DEBUG]	
2020-12-16 03:12:18,610	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:12:18,611	[INFO]	282	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:12:18,612	[DEBUG]	
2020-12-16 03:12:18,612	[INFO]	283	SUCCESS	+1.0	
2020-12-16 03:12:18,612	[DEBUG]	
2020-12-16 03:12:19,385	[INFO]	284	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:12:19,388	[INFO]	285	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:12:20,259	[INFO]	286	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:12:21,169	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:12:21,171	[INFO]	288	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:12:21,173	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:12:24,351	[INFO]	290	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:12:24,353	[INFO]	291	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:12:25,186	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:12:25,187	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:12:25,188	[INFO]	294	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:12:25,189	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:12:25,189	[INFO]	296	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:12:25,189	[DEBUG]	
2020-12-16 03:12:26,086	[INFO]	297	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:12:26,087	[INFO]	298	SUCCESS	+1.0	
2020-12-16 03:12:26,087	[DEBUG]	
2020-12-16 03:12:29,233	[INFO]	299	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:12:29,235	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:12:29,236	[INFO]	300	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:29,237	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:12:29,238	[INFO]	301	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:29,238	[DEBUG]	
2020-12-16 03:12:30,144	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:12:30,145	[INFO]	303	SUCCESS	+1.0	
2020-12-16 03:12:30,145	[DEBUG]	
2020-12-16 03:12:30,146	[INFO]	304	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:12:30,146	[INFO]	305	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:12:30,147	[INFO]	306	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:12:30,147	[DEBUG]	
2020-12-16 03:12:31,002	[INFO]	307	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:12:31,003	[INFO]	308	SUCCESS	+1.0	
2020-12-16 03:12:31,003	[DEBUG]	
2020-12-16 03:12:31,765	[INFO]	309	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:12:31,768	[INFO]	310	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:31,769	[DEBUG]	
2020-12-16 03:12:31,770	[INFO]	311	SUCCESS	+1.0	
2020-12-16 03:12:31,770	[DEBUG]	
2020-12-16 03:12:31,772	[INFO]	312	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:31,772	[DEBUG]	
2020-12-16 03:12:31,774	[INFO]	313	SUCCESS	+1.0	
2020-12-16 03:12:31,774	[DEBUG]	
2020-12-16 03:12:32,644	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:12:32,646	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:12:33,530	[INFO]	316	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:12:33,533	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:12:36,683	[INFO]	318	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:12:37,396	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:12:38,231	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:12:38,233	[INFO]	321	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:12:38,233	[INFO]	322	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:12:38,972	[INFO]	323	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:12:42,113	[INFO]	324	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:12:42,114	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 03:12:42,115	[INFO]	325	SUCCESS	+1.0	
2020-12-16 03:12:42,115	[DEBUG]	
2020-12-16 03:12:42,116	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:12:42,957	[INFO]	327	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:12:43,824	[INFO]	328	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:12:44,706	[INFO]	329	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:12:47,844	[INFO]	330	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:12:47,846	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:12:51,033	[INFO]	331	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:12:51,896	[INFO]	332	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:12:54,939	[INFO]	333	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:12:54,940	[INFO]	334	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:54,941	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:12:54,941	[INFO]	335	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:12:54,941	[DEBUG]	
2020-12-16 03:12:54,942	[INFO]	336	SUCCESS	+1.0	
2020-12-16 03:12:54,942	[DEBUG]	
2020-12-16 03:12:58,054	[INFO]	337	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:12:58,927	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:12:58,929	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:12:59,676	[INFO]	340	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:12:59,679	[INFO]	341	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:12:59,680	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:00,425	[INFO]	342	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:13:01,157	[INFO]	343	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:13:01,162	[INFO]	344	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:13:01,163	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:04,262	[INFO]	345	SUCCESS	 2.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:13:04,264	[INFO]	346	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:13:04,265	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:04,266	[INFO]	347	SUCCESS	+1.0	
2020-12-16 03:13:04,266	[DEBUG]	
2020-12-16 03:13:05,132	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:13:08,197	[INFO]	349	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:13:08,199	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:13:08,200	[INFO]	350	SUCCESS	+1.0	
2020-12-16 03:13:08,201	[DEBUG]	
2020-12-16 03:13:09,084	[INFO]	351	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:13:09,085	[INFO]	352	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:13:09,086	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:13:09,086	[INFO]	354	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:13:09,961	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:13:10,839	[INFO]	356	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:13:10,841	[INFO]	357	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:13:10,841	[DEBUG]	
2020-12-16 03:13:10,841	[INFO]	358	SUCCESS	+1.0	
2020-12-16 03:13:10,842	[DEBUG]	
2020-12-16 03:13:10,842	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:13:11,711	[INFO]	360	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:13:11,713	[INFO]	361	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:13:14,805	[INFO]	362	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:13:14,807	[INFO]	363	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:13:14,809	[INFO]	364	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:13:14,809	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:14,811	[INFO]	365	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:13:14,812	[INFO]	366	SUCCESS	+1.0	
2020-12-16 03:13:14,812	[DEBUG]	
2020-12-16 03:13:17,908	[INFO]	367	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:13:17,911	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:13:17,912	[INFO]	369	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:13:17,913	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:18,811	[INFO]	370	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:13:19,733	[INFO]	371	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:13:20,635	[INFO]	372	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:13:20,636	[INFO]	373	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:13:20,636	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:23,712	[INFO]	374	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:13:26,779	[INFO]	375	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:13:29,981	[INFO]	376	SUCCESS	 2.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:13:29,983	[INFO]	377	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:13:29,984	[DEBUG]	
2020-12-16 03:13:29,985	[INFO]	378	SUCCESS	+1.0	
2020-12-16 03:13:29,985	[DEBUG]	
2020-12-16 03:13:29,987	[INFO]	379	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:13:33,127	[INFO]	380	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:13:33,128	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:13:33,978	[INFO]	381	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:13:33,979	[INFO]	382	SUCCESS	+1.0	
2020-12-16 03:13:33,979	[DEBUG]	
2020-12-16 03:13:37,079	[INFO]	383	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:13:37,081	[INFO]	384	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:13:37,082	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:37,084	[INFO]	385	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:13:37,085	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:13:37,960	[INFO]	386	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:13:37,961	[INFO]	387	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:13:38,833	[INFO]	388	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:13:41,921	[INFO]	389	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:13:41,923	[INFO]	390	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:13:41,924	[DEBUG]	
2020-12-16 03:13:41,925	[INFO]	391	SUCCESS	+1.0	
2020-12-16 03:13:41,926	[DEBUG]	
2020-12-16 03:13:42,801	[INFO]	392	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:13:43,527	[INFO]	393	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:13:46,674	[INFO]	394	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:13:46,676	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:13:47,513	[INFO]	395	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:13:47,514	[INFO]	396	SUCCESS	+1.0	
2020-12-16 03:13:47,514	[DEBUG]	
2020-12-16 03:13:48,406	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:13:51,524	[INFO]	398	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:13:54,659	[INFO]	399	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:13:54,661	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 03:13:55,490	[INFO]	400	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:13:55,492	[INFO]	401	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:13:55,493	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 03:13:56,352	[INFO]	402	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:13:59,440	[INFO]	403	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:13:59,441	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-16 03:13:59,442	[INFO]	404	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:13:59,443	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-16 03:14:00,345	[INFO]	405	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:14:01,218	[INFO]	406	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:14:01,220	[INFO]	407	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:14:01,220	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-16 03:14:02,145	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:14:02,148	[INFO]	409	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:14:02,149	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
-                 }
                  return false;
              }
          };
--- 20,31 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Set<Node> nodesvisited = new HashSet<>();
+                     }
+                 }
+                 for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  return false;
              }
          };

2020-12-16 03:14:03,012	[INFO]	410	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:14:03,014	[INFO]	411	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:14:03,014	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  return false;
              }
          };

2020-12-16 03:14:03,015	[INFO]	412	SUCCESS	+1.0	
2020-12-16 03:14:03,015	[DEBUG]	
2020-12-16 03:14:03,879	[INFO]	413	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:14:07,021	[INFO]	414	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:14:07,022	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:14:07,023	[INFO]	415	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:14:07,023	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:14:10,111	[INFO]	416	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:14:10,113	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,27 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:14:10,115	[INFO]	417	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:14:10,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:14:10,117	[INFO]	418	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:14:10,118	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:14:10,119	[INFO]	419	SUCCESS	+1.0	
2020-12-16 03:14:10,120	[DEBUG]	
2020-12-16 03:14:10,979	[INFO]	420	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:14:10,981	[INFO]	421	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:14:10,981	[DEBUG]	
2020-12-16 03:14:14,047	[INFO]	422	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:14:14,050	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:14:14,051	[INFO]	424	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:14:14,052	[DEBUG]	
2020-12-16 03:14:14,933	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:14:14,934	[INFO]	426	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:14:14,934	[DEBUG]	
2020-12-16 03:14:14,935	[INFO]	427	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:14:14,935	[DEBUG]	
2020-12-16 03:14:14,936	[INFO]	428	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:14:14,936	[DEBUG]	
2020-12-16 03:14:14,936	[INFO]	429	SUCCESS	+1.0	
2020-12-16 03:14:14,937	[DEBUG]	
2020-12-16 03:14:14,937	[INFO]	430	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:14:18,052	[INFO]	431	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:14:18,055	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:14:18,946	[INFO]	433	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:14:19,684	[INFO]	434	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:14:20,430	[INFO]	435	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:14:23,568	[INFO]	436	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:14:24,266	[INFO]	437	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:14:25,103	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:14:25,104	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:14:25,981	[INFO]	440	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:14:26,713	[INFO]	441	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:14:27,597	[INFO]	442	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:14:27,599	[INFO]	443	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:14:27,599	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:14:28,349	[INFO]	444	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:14:28,351	[INFO]	445	SUCCESS	+1.0	
2020-12-16 03:14:28,352	[DEBUG]	
2020-12-16 03:14:29,201	[INFO]	446	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:14:30,109	[INFO]	447	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:14:30,987	[INFO]	448	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:14:31,859	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:14:31,861	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:14:31,862	[INFO]	451	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:14:31,863	[INFO]	452	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:14:32,721	[INFO]	453	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:14:35,791	[INFO]	454	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:14:36,683	[INFO]	455	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:14:36,684	[INFO]	456	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:14:36,684	[DEBUG]	
2020-12-16 03:14:37,587	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:14:37,589	[INFO]	458	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:14:37,589	[INFO]	459	SUCCESS	+1.0	
2020-12-16 03:14:37,590	[DEBUG]	
2020-12-16 03:14:38,474	[INFO]	460	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:14:38,476	[INFO]	461	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:14:38,476	[DEBUG]	
2020-12-16 03:14:39,352	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:14:39,353	[INFO]	463	SUCCESS	+1.0	
2020-12-16 03:14:39,353	[DEBUG]	
2020-12-16 03:14:42,447	[INFO]	464	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:14:42,449	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:14:42,450	[INFO]	465	SUCCESS	+1.0	
2020-12-16 03:14:42,451	[DEBUG]	
2020-12-16 03:14:42,453	[INFO]	466	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:14:45,588	[INFO]	467	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:14:45,589	[INFO]	468	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:14:45,591	[INFO]	469	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:14:45,591	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:14:46,457	[INFO]	471	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:14:47,196	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:14:48,070	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:14:48,071	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:14:48,072	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:14:51,186	[INFO]	476	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:14:51,187	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:14:51,189	[INFO]	477	SUCCESS	+1.0	
2020-12-16 03:14:51,189	[DEBUG]	
2020-12-16 03:14:51,191	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:14:51,192	[INFO]	479	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:14:52,056	[INFO]	480	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:14:52,828	[INFO]	481	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:14:52,831	[INFO]	482	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:14:52,834	[INFO]	483	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:14:55,892	[INFO]	484	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:14:55,894	[INFO]	485	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:14:56,772	[INFO]	486	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:14:56,773	[INFO]	487	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:14:56,773	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:14:56,774	[INFO]	488	SUCCESS	+1.0	
2020-12-16 03:14:56,774	[DEBUG]	
2020-12-16 03:14:57,649	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:15:00,812	[INFO]	490	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:15:00,813	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:15:03,852	[INFO]	491	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:15:04,740	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:15:04,742	[INFO]	493	SUCCESS	+1.0	
2020-12-16 03:15:04,742	[DEBUG]	
2020-12-16 03:15:04,744	[INFO]	494	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:15:04,745	[INFO]	495	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:15:04,747	[INFO]	496	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:15:05,612	[INFO]	497	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:15:06,344	[INFO]	498	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:15:09,447	[INFO]	499	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:15:10,322	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:15:10,323	[INFO]	==== END ====
2020-12-16 03:15:10,323	[INFO]	Reason: step budget
2020-12-16 03:15:10,324	[INFO]	
2020-12-16 03:15:10,324	[INFO]	========== EPOCH 16 ==========
2020-12-16 03:15:10,325	[INFO]	==== WARMUP ====
2020-12-16 03:15:13,704	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:15:13,704	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:15:16,900	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:15:16,901	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:15:20,012	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:15:20,012	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:15:23,100	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:15:23,100	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:15:23,101	[INFO]	==== START ====
2020-12-16 03:15:23,993	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:15:24,897	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:15:25,753	[INFO]	3	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:15:26,657	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:15:29,780	[INFO]	5	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:15:29,782	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:15:30,672	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:15:33,789	[INFO]	7	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:15:34,656	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:15:35,675	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:15:36,551	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:15:36,552	[INFO]	11	SUCCESS	+1.0	
2020-12-16 03:15:36,553	[DEBUG]	
2020-12-16 03:15:39,667	[INFO]	12	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:15:40,520	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:15:43,629	[INFO]	14	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:15:43,630	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:15:46,729	[INFO]	16	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:15:46,731	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:15:46,732	[INFO]	17	SUCCESS	+1.0	
2020-12-16 03:15:46,733	[DEBUG]	
2020-12-16 03:15:47,603	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:15:50,852	[INFO]	19	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:15:51,558	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:15:54,619	[INFO]	21	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:15:57,649	[INFO]	22	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:15:57,650	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:15:57,650	[INFO]	==== END ====
2020-12-16 03:15:57,650	[INFO]	Reason: target fitness reached
2020-12-16 03:15:57,651	[INFO]	
2020-12-16 03:15:57,651	[INFO]	========== EPOCH 17 ==========
2020-12-16 03:15:57,651	[INFO]	==== WARMUP ====
2020-12-16 03:16:00,768	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:16:00,768	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:16:03,987	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:16:03,987	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:16:07,028	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:16:07,029	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:16:10,094	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:16:10,095	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:16:10,095	[INFO]	==== START ====
2020-12-16 03:16:10,974	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:16:14,156	[INFO]	2	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:16:15,007	[INFO]	3	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:16:15,747	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:16:15,750	[INFO]	5	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:16:15,751	[DEBUG]	
2020-12-16 03:16:15,752	[INFO]	6	SUCCESS	+1.0	
2020-12-16 03:16:15,752	[DEBUG]	
2020-12-16 03:16:16,625	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:16:17,496	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:16:20,537	[INFO]	9	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:16:20,538	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:16:20,539	[INFO]	10	SUCCESS	+1.0	
2020-12-16 03:16:20,539	[DEBUG]	
2020-12-16 03:16:20,540	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:16:20,540	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:16:20,541	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:16:23,690	[INFO]	14	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:16:24,569	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:16:27,641	[INFO]	16	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:16:27,642	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:16:28,501	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:16:29,390	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:16:32,572	[INFO]	19	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:16:32,574	[INFO]	20	SUCCESS	+1.0	
2020-12-16 03:16:32,574	[DEBUG]	
2020-12-16 03:16:33,433	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:16:33,434	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:16:33,435	[INFO]	23	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:16:34,299	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:16:34,301	[INFO]	25	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:16:34,301	[DEBUG]	
2020-12-16 03:16:35,171	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:16:35,172	[INFO]	27	SUCCESS	+1.0	
2020-12-16 03:16:35,172	[DEBUG]	
2020-12-16 03:16:36,036	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:16:39,118	[INFO]	29	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:16:42,265	[INFO]	30	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:16:42,266	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:16:42,980	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:16:46,115	[INFO]	32	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:16:46,117	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:16:46,120	[INFO]	33	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:16:46,122	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:16:47,031	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:16:47,033	[INFO]	35	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:16:47,033	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:16:47,896	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:16:47,897	[INFO]	37	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:16:47,898	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,31 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:16:47,899	[INFO]	38	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:16:47,900	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:16:51,087	[INFO]	39	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:16:51,089	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
--- 14,26 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:16:54,184	[INFO]	40	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:16:54,186	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:16:54,188	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:16:54,188	[DEBUG]	
2020-12-16 03:16:54,189	[INFO]	42	SUCCESS	+1.0	
2020-12-16 03:16:54,190	[DEBUG]	
2020-12-16 03:16:54,191	[INFO]	43	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:16:55,066	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:16:55,959	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:16:55,962	[INFO]	46	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:16:55,963	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:16:55,964	[DEBUG]	
2020-12-16 03:16:55,965	[INFO]	48	SUCCESS	+1.0	
2020-12-16 03:16:55,965	[DEBUG]	
2020-12-16 03:16:56,853	[INFO]	49	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:16:56,854	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:16:57,579	[INFO]	51	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:16:57,580	[INFO]	52	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:16:58,504	[INFO]	53	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:16:58,506	[INFO]	54	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:16:58,508	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:16:58,509	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:16:59,275	[INFO]	57	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:17:00,009	[INFO]	58	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:17:00,010	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:17:03,151	[INFO]	60	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:17:03,152	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:17:03,153	[INFO]	61	SUCCESS	+1.0	
2020-12-16 03:17:03,154	[DEBUG]	
2020-12-16 03:17:03,155	[INFO]	62	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:17:06,337	[INFO]	63	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:17:07,015	[INFO]	64	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:17:07,017	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:17:10,389	[INFO]	66	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:17:13,494	[INFO]	67	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:17:13,496	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:17:14,353	[INFO]	69	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:17:14,355	[INFO]	70	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:17:14,355	[DEBUG]	
2020-12-16 03:17:14,356	[INFO]	71	SUCCESS	+1.0	
2020-12-16 03:17:14,356	[DEBUG]	
2020-12-16 03:17:17,437	[INFO]	72	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:17:17,439	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:17:17,441	[INFO]	73	SUCCESS	+1.0	
2020-12-16 03:17:17,441	[DEBUG]	
2020-12-16 03:17:18,222	[INFO]	74	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:17:18,926	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:17:19,794	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:17:20,656	[INFO]	77	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:17:21,542	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:17:24,698	[INFO]	79	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:17:27,869	[INFO]	80	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:17:27,870	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:17:28,694	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:17:29,587	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:17:29,589	[INFO]	83	SUCCESS	+1.0	
2020-12-16 03:17:29,590	[DEBUG]	
2020-12-16 03:17:29,592	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:17:30,368	[INFO]	85	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:17:30,372	[INFO]	86	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:17:30,373	[DEBUG]	
2020-12-16 03:17:30,375	[INFO]	87	SUCCESS	 4.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:17:30,376	[INFO]	88	SUCCESS	+1.0	
2020-12-16 03:17:30,376	[DEBUG]	
2020-12-16 03:17:31,242	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:17:32,115	[INFO]	90	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:17:32,990	[INFO]	91	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:17:36,125	[INFO]	92	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:17:39,286	[INFO]	93	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:17:39,289	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:17:40,111	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:17:43,205	[INFO]	96	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:17:43,207	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:17:43,208	[INFO]	97	SUCCESS	+1.0	
2020-12-16 03:17:43,209	[DEBUG]	
2020-12-16 03:17:46,342	[INFO]	98	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:17:47,052	[INFO]	99	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:17:47,053	[INFO]	100	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:17:50,171	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:17:50,173	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; }
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:17:50,174	[INFO]	102	SUCCESS	+1.0	
2020-12-16 03:17:50,175	[DEBUG]	
2020-12-16 03:17:51,074	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:17:51,972	[INFO]	104	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:17:52,706	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:17:53,438	[INFO]	106	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:17:54,320	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:17:57,628	[INFO]	108	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:18:00,766	[INFO]	109	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:18:00,767	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 03:18:01,647	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:18:01,648	[INFO]	111	SUCCESS	+1.0	
2020-12-16 03:18:01,649	[DEBUG]	
2020-12-16 03:18:02,521	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:18:03,230	[INFO]	113	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:03,231	[INFO]	114	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:18:03,231	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:18:03,232	[INFO]	115	SUCCESS	+1.0	
2020-12-16 03:18:03,232	[DEBUG]	
2020-12-16 03:18:04,117	[INFO]	116	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:18:05,020	[INFO]	117	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:18:05,891	[INFO]	118	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:18:09,043	[INFO]	119	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:18:09,045	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:18:09,869	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:18:13,084	[INFO]	121	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:18:13,086	[INFO]	122	SUCCESS	+1.0	
2020-12-16 03:18:13,086	[DEBUG]	
2020-12-16 03:18:16,215	[INFO]	123	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:17,058	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:18:20,141	[INFO]	125	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:18:21,084	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:18:21,087	[INFO]	127	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:18:21,088	[DEBUG]	
2020-12-16 03:18:21,089	[INFO]	128	SUCCESS	+1.0	
2020-12-16 03:18:21,090	[DEBUG]	
2020-12-16 03:18:21,093	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:18:21,992	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:18:22,715	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:18:25,849	[INFO]	132	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:18:25,852	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:18:25,853	[INFO]	134	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:25,854	[DEBUG]	
2020-12-16 03:18:25,855	[INFO]	135	SUCCESS	+1.0	
2020-12-16 03:18:25,855	[DEBUG]	
2020-12-16 03:18:25,856	[INFO]	136	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:18:25,858	[INFO]	137	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:18:25,860	[INFO]	138	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:25,862	[INFO]	139	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:18:25,862	[DEBUG]	
2020-12-16 03:18:25,863	[INFO]	140	SUCCESS	+1.0	
2020-12-16 03:18:25,864	[DEBUG]	
2020-12-16 03:18:28,912	[INFO]	141	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:18:28,914	[INFO]	142	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:18:32,111	[INFO]	143	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:18:32,113	[INFO]	144	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:32,948	[INFO]	145	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:18:36,165	[INFO]	146	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:18:37,280	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:18:37,282	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:18:37,282	[INFO]	149	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:18:37,283	[INFO]	150	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:18:37,284	[DEBUG]	
2020-12-16 03:18:37,284	[INFO]	151	SUCCESS	+1.0	
2020-12-16 03:18:37,284	[DEBUG]	
2020-12-16 03:18:37,285	[INFO]	152	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:18:38,049	[INFO]	153	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:38,796	[INFO]	154	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:18:38,797	[INFO]	155	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:38,798	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:18:38,799	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:18:39,673	[INFO]	158	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:18:42,878	[INFO]	159	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:18:43,720	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:18:46,846	[INFO]	161	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:18:47,672	[INFO]	162	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:18:48,414	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:18:49,288	[INFO]	164	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:18:52,476	[INFO]	165	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:52,478	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:18:52,479	[INFO]	166	SUCCESS	+1.0	
2020-12-16 03:18:52,480	[DEBUG]	
2020-12-16 03:18:52,482	[INFO]	167	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:18:52,483	[INFO]	168	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:18:52,484	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:18:53,312	[INFO]	169	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:18:54,202	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:18:55,085	[INFO]	171	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:18:58,196	[INFO]	172	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:18:58,198	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,25 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
--- 15,26 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:18:58,200	[INFO]	173	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:18:58,200	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:18:58,201	[INFO]	174	SUCCESS	+1.0	
2020-12-16 03:18:58,202	[DEBUG]	
2020-12-16 03:18:58,203	[INFO]	175	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:18:59,067	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:18:59,068	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:18:59,069	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:18:59,069	[INFO]	179	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:18:59,070	[INFO]	180	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:18:59,070	[DEBUG]	
2020-12-16 03:18:59,071	[INFO]	181	SUCCESS	+1.0	
2020-12-16 03:18:59,071	[DEBUG]	
2020-12-16 03:18:59,962	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:18:59,964	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:18:59,965	[INFO]	184	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:19:00,837	[INFO]	185	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:19:01,717	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:19:02,612	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:19:03,496	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:19:03,497	[INFO]	189	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:19:06,680	[INFO]	190	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:19:06,682	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:19:07,538	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:19:10,628	[INFO]	192	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:19:10,629	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,22 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
!                 if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 14,23 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
!                 Set<Node> nodesvisited = new HashSet<>(); if (nodesvisited.contains(node)) {
                      return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:19:11,495	[INFO]	193	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:19:11,496	[INFO]	194	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:19:11,497	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:19:12,373	[INFO]	195	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:19:12,374	[INFO]	196	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:19:12,375	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:19:12,375	[INFO]	197	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:19:12,376	[DEBUG]	
2020-12-16 03:19:13,243	[INFO]	198	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:19:13,244	[INFO]	199	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:19:13,244	[DEBUG]	
2020-12-16 03:19:13,245	[INFO]	200	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:19:13,245	[DEBUG]	
2020-12-16 03:19:14,126	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:19:15,005	[INFO]	202	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:19:18,128	[INFO]	203	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:19:21,302	[INFO]	204	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:19:21,303	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:21,304	[INFO]	205	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:19:21,304	[DEBUG]	
2020-12-16 03:19:24,287	[INFO]	206	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:19:24,288	[INFO]	207	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:19:24,289	[INFO]	208	SUCCESS	+1.0	
2020-12-16 03:19:24,289	[DEBUG]	
2020-12-16 03:19:27,471	[INFO]	209	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:19:27,473	[INFO]	210	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:19:27,474	[DEBUG]	
2020-12-16 03:19:27,475	[INFO]	211	SUCCESS	+1.0	
2020-12-16 03:19:27,476	[DEBUG]	
2020-12-16 03:19:30,555	[INFO]	212	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:19:30,556	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 03:19:30,557	[INFO]	213	SUCCESS	+1.0	
2020-12-16 03:19:30,557	[DEBUG]	
2020-12-16 03:19:31,433	[INFO]	214	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:19:34,535	[INFO]	215	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:19:34,537	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:35,440	[INFO]	216	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:19:35,444	[INFO]	217	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:19:35,445	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:35,447	[INFO]	218	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:19:35,448	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:35,450	[INFO]	219	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:19:35,451	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:35,452	[INFO]	220	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:19:35,453	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:36,328	[INFO]	221	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:19:36,330	[INFO]	222	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:19:36,330	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:36,331	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:19:36,332	[INFO]	224	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:19:36,332	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:36,333	[INFO]	225	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:19:36,333	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:37,085	[INFO]	226	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:19:37,965	[INFO]	227	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:19:38,851	[INFO]	228	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:19:41,975	[INFO]	229	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:19:42,844	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:19:43,696	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:19:44,439	[INFO]	232	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:19:44,443	[INFO]	233	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:19:44,445	[INFO]	234	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:19:44,446	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:45,330	[INFO]	235	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:19:46,227	[INFO]	236	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:19:46,231	[INFO]	237	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:19:46,232	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:46,235	[INFO]	238	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:19:46,237	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:46,239	[INFO]	239	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:19:46,240	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:46,242	[INFO]	240	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:19:46,243	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:46,246	[INFO]	241	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:19:46,248	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:47,117	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:19:47,118	[INFO]	243	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:19:47,119	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:50,211	[INFO]	244	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:19:50,215	[INFO]	245	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:19:50,216	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:50,217	[INFO]	246	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:19:50,218	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:50,220	[INFO]	247	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:19:50,221	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:19:50,223	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:19:53,323	[INFO]	249	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:19:53,324	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,27 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:19:53,325	[INFO]	==== END ====
2020-12-16 03:19:53,325	[INFO]	Reason: target fitness reached
2020-12-16 03:19:53,326	[INFO]	
2020-12-16 03:19:53,326	[INFO]	========== EPOCH 18 ==========
2020-12-16 03:19:53,326	[INFO]	==== WARMUP ====
2020-12-16 03:19:56,359	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:19:56,359	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:19:59,566	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:19:59,567	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:20:02,605	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:20:02,605	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:20:05,726	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:20:05,726	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:20:05,726	[INFO]	==== START ====
2020-12-16 03:20:06,601	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:20:09,720	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:20:09,720	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:20:10,598	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:20:11,468	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:20:12,363	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:20:13,106	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:20:13,979	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:20:17,163	[INFO]	8	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:20:17,165	[INFO]	9	SUCCESS	+1.0	
2020-12-16 03:20:17,166	[DEBUG]	
2020-12-16 03:20:20,290	[INFO]	10	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:20:23,360	[INFO]	11	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:20:26,449	[INFO]	12	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:20:26,450	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:20:27,323	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:20:27,324	[INFO]	14	SUCCESS	+1.0	
2020-12-16 03:20:27,324	[DEBUG]	
2020-12-16 03:20:28,238	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:20:29,130	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:20:32,416	[INFO]	17	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:20:32,418	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:20:32,419	[INFO]	18	SUCCESS	+1.0	
2020-12-16 03:20:32,420	[DEBUG]	
2020-12-16 03:20:32,421	[INFO]	19	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:20:33,121	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:20:36,557	[INFO]	21	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:20:36,558	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:20:36,559	[INFO]	22	SUCCESS	+1.0	
2020-12-16 03:20:36,559	[DEBUG]	
2020-12-16 03:20:37,782	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:20:38,789	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:20:38,791	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:20:39,908	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:20:39,909	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:20:43,715	[INFO]	28	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:20:43,717	[INFO]	29	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:20:47,383	[INFO]	30	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:20:50,447	[INFO]	31	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:20:50,449	[INFO]	32	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:20:50,450	[DEBUG]	
2020-12-16 03:20:50,451	[INFO]	33	SUCCESS	+1.0	
2020-12-16 03:20:50,451	[DEBUG]	
2020-12-16 03:20:50,453	[INFO]	34	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:20:50,454	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:20:50,455	[INFO]	35	SUCCESS	+1.0	
2020-12-16 03:20:50,456	[DEBUG]	
2020-12-16 03:20:53,578	[INFO]	36	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:20:54,477	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:20:54,478	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:20:54,479	[INFO]	39	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:20:57,604	[INFO]	40	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:20:57,606	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:00,762	[INFO]	41	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:00,763	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:01,489	[INFO]	42	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:21:04,551	[INFO]	43	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:04,553	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,34 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
!                     return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:05,405	[INFO]	44	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:21:08,546	[INFO]	45	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:11,608	[INFO]	46	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:21:11,609	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,34 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
-                 } else if (node == goalnode) {
-                     return true;
-                 } else {
-                     for (Node successornodes : node.getSuccessors()) {
- 	                    if (search(successornodes)) { return true; }
-                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     
+                 } else if (node == goalnode) {
+                     
+                 } else {
                      return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:11,610	[INFO]	47	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:21:11,610	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,34 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
-                 } else if (node == goalnode) {
-                     return true;
-                 } else {
-                     for (Node successornodes : node.getSuccessors()) {
- 	                    if (search(successornodes)) { return true; }
-                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     
+                 } else if (node == goalnode) {
+                     
+                 } else {
                      return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:11,611	[INFO]	48	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:21:11,612	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,34 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
-                 } else if (node == goalnode) {
-                     return true;
-                 } else {
-                     for (Node successornodes : node.getSuccessors()) {
- 	                    if (search(successornodes)) { return true; }
-                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 15,32 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     
+                 } else if (node == goalnode) {
+                     
+                 } else {
                      return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:14,738	[INFO]	49	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:14,740	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,34 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     
                  } else {
!                     return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:15,562	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:21:15,564	[INFO]	51	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:15,565	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,34 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     
                  } else {
!                     return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:16,440	[INFO]	52	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:21:19,489	[INFO]	53	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:20,358	[INFO]	54	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:21:20,359	[INFO]	55	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:20,360	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,34 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 17,32 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     
                  } else {
!                     return false;
                  }
                  return false;
              }
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:21,198	[INFO]	56	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:21:22,061	[INFO]	57	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:21:25,114	[INFO]	58	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:25,115	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,23 ****
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
!                     
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:25,116	[INFO]	59	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:25,116	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:21:25,117	[INFO]	60	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:25,117	[DEBUG]	
2020-12-16 03:21:25,118	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:21:25,119	[INFO]	62	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:21:25,963	[INFO]	63	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:21:26,858	[INFO]	64	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:21:30,063	[INFO]	65	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:21:30,922	[INFO]	66	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:21:30,923	[INFO]	67	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:21:30,923	[DEBUG]	
2020-12-16 03:21:30,924	[INFO]	68	SUCCESS	+1.0	
2020-12-16 03:21:30,924	[DEBUG]	
2020-12-16 03:21:34,059	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:21:34,060	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:21:34,060	[INFO]	70	SUCCESS	+1.0	
2020-12-16 03:21:34,061	[DEBUG]	
2020-12-16 03:21:34,061	[INFO]	71	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:21:34,895	[INFO]	72	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:21:35,777	[INFO]	73	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:21:35,778	[INFO]	74	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:21:36,503	[INFO]	75	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:21:37,399	[INFO]	76	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:21:38,258	[INFO]	77	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:21:38,984	[INFO]	78	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:21:39,843	[INFO]	79	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:21:39,844	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:21:40,724	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:21:40,725	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:21:41,622	[INFO]	83	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:21:44,810	[INFO]	84	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:21:45,682	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:21:48,782	[INFO]	86	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:21:48,784	[INFO]	87	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:21:48,785	[DEBUG]	
2020-12-16 03:21:48,786	[INFO]	88	SUCCESS	+1.0	
2020-12-16 03:21:48,786	[DEBUG]	
2020-12-16 03:21:48,788	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:21:51,973	[INFO]	90	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:21:55,017	[INFO]	91	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:21:55,018	[INFO]	92	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:21:55,019	[DEBUG]	
2020-12-16 03:21:55,019	[INFO]	93	SUCCESS	+1.0	
2020-12-16 03:21:55,019	[DEBUG]	
2020-12-16 03:21:55,887	[INFO]	94	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:21:55,889	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:21:56,632	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:21:56,635	[INFO]	97	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:21:59,756	[INFO]	98	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:21:59,757	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:21:59,758	[INFO]	99	SUCCESS	+1.0	
2020-12-16 03:21:59,758	[DEBUG]	
2020-12-16 03:22:02,859	[INFO]	100	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:22:02,861	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:22:02,863	[INFO]	101	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:22:02,864	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:22:03,615	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:22:03,618	[INFO]	103	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:22:03,620	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:22:03,621	[INFO]	104	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:22:03,622	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:22:03,624	[INFO]	105	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:22:03,625	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:22:03,626	[INFO]	106	SUCCESS	+1.0	
2020-12-16 03:22:03,627	[DEBUG]	
2020-12-16 03:22:03,629	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:22:04,324	[INFO]	108	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:22:07,382	[INFO]	109	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:22:08,261	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:22:09,136	[INFO]	111	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:22:10,024	[INFO]	112	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:22:13,123	[INFO]	113	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:22:13,126	[INFO]	114	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:22:13,969	[INFO]	115	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:22:13,971	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:22:14,692	[INFO]	117	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:22:14,695	[INFO]	118	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:22:17,824	[INFO]	119	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:22:18,679	[INFO]	120	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:22:19,548	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:22:20,436	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:22:20,437	[INFO]	123	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:22:21,342	[INFO]	124	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:22:21,343	[INFO]	125	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:22:22,198	[INFO]	126	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:22:23,097	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:22:23,098	[INFO]	128	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:22:23,099	[DEBUG]	
2020-12-16 03:22:23,833	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:22:24,564	[INFO]	130	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:22:24,567	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:22:27,744	[INFO]	132	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:22:28,600	[INFO]	133	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:22:28,601	[INFO]	134	SUCCESS	+1.0	
2020-12-16 03:22:28,601	[DEBUG]	
2020-12-16 03:22:29,445	[INFO]	135	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:22:29,446	[INFO]	136	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:22:32,614	[INFO]	137	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:22:32,615	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:22:32,617	[INFO]	138	SUCCESS	+1.0	
2020-12-16 03:22:32,617	[DEBUG]	
2020-12-16 03:22:33,514	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:22:34,366	[INFO]	140	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:22:37,538	[INFO]	141	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:22:38,400	[INFO]	142	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:22:39,093	[INFO]	143	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:22:39,094	[INFO]	144	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:22:39,992	[INFO]	145	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:22:39,994	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:22:39,996	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:22:39,998	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:22:40,888	[INFO]	149	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:22:40,889	[INFO]	150	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:22:40,890	[INFO]	151	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:22:40,890	[DEBUG]	
2020-12-16 03:22:40,891	[INFO]	152	SUCCESS	+1.0	
2020-12-16 03:22:40,891	[DEBUG]	
2020-12-16 03:22:41,639	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:22:44,693	[INFO]	154	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:22:47,820	[INFO]	155	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:22:47,822	[INFO]	156	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:22:50,942	[INFO]	157	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:22:50,943	[INFO]	158	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:22:50,944	[DEBUG]	
2020-12-16 03:22:54,063	[INFO]	159	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:22:54,065	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:22:54,932	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:22:58,032	[INFO]	161	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:22:58,034	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,30 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:23:01,176	[INFO]	162	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:23:01,178	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:23:01,180	[INFO]	163	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:23:01,181	[DEBUG]	
2020-12-16 03:23:01,182	[INFO]	164	SUCCESS	+1.0	
2020-12-16 03:23:01,182	[DEBUG]	
2020-12-16 03:23:02,060	[INFO]	165	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:23:02,061	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:23:02,062	[INFO]	167	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:23:02,062	[INFO]	168	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:23:02,063	[INFO]	169	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:23:02,063	[INFO]	170	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:23:02,938	[INFO]	171	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:23:02,940	[INFO]	172	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:23:02,942	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:23:03,822	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:23:06,968	[INFO]	175	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:23:06,969	[INFO]	176	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:23:06,970	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:23:06,971	[INFO]	178	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:23:07,870	[INFO]	179	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:23:11,093	[INFO]	180	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:23:11,094	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:23:11,915	[INFO]	181	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:23:11,917	[INFO]	182	SUCCESS	+1.0	
2020-12-16 03:23:11,918	[DEBUG]	
2020-12-16 03:23:14,962	[INFO]	183	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:23:14,964	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Search s = new Search();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:23:14,965	[INFO]	184	SUCCESS	+1.0	
2020-12-16 03:23:14,966	[DEBUG]	
2020-12-16 03:23:14,966	[INFO]	185	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:23:18,092	[INFO]	186	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:23:18,094	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:23:18,990	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:23:18,991	[INFO]	188	SUCCESS	+1.0	
2020-12-16 03:23:18,991	[DEBUG]	
2020-12-16 03:23:18,992	[INFO]	189	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:23:19,845	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:23:20,577	[INFO]	191	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:23:20,579	[INFO]	192	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:23:20,580	[INFO]	193	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:23:20,580	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:23:20,581	[INFO]	194	SUCCESS	+1.0	
2020-12-16 03:23:20,581	[DEBUG]	
2020-12-16 03:23:20,581	[INFO]	195	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:23:20,582	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:23:23,693	[INFO]	197	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:23:23,696	[INFO]	198	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:23:24,579	[INFO]	199	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:23:25,449	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:23:26,332	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:23:27,220	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:23:28,112	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:23:29,050	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:23:29,978	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:23:30,842	[INFO]	206	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:23:34,020	[INFO]	207	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:23:34,021	[INFO]	208	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:23:34,021	[DEBUG]	
2020-12-16 03:23:34,022	[INFO]	209	SUCCESS	+1.0	
2020-12-16 03:23:34,022	[DEBUG]	
2020-12-16 03:23:34,890	[INFO]	210	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:23:34,891	[INFO]	211	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:23:34,892	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:23:34,893	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:23:34,894	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:23:34,894	[INFO]	215	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:23:34,895	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:23:34,895	[INFO]	217	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:23:38,007	[INFO]	218	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:23:38,010	[INFO]	219	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:23:38,010	[DEBUG]	
2020-12-16 03:23:38,012	[INFO]	220	SUCCESS	+1.0	
2020-12-16 03:23:38,012	[DEBUG]	
2020-12-16 03:23:38,863	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:23:39,729	[INFO]	222	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:23:40,446	[INFO]	223	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:23:41,188	[INFO]	224	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:23:44,289	[INFO]	225	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:23:44,292	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:23:44,294	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:23:47,365	[INFO]	228	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:23:47,366	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:23:47,366	[INFO]	229	SUCCESS	+1.0	
2020-12-16 03:23:47,367	[DEBUG]	
2020-12-16 03:23:48,254	[INFO]	230	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:23:49,121	[INFO]	231	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:23:49,124	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:23:49,126	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:23:49,127	[INFO]	234	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:23:49,128	[DEBUG]	
2020-12-16 03:23:49,129	[INFO]	235	SUCCESS	+1.0	
2020-12-16 03:23:49,130	[DEBUG]	
2020-12-16 03:23:49,131	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:23:50,017	[INFO]	237	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:23:50,901	[INFO]	238	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:23:54,076	[INFO]	239	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:23:54,076	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:23:54,927	[INFO]	240	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:23:54,928	[INFO]	241	SUCCESS	+1.0	
2020-12-16 03:23:54,928	[DEBUG]	
2020-12-16 03:23:55,843	[INFO]	242	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:23:58,913	[INFO]	243	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:24:02,076	[INFO]	244	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:24:02,935	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:24:02,936	[INFO]	246	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:24:02,937	[INFO]	247	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:24:03,813	[INFO]	248	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:24:03,814	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:24:06,883	[INFO]	250	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:24:06,885	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:24:10,031	[INFO]	251	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:24:10,033	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:24:10,035	[INFO]	252	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:24:10,036	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:24:13,166	[INFO]	253	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:24:14,040	[INFO]	254	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:24:14,042	[INFO]	255	SUCCESS	+1.0	
2020-12-16 03:24:14,043	[DEBUG]	
2020-12-16 03:24:14,910	[INFO]	256	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:24:18,003	[INFO]	257	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:24:18,756	[INFO]	258	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:24:19,646	[INFO]	259	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:24:22,820	[INFO]	260	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:24:22,822	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:24:25,927	[INFO]	261	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:24:25,929	[INFO]	262	SUCCESS	+1.0	
2020-12-16 03:24:25,930	[DEBUG]	
2020-12-16 03:24:29,058	[INFO]	263	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:24:29,060	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:24:29,999	[INFO]	264	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:24:30,894	[INFO]	265	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:24:31,806	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:24:31,808	[INFO]	267	SUCCESS	+1.0	
2020-12-16 03:24:31,809	[DEBUG]	
2020-12-16 03:24:31,811	[INFO]	268	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:24:32,669	[INFO]	269	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:24:33,564	[INFO]	270	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:24:34,440	[INFO]	271	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:24:37,600	[INFO]	272	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:24:37,601	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:24:38,456	[INFO]	273	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:24:38,457	[INFO]	274	SUCCESS	+1.0	
2020-12-16 03:24:38,457	[DEBUG]	
2020-12-16 03:24:39,333	[INFO]	275	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:24:42,510	[INFO]	276	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:24:45,614	[INFO]	277	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:24:45,616	[INFO]	278	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:24:45,616	[INFO]	279	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:24:45,617	[DEBUG]	
2020-12-16 03:24:45,617	[INFO]	280	SUCCESS	+1.0	
2020-12-16 03:24:45,617	[DEBUG]	
2020-12-16 03:24:45,618	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:24:46,451	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:24:47,334	[INFO]	283	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:24:47,337	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:24:48,228	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:24:48,229	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:24:48,977	[INFO]	287	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:24:48,980	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:24:48,982	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:24:48,983	[INFO]	290	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:24:48,985	[INFO]	291	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:24:48,985	[DEBUG]	
2020-12-16 03:24:48,987	[INFO]	292	SUCCESS	+1.0	
2020-12-16 03:24:48,987	[DEBUG]	
2020-12-16 03:24:49,855	[INFO]	293	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:24:53,039	[INFO]	294	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:24:53,041	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:53,043	[INFO]	295	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:24:53,044	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:53,046	[INFO]	296	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:24:53,047	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:53,917	[INFO]	297	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:24:53,919	[INFO]	298	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:24:53,919	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:53,920	[INFO]	299	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:24:53,921	[INFO]	300	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:24:53,921	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:54,819	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:24:54,823	[INFO]	302	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:24:54,824	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:57,981	[INFO]	303	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:24:57,984	[INFO]	304	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:24:57,985	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:57,987	[INFO]	305	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:24:57,989	[INFO]	306	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:24:58,687	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:24:58,689	[INFO]	308	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:24:58,689	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:24:59,569	[INFO]	309	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:25:00,434	[INFO]	310	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:25:00,435	[INFO]	311	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:25:00,436	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Set<Node> nodesvisited = new HashSet<>();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:25:00,436	[INFO]	312	SUCCESS	+1.0	
2020-12-16 03:25:00,437	[DEBUG]	
2020-12-16 03:25:00,437	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:25:01,309	[INFO]	314	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:25:02,064	[INFO]	315	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:25:02,067	[INFO]	316	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:25:02,067	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:25:02,069	[INFO]	317	SUCCESS	+1.0	
2020-12-16 03:25:02,070	[DEBUG]	
2020-12-16 03:25:02,960	[INFO]	318	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:25:03,706	[INFO]	319	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:25:04,419	[INFO]	320	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:25:05,304	[INFO]	321	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:25:06,179	[INFO]	322	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:25:09,418	[INFO]	323	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:25:09,420	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:25:10,264	[INFO]	324	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:25:10,265	[INFO]	325	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:25:10,266	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:25:11,016	[INFO]	326	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:25:11,750	[INFO]	327	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:25:11,755	[INFO]	328	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:25:11,756	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:25:12,629	[INFO]	329	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:25:12,630	[INFO]	330	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:25:12,631	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:25:13,481	[INFO]	331	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:25:13,482	[INFO]	332	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:25:13,483	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:25:13,483	[INFO]	333	SUCCESS	+1.0	
2020-12-16 03:25:13,484	[DEBUG]	
2020-12-16 03:25:14,377	[INFO]	334	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:25:14,378	[INFO]	335	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:25:14,379	[INFO]	336	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:25:14,379	[DEBUG]	
2020-12-16 03:25:14,380	[INFO]	337	SUCCESS	+1.0	
2020-12-16 03:25:14,380	[DEBUG]	
2020-12-16 03:25:17,648	[INFO]	338	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:25:17,649	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,25 ****
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    Search s = new Search();
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:25:18,472	[INFO]	339	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:25:18,473	[INFO]	340	SUCCESS	+1.0	
2020-12-16 03:25:18,473	[DEBUG]	
2020-12-16 03:25:19,337	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:25:19,339	[INFO]	342	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:25:19,340	[INFO]	343	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:25:22,477	[INFO]	344	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:25:22,479	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,23 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:25:22,481	[INFO]	345	SUCCESS	+1.0	
2020-12-16 03:25:22,481	[DEBUG]	
2020-12-16 03:25:22,483	[INFO]	346	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:25:22,484	[INFO]	347	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:25:23,367	[INFO]	348	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:25:23,369	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:25:24,257	[INFO]	350	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:25:25,167	[INFO]	351	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:25:25,169	[INFO]	352	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:25:25,169	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:25:25,170	[INFO]	353	SUCCESS	+1.0	
2020-12-16 03:25:25,170	[DEBUG]	
2020-12-16 03:25:25,171	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:25:25,888	[INFO]	355	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:25:26,737	[INFO]	356	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:25:27,482	[INFO]	357	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:25:30,622	[INFO]	358	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:25:31,335	[INFO]	359	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:25:31,338	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:25:32,197	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:25:35,367	[INFO]	362	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:25:35,368	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 16,22 ****
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
--- 16,25 ----
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
!                 } if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:25:35,369	[INFO]	363	SUCCESS	+1.0	
2020-12-16 03:25:35,369	[DEBUG]	
2020-12-16 03:25:36,673	[INFO]	364	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:25:36,675	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:25:37,767	[INFO]	366	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:25:41,011	[INFO]	367	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:25:41,920	[INFO]	368	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:25:45,101	[INFO]	369	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:25:45,776	[INFO]	370	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:25:45,777	[INFO]	371	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:25:45,778	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:25:45,778	[INFO]	372	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:25:45,779	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:25:45,779	[INFO]	373	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:25:45,780	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:25:48,929	[INFO]	374	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:25:48,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,21 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:25:48,933	[INFO]	375	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:25:48,933	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:25:48,934	[INFO]	376	SUCCESS	+1.0	
2020-12-16 03:25:48,935	[DEBUG]	
2020-12-16 03:25:48,937	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:25:49,775	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:25:50,524	[INFO]	379	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:25:51,398	[INFO]	380	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:25:54,549	[INFO]	381	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:25:54,551	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:25:55,376	[INFO]	383	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:25:56,245	[INFO]	384	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:25:56,246	[INFO]	385	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:25:56,247	[INFO]	386	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:25:56,247	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:26:00,074	[INFO]	387	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:26:00,075	[INFO]	388	SUCCESS	+1.0	
2020-12-16 03:26:00,076	[DEBUG]	
2020-12-16 03:26:00,985	[INFO]	389	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:26:04,192	[INFO]	390	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:26:04,194	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:26:04,196	[INFO]	391	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:26:04,197	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     if (nodesvisited.contains(node)) {
                      return false;
+                 }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:26:05,059	[INFO]	392	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:26:05,062	[INFO]	393	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:26:05,063	[INFO]	394	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:26:05,064	[DEBUG]	
2020-12-16 03:26:06,048	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:26:06,049	[INFO]	396	SUCCESS	+1.0	
2020-12-16 03:26:06,050	[DEBUG]	
2020-12-16 03:26:06,977	[INFO]	397	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:26:06,979	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:26:06,979	[INFO]	399	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:26:07,859	[INFO]	400	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:26:07,860	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:26:11,078	[INFO]	402	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:26:14,241	[INFO]	403	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:26:17,351	[INFO]	404	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:26:17,353	[INFO]	405	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:26:20,469	[INFO]	406	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:26:20,471	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,23 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
!                     }
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:26:20,472	[INFO]	407	SUCCESS	+1.0	
2020-12-16 03:26:20,473	[DEBUG]	
2020-12-16 03:26:21,358	[INFO]	408	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:26:21,360	[INFO]	409	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:26:22,251	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:26:25,487	[INFO]	411	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:26:25,489	[INFO]	412	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:26:26,354	[INFO]	413	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:26:26,355	[INFO]	414	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:26:29,505	[INFO]	415	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:26:32,582	[INFO]	416	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:26:33,448	[INFO]	417	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:26:34,191	[INFO]	418	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:26:37,347	[INFO]	419	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:26:38,047	[INFO]	420	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:26:38,049	[INFO]	421	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:26:38,050	[DEBUG]	
2020-12-16 03:26:41,170	[INFO]	422	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:26:41,172	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:26:41,173	[INFO]	423	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:26:41,174	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:26:41,176	[INFO]	424	SUCCESS	+1.0	
2020-12-16 03:26:41,176	[DEBUG]	
2020-12-16 03:26:42,077	[INFO]	425	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:26:45,216	[INFO]	426	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:26:46,111	[INFO]	427	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:26:46,112	[INFO]	428	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:26:46,112	[DEBUG]	
2020-12-16 03:26:46,113	[INFO]	429	SUCCESS	+1.0	
2020-12-16 03:26:46,113	[DEBUG]	
2020-12-16 03:26:46,980	[INFO]	430	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:26:50,142	[INFO]	431	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:26:53,234	[INFO]	432	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:26:53,236	[INFO]	433	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:26:53,236	[DEBUG]	
2020-12-16 03:26:53,237	[INFO]	434	SUCCESS	+1.0	
2020-12-16 03:26:53,237	[DEBUG]	
2020-12-16 03:26:54,062	[INFO]	435	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:26:54,929	[INFO]	436	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:26:54,930	[INFO]	437	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:26:55,807	[INFO]	438	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:26:56,675	[INFO]	439	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:26:56,678	[INFO]	440	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:26:57,430	[INFO]	441	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:26:57,432	[INFO]	442	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:27:00,585	[INFO]	443	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:27:00,587	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 17,22 ****
--- 17,25 ----
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {

2020-12-16 03:27:00,589	[INFO]	444	SUCCESS	+1.0	
2020-12-16 03:27:00,589	[DEBUG]	
2020-12-16 03:27:00,591	[INFO]	445	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:27:03,729	[INFO]	446	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:27:03,730	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:27:03,731	[INFO]	447	SUCCESS	+1.0	
2020-12-16 03:27:03,731	[DEBUG]	
2020-12-16 03:27:03,733	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:27:04,579	[INFO]	449	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:27:04,580	[INFO]	450	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:27:04,581	[INFO]	451	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:27:04,581	[INFO]	452	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:27:04,582	[INFO]	453	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:27:05,472	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:27:05,474	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:27:06,348	[INFO]	456	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:27:06,349	[INFO]	457	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:27:06,349	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:27:07,236	[INFO]	458	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:27:07,237	[INFO]	459	SUCCESS	+1.0	
2020-12-16 03:27:07,237	[DEBUG]	
2020-12-16 03:27:10,412	[INFO]	460	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:27:10,414	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Set<Node> nodesvisited = new HashSet<>();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:27:10,415	[INFO]	461	SUCCESS	+1.0	
2020-12-16 03:27:10,415	[DEBUG]	
2020-12-16 03:27:10,417	[INFO]	462	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:27:11,179	[INFO]	463	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:27:11,182	[INFO]	464	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:27:14,356	[INFO]	465	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:27:14,357	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:27:14,359	[INFO]	466	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:27:14,359	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:27:17,406	[INFO]	467	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:27:17,408	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:27:20,410	[INFO]	468	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:27:20,412	[INFO]	469	SUCCESS	+1.0	
2020-12-16 03:27:20,412	[DEBUG]	
2020-12-16 03:27:20,414	[INFO]	470	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:27:20,414	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:27:20,416	[INFO]	471	SUCCESS	+1.0	
2020-12-16 03:27:20,416	[DEBUG]	
2020-12-16 03:27:21,143	[INFO]	472	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:27:22,006	[INFO]	473	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:27:25,208	[INFO]	474	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:27:25,210	[INFO]	475	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:27:25,934	[INFO]	476	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:27:29,005	[INFO]	477	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:27:29,007	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 18,23 ****
--- 18,26 ----
                      return false;
                  } else if (node == goalnode) {
                      return true;
+                 }
+ else if (node == goalnode) {
+                     return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }

2020-12-16 03:27:32,505	[INFO]	478	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:27:35,515	[INFO]	479	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:27:36,277	[INFO]	480	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:27:36,279	[INFO]	481	SUCCESS	+1.0	
2020-12-16 03:27:36,280	[DEBUG]	
2020-12-16 03:27:39,347	[INFO]	482	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:27:39,349	[INFO]	483	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:27:40,255	[INFO]	484	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:27:41,133	[INFO]	485	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:27:42,030	[INFO]	486	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:27:45,169	[INFO]	487	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:27:46,039	[INFO]	488	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:27:46,925	[INFO]	489	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:27:46,927	[INFO]	490	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:27:50,096	[INFO]	491	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:27:50,098	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,20 ****
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
+                     Search s = new Search();
                      return false;
                  } else if (node == goalnode) {
                      return true;

2020-12-16 03:27:50,998	[INFO]	492	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:27:54,157	[INFO]	493	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:27:55,008	[INFO]	494	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:27:55,009	[INFO]	495	SUCCESS	+1.0	
2020-12-16 03:27:55,009	[DEBUG]	
2020-12-16 03:27:55,010	[INFO]	496	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:27:55,010	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:27:55,011	[INFO]	497	SUCCESS	+1.0	
2020-12-16 03:27:55,011	[DEBUG]	
2020-12-16 03:27:55,012	[INFO]	498	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:27:55,012	[INFO]	499	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:27:55,881	[INFO]	500	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:27:55,882	[INFO]	==== END ====
2020-12-16 03:27:55,882	[INFO]	Reason: step budget
2020-12-16 03:27:55,882	[INFO]	
2020-12-16 03:27:55,882	[INFO]	========== EPOCH 19 ==========
2020-12-16 03:27:55,883	[INFO]	==== WARMUP ====
2020-12-16 03:27:59,304	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:27:59,304	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:28:02,393	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:28:02,394	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:28:05,528	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:28:05,528	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:28:08,666	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:28:08,666	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:28:08,667	[INFO]	==== START ====
2020-12-16 03:28:11,890	[INFO]	1	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:28:12,599	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:28:13,374	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:28:14,233	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:28:15,117	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:28:15,985	[INFO]	6	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:28:15,986	[INFO]	7	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:28:15,986	[DEBUG]	
2020-12-16 03:28:15,987	[INFO]	8	SUCCESS	+1.0	
2020-12-16 03:28:15,987	[DEBUG]	
2020-12-16 03:28:16,886	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:28:17,631	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:28:18,393	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:28:18,396	[INFO]	12	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:28:18,397	[DEBUG]	
2020-12-16 03:28:19,232	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:28:19,990	[INFO]	14	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:28:19,993	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:28:19,995	[INFO]	16	SUCCESS	+1.0	
2020-12-16 03:28:19,995	[DEBUG]	
2020-12-16 03:28:20,903	[INFO]	17	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:28:21,652	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:28:22,370	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:28:23,283	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:28:24,029	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:28:27,178	[INFO]	22	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:28:27,179	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:28:28,067	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:28:31,330	[INFO]	25	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:28:31,332	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,22 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:28:31,333	[INFO]	26	SUCCESS	+1.0	
2020-12-16 03:28:31,334	[DEBUG]	
2020-12-16 03:28:32,070	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:28:32,786	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:28:32,788	[INFO]	29	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:28:33,633	[INFO]	30	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:28:34,504	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:28:35,384	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:28:35,386	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:28:36,266	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:28:36,268	[INFO]	35	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:28:37,145	[INFO]	36	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:28:40,342	[INFO]	37	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:28:40,344	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:28:41,248	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:28:41,251	[INFO]	40	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:28:41,252	[DEBUG]	
2020-12-16 03:28:41,253	[INFO]	41	SUCCESS	+1.0	
2020-12-16 03:28:41,253	[DEBUG]	
2020-12-16 03:28:41,255	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:28:42,124	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:28:45,252	[INFO]	44	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:28:48,369	[INFO]	45	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:28:48,371	[INFO]	46	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:28:48,373	[INFO]	47	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:28:48,374	[DEBUG]	
2020-12-16 03:28:48,375	[INFO]	48	SUCCESS	+1.0	
2020-12-16 03:28:48,375	[DEBUG]	
2020-12-16 03:28:48,377	[INFO]	49	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:28:49,096	[INFO]	50	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:28:49,098	[INFO]	51	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:28:49,100	[INFO]	52	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:28:49,101	[DEBUG]	
2020-12-16 03:28:49,102	[INFO]	53	SUCCESS	+1.0	
2020-12-16 03:28:49,102	[DEBUG]	
2020-12-16 03:28:49,106	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:28:49,108	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:28:49,967	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:28:53,084	[INFO]	57	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:28:53,085	[INFO]	58	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:28:53,086	[INFO]	59	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:28:53,955	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:28:53,956	[INFO]	61	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:28:54,852	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:28:54,853	[INFO]	63	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:28:54,853	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:28:58,013	[INFO]	65	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:28:58,015	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:28:58,016	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:28:58,855	[INFO]	68	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:28:58,856	[INFO]	69	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:29:02,017	[INFO]	70	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:29:02,020	[INFO]	71	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:29:02,020	[DEBUG]	
2020-12-16 03:29:02,021	[INFO]	72	SUCCESS	+1.0	
2020-12-16 03:29:02,022	[DEBUG]	
2020-12-16 03:29:02,023	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:29:05,065	[INFO]	74	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:29:05,937	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:29:06,820	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:29:07,695	[INFO]	77	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:08,601	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:29:08,604	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:29:11,758	[INFO]	80	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:29:14,806	[INFO]	81	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:29:14,808	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:29:15,749	[INFO]	82	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:29:18,843	[INFO]	83	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:29:18,844	[INFO]	84	SUCCESS	+1.0	
2020-12-16 03:29:18,844	[DEBUG]	
2020-12-16 03:29:18,845	[INFO]	85	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:18,846	[INFO]	86	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:29:18,846	[DEBUG]	
2020-12-16 03:29:19,717	[INFO]	87	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:19,718	[INFO]	88	SUCCESS	+1.0	
2020-12-16 03:29:19,718	[DEBUG]	
2020-12-16 03:29:20,569	[INFO]	89	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:29:21,465	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:29:22,366	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:22,367	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:29:23,101	[INFO]	93	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:29:23,103	[INFO]	94	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:29:23,104	[DEBUG]	
2020-12-16 03:29:23,105	[INFO]	95	SUCCESS	+1.0	
2020-12-16 03:29:23,106	[DEBUG]	
2020-12-16 03:29:24,003	[INFO]	96	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:29:27,113	[INFO]	97	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:29:27,115	[INFO]	98	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:29:27,980	[INFO]	99	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:29:27,981	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:29:31,219	[INFO]	101	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:31,220	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:29:31,940	[INFO]	103	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:29:32,795	[INFO]	104	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:29:33,673	[INFO]	105	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:29:33,674	[INFO]	106	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:29:34,438	[INFO]	107	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:29:34,439	[INFO]	108	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:29:37,530	[INFO]	109	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:29:38,408	[INFO]	110	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:29:38,410	[INFO]	111	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:29:38,410	[DEBUG]	
2020-12-16 03:29:38,411	[INFO]	112	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:29:38,411	[INFO]	113	SUCCESS	+1.0	
2020-12-16 03:29:38,411	[DEBUG]	
2020-12-16 03:29:38,412	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:29:38,413	[INFO]	115	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:41,556	[INFO]	116	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:29:42,428	[INFO]	117	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:29:42,430	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:29:42,430	[INFO]	119	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:29:43,191	[INFO]	120	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:29:44,058	[INFO]	121	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:47,258	[INFO]	122	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:29:47,260	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:29:50,393	[INFO]	124	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:29:50,396	[INFO]	125	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:29:51,268	[INFO]	126	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:29:51,271	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:29:51,995	[INFO]	128	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:29:52,693	[INFO]	129	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:29:52,695	[INFO]	130	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:29:53,548	[INFO]	131	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:29:54,299	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:29:57,357	[INFO]	133	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:29:58,058	[INFO]	134	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:30:01,226	[INFO]	135	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:30:01,227	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:30:02,094	[INFO]	136	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:30:02,096	[INFO]	137	SUCCESS	+1.0	
2020-12-16 03:30:02,096	[DEBUG]	
2020-12-16 03:30:02,973	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:30:03,869	[INFO]	139	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:30:03,870	[INFO]	140	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:30:03,870	[DEBUG]	
2020-12-16 03:30:03,871	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:30:03,872	[INFO]	142	SUCCESS	+1.0	
2020-12-16 03:30:03,872	[DEBUG]	
2020-12-16 03:30:04,749	[INFO]	143	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:30:05,627	[INFO]	144	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:30:08,808	[INFO]	145	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:30:11,883	[INFO]	146	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:30:11,885	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
+                     for (Node successornodes : node.getSuccessors()) {
+ 	                    if (search(successornodes)) { return true; }
+                     }
                  }
                  return false;
              }

2020-12-16 03:30:12,773	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:30:12,774	[INFO]	148	SUCCESS	+1.0	
2020-12-16 03:30:12,774	[DEBUG]	
2020-12-16 03:30:13,643	[INFO]	149	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:30:13,644	[INFO]	150	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:30:14,382	[INFO]	151	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:30:15,236	[INFO]	152	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:30:15,237	[INFO]	153	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:30:16,131	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:30:16,133	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:30:19,232	[INFO]	156	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:30:20,086	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:30:20,087	[INFO]	158	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:30:20,088	[DEBUG]	
2020-12-16 03:30:20,088	[INFO]	159	SUCCESS	+1.0	
2020-12-16 03:30:20,088	[DEBUG]	
2020-12-16 03:30:20,089	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:30:20,990	[INFO]	161	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:30:20,991	[INFO]	162	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:30:21,858	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:30:25,062	[INFO]	164	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:30:28,112	[INFO]	165	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:30:28,113	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 21,26 ****
--- 21,27 ----
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
+ 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;

2020-12-16 03:30:28,979	[INFO]	166	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:30:29,888	[INFO]	167	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:30:29,889	[INFO]	168	SUCCESS	+1.0	
2020-12-16 03:30:29,889	[DEBUG]	
2020-12-16 03:30:33,032	[INFO]	169	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:30:33,034	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:30:33,036	[INFO]	170	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:30:33,036	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:30:33,038	[INFO]	171	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:30:33,038	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:30:33,040	[INFO]	172	SUCCESS	+1.0	
2020-12-16 03:30:33,040	[DEBUG]	
2020-12-16 03:30:36,198	[INFO]	173	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:30:37,067	[INFO]	174	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:30:37,068	[INFO]	175	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:30:37,068	[DEBUG]	
2020-12-16 03:30:37,973	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:30:37,974	[INFO]	177	SUCCESS	+1.0	
2020-12-16 03:30:37,974	[DEBUG]	
2020-12-16 03:30:38,878	[INFO]	178	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:30:39,795	[INFO]	179	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:30:39,798	[INFO]	180	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:30:42,900	[INFO]	181	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:30:42,901	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 28,34 ****
          };
  
          Search s = new Search();
!         return s.search(startnode);
      }
  
  }
--- 28,34 ----
          };
  
          Search s = new Search();
!         return true;
      }
  
  }

2020-12-16 03:30:42,901	[INFO]	182	SUCCESS	+1.0	
2020-12-16 03:30:42,902	[DEBUG]	
2020-12-16 03:30:42,902	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:30:43,756	[INFO]	184	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:30:43,758	[INFO]	185	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:30:43,758	[DEBUG]	
2020-12-16 03:30:46,929	[INFO]	186	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:30:46,930	[INFO]	187	SUCCESS	+1.0	
2020-12-16 03:30:46,930	[DEBUG]	
2020-12-16 03:30:47,788	[INFO]	188	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:30:48,656	[INFO]	189	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:30:48,658	[INFO]	190	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:30:48,658	[INFO]	191	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:30:48,658	[DEBUG]	
2020-12-16 03:30:51,883	[INFO]	192	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:30:51,885	[INFO]	193	SUCCESS	+1.0	
2020-12-16 03:30:51,885	[DEBUG]	
2020-12-16 03:30:52,764	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:30:55,944	[INFO]	195	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:30:56,785	[INFO]	196	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:30:57,542	[INFO]	197	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:31:00,696	[INFO]	198	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:31:00,697	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return true;
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:31:00,699	[INFO]	199	SUCCESS	+1.0	
2020-12-16 03:31:00,699	[DEBUG]	
2020-12-16 03:31:01,579	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:31:02,348	[INFO]	201	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:31:03,069	[INFO]	202	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:31:03,072	[INFO]	203	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:31:03,073	[INFO]	204	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:31:03,934	[INFO]	205	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:31:03,935	[INFO]	206	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:31:03,936	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:31:03,936	[INFO]	207	SUCCESS	+1.0	
2020-12-16 03:31:03,937	[DEBUG]	
2020-12-16 03:31:04,833	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:31:04,835	[INFO]	209	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:31:05,729	[INFO]	210	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:31:06,623	[INFO]	211	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:31:07,349	[INFO]	212	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:31:08,235	[INFO]	213	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:31:08,236	[INFO]	214	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:31:08,236	[DEBUG]	
2020-12-16 03:31:08,237	[INFO]	215	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:31:08,238	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:31:08,238	[INFO]	217	SUCCESS	+1.0	
2020-12-16 03:31:08,238	[DEBUG]	
2020-12-16 03:31:08,239	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:31:08,240	[INFO]	219	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:31:08,240	[DEBUG]	
2020-12-16 03:31:11,380	[INFO]	220	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:31:11,381	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:31:11,381	[INFO]	==== END ====
2020-12-16 03:31:11,382	[INFO]	Reason: target fitness reached
2020-12-16 03:31:11,382	[INFO]	
2020-12-16 03:31:11,382	[INFO]	========== EPOCH 20 ==========
2020-12-16 03:31:11,383	[INFO]	==== WARMUP ====
2020-12-16 03:31:14,541	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:31:14,542	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:31:17,577	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:31:17,577	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:31:20,656	[INFO]	WARM	SUCCESS	 1.0	
2020-12-16 03:31:20,657	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:31:23,781	[INFO]	INITIAL	SUCCESS	 1.0	
2020-12-16 03:31:23,782	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 1.0>
2020-12-16 03:31:23,782	[INFO]	==== START ====
2020-12-16 03:31:26,901	[INFO]	1	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:31:29,997	[INFO]	2	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:31:29,998	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:31:30,757	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:31:31,688	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:31:31,691	[INFO]	5	SUCCESS	+1.0	
2020-12-16 03:31:31,691	[DEBUG]	
2020-12-16 03:31:34,813	[INFO]	6	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:31:34,814	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:31:37,919	[INFO]	7	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:31:37,920	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,26 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (nodesvisited.contains(node)) {
!                     return false;
!                 }
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:31:40,988	[INFO]	8	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:31:40,989	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:31:40,990	[INFO]	9	SUCCESS	+1.0	
2020-12-16 03:31:40,990	[DEBUG]	
2020-12-16 03:31:41,882	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:31:42,776	[INFO]	11	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:31:43,629	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:31:43,630	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:31:43,631	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:31:44,528	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:31:47,727	[INFO]	16	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:31:47,730	[INFO]	17	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:31:47,731	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:31:48,443	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:31:51,591	[INFO]	20	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:31:52,433	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:31:53,298	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:31:53,300	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:31:53,301	[INFO]	24	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:31:56,450	[INFO]	25	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:31:57,311	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:31:57,314	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:31:58,185	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:31:58,189	[INFO]	29	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:31:58,189	[DEBUG]	
2020-12-16 03:31:58,190	[INFO]	30	SUCCESS	+1.0	
2020-12-16 03:31:58,191	[DEBUG]	
2020-12-16 03:31:59,107	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:32:00,014	[INFO]	32	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:32:00,015	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:32:00,016	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:32:03,125	[INFO]	35	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:32:04,015	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:32:04,889	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:32:04,890	[INFO]	38	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:32:04,891	[DEBUG]	
2020-12-16 03:32:05,754	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:32:05,755	[INFO]	40	SUCCESS	+1.0	
2020-12-16 03:32:05,755	[DEBUG]	
2020-12-16 03:32:05,756	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:32:06,504	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:32:07,367	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:32:07,368	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:32:08,105	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:32:08,106	[INFO]	46	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:32:11,241	[INFO]	47	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:32:11,941	[INFO]	48	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:32:11,943	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:32:12,808	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:32:15,929	[INFO]	51	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:32:15,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:32:15,933	[INFO]	52	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:32:15,934	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:32:15,936	[INFO]	53	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:32:15,937	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,25 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     Search s = new Search();
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:32:15,938	[INFO]	54	SUCCESS	+1.0	
2020-12-16 03:32:15,938	[DEBUG]	
2020-12-16 03:32:15,940	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:32:15,941	[INFO]	56	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:32:15,941	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:32:15,942	[INFO]	57	SUCCESS	+1.0	
2020-12-16 03:32:15,942	[DEBUG]	
2020-12-16 03:32:15,944	[INFO]	58	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:15,945	[DEBUG]	
2020-12-16 03:32:15,946	[INFO]	59	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:32:16,798	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:32:16,799	[INFO]	61	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:32:16,799	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:32:16,800	[INFO]	62	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:16,800	[DEBUG]	
2020-12-16 03:32:16,801	[INFO]	63	SUCCESS	+1.0	
2020-12-16 03:32:16,801	[DEBUG]	
2020-12-16 03:32:16,801	[INFO]	64	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:32:17,530	[INFO]	65	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:32:18,419	[INFO]	66	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:32:19,298	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:32:19,299	[INFO]	68	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:32:22,535	[INFO]	69	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:32:22,537	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:32:25,594	[INFO]	70	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:32:25,595	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,28 ****
--- 19,32 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:32:26,514	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:32:26,516	[INFO]	72	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:26,516	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,28 ****
--- 19,32 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:32:26,517	[INFO]	73	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:32:26,518	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,28 ****
--- 19,32 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:32:26,519	[INFO]	74	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:26,519	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,28 ****
--- 19,32 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:32:26,520	[INFO]	75	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:26,520	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 19,24 ****
--- 19,27 ----
                  } else if (node == goalnode) {
                      return true;
                  } else {
+                     if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                      for (Node successornodes : node.getSuccessors()) {
  	                    if (search(successornodes)) { return true; }
                      }

2020-12-16 03:32:27,257	[INFO]	76	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:32:27,258	[INFO]	77	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:27,259	[DEBUG]	
2020-12-16 03:32:27,259	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:32:27,260	[INFO]	79	SUCCESS	+1.0	
2020-12-16 03:32:27,260	[DEBUG]	
2020-12-16 03:32:30,451	[INFO]	80	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:32:31,138	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:32:32,033	[INFO]	82	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:32:32,921	[INFO]	83	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:32:36,086	[INFO]	84	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:32:39,400	[INFO]	85	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:32:39,403	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:32:39,405	[INFO]	87	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:39,405	[DEBUG]	
2020-12-16 03:32:39,406	[INFO]	88	SUCCESS	+1.0	
2020-12-16 03:32:39,407	[DEBUG]	
2020-12-16 03:32:39,408	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:32:39,410	[INFO]	90	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:32:39,411	[INFO]	91	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:32:39,412	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:32:39,414	[INFO]	92	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:32:39,415	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:32:39,418	[INFO]	93	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:32:39,419	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:32:39,420	[INFO]	94	SUCCESS	+1.0	
2020-12-16 03:32:39,421	[DEBUG]	
2020-12-16 03:32:40,171	[INFO]	95	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:32:40,888	[INFO]	96	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:32:40,889	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:32:41,609	[INFO]	98	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:32:44,642	[INFO]	99	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:32:44,643	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     Search s = new Search();
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:32:44,643	[INFO]	100	SUCCESS	+1.0	
2020-12-16 03:32:44,644	[DEBUG]	
2020-12-16 03:32:45,360	[INFO]	101	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:32:46,136	[INFO]	102	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:32:49,239	[INFO]	103	SUCCESS	 2.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:32:49,241	[INFO]	104	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:32:50,094	[INFO]	105	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:32:50,095	[INFO]	106	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:32:50,982	[INFO]	107	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:32:51,880	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:32:52,815	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:32:55,928	[INFO]	110	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:32:55,930	[INFO]	111	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:32:55,931	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:32:55,932	[INFO]	112	SUCCESS	+1.0	
2020-12-16 03:32:55,933	[DEBUG]	
2020-12-16 03:32:55,935	[INFO]	113	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:32:56,842	[INFO]	114	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:32:56,844	[INFO]	115	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:56,845	[DEBUG]	
2020-12-16 03:32:57,595	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:32:57,598	[INFO]	117	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:32:57,599	[INFO]	118	SUCCESS	+1.0	
2020-12-16 03:32:57,600	[DEBUG]	
2020-12-16 03:32:57,602	[INFO]	119	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:32:57,603	[DEBUG]	
2020-12-16 03:32:57,604	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:32:58,434	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:32:58,436	[INFO]	122	SUCCESS	+1.0	
2020-12-16 03:32:58,436	[DEBUG]	
2020-12-16 03:32:58,436	[INFO]	123	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:32:59,180	[INFO]	124	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:32:59,939	[INFO]	125	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:32:59,942	[INFO]	126	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:33:02,988	[INFO]	127	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:33:02,990	[INFO]	128	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:33:03,852	[INFO]	129	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:33:04,714	[INFO]	130	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:33:04,716	[INFO]	131	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:33:05,597	[INFO]	132	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'})
2020-12-16 03:33:05,598	[INFO]	133	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:33:05,599	[INFO]	134	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:33:05,600	[INFO]	135	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:33:05,600	[DEBUG]	
2020-12-16 03:33:05,601	[INFO]	136	SUCCESS	+1.0	
2020-12-16 03:33:05,601	[DEBUG]	
2020-12-16 03:33:06,351	[INFO]	137	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:33:09,476	[INFO]	138	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:33:09,477	[INFO]	139	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:33:09,477	[INFO]	140	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:33:09,478	[INFO]	141	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:33:09,478	[DEBUG]	
2020-12-16 03:33:09,479	[INFO]	142	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:09,479	[INFO]	143	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:33:09,480	[INFO]	144	SUCCESS	+1.0	
2020-12-16 03:33:09,480	[DEBUG]	
2020-12-16 03:33:09,481	[INFO]	145	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:33:09,481	[INFO]	146	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:10,170	[INFO]	147	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:33:10,172	[INFO]	148	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:13,252	[INFO]	149	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:33:13,253	[INFO]	150	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:33:13,254	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:33:13,255	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:33:14,128	[INFO]	153	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:33:14,129	[INFO]	154	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:33:15,019	[INFO]	155	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:33:15,879	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:33:16,776	[INFO]	157	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:33:19,857	[INFO]	158	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:33:20,750	[INFO]	159	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:33:21,507	[INFO]	160	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:33:21,508	[INFO]	161	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:33:21,509	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:33:22,237	[INFO]	163	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:33:22,238	[INFO]	164	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:33:22,238	[DEBUG]	
2020-12-16 03:33:25,381	[INFO]	165	SUCCESS	 3.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:33:25,382	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:33:25,383	[INFO]	167	SUCCESS	+1.0	
2020-12-16 03:33:25,383	[DEBUG]	
2020-12-16 03:33:26,114	[INFO]	168	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:33:29,152	[INFO]	169	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:33:29,152	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { if (search(successornodes)) { return true; } }
                      }
                  }
                  return false;

2020-12-16 03:33:30,076	[INFO]	170	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:33:30,077	[INFO]	171	SUCCESS	+1.0	
2020-12-16 03:33:30,077	[DEBUG]	
2020-12-16 03:33:30,825	[INFO]	172	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:33:30,828	[INFO]	173	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:33,936	[INFO]	174	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:33:33,938	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,27 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { Set<Node> nodesvisited = new HashSet<>();
! return true; }
                      }
                  }
                  return false;

2020-12-16 03:33:33,939	[INFO]	175	SUCCESS	+1.0	
2020-12-16 03:33:33,940	[DEBUG]	
2020-12-16 03:33:34,828	[INFO]	176	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:33:35,567	[INFO]	177	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:33:35,568	[INFO]	178	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:35,569	[INFO]	179	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:33:36,434	[INFO]	180	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'direction': 'before'})
2020-12-16 03:33:39,638	[INFO]	181	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:33:39,639	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:33:39,640	[INFO]	182	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:39,640	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:33:39,641	[INFO]	183	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:42,647	[INFO]	184	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:33:43,511	[INFO]	185	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:33:44,409	[INFO]	186	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:33:45,304	[INFO]	187	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:33:48,422	[INFO]	188	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:33:48,426	[INFO]	189	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:33:48,428	[INFO]	190	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<'})
2020-12-16 03:33:49,303	[INFO]	191	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:33:50,021	[INFO]	192	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:33:50,023	[INFO]	193	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:33:50,023	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:33:50,889	[INFO]	194	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:33:50,891	[INFO]	195	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:50,891	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:33:50,892	[INFO]	196	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:33:50,892	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:33:50,893	[INFO]	197	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)})
2020-12-16 03:33:50,894	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:33:51,797	[INFO]	198	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:33:51,799	[INFO]	199	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:33:51,799	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,31 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 if (nodesvisited.contains(node)) {
+                     return false;
+                 }
                  return false;
              }
          };

2020-12-16 03:33:51,800	[INFO]	200	SUCCESS	+1.0	
2020-12-16 03:33:51,800	[DEBUG]	
2020-12-16 03:33:52,529	[INFO]	201	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:33:52,531	[INFO]	202	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:33:52,531	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:33:55,682	[INFO]	203	SUCCESS	 2.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:33:58,746	[INFO]	204	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:33:59,634	[INFO]	205	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:33:59,635	[INFO]	206	SUCCESS	+1.0	
2020-12-16 03:33:59,636	[DEBUG]	
2020-12-16 03:34:00,498	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:01,383	[INFO]	208	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 11), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'direction': 'before'})
2020-12-16 03:34:02,284	[INFO]	209	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:34:02,287	[INFO]	210	SUCCESS	 4.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:34:03,036	[INFO]	211	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:34:06,234	[INFO]	212	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:34:09,263	[INFO]	213	SUCCESS	 3.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6)})
2020-12-16 03:34:09,973	[INFO]	214	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:34:10,709	[INFO]	215	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3)})
2020-12-16 03:34:13,744	[INFO]	216	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:34:13,745	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 23,28 ****
--- 23,29 ----
  	                    if (search(successornodes)) { return true; }
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:34:13,746	[INFO]	217	SUCCESS	+1.0	
2020-12-16 03:34:13,746	[DEBUG]	
2020-12-16 03:34:13,747	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'})
2020-12-16 03:34:13,748	[INFO]	219	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:34:13,748	[DEBUG]	
2020-12-16 03:34:13,748	[INFO]	220	SUCCESS	+1.0	
2020-12-16 03:34:13,749	[DEBUG]	
2020-12-16 03:34:14,624	[INFO]	221	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:34:14,625	[INFO]	222	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:34:14,626	[DEBUG]	
2020-12-16 03:34:15,525	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:34:15,526	[INFO]	224	SUCCESS	+1.0	
2020-12-16 03:34:15,526	[DEBUG]	
2020-12-16 03:34:16,429	[INFO]	225	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'direction': 'before'})
2020-12-16 03:34:19,566	[INFO]	226	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:34:20,433	[INFO]	227	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:34:23,540	[INFO]	228	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:34:23,542	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:24,450	[INFO]	229	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:34:24,451	[INFO]	230	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:24,452	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:25,315	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:25,317	[INFO]	232	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:34:25,317	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:25,318	[INFO]	233	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='})
2020-12-16 03:34:25,319	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:28,463	[INFO]	234	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:34:28,464	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,29 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:34:28,465	[INFO]	235	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:34:28,466	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,25 ****
--- 14,29 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
+ 	                    if (nodesvisited.contains(node)) {
+                     return false;
+                 }
  	                    if (search(successornodes)) { return true; }
                      }
                  }

2020-12-16 03:34:28,467	[INFO]	236	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:34:28,468	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:28,469	[INFO]	237	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:28,470	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:28,471	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:29,343	[INFO]	239	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:34:29,344	[INFO]	240	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:29,345	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:29,345	[INFO]	241	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:34:29,346	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:32,587	[INFO]	242	SUCCESS	 2.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:34:32,591	[INFO]	243	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:32,592	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:33,465	[INFO]	244	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:34:34,314	[INFO]	245	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:34:34,315	[INFO]	246	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:34:34,316	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:34,317	[INFO]	247	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:34,317	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:35,229	[INFO]	248	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:34:36,147	[INFO]	249	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:34:39,252	[INFO]	250	SUCCESS	 3.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)})
2020-12-16 03:34:39,254	[INFO]	251	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:39,254	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:42,408	[INFO]	252	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:34:43,137	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:43,139	[INFO]	254	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:34:43,139	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:44,050	[INFO]	255	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:34:44,051	[INFO]	256	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:34:44,052	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:44,053	[INFO]	257	SUCCESS	 4.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10)})
2020-12-16 03:34:44,053	[INFO]	258	SUCCESS	+1.0	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'})
2020-12-16 03:34:44,054	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,19 ****
--- 14,20 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Set<Node> nodesvisited = new HashSet<>();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {

2020-12-16 03:34:44,054	[INFO]	259	SUCCESS	+1.0	
2020-12-16 03:34:44,054	[DEBUG]	
2020-12-16 03:34:44,055	[INFO]	260	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:34:44,774	[INFO]	261	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:34:45,663	[INFO]	262	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:34:46,561	[INFO]	263	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:34:46,562	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '<='})
2020-12-16 03:34:49,667	[INFO]	265	SUCCESS	 4.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1)})
2020-12-16 03:34:50,562	[INFO]	266	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2), 'direction': 'before'})
2020-12-16 03:34:51,305	[INFO]	267	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:34:52,179	[INFO]	268	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:34:52,899	[INFO]	269	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 6), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:34:53,773	[INFO]	270	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:34:54,652	[INFO]	271	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9)})
2020-12-16 03:34:55,507	[INFO]	272	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'direction': 'before'})
2020-12-16 03:34:56,405	[INFO]	273	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'direction': 'before'})
2020-12-16 03:34:57,258	[INFO]	274	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'direction': 'before'})
2020-12-16 03:34:57,259	[INFO]	275	SUCCESS	+1.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:34:57,260	[DEBUG]	
2020-12-16 03:35:00,448	[INFO]	276	SUCCESS	 3.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)}) | StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:35:00,451	[INFO]	277	SUCCESS	+1.0	
2020-12-16 03:35:00,451	[DEBUG]	
2020-12-16 03:35:01,310	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>='})
2020-12-16 03:35:04,399	[INFO]	279	SUCCESS	+1.0	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)})
2020-12-16 03:35:04,400	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,21 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
--- 15,21 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {

2020-12-16 03:35:04,402	[INFO]	280	SUCCESS	+1.0	
2020-12-16 03:35:04,402	[DEBUG]	
2020-12-16 03:35:05,128	[INFO]	281	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 3), 'direction': 'before'})
2020-12-16 03:35:05,130	[INFO]	282	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0)})
2020-12-16 03:35:05,130	[INFO]	283	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:35:05,131	[INFO]	284	SUCCESS	 2.0	ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '!='})
2020-12-16 03:35:06,001	[INFO]	285	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'direction': 'before'})
2020-12-16 03:35:09,112	[INFO]	286	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,113	[DEBUG]	*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,113	[INFO]	==== END ====
2020-12-16 03:35:09,113	[INFO]	Reason: target fitness reached
2020-12-16 03:35:09,114	[INFO]	
2020-12-16 03:35:09,114	[INFO]	========== REPORT ==========
2020-12-16 03:35:09,114	[INFO]	==== Epoch 1 ====
2020-12-16 03:35:09,114	[INFO]	Termination: step budget
2020-12-16 03:35:09,114	[INFO]	Number of interations: 500
2020-12-16 03:35:09,114	[INFO]	==== Epoch 2 ====
2020-12-16 03:35:09,114	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,115	[INFO]	Number of interations: 188
2020-12-16 03:35:09,115	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,115	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,115	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,115	[INFO]	==== Epoch 3 ====
2020-12-16 03:35:09,115	[INFO]	Termination: step budget
2020-12-16 03:35:09,115	[INFO]	Number of interations: 500
2020-12-16 03:35:09,115	[INFO]	==== Epoch 4 ====
2020-12-16 03:35:09,115	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,115	[INFO]	Number of interations: 67
2020-12-16 03:35:09,115	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,115	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:35:09,115	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,115	[INFO]	==== Epoch 5 ====
2020-12-16 03:35:09,116	[INFO]	Termination: step budget
2020-12-16 03:35:09,116	[INFO]	Number of interations: 500
2020-12-16 03:35:09,116	[INFO]	==== Epoch 6 ====
2020-12-16 03:35:09,116	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,116	[INFO]	Number of interations: 22
2020-12-16 03:35:09,116	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,116	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:35:09,116	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,116	[INFO]	==== Epoch 7 ====
2020-12-16 03:35:09,116	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,116	[INFO]	Number of interations: 393
2020-12-16 03:35:09,116	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,116	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,116	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,116	[INFO]	==== Epoch 8 ====
2020-12-16 03:35:09,116	[INFO]	Termination: step budget
2020-12-16 03:35:09,116	[INFO]	Number of interations: 500
2020-12-16 03:35:09,116	[INFO]	==== Epoch 9 ====
2020-12-16 03:35:09,116	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,117	[INFO]	Number of interations: 110
2020-12-16 03:35:09,117	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,117	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 0), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,117	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,28 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 20,29 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Set<Node> nodesvisited = new HashSet<>();
                  return false;
              }
          };

2020-12-16 03:35:09,117	[INFO]	==== Epoch 10 ====
2020-12-16 03:35:09,117	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,117	[INFO]	Number of interations: 359
2020-12-16 03:35:09,117	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,117	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:35:09,117	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,117	[INFO]	==== Epoch 11 ====
2020-12-16 03:35:09,117	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,117	[INFO]	Number of interations: 161
2020-12-16 03:35:09,117	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,117	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,117	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,118	[INFO]	==== Epoch 12 ====
2020-12-16 03:35:09,118	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,118	[INFO]	Number of interations: 369
2020-12-16 03:35:09,118	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,118	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,118	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,118	[INFO]	==== Epoch 13 ====
2020-12-16 03:35:09,118	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,118	[INFO]	Number of interations: 175
2020-12-16 03:35:09,118	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,118	[INFO]	Best patch: StmtDeletion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 2)}) | MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 9), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:35:09,118	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 15,28 ****
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
              }
          };
--- 15,29 ----
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
!                     
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
+                 Search s = new Search();
                  return false;
              }
          };

2020-12-16 03:35:09,118	[INFO]	==== Epoch 14 ====
2020-12-16 03:35:09,118	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,118	[INFO]	Number of interations: 69
2020-12-16 03:35:09,118	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,119	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,119	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,119	[INFO]	==== Epoch 15 ====
2020-12-16 03:35:09,119	[INFO]	Termination: step budget
2020-12-16 03:35:09,119	[INFO]	Number of interations: 500
2020-12-16 03:35:09,119	[INFO]	==== Epoch 16 ====
2020-12-16 03:35:09,119	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,119	[INFO]	Number of interations: 22
2020-12-16 03:35:09,119	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,119	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,119	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,119	[INFO]	==== Epoch 17 ====
2020-12-16 03:35:09,119	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,119	[INFO]	Number of interations: 249
2020-12-16 03:35:09,119	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,119	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 1), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '>'}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 8)})
2020-12-16 03:35:09,120	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 14,26 ****
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 14,27 ----
          Set<Node> nodesvisited = new HashSet<>();
          class Search {
              boolean search(Node node) {
+                 Search s = new Search();
                  if (nodesvisited.contains(node)) {
                      return false;
                  } else if (node == goalnode) {
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,120	[INFO]	==== Epoch 18 ====
2020-12-16 03:35:09,120	[INFO]	Termination: step budget
2020-12-16 03:35:09,120	[INFO]	Number of interations: 500
2020-12-16 03:35:09,120	[INFO]	==== Epoch 19 ====
2020-12-16 03:35:09,120	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,120	[INFO]	Number of interations: 220
2020-12-16 03:35:09,120	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,120	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 4), 'value': '=='}) | StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,120	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,120	[INFO]	==== Epoch 20 ====
2020-12-16 03:35:09,120	[INFO]	Termination: target fitness reached
2020-12-16 03:35:09,120	[INFO]	Number of interations: 286
2020-12-16 03:35:09,120	[INFO]	Best fitness: 0.0
2020-12-16 03:35:09,120	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 7), 'ingredient': ('java_programs/DEPTH_FIRST_SEARCH.java.xml', 5)})
2020-12-16 03:35:09,120	[INFO]	Diff:
*** before: java_programs/DEPTH_FIRST_SEARCH.java.xml
--- after: java_programs/DEPTH_FIRST_SEARCH.java.xml
***************
*** 20,26 ****
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    if (search(successornodes)) { return true; }
                      }
                  }
                  return false;
--- 20,26 ----
                      return true;
                  } else {
                      for (Node successornodes : node.getSuccessors()) {
! 	                    return true;
                      }
                  }
                  return false;

2020-12-16 03:35:09,125	[INFO]	Experiment duration: 5305.188009023666
