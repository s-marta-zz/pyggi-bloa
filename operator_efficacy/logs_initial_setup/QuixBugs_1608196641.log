2020-12-17 10:17:21,581	[INFO]	Path to the temporal program variants: ./.pyggi/tmp_variants/QuixBugs/1608196641
2020-12-17 10:17:21,581	[INFO]	========== EXPERIMENT FOR ['java_programs/LIS.java.xml']  ==========
2020-12-17 10:17:21,582	[INFO]	modification points:
 ['./decl_stmt[1]', './decl_stmt[2]', './decl_stmt[3]', './for[1]', './for[1]/decl_stmt[1]', './for[1]/for[1]', './for[1]/for[1]/operator_comp[1]', './for[1]/for[1]/if[1]', './for[1]/for[1]/if[1]/operator_comp[1]', './for[1]/for[1]/if[1]/expr_stmt[1]', './for[1]/decl_stmt[2]', './for[1]/if[1]', './for[1]/if[1]/operator_comp[1]', './for[1]/if[1]/operator_comp[2]', './for[1]/if[1]/expr_stmt[1]', './for[1]/if[1]/expr_stmt[2]', './for[1]/expr_stmt[1]', './return[1]']
2020-12-17 10:17:21,582	[INFO]	number of statements and comparisons: 14, 4
2020-12-17 10:17:21,582	[INFO]	========== EPOCH 1 ==========
2020-12-17 10:17:21,582	[INFO]	==== WARMUP ====
2020-12-17 10:17:24,798	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:17:24,798	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:17:27,929	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:17:27,929	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:17:31,149	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:17:31,150	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:17:34,285	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 10:17:34,285	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:17:34,285	[INFO]	==== START ====
2020-12-17 10:17:37,378	[INFO]	1	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:17:40,520	[INFO]	2	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:17:41,444	[INFO]	3	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:17:42,398	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:17:42,399	[INFO]	5	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:17:45,554	[INFO]	6	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:17:48,661	[INFO]	7	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:17:49,589	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:17:50,436	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:17:53,629	[INFO]	10	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:17:53,631	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:17:53,632	[INFO]	11	SUCCESS	+13.0	
2020-12-17 10:17:53,633	[DEBUG]	
2020-12-17 10:17:56,751	[INFO]	12	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:17:57,730	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:17:58,691	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:18:01,860	[INFO]	15	SUCCESS	 21.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:18:04,982	[INFO]	16	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:18:04,983	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:04,984	[INFO]	17	SUCCESS	 13.0	
2020-12-17 10:18:05,910	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:18:06,882	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:18:07,891	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:18:11,023	[INFO]	21	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:18:11,987	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:18:12,955	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:18:13,932	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:18:14,913	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:18:17,917	[INFO]	26	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:18:21,117	[INFO]	27	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:18:22,058	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:18:25,290	[INFO]	29	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:18:25,292	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:26,218	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:18:26,219	[INFO]	31	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:18:26,219	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:29,394	[INFO]	32	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:18:30,292	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:18:31,305	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:18:31,307	[INFO]	35	SUCCESS	 13.0	
2020-12-17 10:18:32,276	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:18:33,253	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:18:34,202	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:18:37,355	[INFO]	39	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:18:40,491	[INFO]	40	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:18:40,492	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:40,492	[INFO]	41	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:18:40,493	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:40,493	[INFO]	42	SUCCESS	 13.0	
2020-12-17 10:18:41,457	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:18:44,558	[INFO]	44	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:18:45,563	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:18:48,762	[INFO]	46	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:18:48,763	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:49,740	[INFO]	47	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:18:49,741	[INFO]	48	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:18:49,742	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:50,600	[INFO]	49	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:18:53,740	[INFO]	50	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:18:53,741	[INFO]	51	SUCCESS	 13.0	
2020-12-17 10:18:56,853	[INFO]	52	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:18:56,855	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,34 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:18:57,782	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:18:58,756	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:19:01,935	[INFO]	55	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:19:01,936	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,36 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:19:01,936	[INFO]	==== END ====
2020-12-17 10:19:01,936	[INFO]	Reason: target fitness reached
2020-12-17 10:19:01,937	[INFO]	
2020-12-17 10:19:01,937	[INFO]	========== EPOCH 2 ==========
2020-12-17 10:19:01,938	[INFO]	==== WARMUP ====
2020-12-17 10:19:05,144	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:19:05,145	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:19:08,206	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:19:08,206	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:19:11,350	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:19:11,350	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:19:14,584	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 10:19:14,584	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:19:14,584	[INFO]	==== START ====
2020-12-17 10:19:18,006	[INFO]	1	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:19:21,225	[INFO]	2	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:19:21,226	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 29,34 ****
--- 29,35 ----
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 longest = length + 1;
              }
  
              i++;

2020-12-17 10:19:24,379	[INFO]	3	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:19:24,380	[INFO]	4	SUCCESS	+13.0	
2020-12-17 10:19:24,380	[DEBUG]	
2020-12-17 10:19:25,307	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:19:26,190	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:19:29,355	[INFO]	7	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:19:32,568	[INFO]	8	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:19:32,569	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:19:33,477	[INFO]	9	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:19:33,478	[INFO]	10	SUCCESS	+13.0	
2020-12-17 10:19:33,478	[DEBUG]	
2020-12-17 10:19:34,498	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:19:35,471	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:19:38,881	[INFO]	13	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:19:38,882	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:19:38,883	[INFO]	14	SUCCESS	 13.0	
2020-12-17 10:19:39,848	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:19:39,852	[INFO]	16	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:19:40,808	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:19:41,789	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:19:44,962	[INFO]	19	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:19:48,170	[INFO]	20	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:19:48,172	[INFO]	21	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:19:48,172	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:19:48,173	[INFO]	22	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:19:48,173	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:19:48,174	[INFO]	23	SUCCESS	 13.0	
2020-12-17 10:19:49,071	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:19:50,002	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:19:53,121	[INFO]	26	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:19:56,268	[INFO]	27	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:19:57,204	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:19:57,205	[INFO]	29	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:19:57,206	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:19:57,206	[INFO]	30	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:19:57,207	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:19:57,208	[INFO]	31	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:19:57,208	[INFO]	32	SUCCESS	 13.0	
2020-12-17 10:19:58,165	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:19:59,118	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:20:02,332	[INFO]	35	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:20:05,525	[INFO]	36	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:20:05,526	[INFO]	37	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:20:08,656	[INFO]	38	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:20:09,629	[INFO]	39	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:20:10,626	[INFO]	40	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:20:11,479	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:20:12,376	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:20:13,423	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:20:13,427	[INFO]	44	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:20:14,399	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:20:17,593	[INFO]	46	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:20:20,762	[INFO]	47	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:20:23,970	[INFO]	48	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:20:23,971	[INFO]	49	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:20:23,971	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:20:24,888	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:20:24,889	[INFO]	51	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:20:24,889	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:20:24,890	[INFO]	52	SUCCESS	 13.0	
2020-12-17 10:20:25,866	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:20:26,854	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:20:26,857	[INFO]	55	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:20:26,858	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:20:27,789	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:20:27,791	[INFO]	57	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:20:27,791	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:20:30,973	[INFO]	59	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:20:30,975	[INFO]	60	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:20:30,975	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:20:31,926	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:20:31,927	[INFO]	62	SUCCESS	 13.0	
2020-12-17 10:20:32,939	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:20:33,919	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:20:34,870	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:20:34,872	[INFO]	66	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:20:34,872	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:20:38,369	[INFO]	67	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:20:38,370	[INFO]	68	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:20:38,371	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:20:38,371	[INFO]	69	SUCCESS	 13.0	
2020-12-17 10:20:39,318	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:20:42,514	[INFO]	71	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:20:43,487	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:20:46,837	[INFO]	73	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:20:49,989	[INFO]	74	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:20:50,875	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:20:54,088	[INFO]	76	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:20:54,090	[INFO]	77	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:20:55,001	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:20:58,116	[INFO]	79	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:21:01,270	[INFO]	80	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:21:02,218	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:21:03,186	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:21:04,036	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:21:04,039	[INFO]	84	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:21:04,041	[INFO]	85	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:21:07,041	[INFO]	86	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:21:10,232	[INFO]	87	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:21:10,233	[INFO]	88	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:21:10,234	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:21:11,163	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:21:12,115	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:21:13,089	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:21:13,091	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:21:14,042	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:21:17,193	[INFO]	95	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:21:17,194	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:21:17,195	[INFO]	96	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:21:17,196	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:21:17,196	[INFO]	97	SUCCESS	 13.0	
2020-12-17 10:21:20,399	[INFO]	98	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:21:23,596	[INFO]	99	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:21:23,597	[INFO]	100	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:21:24,507	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:21:25,450	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:21:26,386	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:21:27,359	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:21:30,599	[INFO]	105	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:21:30,599	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:21:30,600	[INFO]	106	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:21:30,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:21:30,601	[INFO]	107	SUCCESS	 13.0	
2020-12-17 10:21:31,556	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:21:32,492	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:21:33,434	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:21:36,577	[INFO]	111	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:21:36,577	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:21:36,579	[INFO]	112	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:21:36,579	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:21:37,526	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:21:38,443	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:21:38,446	[INFO]	115	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:21:38,447	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:21:38,449	[INFO]	116	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:21:38,450	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:21:38,453	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:21:41,659	[INFO]	118	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:21:42,599	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:21:42,600	[INFO]	120	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:21:42,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:21:42,601	[INFO]	121	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:21:42,602	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:21:42,602	[INFO]	122	SUCCESS	 13.0	
2020-12-17 10:21:42,604	[INFO]	123	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:21:42,604	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:21:42,605	[INFO]	124	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:21:42,605	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:21:42,606	[INFO]	125	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:21:42,607	[INFO]	126	SUCCESS	 13.0	
2020-12-17 10:21:43,534	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:21:44,497	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:21:44,499	[INFO]	129	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:21:45,462	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:21:46,437	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:21:47,401	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:21:50,578	[INFO]	133	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:21:51,557	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:21:54,837	[INFO]	135	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:21:54,838	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:21:57,944	[INFO]	137	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:22:01,143	[INFO]	138	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:22:01,144	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:04,278	[INFO]	139	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:22:04,279	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:07,427	[INFO]	140	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:22:10,642	[INFO]	141	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:22:11,554	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:22:14,758	[INFO]	143	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:22:14,760	[INFO]	144	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:22:14,760	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:17,957	[INFO]	145	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:22:21,200	[INFO]	146	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:22:24,356	[INFO]	147	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:22:24,358	[INFO]	148	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:22:24,360	[INFO]	149	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:22:24,360	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:25,306	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:22:25,309	[INFO]	151	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:22:25,310	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:28,494	[INFO]	152	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:22:29,467	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:22:30,421	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:22:33,636	[INFO]	155	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:22:33,637	[INFO]	156	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:22:33,638	[INFO]	157	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:22:33,638	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:34,503	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:22:34,504	[INFO]	159	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:22:34,505	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:35,477	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:22:35,478	[INFO]	161	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:22:36,485	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:22:39,599	[INFO]	163	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:22:39,600	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:39,601	[INFO]	164	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:22:39,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:39,602	[INFO]	165	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:22:42,756	[INFO]	166	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:22:43,661	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:22:44,638	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:22:47,870	[INFO]	169	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:22:51,051	[INFO]	170	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:22:51,053	[INFO]	171	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:22:51,053	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:51,054	[INFO]	172	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:22:51,054	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:51,055	[INFO]	173	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:22:54,228	[INFO]	174	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:22:54,228	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:54,229	[INFO]	175	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:22:54,230	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:54,230	[INFO]	176	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:22:55,153	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:22:55,155	[INFO]	178	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:22:55,156	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:55,157	[INFO]	179	SUCCESS	 13.0	
2020-12-17 10:22:56,092	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:22:57,073	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:22:57,077	[INFO]	182	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:22:57,078	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:22:57,080	[INFO]	183	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:22:57,080	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:00,225	[INFO]	184	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:23:03,378	[INFO]	185	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:23:03,379	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,32 ****
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 24,38 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:03,380	[INFO]	186	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:23:03,380	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:06,572	[INFO]	187	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:23:09,659	[INFO]	188	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:23:10,615	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:23:10,617	[INFO]	190	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:23:10,618	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:10,619	[INFO]	191	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:23:10,620	[INFO]	192	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:23:10,621	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:10,622	[INFO]	193	SUCCESS	 13.0	
2020-12-17 10:23:13,838	[INFO]	194	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:23:17,028	[INFO]	195	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:23:17,932	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:23:18,898	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:23:22,045	[INFO]	198	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:23:22,046	[INFO]	199	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:23:22,047	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:22,047	[INFO]	200	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:23:22,048	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:22,048	[INFO]	201	SUCCESS	 13.0	
2020-12-17 10:23:25,190	[INFO]	202	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:23:28,346	[INFO]	203	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:23:31,498	[INFO]	204	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:23:32,434	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:23:33,395	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:23:34,369	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:23:37,516	[INFO]	208	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:23:37,517	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,34 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:37,518	[INFO]	209	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:23:37,518	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:40,987	[INFO]	210	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:23:40,988	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:44,138	[INFO]	211	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:23:44,139	[INFO]	212	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:23:44,139	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:45,133	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:23:45,134	[INFO]	214	SUCCESS	 13.0	
2020-12-17 10:23:45,135	[INFO]	215	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:23:45,136	[INFO]	216	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:23:45,137	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:46,115	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:23:47,074	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:23:47,075	[INFO]	219	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:23:47,075	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:48,057	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:23:49,042	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:23:49,045	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:23:52,182	[INFO]	223	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:23:53,127	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:23:53,129	[INFO]	225	SUCCESS	 13.0	
2020-12-17 10:23:53,131	[INFO]	226	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:23:53,132	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:53,134	[INFO]	227	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:23:53,134	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:53,136	[INFO]	228	SUCCESS	 13.0	
2020-12-17 10:23:54,143	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:23:54,146	[INFO]	230	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:23:54,146	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:23:57,306	[INFO]	231	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:23:57,307	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:00,548	[INFO]	232	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:24:01,482	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:24:01,484	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:24:01,485	[INFO]	235	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:24:01,486	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:02,432	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:24:05,640	[INFO]	237	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:24:06,527	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:24:06,528	[INFO]	239	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:24:06,529	[INFO]	240	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:24:06,529	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:06,530	[INFO]	241	SUCCESS	 13.0	
2020-12-17 10:24:07,458	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:24:10,662	[INFO]	243	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:24:13,766	[INFO]	244	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:24:14,733	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:24:14,736	[INFO]	246	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:24:15,720	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:24:16,675	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:24:17,574	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:24:18,564	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:24:18,568	[INFO]	251	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:24:18,568	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:18,569	[INFO]	252	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:24:18,570	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:18,571	[INFO]	253	SUCCESS	 13.0	
2020-12-17 10:24:19,521	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:24:19,523	[INFO]	255	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:24:19,523	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:22,655	[INFO]	256	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:24:22,657	[INFO]	257	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:24:22,657	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:22,658	[INFO]	258	SUCCESS	 13.0	
2020-12-17 10:24:25,743	[INFO]	259	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:24:25,744	[INFO]	260	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:24:25,744	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:26,692	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:24:27,657	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:24:28,606	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:24:28,607	[INFO]	264	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:24:28,608	[INFO]	265	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:24:28,608	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:28,609	[INFO]	266	SUCCESS	 13.0	
2020-12-17 10:24:31,736	[INFO]	267	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:24:34,888	[INFO]	268	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:24:34,889	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:24:34,889	[INFO]	269	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:24:34,890	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:24:38,107	[INFO]	270	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:24:38,108	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 10:24:41,177	[INFO]	271	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:24:44,362	[INFO]	272	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:24:44,363	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 10:24:44,363	[INFO]	==== END ====
2020-12-17 10:24:44,363	[INFO]	Reason: target fitness reached
2020-12-17 10:24:44,364	[INFO]	
2020-12-17 10:24:44,364	[INFO]	========== EPOCH 3 ==========
2020-12-17 10:24:44,365	[INFO]	==== WARMUP ====
2020-12-17 10:24:47,618	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:24:47,619	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:24:50,774	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:24:50,774	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:24:53,953	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:24:53,953	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:24:57,109	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 10:24:57,110	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:24:57,110	[INFO]	==== START ====
2020-12-17 10:25:00,216	[INFO]	1	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:25:01,190	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:25:02,159	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:25:05,296	[INFO]	4	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:25:06,198	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:25:07,167	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:25:08,082	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:25:11,340	[INFO]	8	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:25:14,542	[INFO]	9	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:25:15,476	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:25:16,450	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:25:17,409	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:25:18,381	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:25:21,500	[INFO]	14	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 10:25:21,501	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:25:21,501	[INFO]	15	SUCCESS	+13.0	
2020-12-17 10:25:21,502	[DEBUG]	
2020-12-17 10:25:22,446	[INFO]	16	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:25:23,422	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:25:26,586	[INFO]	18	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:25:26,587	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-17 10:25:26,587	[INFO]	==== END ====
2020-12-17 10:25:26,587	[INFO]	Reason: target fitness reached
2020-12-17 10:25:26,588	[INFO]	
2020-12-17 10:25:26,588	[INFO]	========== EPOCH 4 ==========
2020-12-17 10:25:26,588	[INFO]	==== WARMUP ====
2020-12-17 10:25:29,767	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:25:29,767	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:25:32,872	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:25:32,873	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:25:36,437	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:25:36,437	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:25:40,244	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 10:25:40,244	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:25:40,244	[INFO]	==== START ====
2020-12-17 10:25:41,467	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:25:42,667	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:25:43,932	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:25:44,978	[INFO]	4	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:25:45,939	[INFO]	5	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:25:47,139	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:25:47,140	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:25:50,496	[INFO]	8	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:25:50,497	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:25:53,587	[INFO]	9	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:25:54,467	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:25:55,482	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:25:55,484	[INFO]	12	SUCCESS	+13.0	
2020-12-17 10:25:55,484	[DEBUG]	
2020-12-17 10:25:58,664	[INFO]	13	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:26:01,837	[INFO]	14	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:26:02,766	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:26:05,908	[INFO]	16	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:26:05,909	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:05,910	[INFO]	17	SUCCESS	+13.0	
2020-12-17 10:26:05,910	[DEBUG]	
2020-12-17 10:26:06,799	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:26:09,933	[INFO]	19	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:26:13,064	[INFO]	20	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:26:13,065	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:16,309	[INFO]	21	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:26:19,412	[INFO]	22	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:26:19,413	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:20,372	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:26:21,293	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:26:21,295	[INFO]	25	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:26:21,295	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:22,289	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:26:23,290	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:26:23,291	[INFO]	28	SUCCESS	 13.0	
2020-12-17 10:26:24,265	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:26:24,268	[INFO]	30	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:26:27,264	[INFO]	31	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:26:30,408	[INFO]	32	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:26:30,409	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:33,560	[INFO]	33	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:26:36,702	[INFO]	34	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:26:36,705	[INFO]	35	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:26:36,706	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:36,708	[INFO]	36	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:26:36,709	[INFO]	37	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:26:36,710	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:36,711	[INFO]	38	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:26:36,712	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:36,713	[INFO]	39	SUCCESS	 13.0	
2020-12-17 10:26:39,849	[INFO]	40	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:26:40,794	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:26:41,773	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:26:44,905	[INFO]	43	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:26:48,148	[INFO]	44	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:26:48,982	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:26:49,802	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:26:49,804	[INFO]	47	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:26:49,805	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:50,799	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:26:50,800	[INFO]	49	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:26:50,801	[INFO]	50	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:26:50,801	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:50,802	[INFO]	51	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:26:53,958	[INFO]	52	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:26:53,958	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:26:54,932	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:26:55,883	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:26:56,852	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:27:00,008	[INFO]	56	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:27:00,010	[INFO]	57	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:27:03,085	[INFO]	58	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:27:06,117	[INFO]	59	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:27:07,057	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:27:08,026	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:27:08,029	[INFO]	62	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:27:11,141	[INFO]	63	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:27:11,141	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:27:12,086	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:27:13,058	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:27:13,059	[INFO]	66	SUCCESS	 13.0	
2020-12-17 10:27:14,032	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:27:17,228	[INFO]	68	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:27:20,398	[INFO]	69	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:27:23,560	[INFO]	70	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:27:24,485	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:27:27,739	[INFO]	72	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:27:28,695	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:27:29,658	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:27:29,660	[INFO]	75	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:27:29,660	[INFO]	76	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:27:30,662	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:27:33,852	[INFO]	78	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:27:34,881	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:27:38,161	[INFO]	80	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:27:38,162	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:27:38,163	[INFO]	81	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:27:41,350	[INFO]	82	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:27:42,318	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:27:43,262	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:27:46,430	[INFO]	85	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:27:49,669	[INFO]	86	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:27:49,670	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 10:27:52,832	[INFO]	87	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:27:53,796	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:27:57,044	[INFO]	89	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:27:58,027	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:28:01,142	[INFO]	91	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:28:01,143	[INFO]	92	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:28:01,144	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:28:04,271	[INFO]	93	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:28:04,272	[INFO]	94	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:28:04,272	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:28:04,273	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:28:04,274	[INFO]	96	SUCCESS	 13.0	
2020-12-17 10:28:05,219	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:28:06,181	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:28:07,153	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:28:10,295	[INFO]	100	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:28:11,233	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:28:14,389	[INFO]	102	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:28:17,498	[INFO]	103	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:28:18,452	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:28:19,426	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:28:19,427	[INFO]	106	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:28:22,645	[INFO]	107	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:28:22,647	[INFO]	108	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:28:22,647	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:28:23,595	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:28:23,596	[INFO]	110	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:28:24,556	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:28:24,557	[INFO]	112	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:28:24,558	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:28:24,558	[INFO]	113	SUCCESS	 13.0	
2020-12-17 10:28:24,559	[INFO]	114	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:28:25,460	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:28:26,405	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:28:26,406	[INFO]	117	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:28:27,365	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:28:30,490	[INFO]	119	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:28:33,684	[INFO]	120	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:28:34,606	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:28:35,479	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:28:36,410	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:28:37,364	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:28:37,366	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:28:40,590	[INFO]	126	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:28:40,591	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:28:40,592	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:28:44,093	[INFO]	129	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:28:47,592	[INFO]	130	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:28:50,743	[INFO]	131	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:28:51,711	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:28:52,684	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:28:55,895	[INFO]	134	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:28:56,842	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:28:57,836	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:28:58,779	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:28:58,781	[INFO]	138	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:28:59,751	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:28:59,753	[INFO]	140	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:29:02,926	[INFO]	141	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:29:02,927	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:06,083	[INFO]	142	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:29:06,084	[INFO]	143	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:29:06,085	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:07,057	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:29:10,231	[INFO]	145	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:29:11,145	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:29:11,146	[INFO]	147	SUCCESS	 13.0	
2020-12-17 10:29:12,110	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:29:13,025	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:29:13,977	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:29:14,913	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:29:18,117	[INFO]	152	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:29:18,119	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:29:18,119	[INFO]	154	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:29:18,120	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:18,121	[INFO]	155	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:29:18,121	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:19,035	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:29:19,994	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:29:19,996	[INFO]	158	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:29:19,997	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:19,999	[INFO]	159	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:29:19,999	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:20,000	[INFO]	160	SUCCESS	 13.0	
2020-12-17 10:29:23,245	[INFO]	161	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:29:26,355	[INFO]	162	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:29:29,595	[INFO]	163	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:29:32,803	[INFO]	164	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:29:32,803	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:36,004	[INFO]	165	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:29:39,092	[INFO]	166	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:29:39,094	[INFO]	167	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:29:39,094	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:39,095	[INFO]	168	SUCCESS	 13.0	
2020-12-17 10:29:42,226	[INFO]	169	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:29:43,202	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:29:43,205	[INFO]	171	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:29:44,157	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:29:44,158	[INFO]	173	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:29:47,452	[INFO]	174	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:29:47,453	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:48,383	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:29:48,384	[INFO]	176	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:29:49,355	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:29:49,358	[INFO]	178	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:29:49,358	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:49,360	[INFO]	179	SUCCESS	 13.0	
2020-12-17 10:29:49,362	[INFO]	180	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:29:49,364	[INFO]	181	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:29:50,326	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:29:51,269	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:29:52,229	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:29:55,338	[INFO]	185	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:29:56,275	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:29:57,246	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:29:58,234	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:29:58,237	[INFO]	189	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:29:58,237	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:29:58,239	[INFO]	190	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:29:58,240	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:01,398	[INFO]	191	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:30:01,400	[INFO]	192	SUCCESS	 13.0	
2020-12-17 10:30:04,536	[INFO]	193	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:30:05,479	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:30:08,756	[INFO]	195	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:30:11,886	[INFO]	196	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:30:15,013	[INFO]	197	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:30:15,014	[INFO]	198	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:30:15,989	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:30:16,961	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:30:20,127	[INFO]	201	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:30:23,226	[INFO]	202	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:30:24,186	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:30:25,130	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:30:26,105	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:30:29,334	[INFO]	206	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:30:30,304	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:30:33,508	[INFO]	208	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:30:33,509	[INFO]	209	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:30:33,509	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:33,510	[INFO]	210	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:30:34,386	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:30:37,653	[INFO]	212	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:30:40,675	[INFO]	213	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:30:40,678	[INFO]	214	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:30:40,679	[INFO]	215	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:30:40,680	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:40,681	[INFO]	216	SUCCESS	 13.0	
2020-12-17 10:30:40,682	[INFO]	217	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:30:40,685	[INFO]	218	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:30:40,685	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:40,686	[INFO]	219	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:30:40,688	[INFO]	220	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:30:40,689	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:40,690	[INFO]	221	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:30:40,692	[INFO]	222	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:30:40,693	[INFO]	223	SUCCESS	 13.0	
2020-12-17 10:30:41,633	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:30:42,625	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:30:43,664	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:30:47,036	[INFO]	227	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:30:47,037	[INFO]	228	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:30:47,975	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:30:48,944	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:30:48,945	[INFO]	231	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:30:48,946	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:48,946	[INFO]	232	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:30:52,116	[INFO]	233	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:30:52,118	[INFO]	234	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:30:52,118	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:53,005	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:30:53,008	[INFO]	236	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:30:53,008	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:30:53,998	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:30:57,211	[INFO]	238	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:30:57,213	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-17 10:30:58,155	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:30:58,157	[INFO]	240	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:30:58,158	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-17 10:30:58,159	[INFO]	241	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:30:58,159	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:01,295	[INFO]	242	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:31:01,296	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:02,267	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:31:05,383	[INFO]	244	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:31:05,384	[INFO]	245	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:31:05,384	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:08,592	[INFO]	246	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:31:08,593	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-17 10:31:08,594	[INFO]	247	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:31:08,594	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:08,595	[INFO]	248	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:31:08,595	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:09,527	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:31:12,769	[INFO]	250	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:31:13,695	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:31:13,697	[INFO]	252	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:31:13,697	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:13,698	[INFO]	253	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:31:13,699	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:14,685	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:31:17,809	[INFO]	255	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:31:17,810	[INFO]	256	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:31:17,811	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:18,768	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:31:18,769	[INFO]	258	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:31:18,770	[INFO]	259	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:31:18,770	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:18,771	[INFO]	260	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:31:18,771	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:18,772	[INFO]	261	SUCCESS	 13.0	
2020-12-17 10:31:19,716	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:31:20,610	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:31:21,482	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:31:22,469	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:31:23,418	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:31:26,601	[INFO]	267	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:31:29,719	[INFO]	268	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:31:30,687	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:31:31,675	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:31:34,940	[INFO]	271	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:31:34,941	[INFO]	272	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:31:34,941	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:34,942	[INFO]	273	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:31:34,943	[INFO]	274	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:31:34,943	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:31:34,943	[INFO]	275	SUCCESS	 13.0	
2020-12-17 10:31:35,872	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:31:39,134	[INFO]	277	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:31:39,135	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:31:39,136	[INFO]	279	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:31:40,061	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:31:41,049	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:31:44,186	[INFO]	282	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:31:45,103	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:31:46,046	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:31:46,047	[INFO]	285	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:31:46,995	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:31:47,948	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:31:51,151	[INFO]	288	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:31:54,282	[INFO]	289	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:31:54,283	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:31:57,381	[INFO]	290	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:32:00,566	[INFO]	291	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:32:03,653	[INFO]	292	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:32:04,649	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:32:04,651	[INFO]	294	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:32:04,652	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:32:04,653	[INFO]	295	SUCCESS	 13.0	
2020-12-17 10:32:04,654	[INFO]	296	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:32:05,593	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:32:08,849	[INFO]	298	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:32:11,971	[INFO]	299	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:32:12,946	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:32:16,107	[INFO]	301	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:32:19,233	[INFO]	302	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:32:20,229	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:32:23,360	[INFO]	304	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:32:26,553	[INFO]	305	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:32:27,503	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:32:28,455	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:32:31,658	[INFO]	308	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:32:31,660	[INFO]	309	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:32:32,588	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:32:32,589	[INFO]	311	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:32:35,823	[INFO]	312	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:32:36,744	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:32:39,847	[INFO]	314	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:32:39,848	[INFO]	315	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:32:42,965	[INFO]	316	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:32:46,135	[INFO]	317	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:32:47,088	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:32:48,018	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:32:48,987	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:32:48,988	[INFO]	321	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:32:52,143	[INFO]	322	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:32:53,088	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:32:53,089	[INFO]	324	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:32:54,048	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:32:57,216	[INFO]	326	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:32:58,159	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:32:59,087	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:32:59,088	[INFO]	329	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:32:59,089	[INFO]	330	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:33:00,076	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:33:03,265	[INFO]	332	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:33:06,432	[INFO]	333	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:33:07,393	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:33:08,395	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:33:09,367	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:33:09,370	[INFO]	337	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:33:09,371	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:12,480	[INFO]	338	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:33:12,481	[INFO]	339	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:33:12,481	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:15,728	[INFO]	340	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:33:16,641	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:33:16,642	[INFO]	342	SUCCESS	 13.0	
2020-12-17 10:33:17,591	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:33:20,779	[INFO]	344	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:33:21,704	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:33:22,617	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:33:25,577	[INFO]	347	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:33:25,579	[INFO]	348	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:33:25,579	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:25,580	[INFO]	349	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:33:25,580	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:26,517	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:33:29,848	[INFO]	351	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:33:29,850	[INFO]	352	SUCCESS	 13.0	
2020-12-17 10:33:31,568	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:33:35,544	[INFO]	354	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:33:35,546	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:33:35,547	[INFO]	356	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:33:35,547	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:35,548	[INFO]	357	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:33:35,548	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:36,736	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:33:37,928	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:33:37,929	[INFO]	360	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:33:37,930	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:41,518	[INFO]	361	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:33:42,626	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:33:42,627	[INFO]	363	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:33:43,565	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:33:43,567	[INFO]	365	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:33:43,567	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:33:46,837	[INFO]	367	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:33:47,763	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:33:47,764	[INFO]	369	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:33:47,765	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:33:47,765	[INFO]	370	SUCCESS	 13.0	
2020-12-17 10:33:48,700	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:33:49,646	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:33:52,806	[INFO]	373	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:33:53,772	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:33:56,959	[INFO]	375	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:33:57,889	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:33:58,783	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:33:58,785	[INFO]	378	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:33:58,786	[INFO]	379	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:33:59,765	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:33:59,766	[INFO]	381	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:33:59,768	[INFO]	382	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:34:00,674	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:34:01,589	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:34:01,590	[INFO]	385	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:34:04,795	[INFO]	386	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:34:04,796	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:34:07,977	[INFO]	388	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:34:07,978	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:34:11,109	[INFO]	389	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:34:14,320	[INFO]	390	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:34:14,321	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:34:17,444	[INFO]	391	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:34:20,616	[INFO]	392	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:34:20,617	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:34:23,779	[INFO]	393	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:34:24,714	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:34:24,717	[INFO]	395	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:34:24,718	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:34:24,719	[INFO]	396	SUCCESS	 13.0	
2020-12-17 10:34:24,721	[INFO]	397	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:34:27,857	[INFO]	398	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:34:28,825	[INFO]	399	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:34:32,039	[INFO]	400	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:34:35,228	[INFO]	401	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:34:38,312	[INFO]	402	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:34:41,486	[INFO]	403	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:34:44,696	[INFO]	404	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:34:47,850	[INFO]	405	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:34:48,817	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:34:51,989	[INFO]	407	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:34:51,990	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:34:55,180	[INFO]	409	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:34:55,181	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:34:58,352	[INFO]	410	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:35:01,484	[INFO]	411	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:35:02,454	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:35:05,604	[INFO]	413	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:35:05,605	[INFO]	414	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:35:05,605	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:05,606	[INFO]	415	SUCCESS	 13.0	
2020-12-17 10:35:06,554	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:35:07,534	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:35:07,537	[INFO]	418	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:35:07,538	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:08,494	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:35:08,495	[INFO]	420	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:35:09,437	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:35:09,439	[INFO]	422	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:35:09,439	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:09,439	[INFO]	423	SUCCESS	 13.0	
2020-12-17 10:35:09,441	[INFO]	424	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:35:10,402	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:35:11,378	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:35:11,380	[INFO]	427	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:35:11,381	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:12,334	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:35:12,335	[INFO]	429	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:35:12,335	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:12,336	[INFO]	430	SUCCESS	 13.0	
2020-12-17 10:35:12,337	[INFO]	431	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:35:12,337	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:13,241	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:35:13,244	[INFO]	433	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:35:13,244	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:16,400	[INFO]	434	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:35:16,401	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 10:35:19,522	[INFO]	435	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:35:20,483	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:35:20,485	[INFO]	437	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:35:20,485	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:20,486	[INFO]	438	SUCCESS	 13.0	
2020-12-17 10:35:23,628	[INFO]	439	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:35:24,571	[INFO]	440	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:35:25,508	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:35:26,465	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:35:29,718	[INFO]	443	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:35:29,719	[INFO]	444	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:35:32,799	[INFO]	445	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:35:33,772	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:35:37,084	[INFO]	447	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:35:37,086	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:38,075	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:35:38,077	[INFO]	449	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:35:38,078	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:38,079	[INFO]	450	SUCCESS	 13.0	
2020-12-17 10:35:39,041	[INFO]	451	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:35:42,222	[INFO]	452	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:35:42,224	[INFO]	453	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:35:43,202	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:35:44,184	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:35:47,295	[INFO]	456	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:35:47,296	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:35:48,289	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:35:51,440	[INFO]	458	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:35:52,405	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:35:53,382	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:35:56,541	[INFO]	461	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:35:57,487	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:35:57,488	[INFO]	463	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:35:57,488	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:35:57,489	[INFO]	464	SUCCESS	 13.0	
2020-12-17 10:36:00,576	[INFO]	465	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:36:00,578	[INFO]	466	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:36:00,578	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:36:00,579	[INFO]	467	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:36:00,579	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:36:00,580	[INFO]	468	SUCCESS	 13.0	
2020-12-17 10:36:03,746	[INFO]	469	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:36:04,706	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:36:05,683	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:36:06,670	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:36:07,601	[INFO]	473	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:36:10,801	[INFO]	474	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:36:10,803	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:36:11,763	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:36:11,764	[INFO]	476	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:36:11,764	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:36:11,765	[INFO]	477	SUCCESS	 13.0	
2020-12-17 10:36:11,766	[INFO]	478	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:36:11,766	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:36:12,699	[INFO]	479	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:36:13,644	[INFO]	480	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:36:13,645	[INFO]	481	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:36:14,662	[INFO]	482	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:36:15,622	[INFO]	483	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:36:15,624	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:36:15,625	[INFO]	485	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:36:15,625	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:36:15,626	[INFO]	486	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:36:15,627	[INFO]	487	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:36:15,627	[INFO]	488	SUCCESS	 13.0	
2020-12-17 10:36:18,811	[INFO]	489	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:36:21,782	[INFO]	490	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:36:25,042	[INFO]	491	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:36:28,118	[INFO]	492	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:36:28,119	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 10:36:28,120	[INFO]	493	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:36:28,120	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:36:28,120	[INFO]	494	SUCCESS	 13.0	
2020-12-17 10:36:29,065	[INFO]	495	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:36:29,068	[INFO]	496	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:36:30,043	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:36:31,072	[INFO]	498	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:36:32,042	[INFO]	499	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:36:35,223	[INFO]	500	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:36:35,224	[INFO]	==== END ====
2020-12-17 10:36:35,224	[INFO]	Reason: step budget
2020-12-17 10:36:35,225	[INFO]	
2020-12-17 10:36:35,225	[INFO]	========== EPOCH 5 ==========
2020-12-17 10:36:35,225	[INFO]	==== WARMUP ====
2020-12-17 10:36:38,431	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:36:38,431	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:36:41,614	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:36:41,614	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:36:44,734	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:36:44,734	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:36:47,941	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 10:36:47,941	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:36:47,941	[INFO]	==== START ====
2020-12-17 10:36:48,811	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:36:48,812	[INFO]	2	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:36:48,813	[DEBUG]	
2020-12-17 10:36:49,746	[INFO]	3	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:36:49,748	[INFO]	4	SUCCESS	+13.0	
2020-12-17 10:36:49,749	[DEBUG]	
2020-12-17 10:36:50,697	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:36:53,908	[INFO]	6	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:36:57,117	[INFO]	7	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:36:57,119	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-17 10:36:57,121	[INFO]	8	SUCCESS	+13.0	
2020-12-17 10:36:57,121	[DEBUG]	
2020-12-17 10:36:58,073	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:37:01,158	[INFO]	10	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:37:04,298	[INFO]	11	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:37:04,299	[INFO]	12	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:37:05,238	[INFO]	13	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:37:08,350	[INFO]	14	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:37:11,460	[INFO]	15	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:37:14,637	[INFO]	16	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:37:15,635	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:37:16,611	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:37:17,567	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:37:18,572	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:37:22,047	[INFO]	21	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:37:25,207	[INFO]	22	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:37:26,126	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:37:26,983	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:37:27,971	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:37:28,951	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:37:28,953	[INFO]	27	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:37:29,910	[INFO]	28	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:37:33,115	[INFO]	29	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:37:33,116	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:34,070	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:37:34,071	[INFO]	31	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:37:34,072	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:37,355	[INFO]	32	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:37:37,356	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 10:37:37,357	[INFO]	33	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:37:37,357	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 10:37:37,358	[INFO]	34	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:37:37,358	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:38,273	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:37:39,282	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:37:39,285	[INFO]	37	SUCCESS	+13.0	
2020-12-17 10:37:39,286	[DEBUG]	
2020-12-17 10:37:42,485	[INFO]	38	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:37:42,486	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:42,486	[INFO]	39	SUCCESS	 13.0	
2020-12-17 10:37:43,452	[INFO]	40	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:37:44,400	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:37:45,384	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:37:46,411	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:37:47,383	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:37:47,384	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:37:48,300	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:37:48,302	[INFO]	47	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:37:48,303	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:37:51,534	[INFO]	49	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:37:51,535	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:52,491	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:37:52,492	[INFO]	51	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:37:52,493	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:52,493	[INFO]	52	SUCCESS	 13.0	
2020-12-17 10:37:52,494	[INFO]	53	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:37:52,495	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:37:53,460	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:37:53,462	[INFO]	56	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:37:53,463	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:53,463	[INFO]	57	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:37:53,464	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:37:54,430	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:37:55,407	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:37:55,409	[INFO]	60	SUCCESS	 13.0	
2020-12-17 10:37:58,653	[INFO]	61	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:38:01,869	[INFO]	62	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:38:02,834	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:38:03,798	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:38:03,800	[INFO]	65	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:38:06,933	[INFO]	66	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:38:07,885	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:38:11,425	[INFO]	68	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:38:11,426	[INFO]	69	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:38:12,391	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:38:13,279	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:38:16,377	[INFO]	72	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:38:19,514	[INFO]	73	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:38:20,482	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:38:21,422	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:38:22,364	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:38:23,334	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:38:24,309	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:38:25,264	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:38:26,204	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:38:29,407	[INFO]	81	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:38:29,408	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:38:32,604	[INFO]	82	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:38:32,605	[INFO]	83	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:38:32,606	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:38:35,713	[INFO]	84	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:38:35,714	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:38:35,715	[INFO]	86	SUCCESS	 13.0	
2020-12-17 10:38:36,675	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:38:37,629	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:38:41,158	[INFO]	89	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:38:44,332	[INFO]	90	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:38:44,333	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:38:44,335	[INFO]	92	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:38:45,240	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:38:46,165	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:38:47,136	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:38:50,348	[INFO]	96	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:38:53,439	[INFO]	97	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:38:54,422	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:38:57,650	[INFO]	99	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:38:57,651	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:38:58,601	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:38:59,580	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:39:02,830	[INFO]	102	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:39:02,831	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:39:05,903	[INFO]	103	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:39:05,904	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:39:09,064	[INFO]	104	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:39:12,291	[INFO]	105	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:39:12,292	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:39:15,404	[INFO]	106	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:39:15,405	[INFO]	107	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:39:15,406	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:39:18,373	[INFO]	108	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:39:19,308	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:39:22,527	[INFO]	110	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:39:23,478	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:39:26,902	[INFO]	112	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:39:30,057	[INFO]	113	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:39:33,293	[INFO]	114	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:39:33,294	[INFO]	115	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:39:33,295	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:39:33,295	[INFO]	116	SUCCESS	 13.0	
2020-12-17 10:39:36,455	[INFO]	117	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:39:36,457	[INFO]	118	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:39:39,752	[INFO]	119	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:39:40,644	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:39:41,639	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:39:44,856	[INFO]	122	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 10:39:47,983	[INFO]	123	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:39:47,984	[INFO]	124	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:39:51,123	[INFO]	125	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:39:51,124	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:39:52,084	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:39:55,182	[INFO]	127	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:39:55,183	[INFO]	128	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:39:56,111	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:39:57,107	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:39:57,109	[INFO]	131	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:39:57,110	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:00,270	[INFO]	132	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:40:00,271	[INFO]	133	SUCCESS	 13.0	
2020-12-17 10:40:00,272	[INFO]	134	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:40:03,437	[INFO]	135	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:40:06,612	[INFO]	136	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:40:06,613	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:06,614	[INFO]	137	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:40:07,547	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:40:10,726	[INFO]	139	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:40:10,727	[INFO]	140	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:40:10,727	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:10,727	[INFO]	141	SUCCESS	 13.0	
2020-12-17 10:40:11,639	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:40:12,592	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:40:13,585	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:40:14,534	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:40:15,523	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:40:16,506	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:40:17,479	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:40:20,677	[INFO]	149	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:40:21,577	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:40:24,694	[INFO]	151	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:40:25,675	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:40:28,927	[INFO]	153	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:40:28,929	[INFO]	154	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:40:28,930	[INFO]	155	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:40:28,931	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:32,016	[INFO]	156	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:40:35,245	[INFO]	157	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:40:35,246	[INFO]	158	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:40:35,247	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:35,247	[INFO]	159	SUCCESS	 13.0	
2020-12-17 10:40:36,428	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:40:36,430	[INFO]	161	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:40:37,594	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:40:38,575	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:40:39,819	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:40:39,822	[INFO]	165	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:40:39,822	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:40,819	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:40:40,821	[INFO]	167	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:40:41,667	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:40:41,668	[INFO]	169	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:40:42,647	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:40:45,981	[INFO]	171	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:40:45,982	[INFO]	172	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:40:45,983	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:46,997	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:40:47,984	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:40:47,986	[INFO]	175	SUCCESS	 13.0	
2020-12-17 10:40:48,950	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:40:48,952	[INFO]	177	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:40:48,952	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:48,953	[INFO]	178	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:40:48,953	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:48,953	[INFO]	179	SUCCESS	 13.0	
2020-12-17 10:40:52,129	[INFO]	180	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:40:52,131	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:55,399	[INFO]	181	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:40:55,400	[INFO]	182	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:40:55,400	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:55,401	[INFO]	183	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:40:55,401	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:55,402	[INFO]	184	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:40:55,402	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:58,434	[INFO]	185	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:40:59,388	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:40:59,389	[INFO]	187	SUCCESS	 13.0	
2020-12-17 10:40:59,390	[INFO]	188	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:40:59,390	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:59,391	[INFO]	189	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:40:59,391	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:40:59,392	[INFO]	190	SUCCESS	 13.0	
2020-12-17 10:41:02,552	[INFO]	191	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:41:03,497	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:41:04,484	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:41:05,440	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:41:05,442	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:41:05,444	[INFO]	196	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:41:05,444	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:05,445	[INFO]	197	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:41:05,447	[INFO]	198	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:41:05,447	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:08,628	[INFO]	199	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:41:08,629	[INFO]	200	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:41:09,582	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:41:10,554	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:41:10,555	[INFO]	203	SUCCESS	 13.0	
2020-12-17 10:41:13,700	[INFO]	204	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:41:14,626	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:41:17,723	[INFO]	206	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:41:20,860	[INFO]	207	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:41:20,861	[INFO]	208	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:41:20,862	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:20,862	[INFO]	209	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:41:23,955	[INFO]	210	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:41:23,957	[INFO]	211	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:41:23,957	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:23,958	[INFO]	212	SUCCESS	 13.0	
2020-12-17 10:41:23,959	[INFO]	213	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:41:23,959	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:23,960	[INFO]	214	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:41:23,960	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:24,887	[INFO]	215	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:41:25,894	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:41:25,895	[INFO]	217	SUCCESS	 13.0	
2020-12-17 10:41:29,120	[INFO]	218	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:41:30,030	[INFO]	219	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:41:33,215	[INFO]	220	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:41:34,159	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:41:34,163	[INFO]	222	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:41:34,165	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:41:35,121	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:41:38,235	[INFO]	225	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:41:38,236	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:41:41,218	[INFO]	227	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:41:42,196	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:41:43,156	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:41:44,155	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:41:44,157	[INFO]	231	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:41:44,158	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:47,282	[INFO]	232	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:41:47,283	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:47,284	[INFO]	233	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:41:47,284	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:50,419	[INFO]	234	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:41:50,420	[INFO]	235	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:41:50,420	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:41:51,393	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:41:51,396	[INFO]	237	SUCCESS	 13.0	
2020-12-17 10:41:52,364	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:41:53,378	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:41:54,361	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:41:57,542	[INFO]	241	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:41:57,543	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:42:00,721	[INFO]	243	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:42:01,679	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:42:04,846	[INFO]	245	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:42:07,941	[INFO]	246	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:42:07,942	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:08,909	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:42:08,912	[INFO]	248	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:42:08,912	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:08,913	[INFO]	249	SUCCESS	 13.0	
2020-12-17 10:42:09,885	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:42:09,888	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:42:10,864	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:42:10,866	[INFO]	253	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:42:10,867	[INFO]	254	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:42:10,868	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:42:11,777	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:42:14,890	[INFO]	257	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:42:18,017	[INFO]	258	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:42:21,187	[INFO]	259	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:42:22,156	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:42:25,279	[INFO]	261	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:42:28,399	[INFO]	262	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:42:28,400	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:28,401	[INFO]	263	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:42:28,401	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:28,402	[INFO]	264	SUCCESS	 13.0	
2020-12-17 10:42:31,589	[INFO]	265	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:42:32,538	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:42:32,541	[INFO]	267	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:42:32,541	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:32,542	[INFO]	268	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:42:35,676	[INFO]	269	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:42:35,677	[INFO]	270	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:42:35,677	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:35,678	[INFO]	271	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:42:35,679	[INFO]	272	SUCCESS	 13.0	
2020-12-17 10:42:35,680	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:42:36,649	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:42:39,845	[INFO]	275	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:42:39,846	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:39,847	[INFO]	276	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:42:39,847	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:39,848	[INFO]	277	SUCCESS	 13.0	
2020-12-17 10:42:42,791	[INFO]	278	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:42:43,757	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:42:44,728	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:42:47,890	[INFO]	281	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:42:48,807	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:42:48,808	[INFO]	283	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:42:48,809	[INFO]	284	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:42:48,810	[INFO]	285	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:42:51,907	[INFO]	286	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:42:51,909	[INFO]	287	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:42:51,909	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:51,910	[INFO]	288	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:42:51,910	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:42:51,910	[INFO]	289	SUCCESS	 13.0	
2020-12-17 10:42:52,863	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:42:56,062	[INFO]	291	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:42:56,997	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:42:57,987	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:43:01,291	[INFO]	294	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:43:04,362	[INFO]	295	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:43:04,363	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:43:07,515	[INFO]	297	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:43:08,478	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:43:08,480	[INFO]	299	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:43:11,734	[INFO]	300	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:43:11,735	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:12,659	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:43:13,607	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:43:13,608	[INFO]	303	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:43:13,608	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:13,609	[INFO]	304	SUCCESS	 13.0	
2020-12-17 10:43:13,610	[INFO]	305	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:43:13,610	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:17,135	[INFO]	306	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:43:17,137	[INFO]	307	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:43:17,137	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:17,138	[INFO]	308	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:43:17,139	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:17,140	[INFO]	309	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:43:17,140	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:20,259	[INFO]	310	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:43:20,260	[INFO]	311	SUCCESS	 13.0	
2020-12-17 10:43:23,440	[INFO]	312	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:43:24,397	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:43:24,399	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:43:25,386	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:43:25,388	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:43:28,552	[INFO]	317	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:43:31,665	[INFO]	318	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:43:31,667	[INFO]	319	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:43:32,644	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:43:35,673	[INFO]	321	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:43:36,619	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:43:37,629	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:43:38,590	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:43:41,787	[INFO]	325	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:43:41,787	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:44,917	[INFO]	326	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:43:45,884	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:43:46,835	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:43:47,764	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:43:51,038	[INFO]	330	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:43:51,985	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:43:51,987	[INFO]	332	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:43:51,988	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:51,989	[INFO]	333	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:43:51,989	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:51,990	[INFO]	334	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:43:51,991	[INFO]	335	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:43:51,992	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:43:51,992	[INFO]	336	SUCCESS	 13.0	
2020-12-17 10:43:55,262	[INFO]	337	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:43:56,198	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:43:57,152	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:43:57,154	[INFO]	340	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:44:00,373	[INFO]	341	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:44:01,292	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:44:02,262	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:44:02,264	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:44:02,265	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:44:05,417	[INFO]	346	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:44:08,526	[INFO]	347	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:44:08,527	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:44:08,528	[INFO]	348	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:44:08,529	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:44:09,434	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:44:12,596	[INFO]	350	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:44:12,597	[INFO]	351	SUCCESS	 13.0	
2020-12-17 10:44:13,521	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:44:13,523	[INFO]	353	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:44:16,646	[INFO]	354	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:44:17,588	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:44:17,590	[INFO]	356	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:44:18,551	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:44:21,713	[INFO]	358	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:44:22,669	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:44:23,576	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:44:24,541	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:44:27,796	[INFO]	362	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:44:31,015	[INFO]	363	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:44:31,931	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:44:31,933	[INFO]	365	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:44:32,911	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:44:33,886	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:44:33,888	[INFO]	368	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:44:33,889	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:44:34,852	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:44:38,115	[INFO]	370	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:44:38,116	[INFO]	371	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:44:38,117	[INFO]	372	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:44:38,117	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:44:41,250	[INFO]	373	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:44:44,373	[INFO]	374	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:44:44,374	[INFO]	375	SUCCESS	 13.0	
2020-12-17 10:44:47,592	[INFO]	376	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:44:48,592	[INFO]	377	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:44:49,549	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:44:52,690	[INFO]	379	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:44:52,692	[INFO]	380	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:44:52,692	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:44:52,693	[INFO]	381	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:44:53,684	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:44:56,813	[INFO]	383	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:44:57,803	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:45:00,900	[INFO]	385	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:45:00,901	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:04,109	[INFO]	386	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:45:05,038	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:45:05,040	[INFO]	388	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:45:05,042	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:08,240	[INFO]	389	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:45:08,242	[INFO]	390	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:45:09,178	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:45:12,353	[INFO]	392	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:45:12,354	[INFO]	393	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:45:12,354	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:13,317	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:45:14,297	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:45:14,300	[INFO]	396	SUCCESS	 13.0	
2020-12-17 10:45:17,418	[INFO]	397	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:45:17,419	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:18,342	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:45:21,557	[INFO]	399	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:45:21,558	[INFO]	400	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:45:21,558	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:21,558	[INFO]	401	SUCCESS	 13.0	
2020-12-17 10:45:24,732	[INFO]	402	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:45:25,680	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:45:28,877	[INFO]	404	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:45:32,040	[INFO]	405	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:45:32,041	[INFO]	406	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:45:32,042	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:32,042	[INFO]	407	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:45:32,043	[INFO]	408	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:45:32,988	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:45:32,990	[INFO]	410	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:45:32,990	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:33,952	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:45:34,982	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:45:36,320	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:45:36,321	[INFO]	414	SUCCESS	 13.0	
2020-12-17 10:45:37,627	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:45:41,211	[INFO]	416	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:45:42,385	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:45:46,211	[INFO]	418	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:45:46,215	[INFO]	419	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:45:46,215	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:49,869	[INFO]	420	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:45:53,076	[INFO]	421	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:45:53,077	[INFO]	422	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:45:53,077	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:45:56,199	[INFO]	423	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:45:57,157	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:46:00,291	[INFO]	425	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:46:00,293	[INFO]	426	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:46:01,249	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:46:01,250	[INFO]	428	SUCCESS	 13.0	
2020-12-17 10:46:02,214	[INFO]	429	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:46:02,215	[INFO]	430	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:46:03,179	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:46:04,151	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:46:07,292	[INFO]	433	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:46:07,294	[INFO]	434	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:46:07,294	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:07,295	[INFO]	435	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:46:07,296	[INFO]	436	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:46:07,296	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:07,297	[INFO]	437	SUCCESS	 13.0	
2020-12-17 10:46:08,237	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:46:09,211	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:46:09,215	[INFO]	440	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:46:10,171	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:46:13,378	[INFO]	442	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:46:16,453	[INFO]	443	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:46:16,453	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:16,454	[INFO]	444	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:46:16,455	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:16,455	[INFO]	445	SUCCESS	 13.0	
2020-12-17 10:46:17,396	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:46:18,392	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:46:18,395	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:46:21,601	[INFO]	449	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:46:24,716	[INFO]	450	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:46:25,656	[INFO]	451	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:46:26,627	[INFO]	452	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:46:29,734	[INFO]	453	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:46:30,707	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:46:30,708	[INFO]	455	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:46:31,686	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:46:34,928	[INFO]	457	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:46:34,929	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:35,853	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:46:35,856	[INFO]	459	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:46:35,857	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:35,858	[INFO]	460	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:46:35,859	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:35,860	[INFO]	461	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:46:35,861	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:38,987	[INFO]	462	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:46:38,988	[INFO]	463	SUCCESS	 13.0	
2020-12-17 10:46:42,206	[INFO]	464	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:46:43,161	[INFO]	465	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:46:46,345	[INFO]	466	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:46:49,536	[INFO]	467	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:46:52,700	[INFO]	468	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:46:52,701	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:46:55,944	[INFO]	469	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:46:55,945	[INFO]	470	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:46:55,945	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:55,946	[INFO]	471	SUCCESS	 13.0	
2020-12-17 10:46:56,839	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:46:57,854	[INFO]	473	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:46:58,809	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:46:58,812	[INFO]	475	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:46:58,813	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:58,814	[INFO]	476	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:46:58,815	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:46:58,816	[INFO]	477	SUCCESS	 13.0	
2020-12-17 10:47:02,264	[INFO]	478	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:47:05,364	[INFO]	479	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:47:06,310	[INFO]	480	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:47:07,277	[INFO]	481	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:47:10,475	[INFO]	482	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:47:13,460	[INFO]	483	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:47:14,397	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:47:15,365	[INFO]	485	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:47:16,346	[INFO]	486	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:47:16,347	[INFO]	487	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:47:17,312	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:47:18,308	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:47:19,280	[INFO]	490	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:47:20,258	[INFO]	491	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:47:23,406	[INFO]	492	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:47:23,408	[INFO]	493	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:47:23,408	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:47:23,409	[INFO]	494	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:47:23,409	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:47:23,410	[INFO]	495	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:47:23,411	[INFO]	496	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:47:23,412	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:47:23,413	[INFO]	498	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:47:23,413	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:47:24,410	[INFO]	499	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:47:24,412	[INFO]	500	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:47:24,413	[INFO]	==== END ====
2020-12-17 10:47:24,413	[INFO]	Reason: step budget
2020-12-17 10:47:24,414	[INFO]	
2020-12-17 10:47:24,414	[INFO]	========== EPOCH 6 ==========
2020-12-17 10:47:24,415	[INFO]	==== WARMUP ====
2020-12-17 10:47:27,563	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:47:27,563	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:47:30,699	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:47:30,699	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:47:34,277	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:47:34,277	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:47:37,378	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 10:47:37,378	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:47:37,379	[INFO]	==== START ====
2020-12-17 10:47:38,350	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:47:41,600	[INFO]	2	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:47:42,535	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:47:45,746	[INFO]	4	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:47:45,747	[INFO]	5	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:47:45,748	[DEBUG]	
2020-12-17 10:47:45,748	[INFO]	6	SUCCESS	+13.0	
2020-12-17 10:47:45,749	[DEBUG]	
2020-12-17 10:47:46,688	[INFO]	7	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:47:49,940	[INFO]	8	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:47:53,084	[INFO]	9	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:47:53,933	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:47:54,923	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:47:58,083	[INFO]	12	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:47:58,084	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:47:58,084	[INFO]	13	SUCCESS	+13.0	
2020-12-17 10:47:58,085	[DEBUG]	
2020-12-17 10:48:01,291	[INFO]	14	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:48:04,455	[INFO]	15	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:48:04,456	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:04,457	[INFO]	16	SUCCESS	 13.0	
2020-12-17 10:48:07,644	[INFO]	17	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:48:07,646	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:10,720	[INFO]	18	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:48:10,721	[INFO]	19	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:48:10,721	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:10,722	[INFO]	20	SUCCESS	 13.0	
2020-12-17 10:48:11,631	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:48:12,574	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:48:15,809	[INFO]	23	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:15,810	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:15,811	[INFO]	24	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:19,053	[INFO]	25	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:48:22,186	[INFO]	26	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:48:23,131	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:48:26,327	[INFO]	28	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:48:26,328	[INFO]	29	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:48:29,517	[INFO]	30	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:48:30,468	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:48:31,451	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:48:32,421	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:48:33,413	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:48:33,415	[INFO]	35	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:48:36,602	[INFO]	36	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:48:37,532	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:48:37,534	[INFO]	38	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:48:37,536	[INFO]	39	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:48:37,538	[INFO]	40	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:37,538	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:38,503	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:48:38,505	[INFO]	42	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:48:38,505	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:41,629	[INFO]	43	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:48:41,630	[INFO]	44	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:41,630	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:41,631	[INFO]	45	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:41,632	[INFO]	46	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:41,632	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:42,593	[INFO]	47	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:48:42,594	[INFO]	48	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:45,907	[INFO]	49	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:48:45,908	[INFO]	50	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:48:45,910	[INFO]	51	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:48:46,863	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:48:50,034	[INFO]	53	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:48:50,036	[INFO]	54	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:48:50,037	[INFO]	55	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:48:50,037	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:50,038	[INFO]	56	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:48:50,038	[INFO]	57	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:48:50,039	[INFO]	58	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:50,040	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:48:50,919	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:48:50,921	[INFO]	60	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:48:51,883	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:48:51,884	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:48:52,843	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:48:52,844	[INFO]	64	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:48:53,817	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:48:54,810	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:48:55,770	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:48:55,774	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:48:58,900	[INFO]	69	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:48:59,856	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:49:03,007	[INFO]	71	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:49:03,949	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:49:07,127	[INFO]	73	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:49:10,271	[INFO]	74	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:49:13,674	[INFO]	75	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:49:14,707	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:49:15,688	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:49:16,727	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:49:19,898	[INFO]	79	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:49:19,899	[INFO]	80	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:49:19,900	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:49:20,864	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:49:24,064	[INFO]	83	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:49:24,988	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:49:25,969	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:49:26,864	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:49:27,809	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:49:28,809	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:49:28,811	[INFO]	89	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:49:29,770	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:49:30,784	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:49:31,779	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:49:32,753	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:49:33,740	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:49:33,743	[INFO]	95	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:49:34,629	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:49:34,632	[INFO]	97	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:49:35,582	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:49:36,558	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:49:37,515	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:49:38,485	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:49:41,977	[INFO]	102	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:49:42,912	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:49:46,013	[INFO]	104	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:49:46,015	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:49:46,016	[INFO]	106	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:49:46,974	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:49:46,978	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:49:47,975	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:49:50,984	[INFO]	110	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:49:51,936	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:49:52,897	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:49:53,858	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:49:56,984	[INFO]	114	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:50:00,098	[INFO]	115	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:50:01,057	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:50:04,168	[INFO]	117	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:50:05,132	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:50:06,086	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:50:07,024	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:50:07,026	[INFO]	121	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:50:07,029	[INFO]	122	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:50:07,981	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:50:11,126	[INFO]	124	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:50:14,251	[INFO]	125	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:50:15,234	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:50:18,442	[INFO]	127	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:50:18,443	[INFO]	128	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:50:19,328	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:50:20,275	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:50:21,225	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:50:24,383	[INFO]	132	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:50:24,384	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:50:27,482	[INFO]	133	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:50:30,631	[INFO]	134	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:50:31,611	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:50:32,584	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:50:33,452	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:50:34,398	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:50:35,484	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:50:35,485	[INFO]	140	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:50:35,486	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:50:35,487	[INFO]	141	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:50:38,659	[INFO]	142	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:50:38,659	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:50:38,660	[INFO]	143	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:50:38,661	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:50:38,661	[INFO]	144	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:50:39,643	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:50:42,848	[INFO]	146	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:50:46,152	[INFO]	147	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:50:49,341	[INFO]	148	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:50:50,198	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:50:51,169	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:50:54,476	[INFO]	151	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:50:54,479	[INFO]	152	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:50:57,566	[INFO]	153	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:50:57,570	[INFO]	154	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:50:58,608	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:50:58,612	[INFO]	156	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:50:58,613	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:50:58,617	[INFO]	157	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:50:59,826	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:50:59,828	[INFO]	159	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:50:59,829	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:51:00,775	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:51:01,758	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:51:01,761	[INFO]	163	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:01,762	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:01,763	[INFO]	164	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:51:02,722	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:51:05,964	[INFO]	166	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:51:05,965	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:09,021	[INFO]	167	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:51:09,022	[INFO]	168	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:09,022	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:12,210	[INFO]	169	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:51:12,211	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:15,321	[INFO]	170	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:51:18,604	[INFO]	171	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:51:21,774	[INFO]	172	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:51:21,775	[INFO]	173	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:21,775	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:22,728	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:51:22,731	[INFO]	175	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:25,855	[INFO]	176	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:51:28,957	[INFO]	177	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:51:29,931	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:51:30,906	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:51:30,908	[INFO]	180	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:51:30,910	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:51:31,897	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:51:31,901	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:51:35,081	[INFO]	184	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:51:38,197	[INFO]	185	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:51:38,200	[INFO]	186	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:51:41,378	[INFO]	187	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:51:41,379	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:41,380	[INFO]	188	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:51:41,380	[INFO]	189	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:51:44,589	[INFO]	190	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:51:44,590	[INFO]	191	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:44,591	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:45,542	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:51:48,714	[INFO]	193	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:51:49,678	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:51:49,681	[INFO]	195	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:50,659	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:51:51,624	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:51:51,626	[INFO]	198	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:51:51,626	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:51,627	[INFO]	199	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:51:51,627	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:51,628	[INFO]	200	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:51:52,598	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:51:55,756	[INFO]	202	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:51:58,946	[INFO]	203	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:51:58,947	[INFO]	204	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:59,899	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:51:59,902	[INFO]	206	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:51:59,906	[INFO]	207	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:51:59,907	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:59,909	[INFO]	208	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:51:59,910	[INFO]	209	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:51:59,911	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:51:59,913	[INFO]	210	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:51:59,914	[INFO]	211	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:52:00,875	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:52:04,046	[INFO]	213	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:52:04,049	[INFO]	214	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:52:07,294	[INFO]	215	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:52:10,355	[INFO]	216	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:52:10,355	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:52:13,524	[INFO]	217	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:52:14,477	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:52:14,479	[INFO]	219	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:52:14,479	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:52:15,411	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:52:18,563	[INFO]	221	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:52:18,565	[INFO]	222	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:52:19,504	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:52:20,484	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:52:23,659	[INFO]	225	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:52:24,607	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:52:25,568	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:52:28,715	[INFO]	228	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:52:29,676	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:52:30,643	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:52:31,628	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:52:31,630	[INFO]	232	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:52:34,805	[INFO]	233	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:52:35,738	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:52:36,723	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:52:37,623	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:52:38,558	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:52:39,496	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:52:40,450	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:52:41,406	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:52:42,379	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:52:43,324	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:52:46,370	[INFO]	243	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:52:47,278	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:52:47,280	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:52:48,181	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:52:48,183	[INFO]	247	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:52:48,184	[INFO]	248	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:52:48,184	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:52:48,185	[INFO]	249	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:52:48,185	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:52:48,186	[INFO]	250	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:52:49,106	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:52:52,338	[INFO]	252	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:52:55,440	[INFO]	253	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:52:56,403	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:52:56,405	[INFO]	255	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:52:57,352	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:52:58,348	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:52:59,318	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:52:59,320	[INFO]	259	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:53:00,280	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 10:53:01,248	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:53:01,251	[INFO]	262	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:53:04,415	[INFO]	263	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:53:07,655	[INFO]	264	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:53:08,610	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:53:09,532	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:53:12,645	[INFO]	267	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:53:12,646	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:53:13,477	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:53:16,584	[INFO]	270	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:53:16,586	[INFO]	271	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:53:16,586	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:16,587	[INFO]	272	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:53:16,587	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:17,413	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:53:17,414	[INFO]	274	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:53:17,415	[INFO]	275	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 10:53:20,635	[INFO]	276	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:53:21,583	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:53:24,771	[INFO]	278	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:53:25,680	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:53:26,617	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:53:27,644	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:53:27,647	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:53:28,619	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:53:29,573	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:53:32,835	[INFO]	285	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:53:33,771	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:53:33,774	[INFO]	287	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:53:33,776	[INFO]	288	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:53:33,777	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:36,912	[INFO]	289	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:53:36,914	[INFO]	290	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:53:37,809	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:53:40,946	[INFO]	292	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:53:40,946	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:44,093	[INFO]	293	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:53:44,094	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:47,227	[INFO]	294	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:53:48,164	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:53:49,144	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:53:52,249	[INFO]	297	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:53:52,250	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:55,415	[INFO]	298	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:53:55,416	[INFO]	299	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:53:55,417	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:55,417	[INFO]	300	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:53:55,418	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:55,418	[INFO]	301	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:53:55,419	[INFO]	302	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:53:55,419	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:53:56,365	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:53:59,569	[INFO]	304	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:54:02,737	[INFO]	305	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:54:02,738	[INFO]	306	SUCCESS	 13.0	
2020-12-17 10:54:03,599	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:54:03,601	[INFO]	308	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:54:06,830	[INFO]	309	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:54:07,673	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:54:10,816	[INFO]	311	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:54:10,817	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:54:13,901	[INFO]	312	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:54:13,902	[INFO]	313	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:54:13,902	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:54:13,903	[INFO]	314	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:54:13,904	[INFO]	315	SUCCESS	 13.0	
2020-12-17 10:54:17,043	[INFO]	316	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:54:18,006	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:54:18,996	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:54:18,998	[INFO]	319	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:54:18,998	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:54:18,999	[INFO]	320	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:54:18,999	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:54:22,150	[INFO]	321	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:54:25,302	[INFO]	322	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:54:26,254	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:54:26,256	[INFO]	324	SUCCESS	 13.0	
2020-12-17 10:54:27,221	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:54:28,179	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:54:29,159	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:54:30,129	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:54:31,122	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:54:32,096	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:54:33,053	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:54:36,209	[INFO]	332	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:54:37,150	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:54:38,101	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:54:41,321	[INFO]	335	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:54:41,322	[INFO]	336	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:54:42,241	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:54:45,420	[INFO]	338	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:54:46,359	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:54:47,261	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:54:50,392	[INFO]	341	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:54:51,350	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:54:54,604	[INFO]	343	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:54:55,519	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:54:56,488	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:54:59,637	[INFO]	346	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:55:00,614	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:55:03,751	[INFO]	348	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:55:04,695	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:55:04,697	[INFO]	350	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:55:07,739	[INFO]	351	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:55:08,690	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:55:09,691	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:55:10,677	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:55:11,632	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:55:12,582	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 10:55:13,534	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:55:14,483	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:55:17,666	[INFO]	359	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:55:20,797	[INFO]	360	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:55:23,912	[INFO]	361	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:55:24,801	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:55:25,776	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:55:26,749	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:55:26,751	[INFO]	365	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:55:27,735	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:55:28,719	[INFO]	367	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:55:29,689	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:55:29,691	[INFO]	369	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:55:29,691	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:29,692	[INFO]	370	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:55:30,671	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:55:30,674	[INFO]	372	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:55:30,676	[INFO]	373	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:55:30,677	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:33,944	[INFO]	374	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:55:33,944	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:33,945	[INFO]	375	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:55:33,945	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:33,946	[INFO]	376	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:55:37,728	[INFO]	377	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:55:38,704	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:55:39,980	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:55:39,981	[INFO]	380	SUCCESS	 13.0	
2020-12-17 10:55:41,047	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:55:44,276	[INFO]	382	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:55:45,605	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:55:46,458	[INFO]	384	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:55:46,461	[INFO]	385	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:55:46,462	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:49,530	[INFO]	386	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:55:49,531	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:52,644	[INFO]	387	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 10:55:56,188	[INFO]	388	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:55:56,190	[INFO]	389	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:55:56,190	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:56,192	[INFO]	390	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:55:56,192	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:55:57,682	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:55:57,683	[INFO]	392	SUCCESS	 13.0	
2020-12-17 10:55:58,657	[INFO]	393	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 10:56:02,115	[INFO]	394	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:56:03,125	[INFO]	395	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:56:06,411	[INFO]	396	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:56:07,354	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:56:08,369	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:56:11,594	[INFO]	399	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:56:14,658	[INFO]	400	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:56:15,621	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 10:56:15,622	[INFO]	402	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:56:16,586	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:56:19,674	[INFO]	404	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 10:56:22,819	[INFO]	405	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 10:56:23,793	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:56:23,796	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:56:24,767	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:56:27,911	[INFO]	409	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:56:27,913	[INFO]	410	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:56:27,914	[INFO]	411	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:56:31,041	[INFO]	412	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:56:31,042	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:56:34,165	[INFO]	413	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:56:35,137	[INFO]	414	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:56:36,114	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:56:36,115	[INFO]	416	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:56:36,116	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:56:36,116	[INFO]	417	SUCCESS	 13.0	
2020-12-17 10:56:37,088	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:56:38,058	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:56:39,034	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:56:40,022	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:56:43,238	[INFO]	422	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:56:44,084	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:56:45,044	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:56:46,035	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:56:49,226	[INFO]	426	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 10:56:50,188	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:56:50,191	[INFO]	428	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 10:56:51,139	[INFO]	429	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:56:54,343	[INFO]	430	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:56:57,421	[INFO]	431	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 10:57:00,651	[INFO]	432	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 10:57:00,653	[INFO]	433	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 10:57:01,629	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:57:02,600	[INFO]	435	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:57:03,561	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:57:03,564	[INFO]	437	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:57:04,527	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:57:07,724	[INFO]	439	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:57:08,649	[INFO]	440	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:57:11,866	[INFO]	441	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:57:12,754	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:57:16,222	[INFO]	443	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 10:57:16,223	[INFO]	444	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:57:19,492	[INFO]	445	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:57:20,295	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:57:21,253	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:57:22,244	[INFO]	448	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:57:25,377	[INFO]	449	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:57:25,379	[INFO]	450	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:57:25,380	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:57:26,311	[INFO]	451	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:57:26,312	[INFO]	452	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:57:26,312	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:57:26,313	[INFO]	453	SUCCESS	 13.0	
2020-12-17 10:57:27,180	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:57:30,309	[INFO]	455	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:57:30,310	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:57:33,576	[INFO]	456	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:57:36,674	[INFO]	457	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:57:37,611	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:57:40,778	[INFO]	459	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:57:40,780	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:57:40,782	[INFO]	460	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:57:40,782	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:57:41,732	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:57:42,725	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:57:43,578	[INFO]	463	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 10:57:46,721	[INFO]	464	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:57:49,947	[INFO]	465	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:57:49,948	[INFO]	466	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:57:49,948	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:57:50,862	[INFO]	467	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:57:54,141	[INFO]	468	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 10:57:57,243	[INFO]	469	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:58:00,472	[INFO]	470	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 10:58:00,473	[INFO]	471	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:58:00,473	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:58:00,474	[INFO]	472	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:58:01,414	[INFO]	473	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:58:02,354	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:58:02,355	[INFO]	475	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 10:58:02,356	[INFO]	476	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:58:02,357	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:58:02,357	[INFO]	477	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:58:02,358	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:58:02,359	[INFO]	479	SUCCESS	 13.0	
2020-12-17 10:58:03,341	[INFO]	480	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:58:03,345	[INFO]	481	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:58:03,347	[INFO]	482	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 10:58:03,349	[INFO]	483	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:58:03,352	[INFO]	484	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:58:06,571	[INFO]	485	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:58:06,572	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 10:58:09,812	[INFO]	486	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:58:13,011	[INFO]	487	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:58:13,936	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:58:14,790	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:58:17,919	[INFO]	490	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:58:21,111	[INFO]	491	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:58:21,112	[INFO]	492	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:58:21,112	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:58:22,055	[INFO]	493	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:58:22,056	[INFO]	494	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:58:22,056	[INFO]	495	SUCCESS	 13.0	
2020-12-17 10:58:23,058	[INFO]	496	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 10:58:23,060	[INFO]	497	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 10:58:23,060	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:58:23,061	[INFO]	498	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:58:23,061	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:58:23,062	[INFO]	499	SUCCESS	 13.0	
2020-12-17 10:58:26,282	[INFO]	500	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:58:26,282	[INFO]	==== END ====
2020-12-17 10:58:26,282	[INFO]	Reason: step budget
2020-12-17 10:58:26,283	[INFO]	
2020-12-17 10:58:26,283	[INFO]	========== EPOCH 7 ==========
2020-12-17 10:58:26,283	[INFO]	==== WARMUP ====
2020-12-17 10:58:30,132	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:58:30,132	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:58:34,467	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:58:34,467	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:58:37,658	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 10:58:37,658	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:58:40,769	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 10:58:40,769	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 10:58:40,769	[INFO]	==== START ====
2020-12-17 10:58:44,081	[INFO]	1	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 10:58:47,261	[INFO]	2	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 10:58:48,233	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:58:49,209	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 10:58:50,173	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:58:53,217	[INFO]	6	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 10:58:54,169	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 10:58:55,134	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 10:58:56,069	[INFO]	9	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:58:57,028	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 10:58:58,118	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 10:58:59,096	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 10:59:02,362	[INFO]	13	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 10:59:02,362	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:02,363	[INFO]	14	SUCCESS	+13.0	
2020-12-17 10:59:02,363	[DEBUG]	
2020-12-17 10:59:05,460	[INFO]	15	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 10:59:08,661	[INFO]	16	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 10:59:08,662	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:08,664	[INFO]	17	SUCCESS	+13.0	
2020-12-17 10:59:08,664	[DEBUG]	
2020-12-17 10:59:09,597	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:59:10,591	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:59:10,594	[INFO]	20	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:59:11,551	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:59:12,503	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:59:13,478	[INFO]	23	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:59:16,632	[INFO]	24	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:59:19,794	[INFO]	25	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:59:19,795	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:19,795	[INFO]	26	SUCCESS	+13.0	
2020-12-17 10:59:19,796	[DEBUG]	
2020-12-17 10:59:20,621	[INFO]	27	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:59:20,622	[INFO]	28	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 10:59:23,764	[INFO]	29	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:59:23,765	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:23,766	[INFO]	30	SUCCESS	 13.0	
2020-12-17 10:59:23,767	[INFO]	31	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:59:23,767	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:24,713	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 10:59:24,715	[INFO]	33	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 10:59:25,677	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 10:59:25,680	[INFO]	35	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:59:25,680	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:26,653	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 10:59:26,655	[INFO]	37	SUCCESS	 13.0	
2020-12-17 10:59:29,883	[INFO]	38	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 10:59:33,097	[INFO]	39	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 10:59:36,225	[INFO]	40	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:59:36,225	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:39,425	[INFO]	41	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 10:59:40,886	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 10:59:40,887	[INFO]	43	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 10:59:40,888	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:44,186	[INFO]	44	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:59:44,188	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:44,189	[INFO]	45	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:59:44,190	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:45,142	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 10:59:46,106	[INFO]	47	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:59:49,292	[INFO]	48	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 10:59:49,293	[INFO]	49	SUCCESS	 13.0	
2020-12-17 10:59:49,294	[INFO]	50	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:59:49,294	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:49,295	[INFO]	51	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 10:59:49,295	[INFO]	52	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 10:59:49,296	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:50,244	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 10:59:53,624	[INFO]	54	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:59:53,625	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:53,626	[INFO]	55	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 10:59:53,626	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 10:59:54,545	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 10:59:54,546	[INFO]	57	SUCCESS	 13.0	
2020-12-17 10:59:57,759	[INFO]	58	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 10:59:58,703	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 10:59:59,636	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 10:59:59,639	[INFO]	61	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:00:00,594	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:00:01,526	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:00:02,488	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:00:02,489	[INFO]	65	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:00:02,490	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:00:02,490	[INFO]	66	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:00:02,491	[INFO]	67	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:00:02,491	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:00:02,492	[INFO]	68	SUCCESS	 13.0	
2020-12-17 11:00:02,493	[INFO]	69	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:00:05,733	[INFO]	70	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:00:06,664	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:00:09,835	[INFO]	72	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:00:13,005	[INFO]	73	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:00:16,191	[INFO]	74	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:00:17,057	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:00:18,005	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:00:18,967	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:00:22,142	[INFO]	78	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:00:23,090	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:00:24,042	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:00:24,044	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:00:27,268	[INFO]	82	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:00:28,188	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:00:31,424	[INFO]	84	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:00:31,426	[INFO]	85	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:00:34,591	[INFO]	86	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:00:34,592	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:00:35,642	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:00:36,613	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:00:37,603	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:00:38,573	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:00:38,577	[INFO]	92	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:00:41,681	[INFO]	93	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:00:45,005	[INFO]	94	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:00:45,006	[INFO]	95	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:00:48,393	[INFO]	96	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:00:49,403	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:00:50,389	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:00:51,393	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:00:52,385	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:00:53,373	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:00:54,322	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:00:57,800	[INFO]	103	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:00:58,783	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:00:59,800	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:01:00,795	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:01:01,737	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:01:01,739	[INFO]	108	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:01:01,741	[INFO]	109	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:01:04,953	[INFO]	110	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:01:08,095	[INFO]	111	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:01:09,048	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:01:09,049	[INFO]	113	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:01:09,050	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:10,003	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:01:10,978	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:01:10,980	[INFO]	116	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:01:10,980	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:10,981	[INFO]	117	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:01:10,981	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:11,975	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:01:11,976	[INFO]	119	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:01:11,976	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:11,977	[INFO]	120	SUCCESS	 13.0	
2020-12-17 11:01:12,853	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:01:15,833	[INFO]	122	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:01:16,785	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:01:17,770	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:01:20,850	[INFO]	125	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:01:21,704	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:01:21,705	[INFO]	127	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:01:21,706	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:01:22,677	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:01:25,944	[INFO]	130	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:01:25,945	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:26,833	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:01:30,025	[INFO]	132	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:01:33,161	[INFO]	133	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:01:33,162	[INFO]	134	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:01:33,162	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:33,163	[INFO]	135	SUCCESS	 13.0	
2020-12-17 11:01:36,292	[INFO]	136	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:01:37,124	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:01:40,357	[INFO]	138	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:01:43,483	[INFO]	139	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:01:46,678	[INFO]	140	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:01:47,665	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:01:47,668	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:01:48,662	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:01:51,886	[INFO]	144	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:01:52,840	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:01:55,975	[INFO]	146	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:01:55,976	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:55,978	[INFO]	147	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:01:55,979	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:55,981	[INFO]	148	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:01:55,982	[INFO]	149	SUCCESS	 13.0	
2020-12-17 11:01:55,984	[INFO]	150	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:01:55,986	[INFO]	151	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:01:55,986	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:55,987	[INFO]	152	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:01:55,989	[INFO]	153	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:01:55,989	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:01:55,990	[INFO]	154	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:01:59,114	[INFO]	155	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:02:02,238	[INFO]	156	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:02:05,385	[INFO]	157	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:02:06,302	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:02:06,304	[INFO]	159	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:02:06,304	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:02:09,497	[INFO]	160	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:02:09,498	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:02:10,451	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:02:11,408	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:02:14,711	[INFO]	163	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:02:17,860	[INFO]	164	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:02:18,752	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:02:19,728	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:02:19,729	[INFO]	167	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:02:19,730	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:02:19,730	[INFO]	168	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:02:19,731	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:02:20,718	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:02:20,721	[INFO]	170	SUCCESS	 13.0	
2020-12-17 11:02:23,879	[INFO]	171	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:02:23,880	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 11:02:23,880	[INFO]	==== END ====
2020-12-17 11:02:23,880	[INFO]	Reason: target fitness reached
2020-12-17 11:02:23,881	[INFO]	
2020-12-17 11:02:23,881	[INFO]	========== EPOCH 8 ==========
2020-12-17 11:02:23,881	[INFO]	==== WARMUP ====
2020-12-17 11:02:27,290	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:02:27,291	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:02:30,411	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:02:30,411	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:02:33,600	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:02:33,601	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:02:36,779	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:02:36,779	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:02:36,779	[INFO]	==== START ====
2020-12-17 11:02:37,728	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:02:40,855	[INFO]	2	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:02:40,856	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:02:44,011	[INFO]	3	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:02:44,990	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:02:48,219	[INFO]	5	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:02:48,220	[INFO]	6	SUCCESS	+13.0	
2020-12-17 11:02:48,220	[DEBUG]	
2020-12-17 11:02:49,110	[INFO]	7	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:02:52,315	[INFO]	8	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:02:55,370	[INFO]	9	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:02:58,484	[INFO]	10	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:02:58,486	[INFO]	11	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:03:01,608	[INFO]	12	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:03:04,712	[INFO]	13	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:03:05,679	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:03:08,688	[INFO]	15	SUCCESS	 29.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:03:11,837	[INFO]	16	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:03:12,805	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:03:16,048	[INFO]	18	SUCCESS	 19.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:03:17,006	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:03:20,250	[INFO]	20	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:03:20,251	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:20,252	[INFO]	21	SUCCESS	 13.0	
2020-12-17 11:03:20,253	[INFO]	22	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:03:20,253	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:21,173	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:03:22,128	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:03:22,131	[INFO]	25	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:03:25,359	[INFO]	26	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:03:26,272	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:03:27,218	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:03:27,222	[INFO]	29	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:03:27,223	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:27,224	[INFO]	30	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:03:27,225	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:28,173	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:03:31,232	[INFO]	32	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:03:31,234	[INFO]	33	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:03:31,234	[INFO]	34	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:03:31,235	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:32,148	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:03:33,107	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:03:33,963	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:03:34,945	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:03:34,947	[INFO]	39	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:03:34,948	[INFO]	40	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:03:34,949	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:35,953	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:03:35,956	[INFO]	42	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:03:35,957	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:35,959	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:03:39,107	[INFO]	44	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:03:39,109	[INFO]	45	SUCCESS	 13.0	
2020-12-17 11:03:40,068	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:03:43,239	[INFO]	47	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:03:43,241	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:03:46,468	[INFO]	49	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:03:49,556	[INFO]	50	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:03:49,557	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:49,557	[INFO]	51	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:03:49,558	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:03:49,558	[INFO]	52	SUCCESS	 13.0	
2020-12-17 11:03:52,708	[INFO]	53	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:03:55,897	[INFO]	54	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:03:55,898	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 11:03:56,864	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:04:00,037	[INFO]	56	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:04:00,039	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 11:04:00,039	[INFO]	==== END ====
2020-12-17 11:04:00,040	[INFO]	Reason: target fitness reached
2020-12-17 11:04:00,041	[INFO]	
2020-12-17 11:04:00,041	[INFO]	========== EPOCH 9 ==========
2020-12-17 11:04:00,042	[INFO]	==== WARMUP ====
2020-12-17 11:04:03,100	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:04:03,100	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:04:06,279	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:04:06,280	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:04:09,343	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:04:09,344	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:04:13,120	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:04:13,120	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:04:13,121	[INFO]	==== START ====
2020-12-17 11:04:16,333	[INFO]	1	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:04:19,471	[INFO]	2	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:04:20,421	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:04:23,589	[INFO]	4	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:04:23,590	[INFO]	5	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:04:23,590	[DEBUG]	
2020-12-17 11:04:23,591	[INFO]	6	SUCCESS	+13.0	
2020-12-17 11:04:23,591	[DEBUG]	
2020-12-17 11:04:24,566	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:04:25,558	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:04:26,517	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:04:27,471	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:04:30,669	[INFO]	11	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:04:33,857	[INFO]	12	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:04:34,689	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:04:35,621	[INFO]	14	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:04:36,566	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:04:39,605	[INFO]	16	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:04:42,753	[INFO]	17	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:04:45,885	[INFO]	18	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:04:45,887	[INFO]	19	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:04:46,766	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:04:47,685	[INFO]	21	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:04:47,686	[INFO]	22	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:04:50,864	[INFO]	23	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:04:50,864	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:04:51,818	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:04:51,821	[INFO]	25	SUCCESS	+13.0	
2020-12-17 11:04:51,821	[DEBUG]	
2020-12-17 11:04:52,739	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:04:55,923	[INFO]	27	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:04:59,037	[INFO]	28	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:04:59,988	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:04:59,991	[INFO]	30	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:05:00,985	[INFO]	31	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:05:04,154	[INFO]	32	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:05:04,155	[INFO]	33	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:05:05,035	[INFO]	34	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:05:05,037	[INFO]	35	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:05:05,037	[DEBUG]	
2020-12-17 11:05:05,038	[INFO]	36	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:05:08,145	[INFO]	37	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:05:08,146	[INFO]	38	SUCCESS	+13.0	
2020-12-17 11:05:08,146	[DEBUG]	
2020-12-17 11:05:09,043	[INFO]	39	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:05:10,074	[INFO]	40	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:05:10,077	[INFO]	41	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:05:11,051	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:05:11,054	[INFO]	43	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:05:14,286	[INFO]	44	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:05:17,539	[INFO]	45	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:05:17,540	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-17 11:05:17,541	[INFO]	46	SUCCESS	+13.0	
2020-12-17 11:05:17,541	[DEBUG]	
2020-12-17 11:05:20,661	[INFO]	47	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:05:20,663	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:05:23,828	[INFO]	48	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:05:23,829	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:05:27,039	[INFO]	49	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:05:27,040	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:05:27,040	[INFO]	50	SUCCESS	+13.0	
2020-12-17 11:05:27,041	[DEBUG]	
2020-12-17 11:05:30,109	[INFO]	51	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:05:30,110	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:05:33,423	[INFO]	52	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:05:37,056	[INFO]	53	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:05:37,057	[INFO]	54	SUCCESS	+13.0	
2020-12-17 11:05:37,058	[DEBUG]	
2020-12-17 11:05:38,136	[INFO]	55	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:05:39,159	[INFO]	56	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:05:39,161	[INFO]	57	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:05:39,161	[DEBUG]	
2020-12-17 11:05:43,208	[INFO]	58	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:05:46,848	[INFO]	59	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:05:46,850	[INFO]	60	SUCCESS	+13.0	
2020-12-17 11:05:46,850	[DEBUG]	
2020-12-17 11:05:50,336	[INFO]	61	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:05:50,337	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:05:50,337	[INFO]	62	SUCCESS	+13.0	
2020-12-17 11:05:50,338	[DEBUG]	
2020-12-17 11:05:50,338	[INFO]	63	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:05:50,339	[DEBUG]	
2020-12-17 11:05:50,339	[INFO]	64	SUCCESS	+13.0	
2020-12-17 11:05:50,340	[DEBUG]	
2020-12-17 11:05:53,507	[INFO]	65	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:05:56,631	[INFO]	66	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:05:57,605	[INFO]	67	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:06:00,821	[INFO]	68	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:06:03,972	[INFO]	69	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:06:07,095	[INFO]	70	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:06:07,097	[INFO]	71	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:06:07,097	[DEBUG]	
2020-12-17 11:06:07,098	[INFO]	72	SUCCESS	+13.0	
2020-12-17 11:06:07,098	[DEBUG]	
2020-12-17 11:06:07,098	[INFO]	73	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:06:07,099	[INFO]	74	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:06:08,054	[INFO]	75	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:06:11,153	[INFO]	76	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:06:14,325	[INFO]	77	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:06:15,235	[INFO]	78	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:06:15,237	[INFO]	79	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:06:15,238	[INFO]	80	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:06:16,199	[INFO]	81	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:06:19,480	[INFO]	82	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:06:22,696	[INFO]	83	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:06:23,640	[INFO]	84	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:06:23,641	[INFO]	85	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:06:23,642	[INFO]	86	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:06:26,866	[INFO]	87	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:06:26,867	[INFO]	88	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:06:26,868	[INFO]	89	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:06:27,788	[INFO]	90	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:06:30,943	[INFO]	91	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:06:31,920	[INFO]	92	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:06:32,877	[INFO]	93	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:06:32,878	[INFO]	94	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:06:36,025	[INFO]	95	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:06:36,025	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:06:36,026	[INFO]	96	SUCCESS	 13.0	
2020-12-17 11:06:37,038	[INFO]	97	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:06:40,267	[INFO]	98	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:06:43,350	[INFO]	99	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:06:44,293	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:06:44,296	[INFO]	101	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:06:44,297	[INFO]	102	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:06:47,442	[INFO]	103	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:06:48,388	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:06:51,542	[INFO]	105	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:06:54,645	[INFO]	106	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:06:55,587	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:06:55,589	[INFO]	108	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:06:58,797	[INFO]	109	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:06:59,710	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:07:02,833	[INFO]	111	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:07:02,833	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:07:03,798	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:07:04,749	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:07:07,917	[INFO]	114	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:07:07,918	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:07:07,920	[INFO]	115	SUCCESS	 13.0	
2020-12-17 11:07:08,860	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:07:12,058	[INFO]	117	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:07:12,948	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:07:13,888	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:07:14,854	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:07:18,061	[INFO]	121	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:07:18,063	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:07:21,595	[INFO]	122	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:07:21,596	[INFO]	123	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:07:21,596	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:07:21,597	[INFO]	124	SUCCESS	 13.0	
2020-12-17 11:07:24,811	[INFO]	125	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:07:27,922	[INFO]	126	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:07:28,906	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:07:29,854	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:07:33,409	[INFO]	129	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:07:36,516	[INFO]	130	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:07:37,482	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:07:38,439	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:07:38,441	[INFO]	133	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:07:41,592	[INFO]	134	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:07:44,784	[INFO]	135	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:07:44,785	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:07:45,732	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:07:45,734	[INFO]	137	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:07:45,734	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:07:48,905	[INFO]	138	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:07:52,052	[INFO]	139	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:07:52,053	[INFO]	140	SUCCESS	 13.0	
2020-12-17 11:07:53,055	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:07:53,057	[INFO]	142	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:07:54,021	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:07:54,950	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:07:58,113	[INFO]	145	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:07:59,073	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:07:59,074	[INFO]	147	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:07:59,075	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:07:59,076	[INFO]	148	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:08:00,026	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:08:00,027	[INFO]	150	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:08:00,027	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:08:00,028	[INFO]	151	SUCCESS	 13.0	
2020-12-17 11:08:01,014	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:08:01,018	[INFO]	153	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:08:01,989	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:08:02,969	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:08:02,972	[INFO]	156	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:08:02,972	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:08:03,938	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:08:03,939	[INFO]	158	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:08:03,940	[INFO]	159	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:08:04,814	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:08:04,815	[INFO]	161	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:08:04,816	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:08:04,816	[INFO]	162	SUCCESS	 13.0	
2020-12-17 11:08:05,831	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:08:09,013	[INFO]	164	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:08:09,014	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:08:09,993	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:08:13,134	[INFO]	166	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:08:16,302	[INFO]	167	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:08:19,447	[INFO]	168	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:08:19,448	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:08:22,667	[INFO]	169	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:08:23,600	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:08:26,810	[INFO]	171	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:08:29,915	[INFO]	172	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:08:29,917	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:08:30,904	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:08:30,907	[INFO]	174	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:08:30,908	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:08:31,920	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:08:35,154	[INFO]	176	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:08:35,157	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length >= longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:08:35,157	[INFO]	==== END ====
2020-12-17 11:08:35,157	[INFO]	Reason: target fitness reached
2020-12-17 11:08:35,160	[INFO]	
2020-12-17 11:08:35,161	[INFO]	========== EPOCH 10 ==========
2020-12-17 11:08:35,161	[INFO]	==== WARMUP ====
2020-12-17 11:08:38,257	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:08:38,258	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:08:41,393	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:08:41,393	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:08:44,539	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:08:44,539	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:08:47,713	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:08:47,713	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:08:47,713	[INFO]	==== START ====
2020-12-17 11:08:50,857	[INFO]	1	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:08:51,817	[INFO]	2	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:08:54,962	[INFO]	3	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:08:58,026	[INFO]	4	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:08:58,984	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:08:59,939	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:09:03,121	[INFO]	7	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:09:03,122	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-17 11:09:03,122	[INFO]	8	SUCCESS	+13.0	
2020-12-17 11:09:03,123	[DEBUG]	
2020-12-17 11:09:06,300	[INFO]	9	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:09:06,301	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:06,303	[INFO]	10	SUCCESS	+13.0	
2020-12-17 11:09:06,303	[DEBUG]	
2020-12-17 11:09:07,235	[INFO]	11	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:09:08,175	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:09:11,301	[INFO]	13	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:09:14,532	[INFO]	14	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:09:14,533	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:09:14,534	[INFO]	15	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:09:14,534	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:09:14,535	[INFO]	16	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:09:14,535	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:09:14,536	[INFO]	17	SUCCESS	+13.0	
2020-12-17 11:09:14,536	[DEBUG]	
2020-12-17 11:09:17,636	[INFO]	18	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:09:17,637	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:18,528	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:09:18,529	[INFO]	20	SUCCESS	 13.0	
2020-12-17 11:09:21,657	[INFO]	21	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:09:21,657	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:24,898	[INFO]	22	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:09:24,900	[INFO]	23	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:09:24,900	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:25,828	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:09:25,829	[INFO]	25	SUCCESS	 13.0	
2020-12-17 11:09:29,084	[INFO]	26	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:09:32,219	[INFO]	27	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:09:33,172	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:09:36,307	[INFO]	29	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:09:36,307	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:37,247	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:09:38,225	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:09:39,154	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:09:39,155	[INFO]	33	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:09:39,155	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:40,111	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:09:40,112	[INFO]	35	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:09:40,112	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:41,045	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:09:41,047	[INFO]	37	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:09:42,026	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:09:42,028	[INFO]	39	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:09:43,018	[INFO]	40	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:09:46,139	[INFO]	41	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:09:49,286	[INFO]	42	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:09:49,287	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:50,231	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:09:50,232	[INFO]	44	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:09:50,233	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:50,233	[INFO]	45	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:09:50,234	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:09:53,349	[INFO]	46	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:09:54,336	[INFO]	47	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:09:55,265	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:09:55,267	[INFO]	49	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:09:58,415	[INFO]	50	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:09:58,416	[INFO]	51	SUCCESS	 13.0	
2020-12-17 11:09:59,378	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:10:02,597	[INFO]	53	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:10:03,534	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:10:03,537	[INFO]	55	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:10:04,455	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:10:05,452	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:10:06,395	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:10:07,282	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:10:10,445	[INFO]	60	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:10:11,381	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:10:11,383	[INFO]	62	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:10:11,383	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:10:14,510	[INFO]	63	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:10:14,512	[INFO]	64	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:10:14,513	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:10:15,457	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:10:16,441	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:10:17,380	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:10:18,335	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:10:21,493	[INFO]	69	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:10:22,454	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:10:25,621	[INFO]	71	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:10:25,622	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:10:26,549	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:10:29,653	[INFO]	73	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:10:29,654	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,44 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:10:32,886	[INFO]	74	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:10:36,276	[INFO]	75	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:10:37,232	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:10:37,233	[INFO]	77	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:10:37,234	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:10:37,234	[INFO]	78	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:10:37,235	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:10:37,235	[INFO]	79	SUCCESS	 13.0	
2020-12-17 11:10:37,236	[INFO]	80	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:10:37,237	[INFO]	81	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:10:38,177	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:10:39,076	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:10:39,078	[INFO]	84	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:10:39,078	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:10:42,328	[INFO]	85	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:10:42,331	[INFO]	86	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:10:42,331	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:10:45,569	[INFO]	87	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:10:46,538	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:10:46,539	[INFO]	89	SUCCESS	 13.0	
2020-12-17 11:10:47,578	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:10:48,546	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:10:49,490	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:10:50,455	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:10:53,658	[INFO]	94	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:10:53,660	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:10:56,816	[INFO]	96	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:10:59,988	[INFO]	97	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:10:59,990	[INFO]	98	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:10:59,991	[INFO]	99	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:11:00,951	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:11:01,936	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:11:02,884	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:11:05,989	[INFO]	103	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:11:05,989	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:11:06,947	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:11:10,113	[INFO]	105	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:11:13,349	[INFO]	106	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:11:14,253	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:11:15,192	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:11:16,146	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:11:19,313	[INFO]	110	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:11:20,244	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:11:23,369	[INFO]	112	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:11:26,382	[INFO]	113	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:11:26,383	[INFO]	114	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:11:26,383	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:11:29,516	[INFO]	115	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:11:30,395	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:11:31,408	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:11:31,410	[INFO]	118	SUCCESS	 13.0	
2020-12-17 11:11:32,323	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:11:35,609	[INFO]	120	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:11:38,732	[INFO]	121	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:11:38,733	[INFO]	122	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:11:38,734	[INFO]	123	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:11:38,735	[INFO]	124	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:11:38,736	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:11:38,736	[INFO]	125	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:11:41,863	[INFO]	126	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:11:41,865	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:11:41,865	[INFO]	128	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:11:45,064	[INFO]	129	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:11:45,065	[INFO]	130	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:11:46,018	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:11:46,019	[INFO]	132	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:11:46,020	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:11:46,020	[INFO]	133	SUCCESS	 13.0	
2020-12-17 11:11:46,021	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:11:46,978	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:11:46,979	[INFO]	136	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:11:46,980	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:11:50,223	[INFO]	137	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:11:51,138	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:11:52,080	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:11:52,082	[INFO]	140	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:11:53,050	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:11:54,009	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:11:54,011	[INFO]	143	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:11:54,011	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:11:54,012	[INFO]	144	SUCCESS	 13.0	
2020-12-17 11:11:54,971	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:11:55,945	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:11:56,892	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:11:57,854	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:11:57,856	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:11:58,799	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:11:59,788	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:12:02,972	[INFO]	152	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:12:03,928	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:12:04,895	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:12:08,067	[INFO]	155	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:12:08,068	[INFO]	156	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:12:08,069	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:12:08,070	[INFO]	157	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:12:08,070	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:08,070	[INFO]	158	SUCCESS	 13.0	
2020-12-17 11:12:08,071	[INFO]	159	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:12:08,986	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:12:09,910	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:12:13,106	[INFO]	162	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:12:13,107	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:14,010	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:12:14,996	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:12:18,159	[INFO]	165	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:12:18,160	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:18,161	[INFO]	166	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:12:18,161	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:18,162	[INFO]	167	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:12:18,162	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:18,162	[INFO]	168	SUCCESS	 13.0	
2020-12-17 11:12:19,089	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:12:22,285	[INFO]	170	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:12:22,287	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:12:25,457	[INFO]	172	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:12:28,449	[INFO]	173	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:12:28,450	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:12:31,670	[INFO]	175	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:12:32,622	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:12:33,518	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:12:33,521	[INFO]	178	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:12:33,523	[INFO]	179	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:12:33,525	[INFO]	180	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:12:33,525	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:33,527	[INFO]	181	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:12:33,528	[INFO]	182	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:12:33,529	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:33,530	[INFO]	183	SUCCESS	 13.0	
2020-12-17 11:12:34,480	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:12:37,681	[INFO]	185	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:12:38,609	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:12:39,579	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:12:39,581	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:12:40,562	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:12:41,559	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:12:42,562	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:12:42,564	[INFO]	192	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:12:42,565	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:42,566	[INFO]	193	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:12:42,566	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:12:43,509	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:12:46,730	[INFO]	195	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:12:46,731	[INFO]	196	SUCCESS	 13.0	
2020-12-17 11:12:47,679	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:12:50,851	[INFO]	198	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:12:51,834	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:12:52,803	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:12:55,948	[INFO]	201	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:12:56,906	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:13:00,188	[INFO]	203	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:13:01,110	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:13:02,335	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:13:03,327	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:13:06,512	[INFO]	207	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:13:09,673	[INFO]	208	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:13:12,891	[INFO]	209	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:13:12,892	[INFO]	210	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:13:13,846	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:13:14,820	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:13:17,871	[INFO]	213	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:13:18,927	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:13:22,083	[INFO]	215	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:13:25,276	[INFO]	216	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:13:26,109	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:13:27,072	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:13:30,245	[INFO]	219	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:13:30,249	[INFO]	220	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:13:31,226	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:13:31,229	[INFO]	222	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:13:34,456	[INFO]	223	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:13:37,668	[INFO]	224	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:13:38,569	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:13:41,772	[INFO]	226	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:13:41,773	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:13:44,924	[INFO]	227	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:13:45,808	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:13:49,016	[INFO]	229	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:13:49,017	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:13:49,018	[INFO]	230	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:13:49,018	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:13:49,960	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:13:49,962	[INFO]	232	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:13:49,963	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:13:49,964	[INFO]	233	SUCCESS	 13.0	
2020-12-17 11:13:50,941	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:13:50,944	[INFO]	235	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:13:54,094	[INFO]	236	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:13:57,188	[INFO]	237	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:13:58,162	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:13:59,132	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:14:02,445	[INFO]	240	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:14:02,447	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:14:05,588	[INFO]	242	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:14:05,589	[INFO]	243	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:14:05,590	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:08,704	[INFO]	244	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:14:11,809	[INFO]	245	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:14:12,768	[INFO]	246	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:14:12,770	[INFO]	247	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:14:12,771	[INFO]	248	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:14:12,771	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:15,842	[INFO]	249	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:14:15,843	[INFO]	250	SUCCESS	 13.0	
2020-12-17 11:14:18,967	[INFO]	251	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:14:22,122	[INFO]	252	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:14:25,335	[INFO]	253	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:14:25,336	[INFO]	254	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:14:26,237	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:14:26,238	[INFO]	256	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:14:27,186	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:14:28,058	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:14:28,059	[INFO]	259	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:14:28,059	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:28,060	[INFO]	260	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:14:31,332	[INFO]	261	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:14:31,333	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:34,468	[INFO]	262	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:14:34,469	[INFO]	263	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:14:34,470	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:37,649	[INFO]	264	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:14:37,650	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:37,651	[INFO]	265	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:14:37,652	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:40,802	[INFO]	266	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:14:44,018	[INFO]	267	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:14:44,019	[INFO]	268	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:14:44,020	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:44,021	[INFO]	269	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:14:44,950	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:14:44,954	[INFO]	271	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:14:44,954	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:44,956	[INFO]	272	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:14:44,956	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:14:44,957	[INFO]	273	SUCCESS	 13.0	
2020-12-17 11:14:44,959	[INFO]	274	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:14:48,150	[INFO]	275	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:14:49,079	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:14:49,082	[INFO]	277	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:14:50,053	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:14:50,054	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:14:50,947	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:14:51,906	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:14:55,140	[INFO]	282	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:14:56,063	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:14:56,958	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:15:00,112	[INFO]	285	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:15:01,037	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:15:01,039	[INFO]	287	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:15:02,004	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:15:05,142	[INFO]	289	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:15:06,081	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:15:06,083	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:15:07,038	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:15:08,007	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:15:08,009	[INFO]	294	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:15:08,990	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:15:09,933	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:15:10,903	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:15:14,011	[INFO]	298	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:15:14,013	[INFO]	299	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:15:17,132	[INFO]	300	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:15:18,120	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:15:19,079	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:15:22,224	[INFO]	303	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:15:22,226	[INFO]	304	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:15:22,227	[INFO]	305	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:15:22,227	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:25,390	[INFO]	306	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:15:25,392	[INFO]	307	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:15:25,393	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:28,618	[INFO]	308	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:15:29,748	[INFO]	309	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:15:29,749	[INFO]	310	SUCCESS	 13.0	
2020-12-17 11:15:30,716	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:15:31,737	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:15:32,696	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:15:32,699	[INFO]	314	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:15:32,700	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:32,702	[INFO]	315	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:15:33,659	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:15:34,661	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:15:34,663	[INFO]	318	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:15:34,664	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:38,500	[INFO]	319	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:15:38,501	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:38,502	[INFO]	320	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:15:38,502	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:38,502	[INFO]	321	SUCCESS	 13.0	
2020-12-17 11:15:39,704	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:15:40,747	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:15:43,933	[INFO]	324	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:15:43,935	[INFO]	325	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:15:47,005	[INFO]	326	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:15:47,006	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:47,006	[INFO]	327	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:15:47,007	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:15:50,085	[INFO]	328	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:15:50,086	[INFO]	329	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:15:51,031	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:15:51,032	[INFO]	331	SUCCESS	 13.0	
2020-12-17 11:15:51,033	[INFO]	332	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:15:51,033	[INFO]	333	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:15:52,003	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:15:53,030	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:15:56,192	[INFO]	336	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:15:59,247	[INFO]	337	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:15:59,248	[INFO]	338	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:16:00,144	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:16:03,247	[INFO]	340	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:16:04,220	[INFO]	341	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:16:05,205	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:16:06,144	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:16:09,241	[INFO]	344	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:16:10,195	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:16:11,160	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:16:14,248	[INFO]	347	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:16:14,250	[INFO]	348	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:16:15,144	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:16:18,256	[INFO]	350	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:16:19,236	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:16:22,438	[INFO]	352	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:16:25,521	[INFO]	353	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:16:25,523	[INFO]	354	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:16:25,523	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:16:25,524	[INFO]	355	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:16:25,524	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:16:26,458	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:16:26,462	[INFO]	357	SUCCESS	 13.0	
2020-12-17 11:16:26,466	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:16:27,414	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:16:28,347	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:16:31,582	[INFO]	361	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:16:31,583	[INFO]	362	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:16:32,497	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:16:33,469	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:16:36,545	[INFO]	365	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:16:37,536	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:16:40,737	[INFO]	367	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:16:43,915	[INFO]	368	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:16:44,869	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:16:45,835	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:16:48,990	[INFO]	371	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:16:48,991	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:16:52,095	[INFO]	372	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:16:55,242	[INFO]	373	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:16:58,419	[INFO]	374	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:16:59,373	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:16:59,375	[INFO]	376	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:16:59,375	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:16:59,376	[INFO]	377	SUCCESS	 13.0	
2020-12-17 11:17:00,328	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:17:00,329	[INFO]	379	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:17:03,517	[INFO]	380	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:17:03,518	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:17:06,675	[INFO]	381	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:17:09,866	[INFO]	382	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:17:13,102	[INFO]	383	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:17:13,104	[INFO]	384	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:17:13,104	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:13,105	[INFO]	385	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:17:13,105	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:16,224	[INFO]	386	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:17:16,226	[INFO]	387	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:17:16,226	[INFO]	388	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:17:16,227	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:16,227	[INFO]	389	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:17:16,228	[INFO]	390	SUCCESS	 13.0	
2020-12-17 11:17:16,229	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:17:17,132	[INFO]	392	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:17:20,230	[INFO]	393	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:17:20,232	[INFO]	394	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:17:20,233	[INFO]	395	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:17:20,233	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:20,234	[INFO]	396	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:17:20,234	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:20,235	[INFO]	397	SUCCESS	 13.0	
2020-12-17 11:17:20,236	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:17:23,349	[INFO]	399	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:17:23,351	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:17:24,302	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:17:25,293	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:17:25,297	[INFO]	403	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:17:25,297	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:26,245	[INFO]	404	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:17:26,247	[INFO]	405	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:17:27,473	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:17:27,475	[INFO]	407	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:17:27,478	[INFO]	408	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:17:28,449	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:17:29,427	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:17:32,631	[INFO]	411	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:17:35,748	[INFO]	412	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:17:36,685	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:17:37,668	[INFO]	414	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:17:38,659	[INFO]	415	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:17:39,616	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:17:39,618	[INFO]	417	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:17:40,567	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:17:43,709	[INFO]	419	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:17:44,686	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:17:44,688	[INFO]	421	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:17:44,689	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:45,680	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:17:48,842	[INFO]	423	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:17:48,843	[INFO]	424	SUCCESS	 13.0	
2020-12-17 11:17:51,786	[INFO]	425	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:17:52,757	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:17:56,038	[INFO]	427	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:17:56,040	[INFO]	428	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:17:56,040	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:56,041	[INFO]	429	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:17:56,042	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:17:56,042	[INFO]	430	SUCCESS	 13.0	
2020-12-17 11:17:56,943	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:17:56,946	[INFO]	432	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:17:57,895	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:18:01,054	[INFO]	434	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:18:02,005	[INFO]	435	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:18:02,961	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:18:06,194	[INFO]	437	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:18:07,081	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:18:07,083	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:18:07,085	[INFO]	440	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:18:08,019	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:18:08,021	[INFO]	442	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:18:11,202	[INFO]	443	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:18:11,203	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:18:14,447	[INFO]	444	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:18:17,572	[INFO]	445	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:18:20,738	[INFO]	446	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:18:20,739	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+                 ends.put(length+1, i);
+                 
              }
  
              i++;

2020-12-17 11:18:21,692	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:18:24,868	[INFO]	448	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:18:25,859	[INFO]	449	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:18:29,061	[INFO]	450	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:18:29,062	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:18:32,604	[INFO]	451	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:18:33,500	[INFO]	452	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:18:36,705	[INFO]	453	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:18:36,707	[INFO]	454	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:18:36,708	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:18:37,706	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:18:37,709	[INFO]	457	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:18:37,710	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:18:40,884	[INFO]	458	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:18:41,843	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:18:41,845	[INFO]	460	SUCCESS	 13.0	
2020-12-17 11:18:42,821	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:18:43,748	[INFO]	462	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:18:44,698	[INFO]	463	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:18:47,712	[INFO]	464	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:18:50,855	[INFO]	465	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:18:50,857	[INFO]	466	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:18:50,858	[INFO]	467	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:18:53,988	[INFO]	468	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:18:54,928	[INFO]	469	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:18:55,914	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:18:56,889	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:18:56,893	[INFO]	472	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:18:56,894	[INFO]	473	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:19:00,148	[INFO]	474	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:19:01,052	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:19:04,228	[INFO]	476	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:19:07,433	[INFO]	477	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:19:07,433	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:19:08,376	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:19:08,378	[INFO]	479	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:19:08,378	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:19:08,379	[INFO]	480	SUCCESS	 13.0	
2020-12-17 11:19:09,345	[INFO]	481	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:19:10,340	[INFO]	482	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:19:13,518	[INFO]	483	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:19:13,518	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:19:14,473	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:19:15,438	[INFO]	485	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:19:16,402	[INFO]	486	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:19:19,526	[INFO]	487	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:19:20,508	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:19:23,646	[INFO]	489	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:19:23,648	[INFO]	490	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:19:23,648	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:19:23,649	[INFO]	491	SUCCESS	 13.0	
2020-12-17 11:19:23,649	[INFO]	492	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:19:23,650	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:19:23,650	[INFO]	493	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:19:23,651	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:19:26,815	[INFO]	494	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:19:26,816	[INFO]	495	SUCCESS	 13.0	
2020-12-17 11:19:27,759	[INFO]	496	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:19:28,722	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:19:29,682	[INFO]	498	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:19:33,021	[INFO]	499	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:19:36,091	[INFO]	500	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:19:36,092	[INFO]	==== END ====
2020-12-17 11:19:36,092	[INFO]	Reason: step budget
2020-12-17 11:19:36,093	[INFO]	
2020-12-17 11:19:36,093	[INFO]	========== EPOCH 11 ==========
2020-12-17 11:19:36,093	[INFO]	==== WARMUP ====
2020-12-17 11:19:39,254	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:19:39,255	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:19:42,327	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:19:42,327	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:19:45,441	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:19:45,441	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:19:48,603	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:19:48,603	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:19:48,603	[INFO]	==== START ====
2020-12-17 11:19:51,770	[INFO]	1	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:19:54,931	[INFO]	2	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:19:58,301	[INFO]	3	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:19:59,283	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:20:00,236	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:20:01,205	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:20:04,351	[INFO]	7	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:20:04,352	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-17 11:20:07,494	[INFO]	8	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:20:07,495	[INFO]	9	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:20:07,496	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-17 11:20:07,497	[INFO]	10	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:20:07,497	[DEBUG]	
2020-12-17 11:20:08,472	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:20:11,667	[INFO]	12	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:20:11,668	[INFO]	13	SUCCESS	+13.0	
2020-12-17 11:20:11,668	[DEBUG]	
2020-12-17 11:20:12,615	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:20:15,801	[INFO]	15	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:20:15,802	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:20:16,707	[INFO]	16	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:20:16,708	[INFO]	17	SUCCESS	+13.0	
2020-12-17 11:20:16,708	[DEBUG]	
2020-12-17 11:20:17,684	[INFO]	18	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:20:18,662	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:20:19,600	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:20:20,568	[INFO]	21	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:20:21,548	[INFO]	22	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:20:24,662	[INFO]	23	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:20:24,663	[INFO]	24	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:20:24,664	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:20:25,610	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:20:25,613	[INFO]	26	SUCCESS	+13.0	
2020-12-17 11:20:25,613	[DEBUG]	
2020-12-17 11:20:26,613	[INFO]	27	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:20:27,510	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:20:30,700	[INFO]	29	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:20:30,701	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:20:30,702	[INFO]	30	SUCCESS	 13.0	
2020-12-17 11:20:33,868	[INFO]	31	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:20:33,869	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:20:37,195	[INFO]	32	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:20:37,197	[INFO]	33	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:20:40,374	[INFO]	34	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:20:41,332	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:20:44,525	[INFO]	36	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:20:45,513	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:20:46,516	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:20:49,705	[INFO]	39	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:20:52,993	[INFO]	40	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:20:52,994	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:20:52,995	[INFO]	41	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:20:52,996	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:20:53,905	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:20:53,906	[INFO]	43	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:20:57,120	[INFO]	44	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:00,247	[INFO]	45	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:21:03,470	[INFO]	46	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:21:03,471	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:21:06,694	[INFO]	47	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:21:09,849	[INFO]	48	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:21:09,850	[INFO]	49	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:09,850	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:21:10,794	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:21:14,020	[INFO]	51	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:21:17,193	[INFO]	52	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:20,329	[INFO]	53	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:21:21,325	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:21:21,327	[INFO]	55	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:21,327	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:21:24,510	[INFO]	56	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:24,511	[INFO]	57	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:24,511	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:21:27,681	[INFO]	58	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:21:30,849	[INFO]	59	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:21:30,850	[INFO]	60	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:31,864	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:21:31,866	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:21:31,867	[INFO]	63	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:21:35,036	[INFO]	64	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:21:35,997	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:21:36,974	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:21:36,976	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:21:40,133	[INFO]	68	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:21:43,341	[INFO]	69	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:21:44,277	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:21:44,279	[INFO]	71	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:21:45,187	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:21:45,191	[INFO]	73	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:21:45,192	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:21:45,194	[INFO]	74	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:21:45,196	[INFO]	75	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:21:45,197	[INFO]	76	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:45,198	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:21:45,200	[INFO]	77	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:21:46,156	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:21:46,158	[INFO]	79	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:21:49,476	[INFO]	80	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:21:50,376	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:21:51,353	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:21:54,576	[INFO]	83	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:21:54,577	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,39 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:21:57,764	[INFO]	84	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:21:58,713	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:21:59,689	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:22:00,659	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:22:03,783	[INFO]	88	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:22:03,787	[INFO]	89	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:22:03,789	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,39 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:03,791	[INFO]	90	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:22:03,792	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,39 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:03,794	[INFO]	91	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:22:03,796	[INFO]	92	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:22:03,798	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,39 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:04,733	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:22:05,717	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:22:05,721	[INFO]	95	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:22:05,722	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,39 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:08,929	[INFO]	96	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:22:08,932	[INFO]	97	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:22:08,933	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,39 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:09,889	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:22:10,810	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:22:10,812	[INFO]	100	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:22:10,812	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,39 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:10,813	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:22:11,792	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:22:14,931	[INFO]	103	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:22:14,932	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:18,093	[INFO]	104	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:22:21,267	[INFO]	105	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:22:22,210	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:22:25,388	[INFO]	107	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:22:28,561	[INFO]	108	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:22:28,563	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:28,564	[INFO]	109	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:22:28,565	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:29,489	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:22:32,696	[INFO]	111	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:22:36,182	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:22:36,185	[INFO]	113	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:22:36,186	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:36,187	[INFO]	114	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:22:36,188	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:37,195	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:22:37,199	[INFO]	116	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:22:37,200	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:40,417	[INFO]	117	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:22:41,337	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:22:42,302	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:22:42,306	[INFO]	120	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:22:42,307	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:42,309	[INFO]	121	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:22:42,310	[INFO]	122	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:22:42,311	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:45,537	[INFO]	123	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:22:45,539	[INFO]	124	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:22:45,540	[INFO]	125	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:22:45,541	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,38 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 19,43 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:22:48,704	[INFO]	126	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:22:48,705	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:22:49,692	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:22:53,296	[INFO]	128	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:22:56,365	[INFO]	129	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:22:56,366	[INFO]	130	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:22:56,366	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:22:56,367	[INFO]	131	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:22:56,369	[INFO]	132	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:22:56,369	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:22:56,370	[INFO]	133	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:22:59,604	[INFO]	134	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:22:59,604	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:00,537	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:23:01,507	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:23:02,479	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:23:03,455	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:23:06,615	[INFO]	139	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:23:06,616	[INFO]	140	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:23:06,617	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:07,559	[INFO]	141	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:23:07,561	[INFO]	142	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:23:07,561	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:10,710	[INFO]	143	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:23:10,711	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:10,712	[INFO]	144	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:23:10,712	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:10,713	[INFO]	145	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:23:10,713	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:10,713	[INFO]	146	SUCCESS	 13.0	
2020-12-17 11:23:11,684	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:23:14,753	[INFO]	148	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:23:15,694	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:23:18,858	[INFO]	150	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:23:19,831	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:23:20,785	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:23:23,945	[INFO]	153	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:23:27,163	[INFO]	154	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:23:28,086	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:23:31,366	[INFO]	156	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:23:32,301	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:23:33,246	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:23:33,248	[INFO]	159	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:23:33,248	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:33,249	[INFO]	160	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:23:34,181	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:23:35,141	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:23:35,142	[INFO]	163	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:23:35,142	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:36,116	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:23:37,085	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:23:37,086	[INFO]	166	SUCCESS	 13.0	
2020-12-17 11:23:37,087	[INFO]	167	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:23:37,087	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:37,088	[INFO]	168	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:23:37,088	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:23:40,244	[INFO]	169	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:23:40,245	[INFO]	170	SUCCESS	 13.0	
2020-12-17 11:23:41,155	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:23:42,061	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:23:42,962	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:23:46,105	[INFO]	174	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:23:49,300	[INFO]	175	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:23:50,254	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:23:50,258	[INFO]	177	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:23:53,464	[INFO]	178	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:23:54,386	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:23:55,373	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:23:58,594	[INFO]	181	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:24:01,730	[INFO]	182	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:24:02,668	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:24:03,649	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:24:04,583	[INFO]	185	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:24:07,635	[INFO]	186	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:24:07,637	[INFO]	187	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:24:10,754	[INFO]	188	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:24:11,710	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:24:14,859	[INFO]	190	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:24:15,769	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:24:16,708	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:24:17,664	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:24:17,667	[INFO]	194	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:24:17,670	[INFO]	195	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:24:17,671	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:24:20,893	[INFO]	196	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:24:21,827	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:24:21,829	[INFO]	198	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:24:21,830	[INFO]	199	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:24:21,830	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:24:22,743	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:24:25,900	[INFO]	201	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:24:29,034	[INFO]	202	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:24:29,035	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:24:29,036	[INFO]	203	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:24:29,036	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:24:29,037	[INFO]	204	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:24:29,038	[INFO]	205	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:24:29,038	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:24:30,004	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:24:33,213	[INFO]	207	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:24:34,207	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:24:37,333	[INFO]	209	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:24:37,334	[INFO]	210	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:24:37,335	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:24:37,335	[INFO]	211	SUCCESS	 13.0	
2020-12-17 11:24:38,303	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:24:39,297	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:24:42,464	[INFO]	214	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:24:45,721	[INFO]	215	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:24:46,701	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:24:47,716	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:24:51,058	[INFO]	218	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:24:54,354	[INFO]	219	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:24:54,356	[INFO]	220	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:24:55,326	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:24:56,355	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:24:57,414	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:24:58,427	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:24:59,443	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:25:00,461	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:25:03,742	[INFO]	227	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:25:04,768	[INFO]	228	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:25:08,049	[INFO]	229	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:25:11,190	[INFO]	230	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:25:11,192	[INFO]	231	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:25:12,138	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:25:13,126	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:25:13,128	[INFO]	234	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:25:16,423	[INFO]	235	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:25:16,424	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:19,620	[INFO]	236	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:25:20,565	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:25:21,474	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:25:21,476	[INFO]	239	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:25:21,477	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:22,426	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:25:22,428	[INFO]	241	SUCCESS	 13.0	
2020-12-17 11:25:22,430	[INFO]	242	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:25:22,431	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:22,432	[INFO]	243	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:25:25,648	[INFO]	244	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:25:26,608	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:25:26,610	[INFO]	246	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:25:26,610	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:27,579	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:25:28,518	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:25:29,529	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:25:30,555	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:25:30,556	[INFO]	251	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:25:30,556	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:31,580	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:25:31,581	[INFO]	253	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:25:31,582	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:32,581	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:25:33,624	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:25:33,625	[INFO]	256	SUCCESS	 13.0	
2020-12-17 11:25:34,621	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:25:38,701	[INFO]	258	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:25:42,843	[INFO]	259	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:25:42,844	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:42,846	[INFO]	260	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:25:42,846	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:43,913	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:25:43,914	[INFO]	262	SUCCESS	 13.0	
2020-12-17 11:25:45,165	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:25:48,843	[INFO]	264	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:25:49,880	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:25:49,883	[INFO]	266	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:25:49,883	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:50,842	[INFO]	267	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:25:50,844	[INFO]	268	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:25:50,845	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:25:51,813	[INFO]	269	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:25:51,815	[INFO]	270	SUCCESS	 13.0	
2020-12-17 11:25:55,048	[INFO]	271	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:25:55,988	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:25:56,951	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:25:56,954	[INFO]	274	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:25:56,956	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:26:00,165	[INFO]	276	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:26:00,166	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:26:00,167	[INFO]	278	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:26:01,062	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:26:01,063	[INFO]	280	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:26:04,402	[INFO]	281	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:26:05,362	[INFO]	282	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:26:08,531	[INFO]	283	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:26:08,532	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 longest = length + 1;
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:09,432	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:26:09,434	[INFO]	285	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:09,435	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:09,436	[INFO]	286	SUCCESS	 13.0	
2020-12-17 11:26:10,350	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:26:11,305	[INFO]	288	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:26:11,306	[INFO]	289	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:26:12,268	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:26:12,270	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:26:15,808	[INFO]	292	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:26:15,809	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:16,694	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:26:16,696	[INFO]	294	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:16,696	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:16,697	[INFO]	295	SUCCESS	 13.0	
2020-12-17 11:26:19,902	[INFO]	296	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:26:19,904	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:26:23,092	[INFO]	297	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:26:24,025	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:26:24,029	[INFO]	299	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:24,030	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:26:24,032	[INFO]	300	SUCCESS	+9.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:24,032	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:26:24,955	[INFO]	301	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:26:25,886	[INFO]	302	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:26:26,867	[INFO]	303	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:26:27,898	[INFO]	304	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:26:28,855	[INFO]	305	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:26:32,069	[INFO]	306	SUCCESS	+9.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:26:32,070	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,35 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:26:33,043	[INFO]	307	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:26:33,047	[INFO]	308	SUCCESS	+9.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:33,048	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,35 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:26:36,266	[INFO]	309	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:36,267	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:39,414	[INFO]	310	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:26:39,415	[INFO]	311	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:39,415	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:42,905	[INFO]	312	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:26:42,907	[INFO]	313	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:26:42,908	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:26:46,071	[INFO]	315	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:26:46,072	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:47,035	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:26:50,168	[INFO]	317	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:26:50,170	[INFO]	318	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:26:50,170	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:50,171	[INFO]	319	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:50,171	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:50,172	[INFO]	320	SUCCESS	 13.0	
2020-12-17 11:26:53,473	[INFO]	321	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:26:54,387	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:26:57,522	[INFO]	323	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:26:57,524	[INFO]	324	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:26:57,524	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:57,525	[INFO]	325	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:26:57,525	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:57,526	[INFO]	326	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:26:57,526	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:26:58,472	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:26:58,473	[INFO]	328	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:26:59,430	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:27:00,376	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:27:03,480	[INFO]	331	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:27:03,481	[INFO]	332	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:27:03,481	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:27:03,482	[INFO]	333	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:27:03,483	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:27:03,484	[INFO]	334	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:27:03,484	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:27:04,362	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:27:07,497	[INFO]	336	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:27:07,498	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:27:08,428	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:27:09,377	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:27:12,560	[INFO]	339	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:27:13,421	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:27:13,422	[INFO]	341	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:27:13,423	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:27:13,423	[INFO]	342	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:27:13,424	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:27:14,385	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:27:14,388	[INFO]	344	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:27:17,515	[INFO]	345	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:27:17,519	[INFO]	346	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:27:17,520	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:27:18,440	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:27:18,442	[INFO]	348	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:27:18,443	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:27:21,717	[INFO]	349	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:27:21,718	[INFO]	350	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:27:22,612	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:27:23,562	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:27:23,563	[INFO]	353	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:27:23,564	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:27:24,521	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:27:24,523	[INFO]	355	SUCCESS	 13.0	
2020-12-17 11:27:27,650	[INFO]	356	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:27:28,606	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:27:31,733	[INFO]	358	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:27:32,690	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:27:33,695	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:27:36,829	[INFO]	361	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:27:36,831	[INFO]	362	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:27:40,011	[INFO]	363	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:27:40,958	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:27:41,874	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:27:42,836	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:27:45,976	[INFO]	367	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:27:45,977	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:27:49,147	[INFO]	368	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:27:49,148	[INFO]	369	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:27:49,148	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:27:49,149	[INFO]	370	SUCCESS	 13.0	
2020-12-17 11:27:52,085	[INFO]	371	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:27:53,067	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:27:53,978	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:27:54,918	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:27:55,941	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:27:56,909	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:28:00,084	[INFO]	377	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:28:01,033	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:28:01,037	[INFO]	379	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:28:01,037	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:02,012	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:28:02,956	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:28:03,922	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:28:03,924	[INFO]	383	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:28:07,072	[INFO]	384	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:28:07,073	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 11:28:07,073	[INFO]	==== END ====
2020-12-17 11:28:07,073	[INFO]	Reason: target fitness reached
2020-12-17 11:28:07,074	[INFO]	
2020-12-17 11:28:07,074	[INFO]	========== EPOCH 12 ==========
2020-12-17 11:28:07,075	[INFO]	==== WARMUP ====
2020-12-17 11:28:10,196	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:28:10,196	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:28:13,383	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:28:13,384	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:28:16,690	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:28:16,690	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:28:19,819	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:28:19,819	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:28:19,819	[INFO]	==== START ====
2020-12-17 11:28:20,949	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:28:24,210	[INFO]	2	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:28:25,177	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:28:26,151	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:28:27,018	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:28:30,147	[INFO]	6	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:28:30,148	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:30,150	[INFO]	7	SUCCESS	 13.0	
2020-12-17 11:28:33,326	[INFO]	8	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:28:36,588	[INFO]	9	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:28:37,480	[INFO]	10	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:28:38,494	[INFO]	11	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:28:39,448	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:28:42,608	[INFO]	13	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:28:42,609	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:43,553	[INFO]	14	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:28:44,490	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:28:44,492	[INFO]	16	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:28:44,492	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:47,600	[INFO]	17	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:28:47,601	[INFO]	18	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:28:47,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:47,602	[INFO]	19	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:28:47,602	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:50,715	[INFO]	20	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:28:50,717	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:53,926	[INFO]	21	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:28:53,927	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:28:57,091	[INFO]	22	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:28:58,036	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:28:59,020	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:28:59,986	[INFO]	25	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:28:59,989	[INFO]	26	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:29:03,111	[INFO]	27	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:29:04,094	[INFO]	28	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:29:04,096	[INFO]	29	SUCCESS	+9.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:29:04,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:05,078	[INFO]	30	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:29:05,080	[INFO]	31	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:29:08,310	[INFO]	32	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:29:11,539	[INFO]	33	SUCCESS	 27.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:29:12,674	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:29:13,750	[INFO]	35	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:29:16,762	[INFO]	36	SUCCESS	 29.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:29:17,650	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:29:20,879	[INFO]	38	SUCCESS	+9.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:29:20,880	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,35 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:21,857	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:29:22,803	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:29:22,804	[INFO]	41	SUCCESS	+9.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:29:22,805	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:23,758	[INFO]	42	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:29:23,759	[INFO]	43	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:29:24,740	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:29:27,901	[INFO]	45	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:29:27,902	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:27,903	[INFO]	46	SUCCESS	 13.0	
2020-12-17 11:29:27,904	[INFO]	47	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:29:27,904	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:28,851	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:29:28,852	[INFO]	49	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:29:28,853	[INFO]	50	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:29:28,854	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:29,834	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:29:29,836	[INFO]	52	SUCCESS	 13.0	
2020-12-17 11:29:30,842	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:29:34,026	[INFO]	54	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:29:37,184	[INFO]	55	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:29:40,366	[INFO]	56	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:29:41,292	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:29:42,247	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:29:42,248	[INFO]	59	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:29:42,248	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:42,249	[INFO]	60	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:29:42,249	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:42,250	[INFO]	61	SUCCESS	 13.0	
2020-12-17 11:29:43,228	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:29:43,229	[INFO]	63	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:29:46,336	[INFO]	64	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:29:47,304	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:29:50,473	[INFO]	66	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:29:51,416	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:29:51,418	[INFO]	68	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:29:54,639	[INFO]	69	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:29:55,571	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:29:56,502	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:29:59,700	[INFO]	72	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:29:59,702	[INFO]	73	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:29:59,702	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:59,703	[INFO]	74	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:29:59,704	[INFO]	75	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:29:59,704	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:29:59,705	[INFO]	76	SUCCESS	 13.0	
2020-12-17 11:30:00,612	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:30:01,589	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:30:02,551	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:30:03,510	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:30:03,513	[INFO]	81	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:30:03,516	[INFO]	82	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:30:03,517	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:30:04,481	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:30:05,451	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:30:05,454	[INFO]	85	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:30:05,454	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:30:06,414	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:30:07,364	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:30:07,365	[INFO]	88	SUCCESS	 13.0	
2020-12-17 11:30:08,352	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:30:08,354	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:30:09,345	[INFO]	91	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:30:10,321	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:30:10,322	[INFO]	93	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:30:11,220	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:30:12,187	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:30:13,141	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:30:16,122	[INFO]	97	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:30:19,241	[INFO]	98	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:30:19,242	[INFO]	99	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:30:19,243	[INFO]	100	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:30:20,209	[INFO]	101	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:30:20,211	[INFO]	102	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:30:21,201	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:30:24,337	[INFO]	104	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:30:25,303	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:30:26,269	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:30:27,259	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:30:30,435	[INFO]	108	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:30:31,432	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:30:32,427	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:30:33,344	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:30:36,644	[INFO]	112	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:30:36,647	[INFO]	113	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:30:39,724	[INFO]	114	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:30:40,672	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:30:40,673	[INFO]	116	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:30:41,661	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:30:42,630	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:30:43,653	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:30:44,631	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:30:45,610	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:30:48,817	[INFO]	122	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:30:49,759	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:30:49,761	[INFO]	124	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:30:49,761	[INFO]	125	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:30:49,762	[INFO]	126	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:30:49,763	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:30:50,724	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:30:50,725	[INFO]	128	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:30:50,726	[INFO]	129	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:30:50,726	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:30:50,727	[INFO]	130	SUCCESS	 13.0	
2020-12-17 11:30:51,693	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:30:52,660	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:30:53,640	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:30:54,655	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:30:57,861	[INFO]	135	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:30:57,863	[INFO]	136	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:30:57,863	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:30:57,864	[INFO]	137	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:30:57,864	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:30:57,865	[INFO]	138	SUCCESS	 13.0	
2020-12-17 11:30:57,866	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:31:01,012	[INFO]	140	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:31:01,013	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:01,014	[INFO]	141	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:01,014	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:01,952	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:31:02,900	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:31:02,902	[INFO]	144	SUCCESS	 13.0	
2020-12-17 11:31:03,902	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:31:07,106	[INFO]	146	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:31:08,066	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:31:09,032	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:31:10,000	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:31:10,003	[INFO]	150	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:31:10,966	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:31:14,126	[INFO]	152	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:31:15,066	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:31:16,008	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:31:16,997	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:31:20,095	[INFO]	156	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:31:21,031	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:31:24,200	[INFO]	158	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:31:27,313	[INFO]	159	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:31:28,271	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:31:31,536	[INFO]	161	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:31:34,630	[INFO]	162	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:31:35,609	[INFO]	163	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:31:36,612	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:31:37,600	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:31:40,816	[INFO]	166	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:31:40,818	[INFO]	167	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:31:43,938	[INFO]	168	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:31:43,939	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:43,940	[INFO]	169	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:43,940	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:43,941	[INFO]	170	SUCCESS	 13.0	
2020-12-17 11:31:43,942	[INFO]	171	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:31:44,911	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:31:47,900	[INFO]	173	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:31:47,902	[INFO]	174	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:31:47,902	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:47,903	[INFO]	175	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:31:47,903	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:47,904	[INFO]	176	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:47,905	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:47,905	[INFO]	177	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:47,906	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:47,906	[INFO]	178	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:47,907	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:51,081	[INFO]	179	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:31:51,083	[INFO]	180	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:51,083	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:51,956	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:31:51,958	[INFO]	182	SUCCESS	 13.0	
2020-12-17 11:31:51,959	[INFO]	183	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:31:51,959	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:52,922	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:31:52,923	[INFO]	185	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:52,923	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:52,924	[INFO]	186	SUCCESS	 13.0	
2020-12-17 11:31:56,129	[INFO]	187	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:31:56,129	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:56,130	[INFO]	188	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:31:56,131	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:31:56,131	[INFO]	189	SUCCESS	 13.0	
2020-12-17 11:31:56,132	[INFO]	190	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:31:57,076	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:31:58,100	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:32:01,257	[INFO]	193	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:32:01,260	[INFO]	194	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:32:01,260	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:32:04,512	[INFO]	195	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:32:04,514	[INFO]	196	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:32:04,515	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:32:04,515	[INFO]	197	SUCCESS	 13.0	
2020-12-17 11:32:04,517	[INFO]	198	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:32:04,517	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:32:04,518	[INFO]	199	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:32:04,519	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:32:05,436	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:32:05,437	[INFO]	201	SUCCESS	 13.0	
2020-12-17 11:32:06,440	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:32:09,543	[INFO]	203	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:32:12,752	[INFO]	204	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:32:12,754	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,35 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:32:12,756	[INFO]	205	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:32:12,757	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:32:12,758	[INFO]	206	SUCCESS	 13.0	
2020-12-17 11:32:12,761	[INFO]	207	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:32:15,918	[INFO]	208	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:32:19,084	[INFO]	209	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:32:20,013	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:32:23,211	[INFO]	211	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:32:24,082	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:32:27,282	[INFO]	213	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:32:30,474	[INFO]	214	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:32:30,475	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 11:32:30,476	[INFO]	==== END ====
2020-12-17 11:32:30,476	[INFO]	Reason: target fitness reached
2020-12-17 11:32:30,477	[INFO]	
2020-12-17 11:32:30,477	[INFO]	========== EPOCH 13 ==========
2020-12-17 11:32:30,478	[INFO]	==== WARMUP ====
2020-12-17 11:32:33,594	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:32:33,595	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:32:36,850	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:32:36,850	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:32:39,933	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:32:39,934	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:32:43,144	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:32:43,145	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:32:43,145	[INFO]	==== START ====
2020-12-17 11:32:46,325	[INFO]	1	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:32:47,303	[INFO]	2	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:32:50,449	[INFO]	3	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:32:53,599	[INFO]	4	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:32:53,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-17 11:32:53,602	[INFO]	5	SUCCESS	+13.0	
2020-12-17 11:32:53,603	[DEBUG]	
2020-12-17 11:32:56,731	[INFO]	6	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:32:56,731	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 31,36 ****
--- 31,41 ----
                  longest = length + 1;
              }
  
+             if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
+ 
              i++;
          }
          return longest;

2020-12-17 11:32:59,911	[INFO]	7	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:32:59,912	[INFO]	8	SUCCESS	+13.0	
2020-12-17 11:32:59,913	[DEBUG]	
2020-12-17 11:33:00,857	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:33:01,834	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:33:05,070	[INFO]	11	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:33:05,071	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:05,999	[INFO]	12	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:33:06,002	[INFO]	13	SUCCESS	+13.0	
2020-12-17 11:33:06,003	[DEBUG]	
2020-12-17 11:33:09,192	[INFO]	14	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:33:10,151	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:33:11,126	[INFO]	16	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:33:11,127	[INFO]	17	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:33:11,127	[DEBUG]	
2020-12-17 11:33:12,061	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:33:12,063	[INFO]	19	SUCCESS	+13.0	
2020-12-17 11:33:12,064	[DEBUG]	
2020-12-17 11:33:13,068	[INFO]	20	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:33:14,039	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:33:15,008	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:33:18,184	[INFO]	23	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:33:21,304	[INFO]	24	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:33:22,268	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:33:23,252	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:33:23,254	[INFO]	27	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:33:23,255	[INFO]	28	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:33:23,256	[DEBUG]	
2020-12-17 11:33:23,257	[INFO]	29	SUCCESS	+13.0	
2020-12-17 11:33:23,257	[DEBUG]	
2020-12-17 11:33:23,258	[INFO]	30	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:33:23,259	[DEBUG]	
2020-12-17 11:33:26,386	[INFO]	31	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:33:26,387	[INFO]	32	SUCCESS	+13.0	
2020-12-17 11:33:26,388	[DEBUG]	
2020-12-17 11:33:29,533	[INFO]	33	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:33:29,534	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:29,536	[INFO]	34	SUCCESS	 13.0	
2020-12-17 11:33:30,475	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:33:33,701	[INFO]	36	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:33:34,639	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:33:37,768	[INFO]	38	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:33:40,941	[INFO]	39	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:33:40,942	[INFO]	40	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:33:40,943	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:41,853	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:33:42,798	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:33:42,800	[INFO]	43	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:33:42,800	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:42,801	[INFO]	44	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:33:42,801	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:42,802	[INFO]	45	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:33:42,802	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:42,803	[INFO]	46	SUCCESS	 13.0	
2020-12-17 11:33:43,779	[INFO]	47	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:33:44,744	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:33:45,705	[INFO]	49	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:33:45,709	[INFO]	50	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:33:46,700	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:33:46,702	[INFO]	52	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:33:49,884	[INFO]	53	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:33:50,836	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:33:50,841	[INFO]	55	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:33:50,841	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:50,842	[INFO]	56	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:33:50,843	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:33:50,843	[INFO]	57	SUCCESS	 13.0	
2020-12-17 11:33:54,001	[INFO]	58	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:33:54,926	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:33:58,108	[INFO]	60	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:33:58,109	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:01,378	[INFO]	61	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:34:02,332	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:34:05,541	[INFO]	63	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:34:05,543	[INFO]	64	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:34:05,544	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:06,478	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:34:07,480	[INFO]	66	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:34:07,481	[INFO]	67	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:34:07,481	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:10,596	[INFO]	68	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:34:10,598	[INFO]	69	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:34:10,599	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:10,599	[INFO]	70	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:34:10,600	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:10,601	[INFO]	71	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:34:10,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:10,602	[INFO]	72	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:34:10,603	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:10,604	[INFO]	73	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:34:10,604	[INFO]	74	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:34:10,605	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:11,554	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:34:14,710	[INFO]	76	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:34:14,711	[INFO]	77	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:34:14,712	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:14,712	[INFO]	78	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:34:14,713	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:17,933	[INFO]	79	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:34:18,856	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:34:19,821	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:34:22,956	[INFO]	82	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:34:22,957	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:34:22,958	[INFO]	83	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:34:22,958	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:26,106	[INFO]	84	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:34:29,310	[INFO]	85	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:34:29,311	[INFO]	86	SUCCESS	 13.0	
2020-12-17 11:34:32,535	[INFO]	87	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:34:35,595	[INFO]	88	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:34:35,597	[INFO]	89	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:34:35,597	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:35,598	[INFO]	90	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:34:35,599	[INFO]	91	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:34:35,599	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:38,783	[INFO]	92	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:34:38,784	[INFO]	93	SUCCESS	 13.0	
2020-12-17 11:34:38,785	[INFO]	94	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:34:38,785	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:38,786	[INFO]	95	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:34:38,786	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:34:42,049	[INFO]	96	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:34:42,051	[INFO]	97	SUCCESS	 13.0	
2020-12-17 11:34:43,000	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:34:43,891	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:34:47,071	[INFO]	100	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:34:50,189	[INFO]	101	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:34:51,154	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:34:51,157	[INFO]	103	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:34:54,157	[INFO]	104	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:34:57,320	[INFO]	105	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:35:00,517	[INFO]	106	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:35:00,518	[INFO]	107	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:35:01,441	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:35:01,442	[INFO]	109	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:35:02,410	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:35:02,413	[INFO]	111	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:35:05,604	[INFO]	112	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:35:06,538	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:35:07,503	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:35:10,613	[INFO]	115	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:35:13,758	[INFO]	116	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:35:14,727	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:35:17,797	[INFO]	118	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:35:20,932	[INFO]	119	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:35:24,066	[INFO]	120	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:35:24,066	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:24,067	[INFO]	121	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:35:24,068	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:24,068	[INFO]	122	SUCCESS	 13.0	
2020-12-17 11:35:27,258	[INFO]	123	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:35:30,443	[INFO]	124	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:35:30,444	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:33,624	[INFO]	125	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:35:37,352	[INFO]	126	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:35:37,353	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:37,355	[INFO]	127	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:35:37,358	[INFO]	128	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:35:37,359	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:38,333	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:35:41,989	[INFO]	130	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:35:41,990	[INFO]	131	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:35:42,955	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:35:43,927	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:35:44,931	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:35:44,932	[INFO]	135	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:35:44,933	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:45,929	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:35:49,104	[INFO]	137	SUCCESS	*1.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:35:49,105	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:49,106	[INFO]	138	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:35:49,106	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:35:52,226	[INFO]	139	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:35:52,227	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,30 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             ends.put(length+1, i);
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-17 11:35:52,228	[INFO]	140	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:35:52,229	[INFO]	141	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:35:52,229	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,30 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             ends.put(length+1, i);
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-17 11:35:53,179	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:35:56,399	[INFO]	143	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:35:56,400	[INFO]	144	SUCCESS	+1.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:35:56,401	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,30 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
+             ends.put(length+1, i);
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);

2020-12-17 11:35:59,583	[INFO]	145	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:36:02,735	[INFO]	146	SUCCESS	*0.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:36:02,737	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-17 11:36:02,737	[INFO]	==== END ====
2020-12-17 11:36:02,737	[INFO]	Reason: target fitness reached
2020-12-17 11:36:02,739	[INFO]	
2020-12-17 11:36:02,739	[INFO]	========== EPOCH 14 ==========
2020-12-17 11:36:02,740	[INFO]	==== WARMUP ====
2020-12-17 11:36:05,935	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:36:05,935	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:36:09,043	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:36:09,043	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:36:12,194	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:36:12,194	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:36:15,415	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:36:15,415	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:36:15,415	[INFO]	==== START ====
2020-12-17 11:36:16,318	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:36:19,364	[INFO]	2	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:36:22,470	[INFO]	3	SUCCESS	 27.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:36:23,440	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:36:24,420	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:36:27,588	[INFO]	6	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:36:28,550	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:36:29,513	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:36:32,753	[INFO]	9	SUCCESS	 22.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:36:33,676	[INFO]	10	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:36:34,628	[INFO]	11	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:36:37,835	[INFO]	12	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:36:37,836	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:36:40,989	[INFO]	13	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:36:40,990	[INFO]	14	SUCCESS	 13.0	
2020-12-17 11:36:41,956	[INFO]	15	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:36:42,928	[INFO]	16	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:36:43,919	[INFO]	17	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:36:47,162	[INFO]	18	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:36:47,163	[INFO]	19	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:36:48,083	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:36:51,225	[INFO]	21	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:36:52,191	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:36:53,129	[INFO]	23	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:36:54,086	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:36:57,235	[INFO]	25	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:36:58,114	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:36:58,115	[INFO]	27	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:37:01,218	[INFO]	28	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:37:04,346	[INFO]	29	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:37:07,508	[INFO]	30	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:37:10,601	[INFO]	31	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:37:10,602	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-17 11:37:13,721	[INFO]	32	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:37:16,877	[INFO]	33	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:37:17,854	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:37:18,839	[INFO]	35	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:37:19,828	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:37:23,034	[INFO]	37	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:37:26,155	[INFO]	38	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:37:26,156	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,40 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
+ 
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              i++;

2020-12-17 11:37:29,301	[INFO]	39	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:37:29,303	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:37:29,305	[INFO]	40	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:37:30,262	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:37:30,264	[INFO]	42	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:37:30,265	[INFO]	43	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:37:30,266	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:37:33,478	[INFO]	44	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:37:36,704	[INFO]	45	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:37:36,705	[INFO]	46	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:37:39,880	[INFO]	47	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:37:40,814	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:37:43,968	[INFO]	49	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:37:43,969	[INFO]	50	SUCCESS	 13.0	
2020-12-17 11:37:43,970	[INFO]	51	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:37:43,970	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:37:43,971	[INFO]	52	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:37:44,867	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:37:44,868	[INFO]	54	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:37:44,868	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:37:45,912	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:37:45,913	[INFO]	56	SUCCESS	 13.0	
2020-12-17 11:37:46,876	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:37:50,149	[INFO]	58	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:37:51,365	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:37:54,529	[INFO]	60	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:37:57,650	[INFO]	61	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:38:00,795	[INFO]	62	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:38:01,761	[INFO]	63	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:38:02,751	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:38:03,705	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:38:03,706	[INFO]	66	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:38:03,708	[INFO]	67	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:38:03,710	[INFO]	68	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:38:03,710	[INFO]	69	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:38:04,671	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:38:05,630	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:38:08,827	[INFO]	72	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:38:08,829	[INFO]	73	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:38:09,789	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:38:12,846	[INFO]	75	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:38:12,847	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,32 ****
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 22,35 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:38:12,848	[INFO]	76	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:38:12,848	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:38:13,793	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:38:13,794	[INFO]	78	SUCCESS	 13.0	
2020-12-17 11:38:17,036	[INFO]	79	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:38:17,959	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:38:18,823	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:38:18,825	[INFO]	82	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:38:19,883	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:38:20,845	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:38:21,823	[INFO]	85	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:38:21,826	[INFO]	86	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:38:22,784	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:38:23,729	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:38:26,964	[INFO]	89	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:38:26,965	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:38:30,093	[INFO]	90	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:38:30,096	[INFO]	91	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:38:30,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:38:31,075	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:38:31,077	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:38:31,077	[INFO]	94	SUCCESS	 13.0	
2020-12-17 11:38:32,037	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:38:32,039	[INFO]	96	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:38:35,218	[INFO]	97	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:38:36,154	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:38:39,287	[INFO]	99	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:38:39,288	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:38:42,400	[INFO]	100	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:38:42,402	[INFO]	101	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:38:45,587	[INFO]	102	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:38:48,710	[INFO]	103	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:38:48,712	[INFO]	104	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:38:48,712	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:38:48,713	[INFO]	105	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:38:48,714	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:38:48,714	[INFO]	106	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:38:49,651	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:38:49,653	[INFO]	108	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:38:49,653	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:38:50,632	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:38:50,635	[INFO]	110	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:38:50,636	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:38:50,638	[INFO]	111	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:38:50,638	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:38:51,603	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:38:52,546	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:38:53,557	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:38:56,696	[INFO]	115	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:38:56,697	[INFO]	116	SUCCESS	 13.0	
2020-12-17 11:38:57,618	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:38:58,572	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:38:59,545	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:39:00,389	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:39:01,350	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:39:02,316	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:39:02,318	[INFO]	123	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:39:02,319	[INFO]	124	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:39:03,260	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:39:06,482	[INFO]	126	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:39:06,483	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:39:09,582	[INFO]	127	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:39:09,583	[INFO]	128	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:39:09,584	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:39:09,584	[INFO]	129	SUCCESS	 13.0	
2020-12-17 11:39:09,585	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:39:12,831	[INFO]	131	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:39:15,976	[INFO]	132	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:39:19,109	[INFO]	133	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:39:20,040	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:39:20,940	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:39:21,895	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:39:22,877	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:39:26,039	[INFO]	138	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:39:29,212	[INFO]	139	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:39:30,127	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:39:33,306	[INFO]	141	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:39:33,307	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:39:36,759	[INFO]	143	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:39:37,704	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:39:38,669	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:39:41,768	[INFO]	146	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:39:41,769	[INFO]	147	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:39:41,770	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:39:41,770	[INFO]	148	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:39:41,771	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:39:41,771	[INFO]	149	SUCCESS	 13.0	
2020-12-17 11:39:44,977	[INFO]	150	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:39:45,942	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:39:46,939	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:39:47,917	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:39:51,100	[INFO]	154	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:39:54,284	[INFO]	155	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:39:57,718	[INFO]	156	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:39:58,673	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:40:01,839	[INFO]	158	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:40:02,750	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:40:03,723	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:40:06,892	[INFO]	161	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:40:06,894	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:40:06,894	[INFO]	163	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:40:07,841	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:40:08,844	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:40:11,990	[INFO]	166	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:40:11,993	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:40:12,950	[INFO]	168	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:40:13,918	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:40:14,899	[INFO]	170	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:40:15,862	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:40:15,865	[INFO]	172	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:40:15,866	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:40:16,812	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:40:17,752	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:40:17,755	[INFO]	175	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:40:17,756	[INFO]	176	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:40:17,757	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:40:17,758	[INFO]	177	SUCCESS	 13.0	
2020-12-17 11:40:17,760	[INFO]	178	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:40:17,760	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:40:17,762	[INFO]	179	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:40:20,892	[INFO]	180	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:40:20,893	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:40:20,894	[INFO]	181	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:40:20,895	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:40:20,895	[INFO]	182	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:40:21,917	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:40:22,907	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:40:26,069	[INFO]	185	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:40:27,026	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:40:27,977	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:40:27,980	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:40:28,916	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:40:28,917	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:40:31,953	[INFO]	191	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:40:31,954	[INFO]	192	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:40:31,954	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:40:31,955	[INFO]	193	SUCCESS	 13.0	
2020-12-17 11:40:32,928	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:40:33,906	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:40:37,329	[INFO]	196	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:40:40,491	[INFO]	197	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:40:41,426	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:40:44,664	[INFO]	199	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:40:47,832	[INFO]	200	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:40:48,746	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:40:51,986	[INFO]	202	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:40:51,988	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:40:55,282	[INFO]	204	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:40:55,283	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 11:40:56,241	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:40:59,377	[INFO]	206	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:40:59,378	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 11:40:59,378	[INFO]	==== END ====
2020-12-17 11:40:59,378	[INFO]	Reason: target fitness reached
2020-12-17 11:40:59,379	[INFO]	
2020-12-17 11:40:59,379	[INFO]	========== EPOCH 15 ==========
2020-12-17 11:40:59,379	[INFO]	==== WARMUP ====
2020-12-17 11:41:02,527	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:41:02,527	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:41:05,664	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:41:05,665	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:41:08,844	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:41:08,845	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:41:11,979	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:41:11,979	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:41:11,979	[INFO]	==== START ====
2020-12-17 11:41:12,949	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:41:13,906	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:41:17,098	[INFO]	3	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:41:20,297	[INFO]	4	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:41:23,391	[INFO]	5	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:41:24,333	[INFO]	6	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:41:25,291	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:41:28,483	[INFO]	8	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:41:29,439	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:41:32,721	[INFO]	10	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:41:35,827	[INFO]	11	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:41:35,828	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 27,33 ****
--- 27,36 ----
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
              if (length == longest || val < arr[ends.get(length+1)]) {
+                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 11:41:36,804	[INFO]	12	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:41:36,807	[INFO]	13	SUCCESS	+13.0	
2020-12-17 11:41:36,807	[DEBUG]	
2020-12-17 11:41:37,771	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:41:38,737	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:41:41,860	[INFO]	16	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:41:42,799	[INFO]	17	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:41:43,758	[INFO]	18	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:41:47,023	[INFO]	19	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:41:47,024	[INFO]	20	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:41:47,024	[DEBUG]	
2020-12-17 11:41:47,025	[INFO]	21	SUCCESS	+13.0	
2020-12-17 11:41:47,025	[DEBUG]	
2020-12-17 11:41:47,972	[INFO]	22	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:41:47,975	[INFO]	23	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:41:48,978	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:41:52,151	[INFO]	25	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:41:52,152	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:41:53,107	[INFO]	26	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:41:53,109	[INFO]	27	SUCCESS	 13.0	
2020-12-17 11:41:56,294	[INFO]	28	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:41:56,295	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:41:56,296	[INFO]	29	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:41:56,296	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:41:56,297	[INFO]	30	SUCCESS	 13.0	
2020-12-17 11:41:57,260	[INFO]	31	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:42:00,387	[INFO]	32	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:42:00,387	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:42:00,388	[INFO]	33	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:42:00,389	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:42:00,389	[INFO]	34	SUCCESS	 13.0	
2020-12-17 11:42:03,639	[INFO]	35	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:42:04,577	[INFO]	36	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:42:05,544	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:42:08,757	[INFO]	38	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:42:11,943	[INFO]	39	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:42:12,918	[INFO]	40	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:42:16,095	[INFO]	41	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:42:19,250	[INFO]	42	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:42:19,251	[INFO]	43	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:42:22,410	[INFO]	44	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:42:25,600	[INFO]	45	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:42:26,549	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:42:29,669	[INFO]	47	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:42:30,618	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:42:33,888	[INFO]	49	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:42:37,096	[INFO]	50	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:42:40,185	[INFO]	51	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:42:41,141	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:42:41,143	[INFO]	53	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:42:41,144	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:42:42,057	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:42:42,059	[INFO]	55	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:42:42,059	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:42:42,060	[INFO]	56	SUCCESS	 13.0	
2020-12-17 11:42:45,205	[INFO]	57	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:42:46,175	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:42:47,163	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:42:47,166	[INFO]	60	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:42:50,263	[INFO]	61	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:42:51,228	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:42:54,435	[INFO]	63	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:42:57,564	[INFO]	64	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:42:58,521	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:43:01,699	[INFO]	66	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:43:04,929	[INFO]	67	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:43:08,028	[INFO]	68	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:43:08,029	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:43:08,990	[INFO]	69	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:43:09,953	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:43:13,141	[INFO]	71	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:43:14,063	[INFO]	72	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:43:17,234	[INFO]	73	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:43:18,206	[INFO]	74	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:43:19,161	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:43:19,164	[INFO]	76	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:43:19,166	[INFO]	77	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:43:20,153	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:43:21,135	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:43:22,105	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:43:23,087	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:43:24,052	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:43:25,018	[INFO]	83	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:43:25,964	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:43:28,989	[INFO]	85	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:43:32,150	[INFO]	86	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:43:33,096	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:43:34,023	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:43:35,024	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:43:35,989	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:43:39,211	[INFO]	91	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:43:40,143	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:43:41,104	[INFO]	93	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:43:44,257	[INFO]	94	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:43:44,258	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:43:47,444	[INFO]	95	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:43:50,628	[INFO]	96	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:43:50,629	[INFO]	97	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:43:51,534	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:43:54,729	[INFO]	99	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:43:55,654	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:43:58,885	[INFO]	101	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:43:58,886	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,34 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 19,35 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+                 
              }
  
              i++;

2020-12-17 11:44:02,020	[INFO]	102	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:44:05,250	[INFO]	103	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:44:08,414	[INFO]	104	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:44:08,415	[INFO]	105	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:44:08,416	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:44:09,396	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:44:09,399	[INFO]	107	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:44:12,529	[INFO]	108	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:44:12,531	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:44:15,678	[INFO]	109	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:44:16,585	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:44:19,825	[INFO]	111	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:44:20,759	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:44:20,763	[INFO]	113	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:44:20,764	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:44:20,765	[INFO]	114	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:44:21,705	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:44:21,707	[INFO]	116	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:44:21,708	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:44:24,892	[INFO]	117	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:44:28,070	[INFO]	118	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:44:28,070	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:44:28,071	[INFO]	119	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:44:28,072	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:44:31,289	[INFO]	120	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:44:31,290	[INFO]	121	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:44:32,273	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:44:33,226	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:44:33,227	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:44:36,379	[INFO]	125	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:44:39,531	[INFO]	126	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:44:42,723	[INFO]	127	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:44:43,591	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:44:44,544	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:44:44,545	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:44:47,680	[INFO]	131	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:44:48,632	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:44:51,820	[INFO]	133	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:44:55,022	[INFO]	134	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:44:55,967	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:44:55,971	[INFO]	136	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:44:55,972	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:44:57,200	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:44:57,202	[INFO]	138	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:44:57,202	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:00,475	[INFO]	139	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:45:01,410	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:45:01,412	[INFO]	141	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:45:04,558	[INFO]	142	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:45:04,560	[INFO]	143	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:05,470	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:45:06,473	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:45:07,475	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:45:08,464	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:45:11,603	[INFO]	148	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:45:12,532	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:45:13,487	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:45:13,489	[INFO]	151	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:45:13,489	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:13,490	[INFO]	152	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:45:13,491	[INFO]	153	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:45:16,732	[INFO]	154	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:45:16,733	[INFO]	155	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:45:16,734	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:16,734	[INFO]	156	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:45:19,755	[INFO]	157	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:45:22,946	[INFO]	158	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:45:22,948	[INFO]	159	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:45:22,948	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:22,949	[INFO]	160	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:45:22,950	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:22,950	[INFO]	161	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:45:23,926	[INFO]	162	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:45:23,929	[INFO]	163	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:27,167	[INFO]	164	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:45:27,168	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:28,063	[INFO]	165	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:45:31,341	[INFO]	166	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:45:32,295	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:45:32,297	[INFO]	168	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:32,298	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:32,299	[INFO]	169	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:32,299	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:35,546	[INFO]	170	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:36,794	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:45:37,893	[INFO]	172	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:45:42,121	[INFO]	173	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:45:42,124	[INFO]	174	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:42,125	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:42,127	[INFO]	175	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:45:43,301	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:45:43,304	[INFO]	177	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:45:43,305	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 11:45:43,307	[INFO]	178	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:43,307	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:45:43,309	[INFO]	179	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:45:43,311	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:45:43,312	[INFO]	181	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:45:43,314	[INFO]	182	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:45:46,783	[INFO]	183	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:45:46,785	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:45:50,409	[INFO]	185	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:45:50,411	[INFO]	186	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:45:50,413	[INFO]	187	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:45:51,316	[INFO]	188	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:45:54,477	[INFO]	189	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:45:57,658	[INFO]	190	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:46:00,892	[INFO]	191	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:46:00,893	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:01,799	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:46:04,984	[INFO]	193	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:46:04,984	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:04,985	[INFO]	194	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:46:05,918	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:46:05,920	[INFO]	196	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:46:05,921	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:06,900	[INFO]	197	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:46:06,901	[INFO]	198	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:46:06,902	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:06,902	[INFO]	199	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:46:06,903	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:07,866	[INFO]	200	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:46:11,028	[INFO]	201	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:46:11,030	[INFO]	202	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:46:11,030	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:11,975	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:46:12,941	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:46:12,943	[INFO]	205	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:46:12,944	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:13,882	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:46:13,883	[INFO]	207	SUCCESS	 13.0	
2020-12-17 11:46:17,046	[INFO]	208	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:46:17,953	[INFO]	209	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:46:18,919	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:46:19,901	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:46:20,868	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:46:21,829	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:46:22,677	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:46:25,818	[INFO]	215	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:46:25,819	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:28,980	[INFO]	216	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:46:32,040	[INFO]	217	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:46:32,978	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:46:32,981	[INFO]	219	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:46:32,981	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:32,983	[INFO]	220	SUCCESS	 13.0	
2020-12-17 11:46:32,985	[INFO]	221	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:46:33,944	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:46:33,946	[INFO]	223	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:46:37,142	[INFO]	224	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:46:40,305	[INFO]	225	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:46:43,787	[INFO]	226	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:46:46,996	[INFO]	227	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:46:46,998	[INFO]	228	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:46:47,921	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:46:51,088	[INFO]	230	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:46:54,270	[INFO]	231	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:46:57,789	[INFO]	232	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:46:57,790	[INFO]	233	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:46:57,791	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:46:58,726	[INFO]	234	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:46:58,727	[INFO]	235	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:47:01,891	[INFO]	236	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:47:01,892	[INFO]	237	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:47:01,893	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:47:01,893	[INFO]	238	SUCCESS	 13.0	
2020-12-17 11:47:02,832	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:47:03,763	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:47:04,710	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:47:04,711	[INFO]	242	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 11:47:07,839	[INFO]	243	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:47:08,785	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:47:11,991	[INFO]	245	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:47:11,995	[INFO]	246	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:47:11,996	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:47:11,997	[INFO]	247	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:47:11,998	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:47:15,164	[INFO]	248	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:47:15,165	[INFO]	249	SUCCESS	 13.0	
2020-12-17 11:47:16,080	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:47:17,031	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:47:17,990	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:47:21,223	[INFO]	253	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:47:21,224	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,34 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 11:47:21,224	[INFO]	254	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:47:21,225	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:47:21,225	[INFO]	255	SUCCESS	 13.0	
2020-12-17 11:47:22,160	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:47:23,128	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:47:26,206	[INFO]	258	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:47:27,107	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:47:28,394	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:47:29,374	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:47:30,350	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:47:33,537	[INFO]	263	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:47:34,510	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:47:35,397	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:47:35,398	[INFO]	266	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:47:35,399	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:47:35,399	[INFO]	267	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:47:35,400	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:47:36,279	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:47:36,280	[INFO]	269	SUCCESS	 13.0	
2020-12-17 11:47:37,211	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:47:38,189	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:47:41,349	[INFO]	272	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:47:42,295	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:47:42,300	[INFO]	274	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:47:43,529	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:47:44,493	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:47:44,494	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:47:45,444	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:47:46,367	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:47:49,546	[INFO]	280	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:47:52,713	[INFO]	281	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:47:55,894	[INFO]	282	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:47:56,800	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:47:57,735	[INFO]	284	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:47:58,715	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:47:59,709	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:47:59,710	[INFO]	287	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:47:59,711	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:47:59,712	[INFO]	288	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:48:02,943	[INFO]	289	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:48:02,945	[INFO]	290	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:48:02,945	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:48:02,946	[INFO]	291	SUCCESS	 13.0	
2020-12-17 11:48:03,923	[INFO]	292	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:48:04,896	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:48:05,896	[INFO]	294	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:48:06,863	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:48:07,865	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:48:11,049	[INFO]	297	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:48:14,176	[INFO]	298	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:48:15,141	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:48:16,112	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:48:16,113	[INFO]	301	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:48:16,114	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:48:16,114	[INFO]	302	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:48:16,115	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:48:17,093	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:48:17,095	[INFO]	304	SUCCESS	 13.0	
2020-12-17 11:48:17,097	[INFO]	305	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:48:18,076	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:48:18,079	[INFO]	307	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:48:18,081	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:48:21,347	[INFO]	309	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:48:24,339	[INFO]	310	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:48:25,283	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:48:26,261	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:48:27,202	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:48:30,381	[INFO]	314	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:48:31,358	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:48:34,475	[INFO]	316	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:48:34,477	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:48:35,452	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:48:38,562	[INFO]	319	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:48:38,564	[INFO]	320	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:48:38,567	[INFO]	321	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:48:41,672	[INFO]	322	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:48:44,892	[INFO]	323	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:48:46,013	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:48:47,018	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:48:48,053	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:48:49,015	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:48:49,982	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:48:53,225	[INFO]	329	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:48:56,901	[INFO]	330	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:49:00,483	[INFO]	331	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:49:01,522	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:49:05,600	[INFO]	333	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:49:06,638	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:49:07,664	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:49:11,105	[INFO]	336	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:49:14,523	[INFO]	337	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:49:14,524	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:49:17,789	[INFO]	338	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:49:18,734	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:49:18,736	[INFO]	340	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:49:18,736	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:49:22,013	[INFO]	341	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:49:23,009	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:49:23,013	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:49:24,006	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:49:24,971	[INFO]	345	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:49:28,175	[INFO]	346	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:49:28,176	[INFO]	347	SUCCESS	 13.0	
2020-12-17 11:49:28,177	[INFO]	348	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:49:28,177	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:49:28,178	[INFO]	349	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:49:28,178	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:49:29,175	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:49:29,178	[INFO]	351	SUCCESS	 13.0	
2020-12-17 11:49:30,183	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:49:33,506	[INFO]	353	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:49:34,504	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:49:35,453	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:49:38,707	[INFO]	356	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:49:39,739	[INFO]	357	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:49:40,768	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:49:41,817	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:49:42,858	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:49:43,932	[INFO]	361	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:49:43,936	[INFO]	362	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:49:44,989	[INFO]	363	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:49:44,991	[INFO]	364	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:49:48,384	[INFO]	365	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:49:49,434	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:49:52,827	[INFO]	367	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:49:53,873	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:49:57,250	[INFO]	369	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:49:58,213	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:50:01,586	[INFO]	371	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:50:04,763	[INFO]	372	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:50:05,722	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:50:06,694	[INFO]	374	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:50:10,017	[INFO]	375	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:50:10,949	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:50:10,951	[INFO]	377	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:50:10,951	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:11,909	[INFO]	378	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:50:11,911	[INFO]	379	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:50:12,920	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:50:13,909	[INFO]	381	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:50:13,911	[INFO]	382	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:50:13,913	[INFO]	383	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:50:13,914	[INFO]	384	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:50:13,914	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:14,809	[INFO]	385	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:50:15,749	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:50:15,750	[INFO]	387	SUCCESS	 13.0	
2020-12-17 11:50:16,785	[INFO]	388	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:50:20,038	[INFO]	389	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:50:20,044	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:50:23,235	[INFO]	391	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:50:26,460	[INFO]	392	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:50:29,665	[INFO]	393	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:50:29,666	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:30,652	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:50:30,653	[INFO]	395	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:50:30,654	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:31,669	[INFO]	396	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:50:31,670	[INFO]	397	SUCCESS	 13.0	
2020-12-17 11:50:32,671	[INFO]	398	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:50:36,107	[INFO]	399	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:50:37,081	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:50:37,082	[INFO]	401	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:50:37,083	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:38,074	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:50:39,105	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:50:39,111	[INFO]	404	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:50:39,123	[INFO]	405	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:50:39,125	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:39,132	[INFO]	406	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:50:42,291	[INFO]	407	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:50:42,292	[INFO]	408	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:50:43,219	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:50:46,587	[INFO]	410	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:50:49,798	[INFO]	411	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:50:49,799	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:50,792	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:50:50,794	[INFO]	413	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:50:50,795	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:50,796	[INFO]	414	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:50:50,797	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:53,884	[INFO]	415	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:50:54,797	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:50:58,027	[INFO]	417	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:50:58,029	[INFO]	418	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:50:58,029	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:50:58,030	[INFO]	419	SUCCESS	 13.0	
2020-12-17 11:50:59,022	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:51:00,039	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:51:01,040	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:51:02,039	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:51:05,246	[INFO]	424	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 11:51:05,248	[INFO]	425	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:51:06,250	[INFO]	426	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:51:09,576	[INFO]	427	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:51:09,577	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:09,578	[INFO]	428	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:51:09,578	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:09,579	[INFO]	429	SUCCESS	 13.0	
2020-12-17 11:51:09,580	[INFO]	430	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:51:10,524	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:51:10,526	[INFO]	432	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:51:10,526	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:13,725	[INFO]	433	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:51:13,726	[INFO]	434	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:51:16,985	[INFO]	435	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:51:16,987	[INFO]	436	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:51:16,987	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:16,988	[INFO]	437	SUCCESS	 13.0	
2020-12-17 11:51:17,945	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:51:18,945	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:51:18,947	[INFO]	440	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:51:18,948	[INFO]	441	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:51:18,948	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:22,166	[INFO]	442	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:51:22,167	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 11:51:22,167	[INFO]	==== END ====
2020-12-17 11:51:22,168	[INFO]	Reason: target fitness reached
2020-12-17 11:51:22,168	[INFO]	
2020-12-17 11:51:22,169	[INFO]	========== EPOCH 16 ==========
2020-12-17 11:51:22,169	[INFO]	==== WARMUP ====
2020-12-17 11:51:25,407	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:51:25,407	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:51:28,635	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:51:28,636	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:51:31,869	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 11:51:31,869	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:51:35,095	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 11:51:35,096	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 11:51:35,096	[INFO]	==== START ====
2020-12-17 11:51:38,326	[INFO]	1	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:51:38,327	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:41,631	[INFO]	2	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:51:41,632	[INFO]	3	SUCCESS	 13.0	
2020-12-17 11:51:42,602	[INFO]	4	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:51:45,823	[INFO]	5	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:51:46,811	[INFO]	6	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:51:50,146	[INFO]	7	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:51:53,423	[INFO]	8	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:51:53,424	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:53,425	[INFO]	9	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:51:53,425	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:51:56,665	[INFO]	10	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:51:56,666	[INFO]	11	SUCCESS	 13.0	
2020-12-17 11:51:59,841	[INFO]	12	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:51:59,842	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:00,847	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:52:01,863	[INFO]	14	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:52:05,077	[INFO]	15	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:52:05,944	[INFO]	16	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:52:05,946	[INFO]	17	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:52:05,946	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:05,946	[INFO]	18	SUCCESS	 13.0	
2020-12-17 11:52:06,955	[INFO]	19	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:52:07,901	[INFO]	20	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:52:08,840	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:52:08,842	[INFO]	22	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:52:08,842	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:08,843	[INFO]	23	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:52:08,843	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:09,821	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:52:13,047	[INFO]	25	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:52:13,048	[INFO]	26	SUCCESS	 13.0	
2020-12-17 11:52:13,049	[INFO]	27	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:52:16,333	[INFO]	28	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:52:16,334	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:19,566	[INFO]	29	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:52:22,784	[INFO]	30	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:52:25,852	[INFO]	31	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:52:26,787	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:52:26,788	[INFO]	33	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:52:26,788	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:27,764	[INFO]	34	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:52:27,765	[INFO]	35	SUCCESS	 13.0	
2020-12-17 11:52:31,131	[INFO]	36	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:52:32,131	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:52:35,390	[INFO]	38	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 11:52:38,564	[INFO]	39	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:52:39,555	[INFO]	40	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:52:40,538	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:52:41,486	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:52:44,886	[INFO]	43	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:52:44,887	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,34 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:45,828	[INFO]	44	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:52:49,045	[INFO]	45	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:52:50,020	[INFO]	46	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:52:53,270	[INFO]	47	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:52:54,247	[INFO]	48	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:52:54,248	[INFO]	49	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:52:54,249	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:54,249	[INFO]	50	SUCCESS	 13.0	
2020-12-17 11:52:54,250	[INFO]	51	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:52:55,263	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:52:58,476	[INFO]	53	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:52:58,478	[INFO]	54	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:52:58,479	[INFO]	55	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:52:58,480	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:58,481	[INFO]	56	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:52:58,481	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:52:58,482	[INFO]	57	SUCCESS	 13.0	
2020-12-17 11:52:58,483	[INFO]	58	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:52:59,443	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:52:59,445	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:53:02,671	[INFO]	61	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:53:02,672	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:03,647	[INFO]	62	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:53:03,648	[INFO]	63	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:53:03,649	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:03,649	[INFO]	64	SUCCESS	 13.0	
2020-12-17 11:53:06,738	[INFO]	65	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:53:06,740	[INFO]	66	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:53:06,741	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:06,741	[INFO]	67	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:53:06,742	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:07,748	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:53:07,750	[INFO]	69	SUCCESS	 13.0	
2020-12-17 11:53:08,729	[INFO]	70	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:53:09,716	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:53:09,720	[INFO]	72	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:53:09,721	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:10,714	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:53:13,872	[INFO]	74	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:53:17,153	[INFO]	75	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 11:53:17,154	[INFO]	76	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:53:17,154	[INFO]	77	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:53:17,155	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:17,155	[INFO]	78	SUCCESS	 13.0	
2020-12-17 11:53:18,107	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:53:19,104	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:53:20,114	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 11:53:20,116	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:53:20,117	[INFO]	83	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:53:21,103	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:53:24,339	[INFO]	85	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:53:27,613	[INFO]	86	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:53:28,645	[INFO]	87	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:53:29,618	[INFO]	88	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:53:30,618	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:53:31,664	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:53:34,911	[INFO]	91	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:53:34,912	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:38,690	[INFO]	92	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 11:53:38,692	[INFO]	93	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:53:38,693	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:38,694	[INFO]	94	SUCCESS	 13.0	
2020-12-17 11:53:38,697	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:53:40,336	[INFO]	96	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:53:43,571	[INFO]	97	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:53:44,527	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:53:47,718	[INFO]	99	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:53:49,021	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:53:49,023	[INFO]	101	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:53:49,023	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:49,024	[INFO]	102	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:53:49,024	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:50,121	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:53:50,125	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:53:51,080	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:53:51,081	[INFO]	106	SUCCESS	 13.0	
2020-12-17 11:53:51,082	[INFO]	107	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:53:52,069	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:53:55,335	[INFO]	109	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:53:55,337	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:53:56,289	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:53:56,291	[INFO]	112	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:53:56,292	[INFO]	113	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:53:57,287	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:53:57,291	[INFO]	115	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:53:57,292	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:53:58,195	[INFO]	116	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:54:01,403	[INFO]	117	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:54:01,404	[INFO]	118	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:54:01,405	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:01,406	[INFO]	119	SUCCESS	 13.0	
2020-12-17 11:54:04,624	[INFO]	120	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:54:07,814	[INFO]	121	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:54:08,820	[INFO]	122	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:54:12,084	[INFO]	123	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:54:13,058	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:54:14,064	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:54:14,066	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:54:14,067	[INFO]	127	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:54:14,067	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:54:14,069	[INFO]	129	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:54:14,070	[INFO]	130	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 11:54:14,071	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:15,085	[INFO]	131	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:54:16,083	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:54:17,054	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:54:17,056	[INFO]	134	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:54:17,056	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:17,056	[INFO]	135	SUCCESS	 13.0	
2020-12-17 11:54:18,022	[INFO]	136	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:54:18,999	[INFO]	137	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:54:22,173	[INFO]	138	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:54:25,488	[INFO]	139	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:54:25,490	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:54:25,491	[INFO]	141	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:54:25,491	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:25,492	[INFO]	142	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:54:25,493	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:26,434	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:54:27,418	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:54:28,390	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:54:28,392	[INFO]	146	SUCCESS	 13.0	
2020-12-17 11:54:28,394	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:54:28,396	[INFO]	148	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:54:31,757	[INFO]	149	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:54:32,716	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:54:32,718	[INFO]	151	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:54:36,010	[INFO]	152	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:54:36,012	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:36,015	[INFO]	153	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:54:36,016	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:36,017	[INFO]	154	SUCCESS	 13.0	
2020-12-17 11:54:36,020	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:54:36,963	[INFO]	156	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:54:38,180	[INFO]	157	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:54:38,183	[INFO]	158	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:54:38,183	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:54:41,410	[INFO]	159	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:54:42,405	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:54:43,418	[INFO]	161	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:54:46,667	[INFO]	162	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:54:46,668	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:54:46,669	[INFO]	163	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:54:46,670	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:54:50,282	[INFO]	164	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 11:54:53,555	[INFO]	165	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:54:56,746	[INFO]	166	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:54:56,749	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:54:56,751	[INFO]	167	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:54:56,752	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 11:54:56,753	[INFO]	168	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:54:57,691	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:55:00,913	[INFO]	170	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:55:00,917	[INFO]	171	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:55:00,918	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:00,920	[INFO]	172	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:55:00,921	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:01,865	[INFO]	173	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:55:02,875	[INFO]	174	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:55:02,876	[INFO]	175	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:55:02,877	[INFO]	176	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:55:02,877	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:02,878	[INFO]	177	SUCCESS	 13.0	
2020-12-17 11:55:03,850	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:55:04,882	[INFO]	179	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:55:08,118	[INFO]	180	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:55:11,308	[INFO]	181	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:55:12,287	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:55:13,280	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:55:13,283	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:55:16,527	[INFO]	185	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:55:16,528	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:19,742	[INFO]	186	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:55:20,756	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:55:20,758	[INFO]	188	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:55:20,759	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:20,760	[INFO]	189	SUCCESS	 13.0	
2020-12-17 11:55:20,761	[INFO]	190	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:55:21,714	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:55:22,689	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:55:22,692	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:55:23,697	[INFO]	194	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:55:24,706	[INFO]	195	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:55:27,935	[INFO]	196	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:55:31,187	[INFO]	197	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 11:55:32,187	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:55:32,188	[INFO]	199	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:55:35,647	[INFO]	200	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:55:37,380	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:55:38,427	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:55:38,428	[INFO]	203	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:55:38,430	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:55:42,772	[INFO]	205	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:55:44,269	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:55:48,731	[INFO]	207	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 11:55:49,890	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:55:53,533	[INFO]	209	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:55:56,797	[INFO]	210	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:55:56,798	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:57,797	[INFO]	211	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:55:57,801	[INFO]	212	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:55:57,802	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:57,805	[INFO]	213	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:55:57,807	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:57,809	[INFO]	214	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:55:57,810	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:55:57,813	[INFO]	215	SUCCESS	 13.0	
2020-12-17 11:56:01,121	[INFO]	216	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:56:04,323	[INFO]	217	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:56:05,263	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:56:08,536	[INFO]	219	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:56:11,779	[INFO]	220	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 11:56:11,781	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:56:11,782	[INFO]	222	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:56:11,782	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:56:11,783	[INFO]	223	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:56:11,783	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:56:11,784	[INFO]	224	SUCCESS	 13.0	
2020-12-17 11:56:12,755	[INFO]	225	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:56:13,780	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:56:14,777	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:56:17,996	[INFO]	228	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:56:18,960	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:56:19,961	[INFO]	230	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:56:19,964	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:56:19,966	[INFO]	232	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:56:20,961	[INFO]	233	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:56:20,964	[INFO]	234	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:56:21,951	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:56:25,219	[INFO]	236	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 11:56:26,170	[INFO]	237	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:56:27,163	[INFO]	238	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 11:56:28,077	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:56:29,055	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 11:56:30,021	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:56:33,303	[INFO]	242	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:56:34,275	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:56:34,280	[INFO]	244	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:56:37,406	[INFO]	245	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:56:40,605	[INFO]	246	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:56:43,842	[INFO]	247	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:56:43,844	[INFO]	248	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:56:43,845	[INFO]	249	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:56:44,845	[INFO]	250	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 11:56:44,849	[INFO]	251	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:56:45,836	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:56:45,838	[INFO]	253	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:56:49,188	[INFO]	254	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:56:52,362	[INFO]	255	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:56:53,351	[INFO]	256	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:56:54,342	[INFO]	257	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:56:57,593	[INFO]	258	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:56:58,551	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:56:59,516	[INFO]	260	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:56:59,517	[INFO]	261	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:57:00,536	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:57:00,539	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:57:00,542	[INFO]	264	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:57:01,522	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:57:04,728	[INFO]	266	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:57:07,979	[INFO]	267	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:57:07,981	[INFO]	268	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 11:57:11,189	[INFO]	269	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:57:14,421	[INFO]	270	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:57:15,412	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:57:16,403	[INFO]	272	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:57:17,413	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:57:18,442	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:57:18,447	[INFO]	275	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:57:19,425	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:57:19,427	[INFO]	277	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:57:22,653	[INFO]	278	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:57:23,651	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:57:23,654	[INFO]	280	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:57:23,655	[INFO]	281	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:57:23,656	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:26,823	[INFO]	282	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:57:26,824	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:27,831	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:57:31,092	[INFO]	284	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:57:34,269	[INFO]	285	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 11:57:35,280	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:57:36,252	[INFO]	287	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:57:36,253	[INFO]	288	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:57:36,254	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:39,552	[INFO]	289	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:57:42,779	[INFO]	290	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 11:57:42,780	[INFO]	291	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:57:42,781	[INFO]	292	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:57:42,781	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:42,782	[INFO]	293	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:57:42,782	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:42,783	[INFO]	294	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:57:45,898	[INFO]	295	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:57:45,899	[INFO]	296	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:57:45,900	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:45,900	[INFO]	297	SUCCESS	 13.0	
2020-12-17 11:57:46,855	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:57:47,826	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:57:48,865	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:57:48,868	[INFO]	301	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:57:51,928	[INFO]	302	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:57:51,929	[INFO]	303	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:57:51,929	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:51,930	[INFO]	304	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:57:51,931	[INFO]	305	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:57:51,931	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:57:51,932	[INFO]	306	SUCCESS	 13.0	
2020-12-17 11:57:52,904	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:57:53,926	[INFO]	308	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:57:57,272	[INFO]	309	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 11:58:00,414	[INFO]	310	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 11:58:03,584	[INFO]	311	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 11:58:03,585	[INFO]	312	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:58:04,557	[INFO]	313	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 11:58:07,770	[INFO]	314	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:58:07,771	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:58:11,033	[INFO]	315	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:58:11,034	[INFO]	316	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:58:11,035	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:58:11,035	[INFO]	317	SUCCESS	 13.0	
2020-12-17 11:58:12,035	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:58:13,073	[INFO]	319	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:58:14,159	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 11:58:14,165	[INFO]	321	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:58:18,737	[INFO]	322	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 11:58:25,186	[INFO]	323	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 11:58:27,617	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:58:29,744	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:58:31,910	[INFO]	326	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:58:34,128	[INFO]	327	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:58:40,130	[INFO]	328	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:58:40,132	[INFO]	329	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 11:58:41,632	[INFO]	330	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 11:58:47,462	[INFO]	331	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 11:58:49,348	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:58:55,449	[INFO]	333	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 11:59:00,093	[INFO]	334	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:59:00,094	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:03,363	[INFO]	335	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:59:03,365	[INFO]	336	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:59:03,366	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:03,368	[INFO]	337	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:59:03,369	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:03,371	[INFO]	338	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 11:59:03,372	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:03,373	[INFO]	339	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 11:59:03,374	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:04,632	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 11:59:04,634	[INFO]	341	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:59:04,635	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:05,632	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:59:06,668	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 11:59:06,670	[INFO]	344	SUCCESS	 13.0	
2020-12-17 11:59:06,672	[INFO]	345	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 11:59:07,685	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:59:10,995	[INFO]	347	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 11:59:10,997	[INFO]	348	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:59:14,288	[INFO]	349	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 11:59:15,297	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 11:59:18,796	[INFO]	351	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:59:18,797	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:19,765	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:59:23,310	[INFO]	353	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:59:23,311	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,33 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:27,213	[INFO]	354	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 11:59:28,152	[INFO]	355	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:59:28,154	[INFO]	356	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 11:59:28,154	[INFO]	357	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:59:28,155	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:29,571	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 11:59:33,182	[INFO]	359	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 11:59:37,257	[INFO]	360	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:59:37,259	[INFO]	361	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 11:59:37,259	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:37,260	[INFO]	362	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:59:37,260	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:41,218	[INFO]	363	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 11:59:41,220	[INFO]	364	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 11:59:41,221	[INFO]	365	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:59:41,221	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:42,659	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:59:42,661	[INFO]	367	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:59:42,662	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:43,955	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 11:59:45,057	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 11:59:45,060	[INFO]	370	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:59:45,061	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:46,099	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:59:47,605	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 11:59:48,739	[INFO]	373	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 11:59:48,740	[INFO]	374	SUCCESS	 13.0	
2020-12-17 11:59:48,742	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 11:59:50,167	[INFO]	376	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 11:59:53,616	[INFO]	377	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:59:53,618	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:57,801	[INFO]	378	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 11:59:57,803	[INFO]	379	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 11:59:57,803	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 11:59:57,804	[INFO]	380	SUCCESS	 13.0	
2020-12-17 12:00:01,675	[INFO]	381	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:00:05,576	[INFO]	382	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:00:06,686	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:00:11,184	[INFO]	384	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:00:13,129	[INFO]	385	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:00:17,849	[INFO]	386	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:00:17,850	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 12:00:18,878	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:00:22,283	[INFO]	388	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:00:25,342	[INFO]	389	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:00:25,343	[INFO]	390	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:00:25,344	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:00:25,344	[INFO]	391	SUCCESS	 13.0	
2020-12-17 12:00:28,783	[INFO]	392	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:00:29,750	[INFO]	393	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:00:29,753	[INFO]	394	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:00:29,756	[INFO]	395	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 12:00:29,756	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:00:33,061	[INFO]	396	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 12:00:34,044	[INFO]	397	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:00:34,045	[INFO]	398	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:00:34,046	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:00:37,470	[INFO]	399	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:00:37,471	[INFO]	400	SUCCESS	 13.0	
2020-12-17 12:00:40,633	[INFO]	401	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 12:00:41,713	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:00:41,715	[INFO]	403	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:00:41,718	[INFO]	404	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 12:00:41,719	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:00:41,720	[INFO]	405	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:00:41,721	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:00:43,157	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:00:43,158	[INFO]	407	SUCCESS	 13.0	
2020-12-17 12:00:47,790	[INFO]	408	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:00:49,136	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:00:49,139	[INFO]	410	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:00:50,282	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:00:50,285	[INFO]	412	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:00:51,468	[INFO]	413	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:00:56,096	[INFO]	414	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:01:01,577	[INFO]	415	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:01:02,607	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:01:03,741	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:01:03,743	[INFO]	418	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:01:05,332	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:01:08,860	[INFO]	420	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:01:13,100	[INFO]	421	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 12:01:14,113	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:01:15,266	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:01:18,665	[INFO]	424	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:01:18,666	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:01:18,668	[INFO]	426	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:01:22,418	[INFO]	427	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:01:23,739	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:01:27,255	[INFO]	429	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:01:28,402	[INFO]	430	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:01:29,576	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:01:33,589	[INFO]	432	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:01:33,591	[INFO]	433	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:01:33,591	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:01:33,592	[INFO]	434	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:01:33,592	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:01:33,593	[INFO]	435	SUCCESS	 13.0	
2020-12-17 12:01:34,758	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:01:36,384	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:01:41,062	[INFO]	438	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:01:42,163	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:01:45,941	[INFO]	440	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:01:45,942	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,34 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:01:46,918	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:01:47,985	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:01:51,435	[INFO]	443	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:01:54,624	[INFO]	444	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:01:54,625	[INFO]	445	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:01:54,626	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:01:55,536	[INFO]	446	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:01:56,516	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:01:56,518	[INFO]	448	SUCCESS	 13.0	
2020-12-17 12:01:56,519	[INFO]	449	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:01:57,486	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:02:00,768	[INFO]	451	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:02:01,680	[INFO]	452	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:02:02,645	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:02:03,518	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:02:06,875	[INFO]	455	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:02:06,877	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:02:06,878	[INFO]	457	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:02:07,972	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:02:07,978	[INFO]	459	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:02:08,927	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:02:10,038	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:02:14,353	[INFO]	462	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:02:19,613	[INFO]	463	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 12:02:22,992	[INFO]	464	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:02:26,252	[INFO]	465	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:02:29,772	[INFO]	466	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:02:30,876	[INFO]	467	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:02:31,892	[INFO]	468	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:02:35,056	[INFO]	469	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:02:35,056	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:02:36,021	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:02:36,022	[INFO]	471	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:02:36,023	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:02:36,023	[INFO]	472	SUCCESS	 13.0	
2020-12-17 12:02:39,675	[INFO]	473	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:02:40,904	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:02:42,215	[INFO]	475	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:02:42,216	[INFO]	476	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:02:42,217	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:02:43,202	[INFO]	477	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:02:43,204	[INFO]	478	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:02:47,034	[INFO]	479	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:02:47,035	[INFO]	480	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:02:47,036	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:02:48,165	[INFO]	481	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:02:49,283	[INFO]	482	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:02:49,286	[INFO]	483	SUCCESS	 13.0	
2020-12-17 12:02:50,437	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:02:54,503	[INFO]	485	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:02:54,506	[INFO]	486	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:02:58,452	[INFO]	487	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:03:02,527	[INFO]	488	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 12:03:03,536	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:03:04,543	[INFO]	490	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:03:07,701	[INFO]	491	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:03:08,687	[INFO]	492	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:03:09,671	[INFO]	493	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:03:10,628	[INFO]	494	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:03:10,630	[INFO]	495	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:03:11,596	[INFO]	496	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:03:12,578	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:03:12,581	[INFO]	498	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:03:12,582	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:03:12,584	[INFO]	499	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:03:12,585	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:03:12,586	[INFO]	500	SUCCESS	 13.0	
2020-12-17 12:03:12,586	[INFO]	==== END ====
2020-12-17 12:03:12,586	[INFO]	Reason: step budget
2020-12-17 12:03:12,588	[INFO]	
2020-12-17 12:03:12,588	[INFO]	========== EPOCH 17 ==========
2020-12-17 12:03:12,588	[INFO]	==== WARMUP ====
2020-12-17 12:03:15,725	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:03:15,726	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:03:18,881	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:03:18,881	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:03:22,273	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:03:22,273	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:03:25,530	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 12:03:25,530	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:03:25,530	[INFO]	==== START ====
2020-12-17 12:03:26,539	[INFO]	1	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:03:27,527	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:03:28,481	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:03:29,483	[INFO]	4	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:03:30,410	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:03:30,413	[INFO]	6	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:03:30,413	[DEBUG]	
2020-12-17 12:03:30,414	[INFO]	7	SUCCESS	+13.0	
2020-12-17 12:03:30,415	[DEBUG]	
2020-12-17 12:03:30,416	[INFO]	8	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:03:30,417	[DEBUG]	
2020-12-17 12:03:30,418	[INFO]	9	SUCCESS	+13.0	
2020-12-17 12:03:30,418	[DEBUG]	
2020-12-17 12:03:33,621	[INFO]	10	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:03:36,819	[INFO]	11	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:03:36,820	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,26 ****
--- 21,27 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  

2020-12-17 12:03:37,785	[INFO]	12	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:03:37,787	[INFO]	13	SUCCESS	+13.0	
2020-12-17 12:03:37,787	[DEBUG]	
2020-12-17 12:03:42,076	[INFO]	14	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:03:42,077	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,38 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
                  longest = length + 1;
              }
  

2020-12-17 12:03:43,401	[INFO]	15	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:03:43,402	[INFO]	16	SUCCESS	+13.0	
2020-12-17 12:03:43,403	[DEBUG]	
2020-12-17 12:03:47,538	[INFO]	17	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:03:51,657	[INFO]	18	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:03:55,094	[INFO]	19	SUCCESS	 23.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:04:00,066	[INFO]	20	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:04:04,068	[INFO]	21	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:04:05,111	[INFO]	22	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:04:06,314	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:04:08,066	[INFO]	24	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:04:10,160	[INFO]	25	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:04:12,177	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:04:17,777	[INFO]	27	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:04:19,071	[INFO]	28	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:04:20,581	[INFO]	29	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:04:21,662	[INFO]	30	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:04:21,663	[INFO]	31	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:04:22,755	[INFO]	32	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:04:23,783	[INFO]	33	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:04:24,834	[INFO]	34	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:04:29,891	[INFO]	35	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:04:29,892	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:04:29,893	[INFO]	36	SUCCESS	+13.0	
2020-12-17 12:04:29,893	[DEBUG]	
2020-12-17 12:04:31,152	[INFO]	37	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:04:32,612	[INFO]	38	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:04:32,615	[INFO]	39	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:04:32,615	[DEBUG]	
2020-12-17 12:04:32,617	[INFO]	40	SUCCESS	+13.0	
2020-12-17 12:04:32,617	[DEBUG]	
2020-12-17 12:04:33,918	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:04:38,073	[INFO]	42	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:04:39,642	[INFO]	43	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:04:41,101	[INFO]	44	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:04:41,103	[INFO]	45	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:04:42,544	[INFO]	46	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:04:43,959	[INFO]	47	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:04:46,296	[INFO]	48	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:04:48,204	[INFO]	49	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:04:53,948	[INFO]	50	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:04:53,950	[INFO]	51	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:04:53,950	[DEBUG]	
2020-12-17 12:04:53,951	[INFO]	52	SUCCESS	+13.0	
2020-12-17 12:04:53,951	[DEBUG]	
2020-12-17 12:04:57,465	[INFO]	53	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:04:58,494	[INFO]	54	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:04:59,581	[INFO]	55	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:05:03,882	[INFO]	56	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:05:03,883	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:05:09,578	[INFO]	57	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:05:09,580	[INFO]	58	SUCCESS	+13.0	
2020-12-17 12:05:09,581	[DEBUG]	
2020-12-17 12:05:14,203	[INFO]	59	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:05:14,204	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,26 ****
--- 20,28 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  

2020-12-17 12:05:15,329	[INFO]	60	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:05:15,330	[INFO]	61	SUCCESS	+13.0	
2020-12-17 12:05:15,331	[DEBUG]	
2020-12-17 12:05:15,332	[INFO]	62	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:05:15,332	[DEBUG]	
2020-12-17 12:05:15,333	[INFO]	63	SUCCESS	+13.0	
2020-12-17 12:05:15,333	[DEBUG]	
2020-12-17 12:05:19,337	[INFO]	64	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:05:20,557	[INFO]	65	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:05:21,680	[INFO]	66	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:05:22,914	[INFO]	67	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:05:22,917	[INFO]	68	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:05:22,918	[DEBUG]	
2020-12-17 12:05:22,919	[INFO]	69	SUCCESS	+13.0	
2020-12-17 12:05:22,920	[DEBUG]	
2020-12-17 12:05:26,784	[INFO]	70	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:05:27,766	[INFO]	71	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:05:28,869	[INFO]	72	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:05:29,925	[INFO]	73	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:05:33,544	[INFO]	74	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 12:05:33,545	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val != arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:05:37,734	[INFO]	75	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 12:05:42,488	[INFO]	76	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:05:43,770	[INFO]	77	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:05:45,086	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:05:45,089	[INFO]	79	SUCCESS	+13.0	
2020-12-17 12:05:45,089	[DEBUG]	
2020-12-17 12:05:46,294	[INFO]	80	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:05:47,388	[INFO]	81	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:05:48,277	[INFO]	82	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:05:49,493	[INFO]	83	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:05:53,204	[INFO]	84	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:05:56,472	[INFO]	85	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:05:57,372	[INFO]	86	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:05:58,356	[INFO]	87	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:06:01,567	[INFO]	88	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 12:06:02,529	[INFO]	89	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:06:02,531	[INFO]	90	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:06:03,481	[INFO]	91	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:06:03,483	[INFO]	92	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:06:03,483	[INFO]	93	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:06:03,484	[DEBUG]	
2020-12-17 12:06:04,584	[INFO]	94	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:06:04,585	[INFO]	95	SUCCESS	+13.0	
2020-12-17 12:06:04,586	[DEBUG]	
2020-12-17 12:06:04,586	[INFO]	96	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:06:08,831	[INFO]	97	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:06:08,832	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:06:08,834	[INFO]	98	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:06:08,834	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:06:13,088	[INFO]	99	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:06:13,089	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:06:13,092	[INFO]	100	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:06:13,093	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:06:13,094	[INFO]	101	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:06:19,791	[INFO]	102	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:06:19,792	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:06:21,209	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:06:21,211	[INFO]	104	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:06:21,212	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:06:27,593	[INFO]	105	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:06:29,447	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:06:30,910	[INFO]	107	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:06:34,483	[INFO]	108	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:06:34,485	[INFO]	109	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:06:34,485	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:06:35,405	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:06:35,407	[INFO]	111	SUCCESS	 13.0	
2020-12-17 12:06:38,610	[INFO]	112	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:06:39,562	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:06:42,826	[INFO]	114	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:06:42,827	[INFO]	115	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:06:46,108	[INFO]	116	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:06:50,173	[INFO]	117	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:06:51,252	[INFO]	118	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:06:52,318	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:06:53,444	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:06:54,484	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:06:54,487	[INFO]	122	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:06:57,758	[INFO]	123	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:06:57,763	[INFO]	124	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:06:58,842	[INFO]	125	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:07:02,143	[INFO]	126	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 12:07:03,096	[INFO]	127	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:07:04,096	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:07:05,111	[INFO]	129	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:07:05,113	[INFO]	130	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:07:05,114	[INFO]	131	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:07:05,114	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:08,433	[INFO]	132	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:07:11,662	[INFO]	133	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:07:11,663	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 24,32 ****
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 24,38 ----
                  }
              }
  
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:11,664	[INFO]	134	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:07:11,664	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:12,626	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:07:16,450	[INFO]	136	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:07:16,451	[INFO]	137	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:07:16,452	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:16,452	[INFO]	138	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:07:16,453	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:16,454	[INFO]	139	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:07:16,454	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:17,508	[INFO]	140	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:07:17,509	[INFO]	141	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:07:17,510	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:17,510	[INFO]	142	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:07:18,853	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:07:18,856	[INFO]	144	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 12:07:20,248	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:07:20,249	[INFO]	146	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:07:20,250	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:07:21,626	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:07:25,212	[INFO]	148	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:07:28,611	[INFO]	149	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:07:32,420	[INFO]	150	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:07:32,422	[INFO]	151	SUCCESS	 13.0	
2020-12-17 12:07:36,637	[INFO]	152	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:07:37,785	[INFO]	153	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:07:38,893	[INFO]	154	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:07:39,889	[INFO]	155	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:07:43,385	[INFO]	156	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:07:47,377	[INFO]	157	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:07:48,736	[INFO]	158	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:07:50,555	[INFO]	159	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:07:52,124	[INFO]	160	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:07:52,129	[INFO]	161	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:07:52,134	[INFO]	162	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:07:56,673	[INFO]	163	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:07:57,927	[INFO]	164	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:07:57,928	[INFO]	165	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:07:59,017	[INFO]	166	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:08:00,021	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:08:00,022	[INFO]	168	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:08:03,880	[INFO]	169	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:08:03,881	[INFO]	170	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:08:08,815	[INFO]	171	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:08:08,816	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:08:13,932	[INFO]	172	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 12:08:13,934	[INFO]	173	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:08:13,935	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:08:13,936	[INFO]	174	SUCCESS	 13.0	
2020-12-17 12:08:15,825	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:08:17,551	[INFO]	176	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:08:19,124	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:08:20,254	[INFO]	178	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:08:20,255	[INFO]	179	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:08:21,299	[INFO]	180	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:08:22,379	[INFO]	181	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:08:23,547	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:08:24,783	[INFO]	183	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:08:25,811	[INFO]	184	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:08:29,810	[INFO]	185	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 12:08:33,386	[INFO]	186	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:08:34,430	[INFO]	187	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:08:39,068	[INFO]	188	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:08:40,427	[INFO]	189	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:08:44,390	[INFO]	190	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:08:45,651	[INFO]	191	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:08:47,543	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:08:50,072	[INFO]	193	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:08:54,976	[INFO]	194	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:08:54,978	[INFO]	195	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:08:54,978	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:08:56,326	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:08:56,327	[INFO]	197	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:08:56,328	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:09:01,630	[INFO]	198	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:09:06,060	[INFO]	199	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:09:06,061	[INFO]	200	SUCCESS	 13.0	
2020-12-17 12:09:07,296	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:09:08,534	[INFO]	202	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:09:13,165	[INFO]	203	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:09:13,169	[INFO]	204	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:09:13,171	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:09:18,411	[INFO]	206	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 12:09:19,850	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:09:24,270	[INFO]	208	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:09:27,460	[INFO]	209	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:09:28,391	[INFO]	210	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:09:28,394	[INFO]	211	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:09:28,395	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:09:28,397	[INFO]	212	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:09:29,365	[INFO]	213	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:09:32,730	[INFO]	214	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:09:33,808	[INFO]	215	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:09:37,152	[INFO]	216	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:09:37,155	[INFO]	217	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:09:37,156	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:09:38,156	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:09:38,158	[INFO]	219	SUCCESS	 13.0	
2020-12-17 12:09:39,161	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:09:42,399	[INFO]	221	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:09:43,347	[INFO]	222	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:09:44,310	[INFO]	223	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:09:45,262	[INFO]	224	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:09:45,264	[INFO]	225	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:09:45,265	[INFO]	226	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:09:45,266	[INFO]	227	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:09:45,267	[INFO]	228	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:09:45,268	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:09:45,269	[INFO]	229	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:09:45,269	[INFO]	230	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:09:46,241	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:09:46,243	[INFO]	232	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:09:46,243	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:09:46,244	[INFO]	233	SUCCESS	 13.0	
2020-12-17 12:09:49,515	[INFO]	234	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 12:09:49,517	[INFO]	235	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:09:50,496	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:09:50,499	[INFO]	237	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:09:50,499	[INFO]	238	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:09:50,500	[INFO]	239	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:09:51,467	[INFO]	240	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:09:52,400	[INFO]	241	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:09:53,367	[INFO]	242	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:09:56,588	[INFO]	243	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 12:09:57,544	[INFO]	244	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:09:58,617	[INFO]	245	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:09:58,618	[INFO]	246	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:09:58,619	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:09:58,619	[INFO]	247	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:09:58,620	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:09:58,621	[INFO]	248	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:09:58,621	[INFO]	249	SUCCESS	 13.0	
2020-12-17 12:10:01,880	[INFO]	250	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:10:06,348	[INFO]	251	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:10:07,443	[INFO]	252	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:10:10,885	[INFO]	253	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:10:10,887	[INFO]	254	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:10:14,863	[INFO]	255	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:10:14,865	[INFO]	256	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:10:18,510	[INFO]	257	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:10:18,515	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:10:20,066	[INFO]	259	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:10:20,068	[INFO]	260	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:10:20,069	[INFO]	261	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:10:21,259	[INFO]	262	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:10:22,498	[INFO]	263	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:10:26,337	[INFO]	264	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:10:26,339	[INFO]	265	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:10:27,581	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:10:32,127	[INFO]	267	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:10:33,437	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:10:37,917	[INFO]	269	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:10:37,918	[INFO]	270	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:10:39,274	[INFO]	271	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:10:39,276	[INFO]	272	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:10:42,762	[INFO]	273	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:10:43,776	[INFO]	274	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:10:43,779	[INFO]	275	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:10:43,781	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:10:44,869	[INFO]	277	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:10:45,903	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:10:45,906	[INFO]	279	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:10:47,273	[INFO]	280	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:10:48,641	[INFO]	281	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:10:52,793	[INFO]	282	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:10:52,794	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:10:53,966	[INFO]	283	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:10:57,840	[INFO]	284	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:10:57,842	[INFO]	285	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:10:57,842	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:10:58,967	[INFO]	286	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:10:58,968	[INFO]	287	SUCCESS	 13.0	
2020-12-17 12:10:58,970	[INFO]	288	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:11:00,057	[INFO]	289	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:11:01,498	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:11:02,524	[INFO]	291	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:11:02,526	[INFO]	292	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:11:03,646	[INFO]	293	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:11:07,459	[INFO]	294	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 12:11:11,250	[INFO]	295	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:11:11,251	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:11:12,555	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:11:14,114	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:11:15,293	[INFO]	299	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:11:16,388	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:11:16,391	[INFO]	301	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:11:20,153	[INFO]	302	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:11:21,293	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:11:22,324	[INFO]	304	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:11:25,781	[INFO]	305	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:11:25,783	[INFO]	306	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:11:26,977	[INFO]	307	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:11:31,096	[INFO]	308	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:11:31,097	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:11:35,605	[INFO]	309	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:11:37,009	[INFO]	310	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:11:37,010	[INFO]	311	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:11:37,011	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:11:38,273	[INFO]	312	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:11:42,282	[INFO]	313	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:11:42,283	[INFO]	314	SUCCESS	 13.0	
2020-12-17 12:11:43,295	[INFO]	315	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:11:47,705	[INFO]	316	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 12:11:47,711	[INFO]	317	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:11:47,713	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:11:47,715	[INFO]	318	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:11:47,718	[INFO]	319	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:11:47,722	[INFO]	320	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:11:47,725	[INFO]	321	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:11:47,726	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:11:47,728	[INFO]	322	SUCCESS	 13.0	
2020-12-17 12:11:51,757	[INFO]	323	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:11:55,540	[INFO]	324	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:11:55,540	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:11:55,541	[INFO]	325	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:11:55,542	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:11:55,542	[INFO]	326	SUCCESS	 13.0	
2020-12-17 12:11:59,128	[INFO]	327	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:11:59,129	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:12:02,927	[INFO]	329	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:12:02,929	[INFO]	330	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:12:04,362	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:12:08,063	[INFO]	332	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:12:08,065	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:12:09,467	[INFO]	334	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:12:10,776	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:12:10,778	[INFO]	336	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:12:10,780	[INFO]	337	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:12:10,780	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:10,782	[INFO]	338	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:12:10,783	[INFO]	339	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:12:10,785	[INFO]	340	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:12:10,786	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:10,787	[INFO]	341	SUCCESS	 13.0	
2020-12-17 12:12:16,190	[INFO]	342	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:12:16,195	[INFO]	343	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:12:16,196	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:16,198	[INFO]	344	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:12:16,199	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:16,201	[INFO]	345	SUCCESS	 13.0	
2020-12-17 12:12:20,822	[INFO]	346	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:12:22,256	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:12:22,258	[INFO]	348	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 12:12:23,990	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:12:25,627	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:12:26,776	[INFO]	351	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:12:30,240	[INFO]	352	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:12:30,241	[INFO]	353	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 12:12:30,242	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:30,243	[INFO]	354	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:12:30,243	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:30,244	[INFO]	355	SUCCESS	 13.0	
2020-12-17 12:12:30,245	[INFO]	356	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:12:34,482	[INFO]	357	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 12:12:35,582	[INFO]	358	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:12:36,658	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:12:37,931	[INFO]	360	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:12:41,889	[INFO]	361	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:12:45,628	[INFO]	362	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:12:49,472	[INFO]	363	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:12:53,006	[INFO]	364	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:12:53,008	[INFO]	365	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:12:53,009	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:12:56,981	[INFO]	367	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:12:56,982	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:57,949	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:12:57,952	[INFO]	369	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:12:57,953	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:12:59,125	[INFO]	370	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:12:59,128	[INFO]	371	SUCCESS	 13.0	
2020-12-17 12:13:00,365	[INFO]	372	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:13:00,368	[INFO]	373	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:13:00,369	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:00,370	[INFO]	374	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:13:00,370	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:01,574	[INFO]	375	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:13:01,576	[INFO]	376	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:13:01,578	[INFO]	377	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:13:01,579	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:04,996	[INFO]	378	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:13:04,998	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:13:06,075	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:13:06,077	[INFO]	381	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:13:06,077	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:07,114	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:13:08,237	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:13:08,239	[INFO]	384	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:13:08,239	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:09,344	[INFO]	385	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:13:10,486	[INFO]	386	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:13:10,488	[INFO]	387	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:13:14,730	[INFO]	388	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:13:14,732	[INFO]	389	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:13:14,733	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:14,735	[INFO]	390	SUCCESS	 13.0	
2020-12-17 12:13:18,806	[INFO]	391	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:13:22,430	[INFO]	392	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:13:26,134	[INFO]	393	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:13:26,135	[INFO]	394	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:13:29,313	[INFO]	395	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:13:29,315	[INFO]	396	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:13:29,316	[INFO]	397	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:13:29,317	[INFO]	398	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:13:29,318	[INFO]	399	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:13:30,310	[INFO]	400	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:13:34,767	[INFO]	401	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:13:34,768	[INFO]	402	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:13:35,939	[INFO]	403	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:13:37,230	[INFO]	404	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:13:38,910	[INFO]	405	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:13:43,091	[INFO]	406	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:13:43,091	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:44,110	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:13:44,111	[INFO]	408	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:13:44,112	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:45,148	[INFO]	409	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:13:45,149	[INFO]	410	SUCCESS	 13.0	
2020-12-17 12:13:46,293	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:13:47,604	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:13:51,726	[INFO]	413	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:13:56,227	[INFO]	414	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:13:56,228	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:56,230	[INFO]	415	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:13:56,231	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:13:57,646	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:13:58,742	[INFO]	417	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:13:59,917	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:14:04,408	[INFO]	419	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:14:04,410	[INFO]	420	SUCCESS	 13.0	
2020-12-17 12:14:05,483	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:14:06,550	[INFO]	422	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:14:07,878	[INFO]	423	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:14:09,168	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:14:10,272	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:14:14,019	[INFO]	426	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:14:14,021	[INFO]	427	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:14:15,059	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:14:15,061	[INFO]	429	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:14:18,781	[INFO]	430	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:14:19,889	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:14:23,639	[INFO]	432	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:14:24,785	[INFO]	433	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:14:24,787	[INFO]	434	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:14:29,348	[INFO]	435	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:14:30,606	[INFO]	436	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:14:30,611	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:14:31,795	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:14:33,101	[INFO]	439	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:14:36,851	[INFO]	440	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:14:36,852	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:14:40,800	[INFO]	441	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:14:42,169	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:14:43,167	[INFO]	443	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:14:43,169	[INFO]	444	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:14:43,169	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:14:43,170	[INFO]	445	SUCCESS	 13.0	
2020-12-17 12:14:47,964	[INFO]	446	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:14:47,965	[INFO]	447	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:14:47,966	[INFO]	448	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:14:47,968	[INFO]	449	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:14:47,969	[INFO]	450	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:14:49,087	[INFO]	451	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:14:50,182	[INFO]	452	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:14:50,184	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:14:51,267	[INFO]	454	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:14:52,397	[INFO]	455	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:14:53,434	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:14:54,481	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:14:54,484	[INFO]	458	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:14:54,485	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:14:54,487	[INFO]	459	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:14:54,488	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:14:54,490	[INFO]	460	SUCCESS	 13.0	
2020-12-17 12:14:55,686	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:14:55,688	[INFO]	462	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:14:59,606	[INFO]	463	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:14:59,607	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,33 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:15:03,660	[INFO]	464	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:15:03,663	[INFO]	465	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:15:03,664	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:15:04,849	[INFO]	466	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:15:04,851	[INFO]	467	SUCCESS	 13.0	
2020-12-17 12:15:06,198	[INFO]	468	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:15:10,510	[INFO]	469	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:15:15,304	[INFO]	470	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:15:15,305	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:15:16,784	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:15:16,786	[INFO]	472	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:15:16,786	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:15:16,787	[INFO]	473	SUCCESS	 13.0	
2020-12-17 12:15:18,028	[INFO]	474	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:15:22,148	[INFO]	475	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:15:25,822	[INFO]	476	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:15:28,983	[INFO]	477	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:15:32,181	[INFO]	478	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:15:33,153	[INFO]	479	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:15:36,470	[INFO]	480	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:15:37,447	[INFO]	481	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:15:38,414	[INFO]	482	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:15:38,416	[INFO]	483	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:15:41,615	[INFO]	484	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:15:41,618	[INFO]	485	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:15:44,906	[INFO]	486	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 12:15:49,053	[INFO]	487	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:15:52,693	[INFO]	488	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 12:15:56,315	[INFO]	489	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:15:59,961	[INFO]	490	SUCCESS	 21.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:15:59,963	[INFO]	491	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:16:03,828	[INFO]	492	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:16:06,997	[INFO]	493	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:16:07,958	[INFO]	494	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:16:07,959	[INFO]	495	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:16:07,960	[INFO]	496	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:16:08,979	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:16:12,774	[INFO]	498	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:16:16,190	[INFO]	499	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:16:16,192	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:16:16,195	[INFO]	500	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:16:16,196	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:16:16,197	[INFO]	==== END ====
2020-12-17 12:16:16,197	[INFO]	Reason: step budget
2020-12-17 12:16:16,200	[INFO]	
2020-12-17 12:16:16,200	[INFO]	========== EPOCH 18 ==========
2020-12-17 12:16:16,201	[INFO]	==== WARMUP ====
2020-12-17 12:16:19,365	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:16:19,366	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:16:23,000	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:16:23,001	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:16:26,739	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:16:26,739	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:16:30,204	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 12:16:30,205	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:16:30,205	[INFO]	==== START ====
2020-12-17 12:16:31,507	[INFO]	1	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:16:32,983	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:16:36,887	[INFO]	3	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:16:36,888	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }

2020-12-17 12:16:40,452	[INFO]	4	SUCCESS	 28.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:16:40,453	[INFO]	5	SUCCESS	+13.0	
2020-12-17 12:16:40,454	[DEBUG]	
2020-12-17 12:16:44,201	[INFO]	6	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:16:44,203	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length <= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:16:44,206	[INFO]	7	SUCCESS	+13.0	
2020-12-17 12:16:44,206	[DEBUG]	
2020-12-17 12:16:45,403	[INFO]	8	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:16:46,465	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:16:47,608	[INFO]	10	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:16:48,755	[INFO]	11	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:16:48,757	[INFO]	12	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 12:16:48,758	[DEBUG]	
2020-12-17 12:16:49,787	[INFO]	13	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:16:49,788	[INFO]	14	SUCCESS	+13.0	
2020-12-17 12:16:49,788	[DEBUG]	
2020-12-17 12:16:50,747	[INFO]	15	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:16:54,334	[INFO]	16	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:16:57,963	[INFO]	17	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:16:57,964	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-17 12:16:57,965	[INFO]	18	SUCCESS	+13.0	
2020-12-17 12:16:57,965	[DEBUG]	
2020-12-17 12:16:58,903	[INFO]	19	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:16:59,889	[INFO]	20	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:16:59,892	[INFO]	21	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:16:59,893	[DEBUG]	
2020-12-17 12:16:59,894	[INFO]	22	SUCCESS	+13.0	
2020-12-17 12:16:59,894	[DEBUG]	
2020-12-17 12:17:00,867	[INFO]	23	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:17:04,073	[INFO]	24	SUCCESS	 24.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:17:05,038	[INFO]	25	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:17:06,019	[INFO]	26	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:17:06,023	[INFO]	27	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:17:06,024	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-17 12:17:09,249	[INFO]	28	SUCCESS	 23.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:17:12,616	[INFO]	29	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:17:12,617	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 
                  longest = length + 1;
              }
  

2020-12-17 12:17:12,618	[INFO]	30	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:17:12,620	[INFO]	31	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:17:12,621	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,33 ****
--- 28,34 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 ends.put(length+1, i);
                  longest = length + 1;
              }
  

2020-12-17 12:17:12,622	[INFO]	32	SUCCESS	+13.0	
2020-12-17 12:17:12,622	[DEBUG]	
2020-12-17 12:17:13,980	[INFO]	33	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:17:15,139	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:17:15,142	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:17:21,022	[INFO]	36	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:17:23,107	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:17:23,112	[INFO]	38	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:17:25,226	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:17:25,229	[INFO]	40	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:17:25,230	[DEBUG]	
2020-12-17 12:17:25,231	[INFO]	41	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:17:29,282	[INFO]	42	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:17:32,600	[INFO]	43	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:17:32,601	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:17:32,602	[INFO]	44	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:17:32,602	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val <= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:17:32,602	[INFO]	45	SUCCESS	+13.0	
2020-12-17 12:17:32,603	[DEBUG]	
2020-12-17 12:17:32,603	[INFO]	46	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:17:35,706	[INFO]	47	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:17:39,446	[INFO]	48	SUCCESS	*0.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:17:39,448	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 12:17:39,449	[INFO]	==== END ====
2020-12-17 12:17:39,449	[INFO]	Reason: target fitness reached
2020-12-17 12:17:39,451	[INFO]	
2020-12-17 12:17:39,451	[INFO]	========== EPOCH 19 ==========
2020-12-17 12:17:39,451	[INFO]	==== WARMUP ====
2020-12-17 12:17:42,771	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:17:42,771	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:17:45,931	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:17:45,932	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:17:49,370	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:17:49,370	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:17:52,562	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 12:17:52,562	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:17:52,562	[INFO]	==== START ====
2020-12-17 12:17:53,545	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:17:56,871	[INFO]	2	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:17:57,917	[INFO]	3	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:17:59,272	[INFO]	4	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:18:00,761	[INFO]	5	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:18:02,033	[INFO]	6	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:18:05,669	[INFO]	7	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:18:06,962	[INFO]	8	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:18:08,195	[INFO]	9	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:18:12,378	[INFO]	10	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:18:15,520	[INFO]	11	SUCCESS	 23.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:18:15,522	[INFO]	12	SUCCESS	+13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:18:15,522	[DEBUG]	
2020-12-17 12:18:16,484	[INFO]	13	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:18:17,458	[INFO]	14	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:18:17,459	[INFO]	15	SUCCESS	+13.0	
2020-12-17 12:18:17,460	[DEBUG]	
2020-12-17 12:18:20,594	[INFO]	16	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:18:23,651	[INFO]	17	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:18:24,674	[INFO]	18	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:18:25,687	[INFO]	19	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:18:28,913	[INFO]	20	SUCCESS	+13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:18:28,916	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 22,27 ****
--- 22,30 ----
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
+                 if (arr[ends.get(j)] < val) {
+                     prefix_lengths.add(j);
+                 }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;

2020-12-17 12:18:29,913	[INFO]	21	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:18:29,915	[INFO]	22	SUCCESS	+13.0	
2020-12-17 12:18:29,915	[DEBUG]	
2020-12-17 12:18:33,197	[INFO]	23	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:18:34,214	[INFO]	24	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:18:34,216	[INFO]	25	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:18:35,268	[INFO]	26	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:18:40,072	[INFO]	27	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:18:41,330	[INFO]	28	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:18:45,105	[INFO]	29	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:18:48,536	[INFO]	30	SUCCESS	 19.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:18:51,788	[INFO]	31	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:18:51,789	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:18:55,381	[INFO]	32	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 12:18:55,382	[INFO]	33	SUCCESS	+13.0	
2020-12-17 12:18:55,383	[DEBUG]	
2020-12-17 12:18:56,397	[INFO]	34	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:18:57,450	[INFO]	35	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:18:57,454	[INFO]	36	SUCCESS	 27.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:18:58,417	[INFO]	37	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:18:59,499	[INFO]	38	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:19:00,614	[INFO]	39	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:19:01,827	[INFO]	40	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:19:02,893	[INFO]	41	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:19:02,895	[INFO]	42	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:19:02,895	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:19:04,035	[INFO]	43	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:19:04,036	[INFO]	44	SUCCESS	+13.0	
2020-12-17 12:19:04,037	[DEBUG]	
2020-12-17 12:19:04,038	[INFO]	45	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:19:05,297	[INFO]	46	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:19:09,087	[INFO]	47	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:19:12,660	[INFO]	48	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:19:12,661	[INFO]	49	SUCCESS	 28.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:19:16,661	[INFO]	50	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:19:16,662	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:19:17,773	[INFO]	51	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:19:18,869	[INFO]	52	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:19:19,992	[INFO]	53	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:19:19,993	[INFO]	54	SUCCESS	 13.0	
2020-12-17 12:19:21,810	[INFO]	55	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:19:22,966	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:19:24,222	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:19:25,417	[INFO]	58	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:19:25,419	[INFO]	59	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:19:26,417	[INFO]	60	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:19:27,613	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:19:31,133	[INFO]	62	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:19:34,520	[INFO]	63	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:19:38,888	[INFO]	64	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 12:19:42,796	[INFO]	65	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:19:46,686	[INFO]	66	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:19:46,687	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:19:46,688	[INFO]	67	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:19:47,677	[INFO]	68	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:19:48,720	[INFO]	69	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:19:52,039	[INFO]	70	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:19:52,893	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:19:56,195	[INFO]	72	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:19:57,199	[INFO]	73	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:20:00,717	[INFO]	74	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:20:04,424	[INFO]	75	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:20:07,990	[INFO]	76	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:20:07,991	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:07,992	[INFO]	77	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:20:07,992	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:07,993	[INFO]	78	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:20:09,052	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:20:10,159	[INFO]	80	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:20:13,834	[INFO]	81	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:20:13,835	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:14,938	[INFO]	82	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:20:14,940	[INFO]	83	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:20:14,941	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:16,079	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:20:16,081	[INFO]	85	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:20:17,276	[INFO]	86	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:20:17,278	[INFO]	87	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:20:17,279	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:21,285	[INFO]	88	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:20:22,405	[INFO]	89	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:20:23,485	[INFO]	90	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:20:23,487	[INFO]	91	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:20:27,057	[INFO]	92	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:20:27,060	[INFO]	93	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:20:27,061	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:28,072	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:20:28,075	[INFO]	95	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:20:28,076	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:28,077	[INFO]	96	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:20:28,078	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:31,563	[INFO]	97	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:20:31,563	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:20:32,571	[INFO]	98	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:20:32,573	[INFO]	99	SUCCESS	 13.0	
2020-12-17 12:20:33,672	[INFO]	100	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:20:38,202	[INFO]	101	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:20:39,417	[INFO]	102	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:20:41,033	[INFO]	103	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:20:42,534	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:20:43,758	[INFO]	105	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:20:44,884	[INFO]	106	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:20:48,950	[INFO]	107	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 12:20:49,983	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:20:53,444	[INFO]	109	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:20:54,479	[INFO]	110	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:20:57,826	[INFO]	111	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:20:58,823	[INFO]	112	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:21:02,443	[INFO]	113	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:21:02,447	[INFO]	114	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:21:02,448	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:02,452	[INFO]	115	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:21:02,453	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:02,456	[INFO]	116	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:21:02,458	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:02,463	[INFO]	117	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:21:02,465	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:02,469	[INFO]	118	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:21:02,470	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:02,472	[INFO]	119	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:21:02,473	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:02,476	[INFO]	120	SUCCESS	 13.0	
2020-12-17 12:21:03,399	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:21:03,401	[INFO]	122	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:21:03,401	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:03,402	[INFO]	123	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:21:04,417	[INFO]	124	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:21:04,419	[INFO]	125	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:21:04,419	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:05,563	[INFO]	126	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:21:05,564	[INFO]	127	SUCCESS	 13.0	
2020-12-17 12:21:06,641	[INFO]	128	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:21:10,147	[INFO]	129	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:21:10,149	[INFO]	130	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:21:10,151	[INFO]	131	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:21:10,151	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:11,329	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:21:12,392	[INFO]	133	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:21:16,101	[INFO]	134	SUCCESS	 18.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:21:16,102	[INFO]	135	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:21:20,099	[INFO]	136	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:21:20,102	[INFO]	137	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:21:20,103	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:20,104	[INFO]	138	SUCCESS	 13.0	
2020-12-17 12:21:21,243	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:21:24,920	[INFO]	140	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:21:28,618	[INFO]	141	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:21:28,620	[INFO]	142	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:21:29,832	[INFO]	143	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:21:33,040	[INFO]	144	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:21:34,059	[INFO]	145	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:21:35,030	[INFO]	146	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:21:36,034	[INFO]	147	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:21:39,220	[INFO]	148	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 12:21:40,173	[INFO]	149	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:21:41,136	[INFO]	150	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:21:41,139	[INFO]	151	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 12:21:41,140	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:42,257	[INFO]	152	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:21:42,259	[INFO]	153	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:21:42,260	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:45,749	[INFO]	154	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:21:45,751	[INFO]	155	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:21:45,751	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:45,752	[INFO]	156	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:21:45,753	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:45,754	[INFO]	157	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:21:45,754	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:49,190	[INFO]	158	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '=='})
2020-12-17 12:21:52,827	[INFO]	159	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:21:52,828	[INFO]	160	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:21:52,829	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:52,830	[INFO]	161	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:21:52,830	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:52,831	[INFO]	162	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:21:52,831	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:52,832	[INFO]	163	SUCCESS	 13.0	
2020-12-17 12:21:52,834	[INFO]	164	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:21:56,633	[INFO]	165	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:21:56,634	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:56,635	[INFO]	166	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:21:56,636	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:21:57,689	[INFO]	167	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:22:01,332	[INFO]	168	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:22:02,531	[INFO]	169	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:22:02,534	[INFO]	170	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:22:02,535	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:03,594	[INFO]	171	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:22:03,597	[INFO]	172	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:22:03,599	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:07,639	[INFO]	173	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:22:07,645	[INFO]	174	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:22:07,646	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:09,045	[INFO]	175	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:22:09,047	[INFO]	176	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:22:09,048	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:10,088	[INFO]	177	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:22:13,782	[INFO]	178	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:22:13,784	[INFO]	179	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:22:13,785	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,24 ****
--- 19,25 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
+                 int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 27,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:13,786	[INFO]	180	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:22:13,786	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:13,787	[INFO]	181	SUCCESS	 13.0	
2020-12-17 12:22:14,814	[INFO]	182	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:22:18,361	[INFO]	183	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:22:18,361	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:21,928	[INFO]	184	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:22:21,929	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:25,348	[INFO]	185	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:22:25,350	[INFO]	186	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:22:25,351	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:29,088	[INFO]	187	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:22:29,090	[INFO]	188	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:22:32,959	[INFO]	189	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:22:32,961	[INFO]	190	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:22:32,961	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:32,962	[INFO]	191	SUCCESS	 13.0	
2020-12-17 12:22:34,022	[INFO]	192	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:22:34,025	[INFO]	193	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:22:34,026	[INFO]	194	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:22:34,027	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:38,000	[INFO]	195	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:22:39,161	[INFO]	196	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:22:43,205	[INFO]	197	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:22:44,433	[INFO]	198	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:22:44,436	[INFO]	199	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:22:44,438	[INFO]	200	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:22:44,438	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:22:45,808	[INFO]	201	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:22:45,810	[INFO]	202	SUCCESS	 13.0	
2020-12-17 12:22:47,078	[INFO]	203	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:22:48,218	[INFO]	204	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:22:49,283	[INFO]	205	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:22:50,330	[INFO]	206	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:22:51,389	[INFO]	207	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:22:52,387	[INFO]	208	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:22:55,705	[INFO]	209	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<='})
2020-12-17 12:22:58,787	[INFO]	210	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:23:02,146	[INFO]	211	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:23:03,099	[INFO]	212	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:23:06,371	[INFO]	213	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:23:07,366	[INFO]	214	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:23:07,367	[INFO]	215	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:23:08,395	[INFO]	216	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:23:09,420	[INFO]	217	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:23:10,392	[INFO]	218	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:23:10,395	[INFO]	219	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:23:10,396	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:11,400	[INFO]	220	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:23:11,406	[INFO]	221	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:23:11,409	[INFO]	222	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:23:11,411	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:11,413	[INFO]	223	SUCCESS	 13.0	
2020-12-17 12:23:15,420	[INFO]	224	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:23:15,422	[INFO]	225	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:23:15,423	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:16,743	[INFO]	226	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:23:16,745	[INFO]	227	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:23:16,746	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:16,747	[INFO]	228	SUCCESS	 13.0	
2020-12-17 12:23:17,768	[INFO]	229	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:23:21,019	[INFO]	230	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:23:22,047	[INFO]	231	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:23:23,022	[INFO]	232	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:23:23,024	[INFO]	233	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:23:23,025	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:26,904	[INFO]	234	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:23:28,372	[INFO]	235	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:23:29,514	[INFO]	236	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:23:29,516	[INFO]	237	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:23:29,518	[INFO]	238	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 12:23:29,518	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:31,272	[INFO]	239	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:23:31,273	[INFO]	240	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='})
2020-12-17 12:23:31,274	[INFO]	241	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:23:31,275	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:31,276	[INFO]	242	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:23:31,277	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:32,608	[INFO]	243	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:23:32,609	[INFO]	244	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:23:32,610	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:32,610	[INFO]	245	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:23:32,611	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:32,612	[INFO]	246	SUCCESS	 13.0	
2020-12-17 12:23:33,939	[INFO]	247	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:23:33,943	[INFO]	248	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:23:33,943	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:33,945	[INFO]	249	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:23:33,946	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:23:33,947	[INFO]	250	SUCCESS	 13.0	
2020-12-17 12:23:35,069	[INFO]	251	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:23:39,440	[INFO]	252	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:23:40,471	[INFO]	253	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:23:41,522	[INFO]	254	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:23:42,553	[INFO]	255	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:23:45,879	[INFO]	256	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:23:45,880	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 12:23:49,162	[INFO]	257	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:23:50,126	[INFO]	258	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:23:53,267	[INFO]	259	SUCCESS	 17.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:23:56,492	[INFO]	260	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:23:59,639	[INFO]	261	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:23:59,639	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 12:24:03,433	[INFO]	262	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:24:03,434	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,34 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 12:24:06,877	[INFO]	263	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:24:07,868	[INFO]	264	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:24:08,892	[INFO]	265	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:24:09,971	[INFO]	266	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:24:09,973	[INFO]	267	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:24:11,154	[INFO]	268	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:24:15,124	[INFO]	269	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:24:15,124	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:24:18,626	[INFO]	270	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:24:18,627	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:24:22,639	[INFO]	271	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:24:22,640	[INFO]	272	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:24:22,641	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:24:23,943	[INFO]	273	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:24:28,680	[INFO]	274	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:24:28,682	[INFO]	275	SUCCESS	 13.0	
2020-12-17 12:24:29,916	[INFO]	276	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:24:33,851	[INFO]	277	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:24:35,317	[INFO]	278	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:24:39,432	[INFO]	279	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:24:39,434	[INFO]	280	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:24:42,663	[INFO]	281	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:24:46,094	[INFO]	282	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 12:24:49,682	[INFO]	283	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:24:49,683	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:24:49,685	[INFO]	284	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:24:49,685	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:24:50,761	[INFO]	285	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:24:54,259	[INFO]	286	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:24:54,261	[INFO]	287	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:24:57,811	[INFO]	288	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:24:57,813	[INFO]	289	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:24:57,813	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:24:58,900	[INFO]	290	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:25:02,193	[INFO]	291	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:25:02,195	[INFO]	292	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:25:02,195	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:25:02,196	[INFO]	293	SUCCESS	 13.0	
2020-12-17 12:25:05,605	[INFO]	294	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:25:06,613	[INFO]	295	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:25:07,594	[INFO]	296	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:25:08,759	[INFO]	297	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:25:09,789	[INFO]	298	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:25:13,558	[INFO]	299	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:25:14,562	[INFO]	300	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:25:18,262	[INFO]	301	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:25:19,132	[INFO]	302	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:25:20,079	[INFO]	303	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:25:23,218	[INFO]	304	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:25:23,221	[INFO]	305	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:25:23,222	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:25:24,180	[INFO]	306	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:25:24,181	[INFO]	307	SUCCESS	 13.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:25:24,182	[INFO]	308	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:25:24,183	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:25:24,184	[INFO]	309	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:25:24,184	[INFO]	310	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:25:24,185	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:25:25,131	[INFO]	311	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:25:25,132	[INFO]	312	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:25:25,133	[INFO]	313	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:25:25,134	[INFO]	314	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:25:28,726	[INFO]	315	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:25:29,767	[INFO]	316	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:25:30,727	[INFO]	317	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:25:31,768	[INFO]	318	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:25:35,632	[INFO]	319	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>'})
2020-12-17 12:25:37,090	[INFO]	320	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:25:40,999	[INFO]	321	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:25:42,028	[INFO]	322	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:25:43,372	[INFO]	323	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:25:44,631	[INFO]	324	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:25:44,633	[INFO]	325	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:25:44,635	[INFO]	326	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:25:44,635	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:25:44,637	[INFO]	327	SUCCESS	 13.0	
2020-12-17 12:25:45,975	[INFO]	328	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:25:47,001	[INFO]	329	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:25:50,570	[INFO]	330	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:25:51,514	[INFO]	331	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:25:52,480	[INFO]	332	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:25:52,482	[INFO]	333	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:25:52,483	[INFO]	334	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:25:52,484	[INFO]	335	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:25:53,363	[INFO]	336	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:25:53,364	[INFO]	337	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:25:54,349	[INFO]	338	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:25:54,350	[INFO]	339	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:25:55,377	[INFO]	340	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:25:58,636	[INFO]	341	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:25:58,638	[INFO]	342	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:25:59,582	[INFO]	343	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:26:00,568	[INFO]	344	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:26:03,719	[INFO]	345	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:26:04,684	[INFO]	346	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:26:04,691	[INFO]	347	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:26:07,877	[INFO]	348	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:26:08,828	[INFO]	349	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:26:09,820	[INFO]	350	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:26:12,939	[INFO]	351	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:26:12,940	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,36 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
!                 ends.put(length+1, i);
!                 longest = length + 1;
!             }
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:26:13,933	[INFO]	352	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:26:14,919	[INFO]	353	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:26:15,909	[INFO]	354	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:26:19,100	[INFO]	355	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:26:19,101	[INFO]	356	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:26:19,101	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:26:19,102	[INFO]	357	SUCCESS	 13.0	
2020-12-17 12:26:22,246	[INFO]	358	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:26:22,248	[INFO]	359	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:26:25,418	[INFO]	360	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:26:28,717	[INFO]	361	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:26:29,684	[INFO]	362	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:26:33,077	[INFO]	363	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:26:33,077	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 21,32 ****
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 21,33 ----
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                     prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:26:33,078	[INFO]	364	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:26:33,079	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:26:33,080	[INFO]	365	SUCCESS	 13.0	
2020-12-17 12:26:34,127	[INFO]	366	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:26:34,130	[INFO]	367	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:26:35,148	[INFO]	368	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:26:36,143	[INFO]	369	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:26:39,582	[INFO]	370	SUCCESS	 15.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:26:40,542	[INFO]	371	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:26:40,543	[INFO]	372	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:26:40,543	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:26:40,544	[INFO]	373	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:26:40,545	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:26:40,545	[INFO]	374	SUCCESS	 13.0	
2020-12-17 12:26:43,878	[INFO]	375	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:26:43,879	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         i++;
          return longest;
      }
  }

2020-12-17 12:26:43,881	[INFO]	376	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:26:43,881	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:26:43,882	[INFO]	377	SUCCESS	 13.0	
2020-12-17 12:26:47,176	[INFO]	378	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:26:48,208	[INFO]	379	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:26:49,217	[INFO]	380	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:26:49,219	[INFO]	381	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:26:50,269	[INFO]	382	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:26:51,305	[INFO]	383	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:26:51,308	[INFO]	384	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<'})
2020-12-17 12:26:54,618	[INFO]	385	SUCCESS	 19.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:26:57,731	[INFO]	386	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:26:58,699	[INFO]	387	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:27:01,839	[INFO]	388	SUCCESS	 25.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:27:02,814	[INFO]	389	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:27:03,852	[INFO]	390	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:27:04,853	[INFO]	391	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:27:07,996	[INFO]	392	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='})
2020-12-17 12:27:11,178	[INFO]	393	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:27:14,346	[INFO]	394	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:27:17,548	[INFO]	395	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:27:20,766	[INFO]	396	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='})
2020-12-17 12:27:20,766	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length >= longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:27:23,981	[INFO]	397	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:27:23,983	[INFO]	398	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:27:23,983	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:27:24,960	[INFO]	399	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:27:28,272	[INFO]	400	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:27:29,279	[INFO]	401	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:27:30,384	[INFO]	402	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:27:30,385	[INFO]	403	SUCCESS	 13.0	
2020-12-17 12:27:30,387	[INFO]	404	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:27:33,789	[INFO]	405	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:27:34,765	[INFO]	406	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:27:35,629	[INFO]	407	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:27:35,631	[INFO]	408	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:27:38,832	[INFO]	409	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:27:38,834	[INFO]	410	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:27:39,730	[INFO]	411	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:27:40,699	[INFO]	412	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:27:40,705	[INFO]	413	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:27:40,706	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:27:43,975	[INFO]	414	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:27:43,977	[INFO]	415	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:27:43,977	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:27:44,894	[INFO]	416	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:27:44,895	[INFO]	417	SUCCESS	 13.0	
2020-12-17 12:27:45,906	[INFO]	418	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:27:46,908	[INFO]	419	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:27:47,915	[INFO]	420	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:27:48,878	[INFO]	421	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:27:52,166	[INFO]	422	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:27:52,167	[INFO]	423	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:27:52,168	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:27:53,106	[INFO]	424	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:27:54,061	[INFO]	425	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:27:54,062	[INFO]	426	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:27:57,160	[INFO]	427	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:27:58,119	[INFO]	428	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:27:58,121	[INFO]	429	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:27:58,121	[INFO]	430	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:27:58,122	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:27:58,993	[INFO]	431	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:27:58,994	[INFO]	432	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:27:58,995	[INFO]	433	SUCCESS	 13.0	
2020-12-17 12:27:59,931	[INFO]	434	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:28:00,897	[INFO]	435	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:28:04,179	[INFO]	436	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:28:05,152	[INFO]	437	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:28:06,113	[INFO]	438	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:28:09,306	[INFO]	439	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:28:12,505	[INFO]	440	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:28:13,448	[INFO]	441	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:28:14,421	[INFO]	442	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:28:14,424	[INFO]	443	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:28:14,425	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:28:14,425	[INFO]	444	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:28:17,620	[INFO]	445	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:28:17,622	[INFO]	446	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:28:17,622	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:28:20,784	[INFO]	447	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:28:20,785	[INFO]	448	SUCCESS	 13.0	
2020-12-17 12:28:21,733	[INFO]	449	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:28:22,682	[INFO]	450	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:28:25,949	[INFO]	451	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:28:25,950	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:28:25,951	[INFO]	452	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:28:25,951	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:28:25,953	[INFO]	453	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:28:29,243	[INFO]	454	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>='})
2020-12-17 12:28:29,244	[INFO]	455	SUCCESS	 13.0	
2020-12-17 12:28:30,145	[INFO]	456	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:28:31,198	[INFO]	457	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:28:32,193	[INFO]	458	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:28:33,219	[INFO]	459	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:28:34,258	[INFO]	460	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:28:35,324	[INFO]	461	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:28:38,700	[INFO]	462	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:28:38,702	[INFO]	463	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:28:41,997	[INFO]	464	SUCCESS	 26.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>='})
2020-12-17 12:28:43,011	[INFO]	465	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:28:44,065	[INFO]	466	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:28:45,095	[INFO]	467	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:28:45,099	[INFO]	468	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:28:45,103	[INFO]	469	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:28:46,111	[INFO]	470	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:28:47,097	[INFO]	471	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:28:48,095	[INFO]	472	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:28:51,275	[INFO]	473	SUCCESS	 20.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:28:54,441	[INFO]	474	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:28:54,442	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 12:28:57,603	[INFO]	475	SUCCESS	 13.0	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:28:58,572	[INFO]	476	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:28:59,580	[INFO]	477	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:28:59,584	[INFO]	478	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:28:59,585	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:29:02,794	[INFO]	479	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:29:02,795	[INFO]	480	SUCCESS	 13.0	
2020-12-17 12:29:02,796	[INFO]	481	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:29:03,758	[INFO]	482	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:29:03,761	[INFO]	483	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:29:04,753	[INFO]	484	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:29:05,759	[INFO]	485	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:29:06,678	[INFO]	486	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:29:07,650	[INFO]	487	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:29:07,651	[INFO]	488	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:29:08,614	[INFO]	489	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:29:09,580	[INFO]	490	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:29:10,570	[INFO]	491	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:29:13,833	[INFO]	492	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:29:16,975	[INFO]	493	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:29:17,913	[INFO]	494	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:29:21,150	[INFO]	495	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:29:22,120	[INFO]	496	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:29:22,125	[INFO]	497	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:29:22,127	[INFO]	498	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:29:23,219	[INFO]	499	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17), 'direction': 'before'})
2020-12-17 12:29:27,831	[INFO]	500	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:29:27,832	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,24 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
--- 18,24 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:29:27,832	[INFO]	==== END ====
2020-12-17 12:29:27,832	[INFO]	Reason: step budget
2020-12-17 12:29:27,833	[INFO]	
2020-12-17 12:29:27,833	[INFO]	========== EPOCH 20 ==========
2020-12-17 12:29:27,834	[INFO]	==== WARMUP ====
2020-12-17 12:29:31,728	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:29:31,729	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:29:35,391	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:29:35,391	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:29:39,472	[INFO]	WARM	SUCCESS	 13.0	
2020-12-17 12:29:39,472	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:29:43,136	[INFO]	INITIAL	SUCCESS	 13.0	
2020-12-17 12:29:43,137	[DEBUG]	<RunResult 'status': 'SUCCESS', 'fitness': 13.0>
2020-12-17 12:29:43,137	[INFO]	==== START ====
2020-12-17 12:29:44,270	[INFO]	1	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:29:45,442	[INFO]	2	PARSE_ERROR	 None	StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:29:47,069	[INFO]	3	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:29:50,139	[INFO]	4	SUCCESS	 29.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:29:51,059	[INFO]	5	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:29:54,342	[INFO]	6	SUCCESS	 22.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '>'})
2020-12-17 12:29:55,310	[INFO]	7	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:29:58,513	[INFO]	8	SUCCESS	 19.0	StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:29:59,450	[INFO]	9	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:30:00,424	[INFO]	10	PARSE_ERROR	 None	StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:30:03,719	[INFO]	11	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:30:07,095	[INFO]	12	SUCCESS	 28.0	StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:30:08,093	[INFO]	13	PARSE_ERROR	 None	MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:30:08,096	[INFO]	14	SUCCESS	+13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'})
2020-12-17 12:30:08,096	[DEBUG]	
2020-12-17 12:30:11,267	[INFO]	15	SUCCESS	*10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '<'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:30:11,268	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:30:11,269	[INFO]	16	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:30:11,269	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:30:11,270	[INFO]	17	SUCCESS	 13.0	
2020-12-17 12:30:12,204	[INFO]	18	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:30:15,384	[INFO]	19	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:30:18,577	[INFO]	20	SUCCESS	 13.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '!='})
2020-12-17 12:30:19,484	[INFO]	21	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:30:20,443	[INFO]	22	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:30:23,627	[INFO]	23	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:30:24,636	[INFO]	24	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 7), 'direction': 'before'})
2020-12-17 12:30:27,873	[INFO]	25	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:30:27,874	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,38 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
          return longest;
      }
  }
--- 26,39 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
+         ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
          return longest;
      }
  }

2020-12-17 12:30:27,874	[INFO]	26	SUCCESS	+10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:30:27,875	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:30:30,965	[INFO]	27	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '=='})
2020-12-17 12:30:30,966	[INFO]	28	SUCCESS	 13.0	
2020-12-17 12:30:31,928	[INFO]	29	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:30:32,874	[INFO]	30	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:30:36,253	[INFO]	31	SUCCESS	*9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:30:36,255	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:30:37,354	[INFO]	32	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:30:38,392	[INFO]	33	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:30:41,821	[INFO]	34	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:30:45,218	[INFO]	35	SUCCESS	 27.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:30:45,220	[INFO]	36	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:30:46,251	[INFO]	37	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:30:47,267	[INFO]	38	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:30:50,628	[INFO]	39	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:30:50,629	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:30:51,600	[INFO]	40	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:30:52,604	[INFO]	41	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:30:53,597	[INFO]	42	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:30:53,599	[INFO]	43	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:30:53,599	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:30:53,600	[INFO]	44	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:30:54,639	[INFO]	45	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:30:54,642	[INFO]	46	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:30:54,643	[INFO]	47	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:30:58,546	[INFO]	48	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:30:58,548	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,38 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
!                     prefix_lengths.add(j);
!                 }
!             }
! 
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:00,005	[INFO]	49	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:31:00,010	[INFO]	50	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:00,012	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:00,015	[INFO]	51	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:31:00,017	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:00,020	[INFO]	52	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:31:03,827	[INFO]	53	SUCCESS	 16.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:31:03,828	[INFO]	54	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 10), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:31:03,829	[INFO]	55	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:03,829	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:04,801	[INFO]	56	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:31:05,851	[INFO]	57	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 17), 'ingredient': ('java_programs/LIS.java.xml', 0), 'direction': 'before'})
2020-12-17 12:31:05,854	[INFO]	58	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:10,027	[INFO]	59	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:31:10,029	[INFO]	60	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:31:11,153	[INFO]	61	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 1)})
2020-12-17 12:31:11,155	[INFO]	62	SUCCESS	 29.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:31:14,606	[INFO]	63	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:31:14,607	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:15,563	[INFO]	64	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15)})
2020-12-17 12:31:16,584	[INFO]	65	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 14)})
2020-12-17 12:31:19,869	[INFO]	66	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:31:19,871	[INFO]	67	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:19,871	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:19,872	[INFO]	68	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:19,873	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:20,896	[INFO]	69	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:31:20,898	[INFO]	70	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:20,899	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:21,878	[INFO]	71	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:31:21,881	[INFO]	72	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:25,010	[INFO]	73	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:31:28,184	[INFO]	74	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:31:29,115	[INFO]	75	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 7)})
2020-12-17 12:31:30,019	[INFO]	76	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:31:30,020	[INFO]	77	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:31:30,991	[INFO]	78	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:31:31,978	[INFO]	79	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:31:31,982	[INFO]	80	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:31:31,983	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:32,962	[INFO]	81	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:31:36,098	[INFO]	82	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:31:36,100	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
!             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
! 
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,38 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
+             for (int j=1; j != longest+1; j++) {
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
+             }
+ 
+             int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
+ 
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:36,101	[INFO]	83	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:31:36,102	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:37,052	[INFO]	84	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:31:40,302	[INFO]	85	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:31:43,652	[INFO]	86	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:31:43,656	[INFO]	87	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:43,658	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:31:46,926	[INFO]	88	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:31:46,927	[INFO]	89	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:31:46,928	[INFO]	90	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:31:50,365	[INFO]	91	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:31:51,360	[INFO]	92	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 2), 'direction': 'before'})
2020-12-17 12:31:51,361	[INFO]	93	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '>'})
2020-12-17 12:31:52,361	[INFO]	94	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:31:53,524	[INFO]	95	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 3), 'direction': 'before'})
2020-12-17 12:31:56,944	[INFO]	96	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:32:00,197	[INFO]	97	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'})
2020-12-17 12:32:00,198	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 23,32 ****
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 23,37 ----
                      prefix_lengths.add(j);
                  }
              }
+             for (int j=1; j < longest+1; j++) {
+                 if (arr[ends.get(j)] <= val) {
+                     prefix_lengths.add(j);
+                 }
+             }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:32:03,534	[INFO]	98	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '<='})
2020-12-17 12:32:04,406	[INFO]	99	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 5)})
2020-12-17 12:32:07,616	[INFO]	100	SUCCESS	 24.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 5), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '!='})
2020-12-17 12:32:07,617	[INFO]	101	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:32:07,618	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:32:07,619	[INFO]	102	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:32:07,620	[INFO]	103	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<='})
2020-12-17 12:32:08,563	[INFO]	104	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 1), 'direction': 'before'})
2020-12-17 12:32:08,564	[INFO]	105	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:32:08,566	[INFO]	106	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:32:08,566	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:32:08,567	[INFO]	107	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:32:08,567	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:32:09,543	[INFO]	108	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'})
2020-12-17 12:32:10,620	[INFO]	109	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 4), 'ingredient': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:32:10,624	[INFO]	110	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:32:12,089	[INFO]	111	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 0)})
2020-12-17 12:32:12,091	[INFO]	112	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:32:13,240	[INFO]	113	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 10), 'direction': 'before'})
2020-12-17 12:32:14,814	[INFO]	114	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:32:16,279	[INFO]	115	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:32:19,731	[INFO]	116	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '!='})
2020-12-17 12:32:20,830	[INFO]	117	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 0), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:32:20,834	[INFO]	118	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<'})
2020-12-17 12:32:21,878	[INFO]	119	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 4)})
2020-12-17 12:32:22,942	[INFO]	120	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:32:23,983	[INFO]	121	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 5), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:32:27,429	[INFO]	122	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:32:27,430	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,33 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 19,34 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 12:32:28,456	[INFO]	123	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 1), 'ingredient': ('java_programs/LIS.java.xml', 4), 'direction': 'before'})
2020-12-17 12:32:31,825	[INFO]	124	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:32:35,181	[INFO]	125	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'})
2020-12-17 12:32:38,401	[INFO]	126	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:32:38,402	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,33 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 18,34 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
                  longest = length + 1;
              }
  

2020-12-17 12:32:41,780	[INFO]	127	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:32:46,425	[INFO]	128	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 16)})
2020-12-17 12:32:50,237	[INFO]	129	SUCCESS	 28.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 15), 'direction': 'before'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '<'})
2020-12-17 12:32:50,239	[INFO]	130	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:32:50,240	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 18,32 ****
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 18,32 ----
          for (int val : arr) {
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
!             for (int j=1; j != longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:32:53,846	[INFO]	131	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='})
2020-12-17 12:32:54,903	[INFO]	132	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 6), 'value': '!='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 10)})
2020-12-17 12:32:54,907	[INFO]	133	SUCCESS	+9.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:32:54,908	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:32:55,915	[INFO]	134	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:32:56,889	[INFO]	135	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 2)})
2020-12-17 12:32:56,890	[INFO]	136	SUCCESS	 10.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='})
2020-12-17 12:33:00,170	[INFO]	137	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 11), 'direction': 'before'})
2020-12-17 12:33:01,235	[INFO]	138	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 7), 'ingredient': ('java_programs/LIS.java.xml', 3)})
2020-12-17 12:33:02,484	[INFO]	139	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 2), 'ingredient': ('java_programs/LIS.java.xml', 9), 'direction': 'before'})
2020-12-17 12:33:06,317	[INFO]	140	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:09,995	[INFO]	141	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 17)})
2020-12-17 12:33:13,532	[INFO]	142	SUCCESS	 23.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 9)})
2020-12-17 12:33:13,533	[INFO]	143	SUCCESS	 14.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:33:14,479	[INFO]	144	PARSE_ERROR	 None	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 3), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:18,746	[INFO]	145	SUCCESS	*1.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:18,747	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,35 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 19,37 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 12:33:21,882	[INFO]	146	SUCCESS	*0.0	ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,883	[DEBUG]	*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 12:33:21,883	[INFO]	==== END ====
2020-12-17 12:33:21,883	[INFO]	Reason: target fitness reached
2020-12-17 12:33:21,884	[INFO]	
2020-12-17 12:33:21,884	[INFO]	========== REPORT ==========
2020-12-17 12:33:21,884	[INFO]	==== Epoch 1 ====
2020-12-17 12:33:21,885	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,885	[INFO]	Number of interations: 55
2020-12-17 12:33:21,885	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,885	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 9), 'ingredient': ('java_programs/LIS.java.xml', 7)}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,885	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 20,32 ****
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 20,36 ----
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
                  if (arr[ends.get(j)] < val) {
+                     if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
+                 }
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,885	[INFO]	==== Epoch 2 ====
2020-12-17 12:33:21,885	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,885	[INFO]	Number of interations: 272
2020-12-17 12:33:21,885	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,885	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:33:21,885	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 12:33:21,886	[INFO]	==== Epoch 3 ====
2020-12-17 12:33:21,886	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,886	[INFO]	Number of interations: 18
2020-12-17 12:33:21,886	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,886	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,886	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-17 12:33:21,886	[INFO]	==== Epoch 4 ====
2020-12-17 12:33:21,886	[INFO]	Termination: step budget
2020-12-17 12:33:21,886	[INFO]	Number of interations: 500
2020-12-17 12:33:21,886	[INFO]	Best fitness: 9.0
2020-12-17 12:33:21,886	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:33:21,886	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,886	[INFO]	==== Epoch 5 ====
2020-12-17 12:33:21,886	[INFO]	Termination: step budget
2020-12-17 12:33:21,887	[INFO]	Number of interations: 500
2020-12-17 12:33:21,887	[INFO]	Best fitness: 9.0
2020-12-17 12:33:21,887	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:33:21,887	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,887	[INFO]	==== Epoch 6 ====
2020-12-17 12:33:21,887	[INFO]	Termination: step budget
2020-12-17 12:33:21,887	[INFO]	Number of interations: 500
2020-12-17 12:33:21,887	[INFO]	Best fitness: 9.0
2020-12-17 12:33:21,887	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:33:21,887	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val == arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,887	[INFO]	==== Epoch 7 ====
2020-12-17 12:33:21,887	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,887	[INFO]	Number of interations: 171
2020-12-17 12:33:21,887	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,888	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,888	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 12:33:21,888	[INFO]	==== Epoch 8 ====
2020-12-17 12:33:21,888	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,888	[INFO]	Number of interations: 56
2020-12-17 12:33:21,888	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,888	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:33:21,888	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 12:33:21,888	[INFO]	==== Epoch 9 ====
2020-12-17 12:33:21,888	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,889	[INFO]	Number of interations: 176
2020-12-17 12:33:21,889	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,889	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | StmtReplacement({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 11)}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,889	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,33 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
--- 26,38 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             ends.put(length+1, i);
! 
!             if (length >= longest || val > arr[ends.get(length+1)]) {
!                 if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 longest = length + 1;
+             }
                  longest = length + 1;
              }
  

2020-12-17 12:33:21,889	[INFO]	==== Epoch 10 ====
2020-12-17 12:33:21,889	[INFO]	Termination: step budget
2020-12-17 12:33:21,889	[INFO]	Number of interations: 500
2020-12-17 12:33:21,889	[INFO]	Best fitness: 9.0
2020-12-17 12:33:21,889	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '=='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:33:21,889	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,889	[INFO]	==== Epoch 11 ====
2020-12-17 12:33:21,889	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,889	[INFO]	Number of interations: 384
2020-12-17 12:33:21,889	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,889	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 12), 'value': '=='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,890	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 12:33:21,890	[INFO]	==== Epoch 12 ====
2020-12-17 12:33:21,890	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,890	[INFO]	Number of interations: 214
2020-12-17 12:33:21,890	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,890	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,890	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 12:33:21,890	[INFO]	==== Epoch 13 ====
2020-12-17 12:33:21,890	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,890	[INFO]	Number of interations: 146
2020-12-17 12:33:21,890	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,890	[INFO]	Best patch: MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 11), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 14), 'ingredient': ('java_programs/LIS.java.xml', 16), 'direction': 'before'}) | StmtDeletion({'target': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:33:21,890	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,31 ****
--- 26,33 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
+             ends.put(length+1, i);
+ 
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;

2020-12-17 12:33:21,890	[INFO]	==== Epoch 14 ====
2020-12-17 12:33:21,891	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,891	[INFO]	Number of interations: 206
2020-12-17 12:33:21,891	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,891	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:33:21,891	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 12:33:21,891	[INFO]	==== Epoch 15 ====
2020-12-17 12:33:21,891	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,891	[INFO]	Number of interations: 442
2020-12-17 12:33:21,891	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,891	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,891	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 12:33:21,891	[INFO]	==== Epoch 16 ====
2020-12-17 12:33:21,891	[INFO]	Termination: step budget
2020-12-17 12:33:21,892	[INFO]	Number of interations: 500
2020-12-17 12:33:21,892	[INFO]	Best fitness: 9.0
2020-12-17 12:33:21,892	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:33:21,892	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,892	[INFO]	==== Epoch 17 ====
2020-12-17 12:33:21,892	[INFO]	Termination: step budget
2020-12-17 12:33:21,892	[INFO]	Number of interations: 500
2020-12-17 12:33:21,892	[INFO]	Best fitness: 9.0
2020-12-17 12:33:21,892	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>'})
2020-12-17 12:33:21,892	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,32 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 26,32 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val > arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,892	[INFO]	==== Epoch 18 ====
2020-12-17 12:33:21,892	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,892	[INFO]	Number of interations: 48
2020-12-17 12:33:21,893	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,893	[INFO]	Best patch: StmtReplacement({'target': ('java_programs/LIS.java.xml', 15), 'ingredient': ('java_programs/LIS.java.xml', 11)})
2020-12-17 12:33:21,893	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 28,34 ****
--- 28,37 ----
  
              if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
+                 if (length == longest || val < arr[ends.get(length+1)]) {
+                 ends.put(length+1, i);
                  longest = length + 1;
+             }
              }
  
              i++;

2020-12-17 12:33:21,893	[INFO]	==== Epoch 19 ====
2020-12-17 12:33:21,893	[INFO]	Termination: step budget
2020-12-17 12:33:21,893	[INFO]	Number of interations: 500
2020-12-17 12:33:21,893	[INFO]	Best fitness: 9.0
2020-12-17 12:33:21,893	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 8), 'value': '<='})
2020-12-17 12:33:21,893	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 19,32 ****
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] < val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
--- 19,32 ----
  
              ArrayList<Integer> prefix_lengths = new ArrayList<Integer>(100);
              for (int j=1; j < longest+1; j++) {
!                 if (arr[ends.get(j)] <= val) {
                      prefix_lengths.add(j);
                  }
              }
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }

2020-12-17 12:33:21,893	[INFO]	==== Epoch 20 ====
2020-12-17 12:33:21,893	[INFO]	Termination: target fitness reached
2020-12-17 12:33:21,894	[INFO]	Number of interations: 146
2020-12-17 12:33:21,894	[INFO]	Best fitness: 0.0
2020-12-17 12:33:21,894	[INFO]	Best patch: ComparisonOperatorSetting({'target': ('java_programs/LIS.java.xml', 13), 'value': '>='}) | MyStmtInsertion({'target': ('java_programs/LIS.java.xml', 16), 'ingredient': ('java_programs/LIS.java.xml', 14), 'direction': 'before'})
2020-12-17 12:33:21,894	[INFO]	Diff:
*** before: java_programs/LIS.java.xml
--- after: java_programs/LIS.java.xml
***************
*** 26,35 ****
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val < arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
  
              i++;
          }
--- 26,37 ----
  
              int length = !prefix_lengths.isEmpty() ? Collections.max(prefix_lengths) : 0;
  
!             if (length == longest || val >= arr[ends.get(length+1)]) {
                  ends.put(length+1, i);
                  longest = length + 1;
              }
+ 
+             ends.put(length+1, i);
  
              i++;
          }

2020-12-17 12:33:21,900	[INFO]	Experiment duration: 8160.318278551102
